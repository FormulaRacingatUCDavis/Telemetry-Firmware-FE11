
Telem_Integration_Attempt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000e85c  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000f780  0800ea2c  0800ea2c  0000fa2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0801e1ac  0801e1ac  000200f8  2**0
                  CONTENTS
  4 .ARM          00000008  0801e1ac  0801e1ac  0001f1ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0801e1b4  0801e1b4  000200f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0801e1b4  0801e1b4  0001f1b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0801e1b8  0801e1b8  0001f1b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000f8  20000000  0801e1bc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00004934  200000f8  0801e2b4  000200f8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20004a2c  0801e2b4  00020a2c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000200f8  2**0
                  CONTENTS, READONLY
 12 .debug_info   000240b6  00000000  00000000  00020128  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00004b29  00000000  00000000  000441de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00002088  00000000  00000000  00048d08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00001919  00000000  00000000  0004ad90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002d832  00000000  00000000  0004c6a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00029220  00000000  00000000  00079edb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0010738f  00000000  00000000  000a30fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  001aa48a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00009010  00000000  00000000  001aa4d0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007c  00000000  00000000  001b34e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200000f8 	.word	0x200000f8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800ea14 	.word	0x0800ea14

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200000fc 	.word	0x200000fc
 800020c:	0800ea14 	.word	0x0800ea14

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	@ 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__aeabi_d2f>:
 8000a5c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a60:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000a64:	bf24      	itt	cs
 8000a66:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000a6a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000a6e:	d90d      	bls.n	8000a8c <__aeabi_d2f+0x30>
 8000a70:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000a74:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000a78:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000a7c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000a80:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000a84:	bf08      	it	eq
 8000a86:	f020 0001 	biceq.w	r0, r0, #1
 8000a8a:	4770      	bx	lr
 8000a8c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000a90:	d121      	bne.n	8000ad6 <__aeabi_d2f+0x7a>
 8000a92:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000a96:	bfbc      	itt	lt
 8000a98:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000a9c:	4770      	bxlt	lr
 8000a9e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000aa2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000aa6:	f1c2 0218 	rsb	r2, r2, #24
 8000aaa:	f1c2 0c20 	rsb	ip, r2, #32
 8000aae:	fa10 f30c 	lsls.w	r3, r0, ip
 8000ab2:	fa20 f002 	lsr.w	r0, r0, r2
 8000ab6:	bf18      	it	ne
 8000ab8:	f040 0001 	orrne.w	r0, r0, #1
 8000abc:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ac0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000ac4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000ac8:	ea40 000c 	orr.w	r0, r0, ip
 8000acc:	fa23 f302 	lsr.w	r3, r3, r2
 8000ad0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ad4:	e7cc      	b.n	8000a70 <__aeabi_d2f+0x14>
 8000ad6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ada:	d107      	bne.n	8000aec <__aeabi_d2f+0x90>
 8000adc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000ae0:	bf1e      	ittt	ne
 8000ae2:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000ae6:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000aea:	4770      	bxne	lr
 8000aec:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000af0:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000af4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000af8:	4770      	bx	lr
 8000afa:	bf00      	nop

08000afc <__aeabi_uldivmod>:
 8000afc:	b953      	cbnz	r3, 8000b14 <__aeabi_uldivmod+0x18>
 8000afe:	b94a      	cbnz	r2, 8000b14 <__aeabi_uldivmod+0x18>
 8000b00:	2900      	cmp	r1, #0
 8000b02:	bf08      	it	eq
 8000b04:	2800      	cmpeq	r0, #0
 8000b06:	bf1c      	itt	ne
 8000b08:	f04f 31ff 	movne.w	r1, #4294967295
 8000b0c:	f04f 30ff 	movne.w	r0, #4294967295
 8000b10:	f000 b96a 	b.w	8000de8 <__aeabi_idiv0>
 8000b14:	f1ad 0c08 	sub.w	ip, sp, #8
 8000b18:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000b1c:	f000 f806 	bl	8000b2c <__udivmoddi4>
 8000b20:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b28:	b004      	add	sp, #16
 8000b2a:	4770      	bx	lr

08000b2c <__udivmoddi4>:
 8000b2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b30:	9d08      	ldr	r5, [sp, #32]
 8000b32:	460c      	mov	r4, r1
 8000b34:	2b00      	cmp	r3, #0
 8000b36:	d14e      	bne.n	8000bd6 <__udivmoddi4+0xaa>
 8000b38:	4694      	mov	ip, r2
 8000b3a:	458c      	cmp	ip, r1
 8000b3c:	4686      	mov	lr, r0
 8000b3e:	fab2 f282 	clz	r2, r2
 8000b42:	d962      	bls.n	8000c0a <__udivmoddi4+0xde>
 8000b44:	b14a      	cbz	r2, 8000b5a <__udivmoddi4+0x2e>
 8000b46:	f1c2 0320 	rsb	r3, r2, #32
 8000b4a:	4091      	lsls	r1, r2
 8000b4c:	fa20 f303 	lsr.w	r3, r0, r3
 8000b50:	fa0c fc02 	lsl.w	ip, ip, r2
 8000b54:	4319      	orrs	r1, r3
 8000b56:	fa00 fe02 	lsl.w	lr, r0, r2
 8000b5a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000b5e:	fa1f f68c 	uxth.w	r6, ip
 8000b62:	fbb1 f4f7 	udiv	r4, r1, r7
 8000b66:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000b6a:	fb07 1114 	mls	r1, r7, r4, r1
 8000b6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000b72:	fb04 f106 	mul.w	r1, r4, r6
 8000b76:	4299      	cmp	r1, r3
 8000b78:	d90a      	bls.n	8000b90 <__udivmoddi4+0x64>
 8000b7a:	eb1c 0303 	adds.w	r3, ip, r3
 8000b7e:	f104 30ff 	add.w	r0, r4, #4294967295
 8000b82:	f080 8112 	bcs.w	8000daa <__udivmoddi4+0x27e>
 8000b86:	4299      	cmp	r1, r3
 8000b88:	f240 810f 	bls.w	8000daa <__udivmoddi4+0x27e>
 8000b8c:	3c02      	subs	r4, #2
 8000b8e:	4463      	add	r3, ip
 8000b90:	1a59      	subs	r1, r3, r1
 8000b92:	fa1f f38e 	uxth.w	r3, lr
 8000b96:	fbb1 f0f7 	udiv	r0, r1, r7
 8000b9a:	fb07 1110 	mls	r1, r7, r0, r1
 8000b9e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ba2:	fb00 f606 	mul.w	r6, r0, r6
 8000ba6:	429e      	cmp	r6, r3
 8000ba8:	d90a      	bls.n	8000bc0 <__udivmoddi4+0x94>
 8000baa:	eb1c 0303 	adds.w	r3, ip, r3
 8000bae:	f100 31ff 	add.w	r1, r0, #4294967295
 8000bb2:	f080 80fc 	bcs.w	8000dae <__udivmoddi4+0x282>
 8000bb6:	429e      	cmp	r6, r3
 8000bb8:	f240 80f9 	bls.w	8000dae <__udivmoddi4+0x282>
 8000bbc:	4463      	add	r3, ip
 8000bbe:	3802      	subs	r0, #2
 8000bc0:	1b9b      	subs	r3, r3, r6
 8000bc2:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000bc6:	2100      	movs	r1, #0
 8000bc8:	b11d      	cbz	r5, 8000bd2 <__udivmoddi4+0xa6>
 8000bca:	40d3      	lsrs	r3, r2
 8000bcc:	2200      	movs	r2, #0
 8000bce:	e9c5 3200 	strd	r3, r2, [r5]
 8000bd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bd6:	428b      	cmp	r3, r1
 8000bd8:	d905      	bls.n	8000be6 <__udivmoddi4+0xba>
 8000bda:	b10d      	cbz	r5, 8000be0 <__udivmoddi4+0xb4>
 8000bdc:	e9c5 0100 	strd	r0, r1, [r5]
 8000be0:	2100      	movs	r1, #0
 8000be2:	4608      	mov	r0, r1
 8000be4:	e7f5      	b.n	8000bd2 <__udivmoddi4+0xa6>
 8000be6:	fab3 f183 	clz	r1, r3
 8000bea:	2900      	cmp	r1, #0
 8000bec:	d146      	bne.n	8000c7c <__udivmoddi4+0x150>
 8000bee:	42a3      	cmp	r3, r4
 8000bf0:	d302      	bcc.n	8000bf8 <__udivmoddi4+0xcc>
 8000bf2:	4290      	cmp	r0, r2
 8000bf4:	f0c0 80f0 	bcc.w	8000dd8 <__udivmoddi4+0x2ac>
 8000bf8:	1a86      	subs	r6, r0, r2
 8000bfa:	eb64 0303 	sbc.w	r3, r4, r3
 8000bfe:	2001      	movs	r0, #1
 8000c00:	2d00      	cmp	r5, #0
 8000c02:	d0e6      	beq.n	8000bd2 <__udivmoddi4+0xa6>
 8000c04:	e9c5 6300 	strd	r6, r3, [r5]
 8000c08:	e7e3      	b.n	8000bd2 <__udivmoddi4+0xa6>
 8000c0a:	2a00      	cmp	r2, #0
 8000c0c:	f040 8090 	bne.w	8000d30 <__udivmoddi4+0x204>
 8000c10:	eba1 040c 	sub.w	r4, r1, ip
 8000c14:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000c18:	fa1f f78c 	uxth.w	r7, ip
 8000c1c:	2101      	movs	r1, #1
 8000c1e:	fbb4 f6f8 	udiv	r6, r4, r8
 8000c22:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000c26:	fb08 4416 	mls	r4, r8, r6, r4
 8000c2a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000c2e:	fb07 f006 	mul.w	r0, r7, r6
 8000c32:	4298      	cmp	r0, r3
 8000c34:	d908      	bls.n	8000c48 <__udivmoddi4+0x11c>
 8000c36:	eb1c 0303 	adds.w	r3, ip, r3
 8000c3a:	f106 34ff 	add.w	r4, r6, #4294967295
 8000c3e:	d202      	bcs.n	8000c46 <__udivmoddi4+0x11a>
 8000c40:	4298      	cmp	r0, r3
 8000c42:	f200 80cd 	bhi.w	8000de0 <__udivmoddi4+0x2b4>
 8000c46:	4626      	mov	r6, r4
 8000c48:	1a1c      	subs	r4, r3, r0
 8000c4a:	fa1f f38e 	uxth.w	r3, lr
 8000c4e:	fbb4 f0f8 	udiv	r0, r4, r8
 8000c52:	fb08 4410 	mls	r4, r8, r0, r4
 8000c56:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000c5a:	fb00 f707 	mul.w	r7, r0, r7
 8000c5e:	429f      	cmp	r7, r3
 8000c60:	d908      	bls.n	8000c74 <__udivmoddi4+0x148>
 8000c62:	eb1c 0303 	adds.w	r3, ip, r3
 8000c66:	f100 34ff 	add.w	r4, r0, #4294967295
 8000c6a:	d202      	bcs.n	8000c72 <__udivmoddi4+0x146>
 8000c6c:	429f      	cmp	r7, r3
 8000c6e:	f200 80b0 	bhi.w	8000dd2 <__udivmoddi4+0x2a6>
 8000c72:	4620      	mov	r0, r4
 8000c74:	1bdb      	subs	r3, r3, r7
 8000c76:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000c7a:	e7a5      	b.n	8000bc8 <__udivmoddi4+0x9c>
 8000c7c:	f1c1 0620 	rsb	r6, r1, #32
 8000c80:	408b      	lsls	r3, r1
 8000c82:	fa22 f706 	lsr.w	r7, r2, r6
 8000c86:	431f      	orrs	r7, r3
 8000c88:	fa20 fc06 	lsr.w	ip, r0, r6
 8000c8c:	fa04 f301 	lsl.w	r3, r4, r1
 8000c90:	ea43 030c 	orr.w	r3, r3, ip
 8000c94:	40f4      	lsrs	r4, r6
 8000c96:	fa00 f801 	lsl.w	r8, r0, r1
 8000c9a:	0c38      	lsrs	r0, r7, #16
 8000c9c:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000ca0:	fbb4 fef0 	udiv	lr, r4, r0
 8000ca4:	fa1f fc87 	uxth.w	ip, r7
 8000ca8:	fb00 441e 	mls	r4, r0, lr, r4
 8000cac:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000cb0:	fb0e f90c 	mul.w	r9, lr, ip
 8000cb4:	45a1      	cmp	r9, r4
 8000cb6:	fa02 f201 	lsl.w	r2, r2, r1
 8000cba:	d90a      	bls.n	8000cd2 <__udivmoddi4+0x1a6>
 8000cbc:	193c      	adds	r4, r7, r4
 8000cbe:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000cc2:	f080 8084 	bcs.w	8000dce <__udivmoddi4+0x2a2>
 8000cc6:	45a1      	cmp	r9, r4
 8000cc8:	f240 8081 	bls.w	8000dce <__udivmoddi4+0x2a2>
 8000ccc:	f1ae 0e02 	sub.w	lr, lr, #2
 8000cd0:	443c      	add	r4, r7
 8000cd2:	eba4 0409 	sub.w	r4, r4, r9
 8000cd6:	fa1f f983 	uxth.w	r9, r3
 8000cda:	fbb4 f3f0 	udiv	r3, r4, r0
 8000cde:	fb00 4413 	mls	r4, r0, r3, r4
 8000ce2:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000ce6:	fb03 fc0c 	mul.w	ip, r3, ip
 8000cea:	45a4      	cmp	ip, r4
 8000cec:	d907      	bls.n	8000cfe <__udivmoddi4+0x1d2>
 8000cee:	193c      	adds	r4, r7, r4
 8000cf0:	f103 30ff 	add.w	r0, r3, #4294967295
 8000cf4:	d267      	bcs.n	8000dc6 <__udivmoddi4+0x29a>
 8000cf6:	45a4      	cmp	ip, r4
 8000cf8:	d965      	bls.n	8000dc6 <__udivmoddi4+0x29a>
 8000cfa:	3b02      	subs	r3, #2
 8000cfc:	443c      	add	r4, r7
 8000cfe:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000d02:	fba0 9302 	umull	r9, r3, r0, r2
 8000d06:	eba4 040c 	sub.w	r4, r4, ip
 8000d0a:	429c      	cmp	r4, r3
 8000d0c:	46ce      	mov	lr, r9
 8000d0e:	469c      	mov	ip, r3
 8000d10:	d351      	bcc.n	8000db6 <__udivmoddi4+0x28a>
 8000d12:	d04e      	beq.n	8000db2 <__udivmoddi4+0x286>
 8000d14:	b155      	cbz	r5, 8000d2c <__udivmoddi4+0x200>
 8000d16:	ebb8 030e 	subs.w	r3, r8, lr
 8000d1a:	eb64 040c 	sbc.w	r4, r4, ip
 8000d1e:	fa04 f606 	lsl.w	r6, r4, r6
 8000d22:	40cb      	lsrs	r3, r1
 8000d24:	431e      	orrs	r6, r3
 8000d26:	40cc      	lsrs	r4, r1
 8000d28:	e9c5 6400 	strd	r6, r4, [r5]
 8000d2c:	2100      	movs	r1, #0
 8000d2e:	e750      	b.n	8000bd2 <__udivmoddi4+0xa6>
 8000d30:	f1c2 0320 	rsb	r3, r2, #32
 8000d34:	fa20 f103 	lsr.w	r1, r0, r3
 8000d38:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d3c:	fa24 f303 	lsr.w	r3, r4, r3
 8000d40:	4094      	lsls	r4, r2
 8000d42:	430c      	orrs	r4, r1
 8000d44:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d48:	fa00 fe02 	lsl.w	lr, r0, r2
 8000d4c:	fa1f f78c 	uxth.w	r7, ip
 8000d50:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d54:	fb08 3110 	mls	r1, r8, r0, r3
 8000d58:	0c23      	lsrs	r3, r4, #16
 8000d5a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d5e:	fb00 f107 	mul.w	r1, r0, r7
 8000d62:	4299      	cmp	r1, r3
 8000d64:	d908      	bls.n	8000d78 <__udivmoddi4+0x24c>
 8000d66:	eb1c 0303 	adds.w	r3, ip, r3
 8000d6a:	f100 36ff 	add.w	r6, r0, #4294967295
 8000d6e:	d22c      	bcs.n	8000dca <__udivmoddi4+0x29e>
 8000d70:	4299      	cmp	r1, r3
 8000d72:	d92a      	bls.n	8000dca <__udivmoddi4+0x29e>
 8000d74:	3802      	subs	r0, #2
 8000d76:	4463      	add	r3, ip
 8000d78:	1a5b      	subs	r3, r3, r1
 8000d7a:	b2a4      	uxth	r4, r4
 8000d7c:	fbb3 f1f8 	udiv	r1, r3, r8
 8000d80:	fb08 3311 	mls	r3, r8, r1, r3
 8000d84:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000d88:	fb01 f307 	mul.w	r3, r1, r7
 8000d8c:	42a3      	cmp	r3, r4
 8000d8e:	d908      	bls.n	8000da2 <__udivmoddi4+0x276>
 8000d90:	eb1c 0404 	adds.w	r4, ip, r4
 8000d94:	f101 36ff 	add.w	r6, r1, #4294967295
 8000d98:	d213      	bcs.n	8000dc2 <__udivmoddi4+0x296>
 8000d9a:	42a3      	cmp	r3, r4
 8000d9c:	d911      	bls.n	8000dc2 <__udivmoddi4+0x296>
 8000d9e:	3902      	subs	r1, #2
 8000da0:	4464      	add	r4, ip
 8000da2:	1ae4      	subs	r4, r4, r3
 8000da4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000da8:	e739      	b.n	8000c1e <__udivmoddi4+0xf2>
 8000daa:	4604      	mov	r4, r0
 8000dac:	e6f0      	b.n	8000b90 <__udivmoddi4+0x64>
 8000dae:	4608      	mov	r0, r1
 8000db0:	e706      	b.n	8000bc0 <__udivmoddi4+0x94>
 8000db2:	45c8      	cmp	r8, r9
 8000db4:	d2ae      	bcs.n	8000d14 <__udivmoddi4+0x1e8>
 8000db6:	ebb9 0e02 	subs.w	lr, r9, r2
 8000dba:	eb63 0c07 	sbc.w	ip, r3, r7
 8000dbe:	3801      	subs	r0, #1
 8000dc0:	e7a8      	b.n	8000d14 <__udivmoddi4+0x1e8>
 8000dc2:	4631      	mov	r1, r6
 8000dc4:	e7ed      	b.n	8000da2 <__udivmoddi4+0x276>
 8000dc6:	4603      	mov	r3, r0
 8000dc8:	e799      	b.n	8000cfe <__udivmoddi4+0x1d2>
 8000dca:	4630      	mov	r0, r6
 8000dcc:	e7d4      	b.n	8000d78 <__udivmoddi4+0x24c>
 8000dce:	46d6      	mov	lr, sl
 8000dd0:	e77f      	b.n	8000cd2 <__udivmoddi4+0x1a6>
 8000dd2:	4463      	add	r3, ip
 8000dd4:	3802      	subs	r0, #2
 8000dd6:	e74d      	b.n	8000c74 <__udivmoddi4+0x148>
 8000dd8:	4606      	mov	r6, r0
 8000dda:	4623      	mov	r3, r4
 8000ddc:	4608      	mov	r0, r1
 8000dde:	e70f      	b.n	8000c00 <__udivmoddi4+0xd4>
 8000de0:	3e02      	subs	r6, #2
 8000de2:	4463      	add	r3, ip
 8000de4:	e730      	b.n	8000c48 <__udivmoddi4+0x11c>
 8000de6:	bf00      	nop

08000de8 <__aeabi_idiv0>:
 8000de8:	4770      	bx	lr
 8000dea:	bf00      	nop

08000dec <HAL_CAN_RxFifo0MsgPendingCallback>:

CAN_RxHeaderTypeDef RxHeader;
uint8_t RxData[8];

void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
{
 8000dec:	b590      	push	{r4, r7, lr}
 8000dee:	b087      	sub	sp, #28
 8000df0:	af04      	add	r7, sp, #16
 8000df2:	6078      	str	r0, [r7, #4]
	HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &RxHeader, RxData);
 8000df4:	4b0a      	ldr	r3, [pc, #40]	@ (8000e20 <HAL_CAN_RxFifo0MsgPendingCallback+0x34>)
 8000df6:	4a0b      	ldr	r2, [pc, #44]	@ (8000e24 <HAL_CAN_RxFifo0MsgPendingCallback+0x38>)
 8000df8:	2100      	movs	r1, #0
 8000dfa:	6878      	ldr	r0, [r7, #4]
 8000dfc:	f005 f848 	bl	8005e90 <HAL_CAN_GetRxMessage>
	save_can_rx_data(RxHeader, RxData);
 8000e00:	4b08      	ldr	r3, [pc, #32]	@ (8000e24 <HAL_CAN_RxFifo0MsgPendingCallback+0x38>)
 8000e02:	4a07      	ldr	r2, [pc, #28]	@ (8000e20 <HAL_CAN_RxFifo0MsgPendingCallback+0x34>)
 8000e04:	9203      	str	r2, [sp, #12]
 8000e06:	466c      	mov	r4, sp
 8000e08:	f103 0210 	add.w	r2, r3, #16
 8000e0c:	ca07      	ldmia	r2, {r0, r1, r2}
 8000e0e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8000e12:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000e14:	f000 f808 	bl	8000e28 <save_can_rx_data>
}
 8000e18:	bf00      	nop
 8000e1a:	370c      	adds	r7, #12
 8000e1c:	46bd      	mov	sp, r7
 8000e1e:	bd90      	pop	{r4, r7, pc}
 8000e20:	20000154 	.word	0x20000154
 8000e24:	20000138 	.word	0x20000138

08000e28 <save_can_rx_data>:


/************ CAN RX ************/

void save_can_rx_data(CAN_RxHeaderTypeDef RxHeader, uint8_t RxData[]) {
 8000e28:	b084      	sub	sp, #16
 8000e2a:	b580      	push	{r7, lr}
 8000e2c:	b082      	sub	sp, #8
 8000e2e:	af00      	add	r7, sp, #0
 8000e30:	f107 0c10 	add.w	ip, r7, #16
 8000e34:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
    // gets message and updates values
	switch (RxHeader.StdId) {
 8000e38:	693b      	ldr	r3, [r7, #16]
 8000e3a:	f240 4201 	movw	r2, #1025	@ 0x401
 8000e3e:	4293      	cmp	r3, r2
 8000e40:	f000 80e4 	beq.w	800100c <save_can_rx_data+0x1e4>
 8000e44:	f240 4201 	movw	r2, #1025	@ 0x401
 8000e48:	4293      	cmp	r3, r2
 8000e4a:	f200 8188 	bhi.w	800115e <save_can_rx_data+0x336>
 8000e4e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8000e52:	f000 8105 	beq.w	8001060 <save_can_rx_data+0x238>
 8000e56:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8000e5a:	f200 8180 	bhi.w	800115e <save_can_rx_data+0x336>
 8000e5e:	f240 3287 	movw	r2, #903	@ 0x387
 8000e62:	4293      	cmp	r3, r2
 8000e64:	f000 80a8 	beq.w	8000fb8 <save_can_rx_data+0x190>
 8000e68:	f5b3 7f62 	cmp.w	r3, #904	@ 0x388
 8000e6c:	f080 8177 	bcs.w	800115e <save_can_rx_data+0x336>
 8000e70:	2bc2      	cmp	r3, #194	@ 0xc2
 8000e72:	d84b      	bhi.n	8000f0c <save_can_rx_data+0xe4>
 8000e74:	2ba2      	cmp	r3, #162	@ 0xa2
 8000e76:	f0c0 8172 	bcc.w	800115e <save_can_rx_data+0x336>
 8000e7a:	3ba2      	subs	r3, #162	@ 0xa2
 8000e7c:	2b20      	cmp	r3, #32
 8000e7e:	f200 816e 	bhi.w	800115e <save_can_rx_data+0x336>
 8000e82:	a201      	add	r2, pc, #4	@ (adr r2, 8000e88 <save_can_rx_data+0x60>)
 8000e84:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000e88:	08001139 	.word	0x08001139
 8000e8c:	0800115f 	.word	0x0800115f
 8000e90:	0800115f 	.word	0x0800115f
 8000e94:	08001105 	.word	0x08001105
 8000e98:	0800115f 	.word	0x0800115f
 8000e9c:	08000f73 	.word	0x08000f73
 8000ea0:	0800115f 	.word	0x0800115f
 8000ea4:	0800115f 	.word	0x0800115f
 8000ea8:	08000f97 	.word	0x08000f97
 8000eac:	08000fc3 	.word	0x08000fc3
 8000eb0:	0800115f 	.word	0x0800115f
 8000eb4:	0800115f 	.word	0x0800115f
 8000eb8:	0800115f 	.word	0x0800115f
 8000ebc:	0800115f 	.word	0x0800115f
 8000ec0:	0800115f 	.word	0x0800115f
 8000ec4:	0800115f 	.word	0x0800115f
 8000ec8:	0800115f 	.word	0x0800115f
 8000ecc:	0800115f 	.word	0x0800115f
 8000ed0:	0800115f 	.word	0x0800115f
 8000ed4:	0800115f 	.word	0x0800115f
 8000ed8:	0800115f 	.word	0x0800115f
 8000edc:	0800115f 	.word	0x0800115f
 8000ee0:	0800115f 	.word	0x0800115f
 8000ee4:	0800115f 	.word	0x0800115f
 8000ee8:	0800115f 	.word	0x0800115f
 8000eec:	0800115f 	.word	0x0800115f
 8000ef0:	0800115f 	.word	0x0800115f
 8000ef4:	0800115f 	.word	0x0800115f
 8000ef8:	0800115f 	.word	0x0800115f
 8000efc:	0800115f 	.word	0x0800115f
 8000f00:	0800115f 	.word	0x0800115f
 8000f04:	0800115f 	.word	0x0800115f
 8000f08:	08000fef 	.word	0x08000fef
 8000f0c:	f5b3 7f60 	cmp.w	r3, #896	@ 0x380
 8000f10:	f040 8125 	bne.w	800115e <save_can_rx_data+0x336>
		case BMS_STATUS_MSG:
			PACK_TEMP = RxData[0];
 8000f14:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000f16:	781a      	ldrb	r2, [r3, #0]
 8000f18:	4b92      	ldr	r3, [pc, #584]	@ (8001164 <save_can_rx_data+0x33c>)
 8000f1a:	701a      	strb	r2, [r3, #0]
			soc = RxData[1];
 8000f1c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000f1e:	785a      	ldrb	r2, [r3, #1]
 8000f20:	4b91      	ldr	r3, [pc, #580]	@ (8001168 <save_can_rx_data+0x340>)
 8000f22:	701a      	strb	r2, [r3, #0]
			bms_status = (RxData[2] << 8);
 8000f24:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000f26:	3302      	adds	r3, #2
 8000f28:	781b      	ldrb	r3, [r3, #0]
 8000f2a:	021b      	lsls	r3, r3, #8
 8000f2c:	b29a      	uxth	r2, r3
 8000f2e:	4b8f      	ldr	r3, [pc, #572]	@ (800116c <save_can_rx_data+0x344>)
 8000f30:	801a      	strh	r2, [r3, #0]
			bms_status += RxData[3];
 8000f32:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000f34:	3303      	adds	r3, #3
 8000f36:	781b      	ldrb	r3, [r3, #0]
 8000f38:	461a      	mov	r2, r3
 8000f3a:	4b8c      	ldr	r3, [pc, #560]	@ (800116c <save_can_rx_data+0x344>)
 8000f3c:	881b      	ldrh	r3, [r3, #0]
 8000f3e:	b29b      	uxth	r3, r3
 8000f40:	4413      	add	r3, r2
 8000f42:	b29a      	uxth	r2, r3
 8000f44:	4b89      	ldr	r3, [pc, #548]	@ (800116c <save_can_rx_data+0x344>)
 8000f46:	801a      	strh	r2, [r3, #0]
			pack_voltage = (RxData[4] << 8);
 8000f48:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000f4a:	3304      	adds	r3, #4
 8000f4c:	781b      	ldrb	r3, [r3, #0]
 8000f4e:	021b      	lsls	r3, r3, #8
 8000f50:	b29a      	uxth	r2, r3
 8000f52:	4b87      	ldr	r3, [pc, #540]	@ (8001170 <save_can_rx_data+0x348>)
 8000f54:	801a      	strh	r2, [r3, #0]
			pack_voltage += RxData[5];
 8000f56:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000f58:	3305      	adds	r3, #5
 8000f5a:	781b      	ldrb	r3, [r3, #0]
 8000f5c:	461a      	mov	r2, r3
 8000f5e:	4b84      	ldr	r3, [pc, #528]	@ (8001170 <save_can_rx_data+0x348>)
 8000f60:	881b      	ldrh	r3, [r3, #0]
 8000f62:	b29b      	uxth	r3, r3
 8000f64:	4413      	add	r3, r2
 8000f66:	b29a      	uxth	r2, r3
 8000f68:	4b81      	ldr	r3, [pc, #516]	@ (8001170 <save_can_rx_data+0x348>)
 8000f6a:	801a      	strh	r2, [r3, #0]
			temp_attenuate();
 8000f6c:	f001 fff2 	bl	8002f54 <temp_attenuate>
			break;
 8000f70:	e11f      	b.n	80011b2 <save_can_rx_data+0x38a>
		case MC_VOLTAGE_INFO:
			capacitor_volt = (RxData[0] << 8); // upper bits
 8000f72:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000f74:	781b      	ldrb	r3, [r3, #0]
 8000f76:	021b      	lsls	r3, r3, #8
 8000f78:	b29a      	uxth	r2, r3
 8000f7a:	4b7e      	ldr	r3, [pc, #504]	@ (8001174 <save_can_rx_data+0x34c>)
 8000f7c:	801a      	strh	r2, [r3, #0]
			capacitor_volt += RxData[1]; // lower bits
 8000f7e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000f80:	3301      	adds	r3, #1
 8000f82:	781b      	ldrb	r3, [r3, #0]
 8000f84:	461a      	mov	r2, r3
 8000f86:	4b7b      	ldr	r3, [pc, #492]	@ (8001174 <save_can_rx_data+0x34c>)
 8000f88:	881b      	ldrh	r3, [r3, #0]
 8000f8a:	b29b      	uxth	r3, r3
 8000f8c:	4413      	add	r3, r2
 8000f8e:	b29a      	uxth	r2, r3
 8000f90:	4b78      	ldr	r3, [pc, #480]	@ (8001174 <save_can_rx_data+0x34c>)
 8000f92:	801a      	strh	r2, [r3, #0]
			break;
 8000f94:	e10d      	b.n	80011b2 <save_can_rx_data+0x38a>
		case MC_INTERNAL_STATES:
			mc_lockout = RxData[6] & 0b1000000;
 8000f96:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000f98:	3306      	adds	r3, #6
 8000f9a:	781b      	ldrb	r3, [r3, #0]
 8000f9c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000fa0:	b2da      	uxtb	r2, r3
 8000fa2:	4b75      	ldr	r3, [pc, #468]	@ (8001178 <save_can_rx_data+0x350>)
 8000fa4:	701a      	strb	r2, [r3, #0]
			mc_enabled = RxData[6] & 0b1;
 8000fa6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000fa8:	3306      	adds	r3, #6
 8000faa:	781b      	ldrb	r3, [r3, #0]
 8000fac:	f003 0301 	and.w	r3, r3, #1
 8000fb0:	b2da      	uxtb	r2, r3
 8000fb2:	4b72      	ldr	r3, [pc, #456]	@ (800117c <save_can_rx_data+0x354>)
 8000fb4:	701a      	strb	r2, [r3, #0]
			break;
 8000fb6:	e0fc      	b.n	80011b2 <save_can_rx_data+0x38a>
		case PEI_CURRENT_SHUTDOWN:
			shutdown_flags = RxData[2];
 8000fb8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000fba:	789a      	ldrb	r2, [r3, #2]
 8000fbc:	4b70      	ldr	r3, [pc, #448]	@ (8001180 <save_can_rx_data+0x358>)
 8000fbe:	701a      	strb	r2, [r3, #0]
			break;
 8000fc0:	e0f7      	b.n	80011b2 <save_can_rx_data+0x38a>
		case MC_FAULT_CODES:
			for (uint8_t i = 0; i < 8; i++) {
 8000fc2:	2300      	movs	r3, #0
 8000fc4:	71fb      	strb	r3, [r7, #7]
 8000fc6:	e00f      	b.n	8000fe8 <save_can_rx_data+0x1c0>
				if (RxData[i] > 0) {
 8000fc8:	79fb      	ldrb	r3, [r7, #7]
 8000fca:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8000fcc:	4413      	add	r3, r2
 8000fce:	781b      	ldrb	r3, [r3, #0]
 8000fd0:	2b00      	cmp	r3, #0
 8000fd2:	d003      	beq.n	8000fdc <save_can_rx_data+0x1b4>
					mc_fault = 1;
 8000fd4:	4b6b      	ldr	r3, [pc, #428]	@ (8001184 <save_can_rx_data+0x35c>)
 8000fd6:	2201      	movs	r2, #1
 8000fd8:	701a      	strb	r2, [r3, #0]
					break;
 8000fda:	e008      	b.n	8000fee <save_can_rx_data+0x1c6>
				}
				else {
					mc_fault = 0;
 8000fdc:	4b69      	ldr	r3, [pc, #420]	@ (8001184 <save_can_rx_data+0x35c>)
 8000fde:	2200      	movs	r2, #0
 8000fe0:	701a      	strb	r2, [r3, #0]
			for (uint8_t i = 0; i < 8; i++) {
 8000fe2:	79fb      	ldrb	r3, [r7, #7]
 8000fe4:	3301      	adds	r3, #1
 8000fe6:	71fb      	strb	r3, [r7, #7]
 8000fe8:	79fb      	ldrb	r3, [r7, #7]
 8000fea:	2b07      	cmp	r3, #7
 8000fec:	d9ec      	bls.n	8000fc8 <save_can_rx_data+0x1a0>
				}
			}
		case MC_PARAM_RESPONSE:
			if (RxData[0] == 0x20 && RxData[2] == 1) {
 8000fee:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000ff0:	781b      	ldrb	r3, [r3, #0]
 8000ff2:	2b20      	cmp	r3, #32
 8000ff4:	f040 80dc 	bne.w	80011b0 <save_can_rx_data+0x388>
 8000ff8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000ffa:	3302      	adds	r3, #2
 8000ffc:	781b      	ldrb	r3, [r3, #0]
 8000ffe:	2b01      	cmp	r3, #1
 8001000:	f040 80d6 	bne.w	80011b0 <save_can_rx_data+0x388>
				mc_fault_clear_success = 1;
 8001004:	4b60      	ldr	r3, [pc, #384]	@ (8001188 <save_can_rx_data+0x360>)
 8001006:	2201      	movs	r2, #1
 8001008:	701a      	strb	r2, [r3, #0]
			}
			break;
 800100a:	e0d1      	b.n	80011b0 <save_can_rx_data+0x388>
			wheel_updated[0] = 1;
			telem_id = 0;
			break;
*/
		case WHEEL_SPEED_REAR:
			rear_right_wheel_speed = (RxData[0] << 8);
 800100c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800100e:	781b      	ldrb	r3, [r3, #0]
 8001010:	021b      	lsls	r3, r3, #8
 8001012:	b29a      	uxth	r2, r3
 8001014:	4b5d      	ldr	r3, [pc, #372]	@ (800118c <save_can_rx_data+0x364>)
 8001016:	801a      	strh	r2, [r3, #0]
			rear_right_wheel_speed += RxData[1];
 8001018:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800101a:	3301      	adds	r3, #1
 800101c:	781b      	ldrb	r3, [r3, #0]
 800101e:	461a      	mov	r2, r3
 8001020:	4b5a      	ldr	r3, [pc, #360]	@ (800118c <save_can_rx_data+0x364>)
 8001022:	881b      	ldrh	r3, [r3, #0]
 8001024:	b29b      	uxth	r3, r3
 8001026:	4413      	add	r3, r2
 8001028:	b29a      	uxth	r2, r3
 800102a:	4b58      	ldr	r3, [pc, #352]	@ (800118c <save_can_rx_data+0x364>)
 800102c:	801a      	strh	r2, [r3, #0]
			rear_left_wheel_speed = (RxData[2] << 8);
 800102e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001030:	3302      	adds	r3, #2
 8001032:	781b      	ldrb	r3, [r3, #0]
 8001034:	021b      	lsls	r3, r3, #8
 8001036:	b29a      	uxth	r2, r3
 8001038:	4b55      	ldr	r3, [pc, #340]	@ (8001190 <save_can_rx_data+0x368>)
 800103a:	801a      	strh	r2, [r3, #0]
			rear_left_wheel_speed += RxData[3];
 800103c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800103e:	3303      	adds	r3, #3
 8001040:	781b      	ldrb	r3, [r3, #0]
 8001042:	461a      	mov	r2, r3
 8001044:	4b52      	ldr	r3, [pc, #328]	@ (8001190 <save_can_rx_data+0x368>)
 8001046:	881b      	ldrh	r3, [r3, #0]
 8001048:	b29b      	uxth	r3, r3
 800104a:	4413      	add	r3, r2
 800104c:	b29a      	uxth	r2, r3
 800104e:	4b50      	ldr	r3, [pc, #320]	@ (8001190 <save_can_rx_data+0x368>)
 8001050:	801a      	strh	r2, [r3, #0]
			wheel_updated[1] = 1;
 8001052:	4b50      	ldr	r3, [pc, #320]	@ (8001194 <save_can_rx_data+0x36c>)
 8001054:	2201      	movs	r2, #1
 8001056:	705a      	strb	r2, [r3, #1]
			telem_id = 0;
 8001058:	4b4f      	ldr	r3, [pc, #316]	@ (8001198 <save_can_rx_data+0x370>)
 800105a:	2200      	movs	r2, #0
 800105c:	801a      	strh	r2, [r3, #0]
			break;
 800105e:	e0a8      	b.n	80011b2 <save_can_rx_data+0x38a>
		case COOLING_LOOP:
			inlet_temp = (RxData[0] << 8);
 8001060:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001062:	781b      	ldrb	r3, [r3, #0]
 8001064:	021b      	lsls	r3, r3, #8
 8001066:	b21a      	sxth	r2, r3
 8001068:	4b4c      	ldr	r3, [pc, #304]	@ (800119c <save_can_rx_data+0x374>)
 800106a:	801a      	strh	r2, [r3, #0]
			inlet_temp += RxData[1];
 800106c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800106e:	3301      	adds	r3, #1
 8001070:	781b      	ldrb	r3, [r3, #0]
 8001072:	461a      	mov	r2, r3
 8001074:	4b49      	ldr	r3, [pc, #292]	@ (800119c <save_can_rx_data+0x374>)
 8001076:	881b      	ldrh	r3, [r3, #0]
 8001078:	b21b      	sxth	r3, r3
 800107a:	b29b      	uxth	r3, r3
 800107c:	4413      	add	r3, r2
 800107e:	b29b      	uxth	r3, r3
 8001080:	b21a      	sxth	r2, r3
 8001082:	4b46      	ldr	r3, [pc, #280]	@ (800119c <save_can_rx_data+0x374>)
 8001084:	801a      	strh	r2, [r3, #0]
			outlet_temp = (RxData[2] << 8);
 8001086:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001088:	3302      	adds	r3, #2
 800108a:	781b      	ldrb	r3, [r3, #0]
 800108c:	021b      	lsls	r3, r3, #8
 800108e:	b21a      	sxth	r2, r3
 8001090:	4b43      	ldr	r3, [pc, #268]	@ (80011a0 <save_can_rx_data+0x378>)
 8001092:	801a      	strh	r2, [r3, #0]
			outlet_temp += RxData[3];
 8001094:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001096:	3303      	adds	r3, #3
 8001098:	781b      	ldrb	r3, [r3, #0]
 800109a:	461a      	mov	r2, r3
 800109c:	4b40      	ldr	r3, [pc, #256]	@ (80011a0 <save_can_rx_data+0x378>)
 800109e:	881b      	ldrh	r3, [r3, #0]
 80010a0:	b21b      	sxth	r3, r3
 80010a2:	b29b      	uxth	r3, r3
 80010a4:	4413      	add	r3, r2
 80010a6:	b29b      	uxth	r3, r3
 80010a8:	b21a      	sxth	r2, r3
 80010aa:	4b3d      	ldr	r3, [pc, #244]	@ (80011a0 <save_can_rx_data+0x378>)
 80010ac:	801a      	strh	r2, [r3, #0]
			inlet_pres = (RxData[4] << 8);
 80010ae:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80010b0:	3304      	adds	r3, #4
 80010b2:	781b      	ldrb	r3, [r3, #0]
 80010b4:	021b      	lsls	r3, r3, #8
 80010b6:	b21a      	sxth	r2, r3
 80010b8:	4b3a      	ldr	r3, [pc, #232]	@ (80011a4 <save_can_rx_data+0x37c>)
 80010ba:	801a      	strh	r2, [r3, #0]
			inlet_pres += RxData[5];
 80010bc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80010be:	3305      	adds	r3, #5
 80010c0:	781b      	ldrb	r3, [r3, #0]
 80010c2:	461a      	mov	r2, r3
 80010c4:	4b37      	ldr	r3, [pc, #220]	@ (80011a4 <save_can_rx_data+0x37c>)
 80010c6:	881b      	ldrh	r3, [r3, #0]
 80010c8:	b21b      	sxth	r3, r3
 80010ca:	b29b      	uxth	r3, r3
 80010cc:	4413      	add	r3, r2
 80010ce:	b29b      	uxth	r3, r3
 80010d0:	b21a      	sxth	r2, r3
 80010d2:	4b34      	ldr	r3, [pc, #208]	@ (80011a4 <save_can_rx_data+0x37c>)
 80010d4:	801a      	strh	r2, [r3, #0]
			outlet_pres = (RxData[6] << 8);
 80010d6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80010d8:	3306      	adds	r3, #6
 80010da:	781b      	ldrb	r3, [r3, #0]
 80010dc:	021b      	lsls	r3, r3, #8
 80010de:	b21a      	sxth	r2, r3
 80010e0:	4b31      	ldr	r3, [pc, #196]	@ (80011a8 <save_can_rx_data+0x380>)
 80010e2:	801a      	strh	r2, [r3, #0]
			outlet_pres += RxData[7];
 80010e4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80010e6:	3307      	adds	r3, #7
 80010e8:	781b      	ldrb	r3, [r3, #0]
 80010ea:	461a      	mov	r2, r3
 80010ec:	4b2e      	ldr	r3, [pc, #184]	@ (80011a8 <save_can_rx_data+0x380>)
 80010ee:	881b      	ldrh	r3, [r3, #0]
 80010f0:	b21b      	sxth	r3, r3
 80010f2:	b29b      	uxth	r3, r3
 80010f4:	4413      	add	r3, r2
 80010f6:	b29b      	uxth	r3, r3
 80010f8:	b21a      	sxth	r2, r3
 80010fa:	4b2b      	ldr	r3, [pc, #172]	@ (80011a8 <save_can_rx_data+0x380>)
 80010fc:	801a      	strh	r2, [r3, #0]
			telem_id = 1;
 80010fe:	4b26      	ldr	r3, [pc, #152]	@ (8001198 <save_can_rx_data+0x370>)
 8001100:	2201      	movs	r2, #1
 8001102:	801a      	strh	r2, [r3, #0]
		case MC_MOTOR_POSITION:
			rear_right_wheel_speed = (RxData[3] << 8) ;
 8001104:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001106:	3303      	adds	r3, #3
 8001108:	781b      	ldrb	r3, [r3, #0]
 800110a:	021b      	lsls	r3, r3, #8
 800110c:	b29a      	uxth	r2, r3
 800110e:	4b1f      	ldr	r3, [pc, #124]	@ (800118c <save_can_rx_data+0x364>)
 8001110:	801a      	strh	r2, [r3, #0]
			rear_right_wheel_speed += RxData[2];
 8001112:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001114:	3302      	adds	r3, #2
 8001116:	781b      	ldrb	r3, [r3, #0]
 8001118:	461a      	mov	r2, r3
 800111a:	4b1c      	ldr	r3, [pc, #112]	@ (800118c <save_can_rx_data+0x364>)
 800111c:	881b      	ldrh	r3, [r3, #0]
 800111e:	b29b      	uxth	r3, r3
 8001120:	4413      	add	r3, r2
 8001122:	b29a      	uxth	r2, r3
 8001124:	4b19      	ldr	r3, [pc, #100]	@ (800118c <save_can_rx_data+0x364>)
 8001126:	801a      	strh	r2, [r3, #0]
			rear_right_wheel_speed *= -1;
 8001128:	4b18      	ldr	r3, [pc, #96]	@ (800118c <save_can_rx_data+0x364>)
 800112a:	881b      	ldrh	r3, [r3, #0]
 800112c:	b29b      	uxth	r3, r3
 800112e:	425b      	negs	r3, r3
 8001130:	b29a      	uxth	r2, r3
 8001132:	4b16      	ldr	r3, [pc, #88]	@ (800118c <save_can_rx_data+0x364>)
 8001134:	801a      	strh	r2, [r3, #0]
			break;
 8001136:	e03c      	b.n	80011b2 <save_can_rx_data+0x38a>
		case MC_TEMP_3:
			motor_temp = RxData[5] << 8;
 8001138:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800113a:	3305      	adds	r3, #5
 800113c:	781b      	ldrb	r3, [r3, #0]
 800113e:	021b      	lsls	r3, r3, #8
 8001140:	b29a      	uxth	r2, r3
 8001142:	4b1a      	ldr	r3, [pc, #104]	@ (80011ac <save_can_rx_data+0x384>)
 8001144:	801a      	strh	r2, [r3, #0]
			motor_temp += RxData[4];
 8001146:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001148:	3304      	adds	r3, #4
 800114a:	781b      	ldrb	r3, [r3, #0]
 800114c:	461a      	mov	r2, r3
 800114e:	4b17      	ldr	r3, [pc, #92]	@ (80011ac <save_can_rx_data+0x384>)
 8001150:	881b      	ldrh	r3, [r3, #0]
 8001152:	b29b      	uxth	r3, r3
 8001154:	4413      	add	r3, r2
 8001156:	b29a      	uxth	r2, r3
 8001158:	4b14      	ldr	r3, [pc, #80]	@ (80011ac <save_can_rx_data+0x384>)
 800115a:	801a      	strh	r2, [r3, #0]
			break;
 800115c:	e029      	b.n	80011b2 <save_can_rx_data+0x38a>
		default:
			// no valid input received
			break;
 800115e:	bf00      	nop
 8001160:	e027      	b.n	80011b2 <save_can_rx_data+0x38a>
 8001162:	bf00      	nop
 8001164:	20000119 	.word	0x20000119
 8001168:	2000011b 	.word	0x2000011b
 800116c:	2000011c 	.word	0x2000011c
 8001170:	20000120 	.word	0x20000120
 8001174:	20000116 	.word	0x20000116
 8001178:	20000114 	.word	0x20000114
 800117c:	20000115 	.word	0x20000115
 8001180:	20000000 	.word	0x20000000
 8001184:	2000011a 	.word	0x2000011a
 8001188:	2000011e 	.word	0x2000011e
 800118c:	20000128 	.word	0x20000128
 8001190:	2000012a 	.word	0x2000012a
 8001194:	20000004 	.word	0x20000004
 8001198:	20000134 	.word	0x20000134
 800119c:	2000012c 	.word	0x2000012c
 80011a0:	2000012e 	.word	0x2000012e
 80011a4:	20000130 	.word	0x20000130
 80011a8:	20000132 	.word	0x20000132
 80011ac:	20000122 	.word	0x20000122
			break;
 80011b0:	bf00      	nop
	}

}
 80011b2:	bf00      	nop
 80011b4:	3708      	adds	r7, #8
 80011b6:	46bd      	mov	sp, r7
 80011b8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80011bc:	b004      	add	sp, #16
 80011be:	4770      	bx	lr

080011c0 <can_tx_vcu_state>:

CAN_TxHeaderTypeDef   TxHeader;
uint32_t              TxMailbox;

//  transmit state
void can_tx_vcu_state(CAN_HandleTypeDef *hcan){
 80011c0:	b580      	push	{r7, lr}
 80011c2:	b084      	sub	sp, #16
 80011c4:	af00      	add	r7, sp, #0
 80011c6:	6078      	str	r0, [r7, #4]
	TxHeader.IDE = CAN_ID_STD;
 80011c8:	4b1b      	ldr	r3, [pc, #108]	@ (8001238 <can_tx_vcu_state+0x78>)
 80011ca:	2200      	movs	r2, #0
 80011cc:	609a      	str	r2, [r3, #8]
	TxHeader.StdId = VEHICLE_STATE;
 80011ce:	4b1a      	ldr	r3, [pc, #104]	@ (8001238 <can_tx_vcu_state+0x78>)
 80011d0:	f240 7266 	movw	r2, #1894	@ 0x766
 80011d4:	601a      	str	r2, [r3, #0]
	TxHeader.RTR = CAN_RTR_DATA;
 80011d6:	4b18      	ldr	r3, [pc, #96]	@ (8001238 <can_tx_vcu_state+0x78>)
 80011d8:	2200      	movs	r2, #0
 80011da:	60da      	str	r2, [r3, #12]
	TxHeader.DLC = 8;
 80011dc:	4b16      	ldr	r3, [pc, #88]	@ (8001238 <can_tx_vcu_state+0x78>)
 80011de:	2208      	movs	r2, #8
 80011e0:	611a      	str	r2, [r3, #16]
	uint8_t data_tx_state[8] = {
 80011e2:	2300      	movs	r3, #0
 80011e4:	723b      	strb	r3, [r7, #8]
        0,
        hv_requested(),
 80011e6:	f000 fd29 	bl	8001c3c <hv_requested>
 80011ea:	4603      	mov	r3, r0
	uint8_t data_tx_state[8] = {
 80011ec:	727b      	strb	r3, [r7, #9]
        throttle1.percent,
 80011ee:	4b13      	ldr	r3, [pc, #76]	@ (800123c <can_tx_vcu_state+0x7c>)
 80011f0:	891b      	ldrh	r3, [r3, #8]
	uint8_t data_tx_state[8] = {
 80011f2:	b2db      	uxtb	r3, r3
 80011f4:	72bb      	strb	r3, [r7, #10]
        throttle2.percent,
 80011f6:	4b12      	ldr	r3, [pc, #72]	@ (8001240 <can_tx_vcu_state+0x80>)
 80011f8:	891b      	ldrh	r3, [r3, #8]
	uint8_t data_tx_state[8] = {
 80011fa:	b2db      	uxtb	r3, r3
 80011fc:	72fb      	strb	r3, [r7, #11]
		brake.percent,
 80011fe:	4b11      	ldr	r3, [pc, #68]	@ (8001244 <can_tx_vcu_state+0x84>)
 8001200:	891b      	ldrh	r3, [r3, #8]
	uint8_t data_tx_state[8] = {
 8001202:	b2db      	uxtb	r3, r3
 8001204:	733b      	strb	r3, [r7, #12]
        one_byte_state(),
 8001206:	f000 fd47 	bl	8001c98 <one_byte_state>
 800120a:	4603      	mov	r3, r0
	uint8_t data_tx_state[8] = {
 800120c:	737b      	strb	r3, [r7, #13]
 800120e:	2300      	movs	r3, #0
 8001210:	73bb      	strb	r3, [r7, #14]
 8001212:	2300      	movs	r3, #0
 8001214:	73fb      	strb	r3, [r7, #15]
		0,
		0
    };

    if (HAL_CAN_AddTxMessage(hcan, &TxHeader, data_tx_state, &TxMailbox) != HAL_OK)
 8001216:	f107 0208 	add.w	r2, r7, #8
 800121a:	4b0b      	ldr	r3, [pc, #44]	@ (8001248 <can_tx_vcu_state+0x88>)
 800121c:	4906      	ldr	r1, [pc, #24]	@ (8001238 <can_tx_vcu_state+0x78>)
 800121e:	6878      	ldr	r0, [r7, #4]
 8001220:	f004 fd66 	bl	8005cf0 <HAL_CAN_AddTxMessage>
 8001224:	4603      	mov	r3, r0
 8001226:	2b00      	cmp	r3, #0
 8001228:	d002      	beq.n	8001230 <can_tx_vcu_state+0x70>
	{
	  print("CAN Tx failed\r\n");
 800122a:	4808      	ldr	r0, [pc, #32]	@ (800124c <can_tx_vcu_state+0x8c>)
 800122c:	f001 ffde 	bl	80031ec <print>
	}
//    write_tx_to_sd(TxHeader, data_tx_state);
}
 8001230:	bf00      	nop
 8001232:	3710      	adds	r7, #16
 8001234:	46bd      	mov	sp, r7
 8001236:	bd80      	pop	{r7, pc}
 8001238:	2000015c 	.word	0x2000015c
 800123c:	200027ec 	.word	0x200027ec
 8001240:	200027f8 	.word	0x200027f8
 8001244:	20002804 	.word	0x20002804
 8001248:	20000174 	.word	0x20000174
 800124c:	0800ea2c 	.word	0x0800ea2c

08001250 <can_tx_torque_request>:


// transmit torque request
void can_tx_torque_request(CAN_HandleTypeDef *hcan){
 8001250:	b580      	push	{r7, lr}
 8001252:	b086      	sub	sp, #24
 8001254:	af00      	add	r7, sp, #0
 8001256:	6078      	str	r0, [r7, #4]
	TxHeader.IDE = CAN_ID_STD;
 8001258:	4b31      	ldr	r3, [pc, #196]	@ (8001320 <can_tx_torque_request+0xd0>)
 800125a:	2200      	movs	r2, #0
 800125c:	609a      	str	r2, [r3, #8]
	TxHeader.StdId = TORQUE_REQUEST;
 800125e:	4b30      	ldr	r3, [pc, #192]	@ (8001320 <can_tx_torque_request+0xd0>)
 8001260:	22c0      	movs	r2, #192	@ 0xc0
 8001262:	601a      	str	r2, [r3, #0]
	TxHeader.RTR = CAN_RTR_DATA;
 8001264:	4b2e      	ldr	r3, [pc, #184]	@ (8001320 <can_tx_torque_request+0xd0>)
 8001266:	2200      	movs	r2, #0
 8001268:	60da      	str	r2, [r3, #12]
	TxHeader.DLC = 8;
 800126a:	4b2d      	ldr	r3, [pc, #180]	@ (8001320 <can_tx_torque_request+0xd0>)
 800126c:	2208      	movs	r2, #8
 800126e:	611a      	str	r2, [r3, #16]

    uint16_t throttle_msg_byte = 0;
 8001270:	2300      	movs	r3, #0
 8001272:	82fb      	strh	r3, [r7, #22]
    if (state == DRIVE) {
 8001274:	4b2b      	ldr	r3, [pc, #172]	@ (8001324 <can_tx_torque_request+0xd4>)
 8001276:	781b      	ldrb	r3, [r3, #0]
 8001278:	b2db      	uxtb	r3, r3
 800127a:	2b03      	cmp	r3, #3
 800127c:	d118      	bne.n	80012b0 <can_tx_torque_request+0x60>
    	uint16_t throttle_req = requested_throttle();
 800127e:	f001 fe2d 	bl	8002edc <requested_throttle>
 8001282:	4603      	mov	r3, r0
 8001284:	82bb      	strh	r3, [r7, #20]

    	// deadzoning
    	if (throttle_req  < 50) {
 8001286:	8abb      	ldrh	r3, [r7, #20]
 8001288:	2b31      	cmp	r3, #49	@ 0x31
 800128a:	d801      	bhi.n	8001290 <can_tx_torque_request+0x40>
    		throttle_req = 0;
 800128c:	2300      	movs	r3, #0
 800128e:	82bb      	strh	r3, [r7, #20]
    	}

    	// adjust throttle with traction control
        throttle_msg_byte = throttle_req - TC_torque_adjustment;
 8001290:	4b25      	ldr	r3, [pc, #148]	@ (8001328 <can_tx_torque_request+0xd8>)
 8001292:	881b      	ldrh	r3, [r3, #0]
 8001294:	b29b      	uxth	r3, r3
 8001296:	8aba      	ldrh	r2, [r7, #20]
 8001298:	1ad3      	subs	r3, r2, r3
 800129a:	82fb      	strh	r3, [r7, #22]

        // zero throttle if brake is pressed at all, prevents hardware bspd
        if (brake.raw >= (brake.min + BRAKE_BSPD_THRESHOLD)) {
 800129c:	4b23      	ldr	r3, [pc, #140]	@ (800132c <can_tx_torque_request+0xdc>)
 800129e:	885b      	ldrh	r3, [r3, #2]
 80012a0:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 80012a4:	4a21      	ldr	r2, [pc, #132]	@ (800132c <can_tx_torque_request+0xdc>)
 80012a6:	8812      	ldrh	r2, [r2, #0]
 80012a8:	4293      	cmp	r3, r2
 80012aa:	da01      	bge.n	80012b0 <can_tx_torque_request+0x60>
        	throttle_msg_byte = 0;
 80012ac:	2300      	movs	r3, #0
 80012ae:	82fb      	strh	r3, [r7, #22]
        }
    }

    uint8_t byte5 = 0b010;   //speed mode | discharge_enable | inverter enable
 80012b0:	2302      	movs	r3, #2
 80012b2:	74fb      	strb	r3, [r7, #19]

    if (state == DRIVE) {
 80012b4:	4b1b      	ldr	r3, [pc, #108]	@ (8001324 <can_tx_torque_request+0xd4>)
 80012b6:	781b      	ldrb	r3, [r3, #0]
 80012b8:	b2db      	uxtb	r3, r3
 80012ba:	2b03      	cmp	r3, #3
 80012bc:	d10a      	bne.n	80012d4 <can_tx_torque_request+0x84>
    	byte5 |= (hv_requested() & 0x01);  //set inverter enable bit
 80012be:	f000 fcbd 	bl	8001c3c <hv_requested>
 80012c2:	4603      	mov	r3, r0
 80012c4:	f003 0301 	and.w	r3, r3, #1
 80012c8:	b25a      	sxtb	r2, r3
 80012ca:	f997 3013 	ldrsb.w	r3, [r7, #19]
 80012ce:	4313      	orrs	r3, r2
 80012d0:	b25b      	sxtb	r3, r3
 80012d2:	74fb      	strb	r3, [r7, #19]
    }


    uint8_t data_tx_torque[8] = {
        (uint8_t)(throttle_msg_byte & 0xff), // 0 - torque command lower (Nm*10)
 80012d4:	8afb      	ldrh	r3, [r7, #22]
 80012d6:	b2db      	uxtb	r3, r3
    uint8_t data_tx_torque[8] = {
 80012d8:	723b      	strb	r3, [r7, #8]
        (uint8_t)(throttle_msg_byte >> 8) & 0xFF, // 1 - torque command upper (Nm*10)
 80012da:	8afb      	ldrh	r3, [r7, #22]
 80012dc:	0a1b      	lsrs	r3, r3, #8
 80012de:	b29b      	uxth	r3, r3
 80012e0:	b2db      	uxtb	r3, r3
    uint8_t data_tx_torque[8] = {
 80012e2:	727b      	strb	r3, [r7, #9]
 80012e4:	2300      	movs	r3, #0
 80012e6:	72bb      	strb	r3, [r7, #10]
 80012e8:	2300      	movs	r3, #0
 80012ea:	72fb      	strb	r3, [r7, #11]
 80012ec:	2301      	movs	r3, #1
 80012ee:	733b      	strb	r3, [r7, #12]
 80012f0:	7cfb      	ldrb	r3, [r7, #19]
 80012f2:	737b      	strb	r3, [r7, #13]
 80012f4:	2300      	movs	r3, #0
 80012f6:	73bb      	strb	r3, [r7, #14]
 80012f8:	2300      	movs	r3, #0
 80012fa:	73fb      	strb	r3, [r7, #15]
        byte5, // 5 - speed mode | discharge_enable | inverter enable
        0, // 6 - torque limit lower (if 0, default EEPROM value used)
        0 // 7 - torque limit upper (if 0, default EEPROM value used)
    };

    if (HAL_CAN_AddTxMessage(hcan, &TxHeader, data_tx_torque, &TxMailbox) != HAL_OK)
 80012fc:	f107 0208 	add.w	r2, r7, #8
 8001300:	4b0b      	ldr	r3, [pc, #44]	@ (8001330 <can_tx_torque_request+0xe0>)
 8001302:	4907      	ldr	r1, [pc, #28]	@ (8001320 <can_tx_torque_request+0xd0>)
 8001304:	6878      	ldr	r0, [r7, #4]
 8001306:	f004 fcf3 	bl	8005cf0 <HAL_CAN_AddTxMessage>
 800130a:	4603      	mov	r3, r0
 800130c:	2b00      	cmp	r3, #0
 800130e:	d002      	beq.n	8001316 <can_tx_torque_request+0xc6>
	{
	  print("CAN Tx failed\r\n");
 8001310:	4808      	ldr	r0, [pc, #32]	@ (8001334 <can_tx_torque_request+0xe4>)
 8001312:	f001 ff6b 	bl	80031ec <print>
	}
//    write_tx_to_sd(TxHeader, data_tx_torque);
}
 8001316:	bf00      	nop
 8001318:	3718      	adds	r7, #24
 800131a:	46bd      	mov	sp, r7
 800131c:	bd80      	pop	{r7, pc}
 800131e:	bf00      	nop
 8001320:	2000015c 	.word	0x2000015c
 8001324:	20000091 	.word	0x20000091
 8001328:	2000282a 	.word	0x2000282a
 800132c:	20002804 	.word	0x20002804
 8001330:	20000174 	.word	0x20000174
 8001334:	0800ea2c 	.word	0x0800ea2c

08001338 <can_clear_MC_fault>:
	  print("CAN Tx failed\r\n");
	}
//	write_tx_to_sd(TxHeader, data_tx_torque);
}

void can_clear_MC_fault(CAN_HandleTypeDef *hcan) {
 8001338:	b580      	push	{r7, lr}
 800133a:	b086      	sub	sp, #24
 800133c:	af00      	add	r7, sp, #0
 800133e:	6078      	str	r0, [r7, #4]
	TxHeader.IDE = CAN_ID_STD;
 8001340:	4b17      	ldr	r3, [pc, #92]	@ (80013a0 <can_clear_MC_fault+0x68>)
 8001342:	2200      	movs	r2, #0
 8001344:	609a      	str	r2, [r3, #8]
	TxHeader.StdId = MC_PARAM_COMMAND;
 8001346:	4b16      	ldr	r3, [pc, #88]	@ (80013a0 <can_clear_MC_fault+0x68>)
 8001348:	22c1      	movs	r2, #193	@ 0xc1
 800134a:	601a      	str	r2, [r3, #0]
	TxHeader.RTR = CAN_RTR_DATA;
 800134c:	4b14      	ldr	r3, [pc, #80]	@ (80013a0 <can_clear_MC_fault+0x68>)
 800134e:	2200      	movs	r2, #0
 8001350:	60da      	str	r2, [r3, #12]
	TxHeader.DLC = 8;
 8001352:	4b13      	ldr	r3, [pc, #76]	@ (80013a0 <can_clear_MC_fault+0x68>)
 8001354:	2208      	movs	r2, #8
 8001356:	611a      	str	r2, [r3, #16]

	const uint16_t param_addr = 20;
 8001358:	2314      	movs	r3, #20
 800135a:	82fb      	strh	r3, [r7, #22]
	uint8_t data_tx_param_command[8] = {
 800135c:	8afb      	ldrh	r3, [r7, #22]
 800135e:	b2db      	uxtb	r3, r3
 8001360:	733b      	strb	r3, [r7, #12]
 8001362:	2300      	movs	r3, #0
 8001364:	737b      	strb	r3, [r7, #13]
 8001366:	2301      	movs	r3, #1
 8001368:	73bb      	strb	r3, [r7, #14]
 800136a:	2300      	movs	r3, #0
 800136c:	73fb      	strb	r3, [r7, #15]
 800136e:	2300      	movs	r3, #0
 8001370:	743b      	strb	r3, [r7, #16]
 8001372:	2300      	movs	r3, #0
 8001374:	747b      	strb	r3, [r7, #17]
 8001376:	2300      	movs	r3, #0
 8001378:	74bb      	strb	r3, [r7, #18]
 800137a:	2300      	movs	r3, #0
 800137c:	74fb      	strb	r3, [r7, #19]
			0, // data
			0, // reserved
			0 // reserved
	};

	if (HAL_CAN_AddTxMessage(hcan, &TxHeader, data_tx_param_command, &TxMailbox) != HAL_OK)
 800137e:	f107 020c 	add.w	r2, r7, #12
 8001382:	4b08      	ldr	r3, [pc, #32]	@ (80013a4 <can_clear_MC_fault+0x6c>)
 8001384:	4906      	ldr	r1, [pc, #24]	@ (80013a0 <can_clear_MC_fault+0x68>)
 8001386:	6878      	ldr	r0, [r7, #4]
 8001388:	f004 fcb2 	bl	8005cf0 <HAL_CAN_AddTxMessage>
 800138c:	4603      	mov	r3, r0
 800138e:	2b00      	cmp	r3, #0
 8001390:	d002      	beq.n	8001398 <can_clear_MC_fault+0x60>
	{
	  print("CAN Tx failed\r\n");
 8001392:	4805      	ldr	r0, [pc, #20]	@ (80013a8 <can_clear_MC_fault+0x70>)
 8001394:	f001 ff2a 	bl	80031ec <print>
	}
//	write_tx_to_sd(TxHeader, data_tx_param_command);
}
 8001398:	bf00      	nop
 800139a:	3718      	adds	r7, #24
 800139c:	46bd      	mov	sp, r7
 800139e:	bd80      	pop	{r7, pc}
 80013a0:	2000015c 	.word	0x2000015c
 80013a4:	20000174 	.word	0x20000174
 80013a8:	0800ea2c 	.word	0x0800ea2c

080013ac <Display_Init>:
void draw_textbox(TEXTBOX_CONFIG* cfg, UG_COLOR color, char* string, uint8_t str_len);
UG_COLOR value_to_color(TEXTBOX_CONFIG cfg, uint16_t value);


void Display_Init()
{
 80013ac:	b580      	push	{r7, lr}
 80013ae:	af00      	add	r7, sp, #0
	SSD1963_Init();
 80013b0:	f003 fb3e 	bl	8004a30 <SSD1963_Init>

	// Initialize global structure and set PSET to this.PSET.
	UG_Init(&gui1963, SSD1963_PSet, DISPLAY_WIDTH, DISPLAY_HEIGHT);
 80013b4:	f44f 7388 	mov.w	r3, #272	@ 0x110
 80013b8:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80013bc:	490b      	ldr	r1, [pc, #44]	@ (80013ec <Display_Init+0x40>)
 80013be:	480c      	ldr	r0, [pc, #48]	@ (80013f0 <Display_Init+0x44>)
 80013c0:	f002 fdba 	bl	8003f38 <UG_Init>

	UG_FontSetVSpace(0);
 80013c4:	2000      	movs	r0, #0
 80013c6:	f003 f85b 	bl	8004480 <UG_FontSetVSpace>
	UG_FontSetHSpace(0);
 80013ca:	2000      	movs	r0, #0
 80013cc:	f003 f844 	bl	8004458 <UG_FontSetHSpace>

	// Register acceleratos.
	UG_DriverRegister(DRIVER_FILL_FRAME, (void*)HW_FillFrame);
 80013d0:	4908      	ldr	r1, [pc, #32]	@ (80013f4 <Display_Init+0x48>)
 80013d2:	2001      	movs	r0, #1
 80013d4:	f003 fb00 	bl	80049d8 <UG_DriverRegister>
	UG_DriverRegister(DRIVER_DRAW_LINE, (void*)HW_DrawLine);
 80013d8:	4907      	ldr	r1, [pc, #28]	@ (80013f8 <Display_Init+0x4c>)
 80013da:	2000      	movs	r0, #0
 80013dc:	f003 fafc 	bl	80049d8 <UG_DriverRegister>
	UG_DriverRegister(DRIVER_DRAW_IMAGE, (void*)HW_DrawImage);
 80013e0:	4906      	ldr	r1, [pc, #24]	@ (80013fc <Display_Init+0x50>)
 80013e2:	2003      	movs	r0, #3
 80013e4:	f003 faf8 	bl	80049d8 <UG_DriverRegister>
}
 80013e8:	bf00      	nop
 80013ea:	bd80      	pop	{r7, pc}
 80013ec:	08004bf3 	.word	0x08004bf3
 80013f0:	200001a8 	.word	0x200001a8
 80013f4:	08004c7d 	.word	0x08004c7d
 80013f8:	08004d47 	.word	0x08004d47
 80013fc:	08004dfb 	.word	0x08004dfb

08001400 <Display_CalibrateScreen>:


// Just a test function that displays elements at the supposed corners of the screen
void Display_CalibrateScreen() {
 8001400:	b580      	push	{r7, lr}
 8001402:	b082      	sub	sp, #8
 8001404:	af02      	add	r7, sp, #8
    UG_FillScreen(C_WHITE);
 8001406:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800140a:	f002 fe41 	bl	8004090 <UG_FillScreen>
    //UG_FillFrame(0, 0, 10, 10, C_RED);
    UG_FillFrame(0, 262, 10, 272, C_BLUE);
 800140e:	231f      	movs	r3, #31
 8001410:	9300      	str	r3, [sp, #0]
 8001412:	f44f 7388 	mov.w	r3, #272	@ 0x110
 8001416:	220a      	movs	r2, #10
 8001418:	f44f 7183 	mov.w	r1, #262	@ 0x106
 800141c:	2000      	movs	r0, #0
 800141e:	f002 fe59 	bl	80040d4 <UG_FillFrame>
    UG_FillFrame(470, 0, 480, 10, C_GREEN);
 8001422:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 8001426:	9300      	str	r3, [sp, #0]
 8001428:	230a      	movs	r3, #10
 800142a:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 800142e:	2100      	movs	r1, #0
 8001430:	f44f 70eb 	mov.w	r0, #470	@ 0x1d6
 8001434:	f002 fe4e 	bl	80040d4 <UG_FillFrame>
    UG_FillFrame(470, 262, 480, 272, C_YELLOW);
 8001438:	f64f 73c0 	movw	r3, #65472	@ 0xffc0
 800143c:	9300      	str	r3, [sp, #0]
 800143e:	f44f 7388 	mov.w	r3, #272	@ 0x110
 8001442:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8001446:	f44f 7183 	mov.w	r1, #262	@ 0x106
 800144a:	f44f 70eb 	mov.w	r0, #470	@ 0x1d6
 800144e:	f002 fe41 	bl	80040d4 <UG_FillFrame>
}
 8001452:	bf00      	nop
 8001454:	46bd      	mov	sp, r7
 8001456:	bd80      	pop	{r7, pc}

08001458 <Display_DriveTemplate>:
//	glv_v_box.last_color = C_BLACK;  // force box redraw

}

void Display_DriveTemplate()
{
 8001458:	b5b0      	push	{r4, r5, r7, lr}
 800145a:	af00      	add	r7, sp, #0
    debug_mode = false;
 800145c:	4b43      	ldr	r3, [pc, #268]	@ (800156c <Display_DriveTemplate+0x114>)
 800145e:	2200      	movs	r2, #0
 8001460:	701a      	strb	r2, [r3, #0]

    // clear screen
    UG_FillScreen(C_BLACK);
 8001462:	2000      	movs	r0, #0
 8001464:	f002 fe14 	bl	8004090 <UG_FillScreen>

    // draw labels
    UG_PutString(68, 10, "PACK SOC");
 8001468:	4a41      	ldr	r2, [pc, #260]	@ (8001570 <Display_DriveTemplate+0x118>)
 800146a:	210a      	movs	r1, #10
 800146c:	2044      	movs	r0, #68	@ 0x44
 800146e:	f002 fea1 	bl	80041b4 <UG_PutString>
    UG_PutString(297, 10, "MAX PACK T");
 8001472:	4a40      	ldr	r2, [pc, #256]	@ (8001574 <Display_DriveTemplate+0x11c>)
 8001474:	210a      	movs	r1, #10
 8001476:	f240 1029 	movw	r0, #297	@ 0x129
 800147a:	f002 fe9b 	bl	80041b4 <UG_PutString>
    UG_PutString(30, 180, "STATE:");
 800147e:	4a3e      	ldr	r2, [pc, #248]	@ (8001578 <Display_DriveTemplate+0x120>)
 8001480:	21b4      	movs	r1, #180	@ 0xb4
 8001482:	201e      	movs	r0, #30
 8001484:	f002 fe96 	bl	80041b4 <UG_PutString>
    UG_PutString(275, 180, "GLV V:");
 8001488:	4a3c      	ldr	r2, [pc, #240]	@ (800157c <Display_DriveTemplate+0x124>)
 800148a:	21b4      	movs	r1, #180	@ 0xb4
 800148c:	f240 1013 	movw	r0, #275	@ 0x113
 8001490:	f002 fe90 	bl	80041b4 <UG_PutString>

    // setup textbox configs
    soc_box.box_x1 = 30;
 8001494:	4b3a      	ldr	r3, [pc, #232]	@ (8001580 <Display_DriveTemplate+0x128>)
 8001496:	221e      	movs	r2, #30
 8001498:	801a      	strh	r2, [r3, #0]
    soc_box.box_y1 = 35;
 800149a:	4b39      	ldr	r3, [pc, #228]	@ (8001580 <Display_DriveTemplate+0x128>)
 800149c:	2223      	movs	r2, #35	@ 0x23
 800149e:	805a      	strh	r2, [r3, #2]
    soc_box.box_x2 = 210;
 80014a0:	4b37      	ldr	r3, [pc, #220]	@ (8001580 <Display_DriveTemplate+0x128>)
 80014a2:	22d2      	movs	r2, #210	@ 0xd2
 80014a4:	809a      	strh	r2, [r3, #4]
    soc_box.box_y2 = 170;
 80014a6:	4b36      	ldr	r3, [pc, #216]	@ (8001580 <Display_DriveTemplate+0x128>)
 80014a8:	22aa      	movs	r2, #170	@ 0xaa
 80014aa:	80da      	strh	r2, [r3, #6]
    soc_box.font = FONT_32X53;
 80014ac:	4b34      	ldr	r3, [pc, #208]	@ (8001580 <Display_DriveTemplate+0x128>)
 80014ae:	4a35      	ldr	r2, [pc, #212]	@ (8001584 <Display_DriveTemplate+0x12c>)
 80014b0:	f103 0410 	add.w	r4, r3, #16
 80014b4:	4615      	mov	r5, r2
 80014b6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80014b8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80014ba:	682b      	ldr	r3, [r5, #0]
 80014bc:	6023      	str	r3, [r4, #0]
    soc_box.last_color = C_BLACK;  // force box redraw
 80014be:	4b30      	ldr	r3, [pc, #192]	@ (8001580 <Display_DriveTemplate+0x128>)
 80014c0:	2200      	movs	r2, #0
 80014c2:	849a      	strh	r2, [r3, #36]	@ 0x24
    soc_box.last_value = 255;
 80014c4:	4b2e      	ldr	r3, [pc, #184]	@ (8001580 <Display_DriveTemplate+0x128>)
 80014c6:	22ff      	movs	r2, #255	@ 0xff
 80014c8:	84da      	strh	r2, [r3, #38]	@ 0x26

    bms_temp_box.box_x1 = 270;
 80014ca:	4b2f      	ldr	r3, [pc, #188]	@ (8001588 <Display_DriveTemplate+0x130>)
 80014cc:	f44f 7287 	mov.w	r2, #270	@ 0x10e
 80014d0:	801a      	strh	r2, [r3, #0]
	bms_temp_box.box_y1 = 35;
 80014d2:	4b2d      	ldr	r3, [pc, #180]	@ (8001588 <Display_DriveTemplate+0x130>)
 80014d4:	2223      	movs	r2, #35	@ 0x23
 80014d6:	805a      	strh	r2, [r3, #2]
	bms_temp_box.box_x2 = 450;
 80014d8:	4b2b      	ldr	r3, [pc, #172]	@ (8001588 <Display_DriveTemplate+0x130>)
 80014da:	f44f 72e1 	mov.w	r2, #450	@ 0x1c2
 80014de:	809a      	strh	r2, [r3, #4]
	bms_temp_box.box_y2 = 170;
 80014e0:	4b29      	ldr	r3, [pc, #164]	@ (8001588 <Display_DriveTemplate+0x130>)
 80014e2:	22aa      	movs	r2, #170	@ 0xaa
 80014e4:	80da      	strh	r2, [r3, #6]
	bms_temp_box.font = FONT_32X53;
 80014e6:	4b28      	ldr	r3, [pc, #160]	@ (8001588 <Display_DriveTemplate+0x130>)
 80014e8:	4a26      	ldr	r2, [pc, #152]	@ (8001584 <Display_DriveTemplate+0x12c>)
 80014ea:	f103 0410 	add.w	r4, r3, #16
 80014ee:	4615      	mov	r5, r2
 80014f0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80014f2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80014f4:	682b      	ldr	r3, [r5, #0]
 80014f6:	6023      	str	r3, [r4, #0]
	bms_temp_box.last_color = C_BLACK;  // force box redraw
 80014f8:	4b23      	ldr	r3, [pc, #140]	@ (8001588 <Display_DriveTemplate+0x130>)
 80014fa:	2200      	movs	r2, #0
 80014fc:	849a      	strh	r2, [r3, #36]	@ 0x24
	bms_temp_box.last_value = 255;
 80014fe:	4b22      	ldr	r3, [pc, #136]	@ (8001588 <Display_DriveTemplate+0x130>)
 8001500:	22ff      	movs	r2, #255	@ 0xff
 8001502:	84da      	strh	r2, [r3, #38]	@ 0x26

	state_box.box_x1 = 30;
 8001504:	4b21      	ldr	r3, [pc, #132]	@ (800158c <Display_DriveTemplate+0x134>)
 8001506:	221e      	movs	r2, #30
 8001508:	801a      	strh	r2, [r3, #0]
	state_box.box_y1 = 200;
 800150a:	4b20      	ldr	r3, [pc, #128]	@ (800158c <Display_DriveTemplate+0x134>)
 800150c:	22c8      	movs	r2, #200	@ 0xc8
 800150e:	805a      	strh	r2, [r3, #2]
	state_box.box_x2 = 210;
 8001510:	4b1e      	ldr	r3, [pc, #120]	@ (800158c <Display_DriveTemplate+0x134>)
 8001512:	22d2      	movs	r2, #210	@ 0xd2
 8001514:	809a      	strh	r2, [r3, #4]
	state_box.box_y2 = 230;
 8001516:	4b1d      	ldr	r3, [pc, #116]	@ (800158c <Display_DriveTemplate+0x134>)
 8001518:	22e6      	movs	r2, #230	@ 0xe6
 800151a:	80da      	strh	r2, [r3, #6]
	state_box.font = FONT_12X16;
 800151c:	4b1b      	ldr	r3, [pc, #108]	@ (800158c <Display_DriveTemplate+0x134>)
 800151e:	4a1c      	ldr	r2, [pc, #112]	@ (8001590 <Display_DriveTemplate+0x138>)
 8001520:	f103 0410 	add.w	r4, r3, #16
 8001524:	4615      	mov	r5, r2
 8001526:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001528:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800152a:	682b      	ldr	r3, [r5, #0]
 800152c:	6023      	str	r3, [r4, #0]
	state_box.last_color = C_BLACK;  // force box redraw
 800152e:	4b17      	ldr	r3, [pc, #92]	@ (800158c <Display_DriveTemplate+0x134>)
 8001530:	2200      	movs	r2, #0
 8001532:	849a      	strh	r2, [r3, #36]	@ 0x24

	glv_v_box.box_x1 = 270;
 8001534:	4b17      	ldr	r3, [pc, #92]	@ (8001594 <Display_DriveTemplate+0x13c>)
 8001536:	f44f 7287 	mov.w	r2, #270	@ 0x10e
 800153a:	801a      	strh	r2, [r3, #0]
	glv_v_box.box_y1 = 200;
 800153c:	4b15      	ldr	r3, [pc, #84]	@ (8001594 <Display_DriveTemplate+0x13c>)
 800153e:	22c8      	movs	r2, #200	@ 0xc8
 8001540:	805a      	strh	r2, [r3, #2]
	glv_v_box.box_x2 = 450;
 8001542:	4b14      	ldr	r3, [pc, #80]	@ (8001594 <Display_DriveTemplate+0x13c>)
 8001544:	f44f 72e1 	mov.w	r2, #450	@ 0x1c2
 8001548:	809a      	strh	r2, [r3, #4]
	glv_v_box.box_y2 = 230;
 800154a:	4b12      	ldr	r3, [pc, #72]	@ (8001594 <Display_DriveTemplate+0x13c>)
 800154c:	22e6      	movs	r2, #230	@ 0xe6
 800154e:	80da      	strh	r2, [r3, #6]
	glv_v_box.font = FONT_12X16;
 8001550:	4b10      	ldr	r3, [pc, #64]	@ (8001594 <Display_DriveTemplate+0x13c>)
 8001552:	4a0f      	ldr	r2, [pc, #60]	@ (8001590 <Display_DriveTemplate+0x138>)
 8001554:	f103 0410 	add.w	r4, r3, #16
 8001558:	4615      	mov	r5, r2
 800155a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800155c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800155e:	682b      	ldr	r3, [r5, #0]
 8001560:	6023      	str	r3, [r4, #0]
	glv_v_box.last_color = C_BLACK;  // force box redraw
 8001562:	4b0c      	ldr	r3, [pc, #48]	@ (8001594 <Display_DriveTemplate+0x13c>)
 8001564:	2200      	movs	r2, #0
 8001566:	849a      	strh	r2, [r3, #36]	@ 0x24
}
 8001568:	bf00      	nop
 800156a:	bdb0      	pop	{r4, r5, r7, pc}
 800156c:	200001a4 	.word	0x200001a4
 8001570:	0800ea98 	.word	0x0800ea98
 8001574:	0800eaa4 	.word	0x0800eaa4
 8001578:	0800ea5c 	.word	0x0800ea5c
 800157c:	0800ea6c 	.word	0x0800ea6c
 8001580:	20000008 	.word	0x20000008
 8001584:	0801e0c8 	.word	0x0801e0c8
 8001588:	20000034 	.word	0x20000034
 800158c:	20000178 	.word	0x20000178
 8001590:	0801e0b4 	.word	0x0801e0b4
 8001594:	20000060 	.word	0x20000060

08001598 <Display_Update>:

void Display_Update()
{
 8001598:	b580      	push	{r7, lr}
 800159a:	af00      	add	r7, sp, #0
	static uint32_t glv_v = 99999;
//	soc = soc+1 ;
//	glv_v+=1;

    draw_soc(soc);
 800159c:	4b0e      	ldr	r3, [pc, #56]	@ (80015d8 <Display_Update+0x40>)
 800159e:	781b      	ldrb	r3, [r3, #0]
 80015a0:	b2db      	uxtb	r3, r3
 80015a2:	4618      	mov	r0, r3
 80015a4:	f000 f820 	bl	80015e8 <draw_soc>
    draw_bms_temp(PACK_TEMP);
 80015a8:	4b0c      	ldr	r3, [pc, #48]	@ (80015dc <Display_Update+0x44>)
 80015aa:	781b      	ldrb	r3, [r3, #0]
 80015ac:	b2db      	uxtb	r3, r3
 80015ae:	4618      	mov	r0, r3
 80015b0:	f000 f82a 	bl	8001608 <draw_bms_temp>
    draw_state(one_byte_state(), bms_status);
 80015b4:	f000 fb70 	bl	8001c98 <one_byte_state>
 80015b8:	4603      	mov	r3, r0
 80015ba:	461a      	mov	r2, r3
 80015bc:	4b08      	ldr	r3, [pc, #32]	@ (80015e0 <Display_Update+0x48>)
 80015be:	881b      	ldrh	r3, [r3, #0]
 80015c0:	b29b      	uxth	r3, r3
 80015c2:	4619      	mov	r1, r3
 80015c4:	4610      	mov	r0, r2
 80015c6:	f000 f82f 	bl	8001628 <draw_state>
    draw_glv_v(glv_v);
 80015ca:	4b06      	ldr	r3, [pc, #24]	@ (80015e4 <Display_Update+0x4c>)
 80015cc:	681b      	ldr	r3, [r3, #0]
 80015ce:	4618      	mov	r0, r3
 80015d0:	f000 f9e4 	bl	800199c <draw_glv_v>
}
 80015d4:	bf00      	nop
 80015d6:	bd80      	pop	{r7, pc}
 80015d8:	2000011b 	.word	0x2000011b
 80015dc:	20000119 	.word	0x20000119
 80015e0:	2000011c 	.word	0x2000011c
 80015e4:	2000008c 	.word	0x2000008c

080015e8 <draw_soc>:


void draw_soc(uint16_t soc)
{
 80015e8:	b580      	push	{r7, lr}
 80015ea:	b082      	sub	sp, #8
 80015ec:	af00      	add	r7, sp, #0
 80015ee:	4603      	mov	r3, r0
 80015f0:	80fb      	strh	r3, [r7, #6]
	draw_value_textbox(&soc_box, soc);
 80015f2:	88fb      	ldrh	r3, [r7, #6]
 80015f4:	4619      	mov	r1, r3
 80015f6:	4803      	ldr	r0, [pc, #12]	@ (8001604 <draw_soc+0x1c>)
 80015f8:	f000 fa50 	bl	8001a9c <draw_value_textbox>
}
 80015fc:	bf00      	nop
 80015fe:	3708      	adds	r7, #8
 8001600:	46bd      	mov	sp, r7
 8001602:	bd80      	pop	{r7, pc}
 8001604:	20000008 	.word	0x20000008

08001608 <draw_bms_temp>:

void draw_bms_temp(uint16_t temp)
{
 8001608:	b580      	push	{r7, lr}
 800160a:	b082      	sub	sp, #8
 800160c:	af00      	add	r7, sp, #0
 800160e:	4603      	mov	r3, r0
 8001610:	80fb      	strh	r3, [r7, #6]
	draw_value_textbox(&bms_temp_box, temp);
 8001612:	88fb      	ldrh	r3, [r7, #6]
 8001614:	4619      	mov	r1, r3
 8001616:	4803      	ldr	r0, [pc, #12]	@ (8001624 <draw_bms_temp+0x1c>)
 8001618:	f000 fa40 	bl	8001a9c <draw_value_textbox>
}
 800161c:	bf00      	nop
 800161e:	3708      	adds	r7, #8
 8001620:	46bd      	mov	sp, r7
 8001622:	bd80      	pop	{r7, pc}
 8001624:	20000034 	.word	0x20000034

08001628 <draw_state>:

void draw_state(uint8_t state, uint16_t bms_status)
{
 8001628:	b580      	push	{r7, lr}
 800162a:	b088      	sub	sp, #32
 800162c:	af00      	add	r7, sp, #0
 800162e:	4603      	mov	r3, r0
 8001630:	460a      	mov	r2, r1
 8001632:	71fb      	strb	r3, [r7, #7]
 8001634:	4613      	mov	r3, r2
 8001636:	80bb      	strh	r3, [r7, #4]
    static uint8_t last_state = 255;
    static uint16_t last_bms_status;

    if((state == last_state) && (bms_status == last_bms_status))  // skip function if value is the same
 8001638:	4ba9      	ldr	r3, [pc, #676]	@ (80018e0 <draw_state+0x2b8>)
 800163a:	781b      	ldrb	r3, [r3, #0]
 800163c:	79fa      	ldrb	r2, [r7, #7]
 800163e:	429a      	cmp	r2, r3
 8001640:	d105      	bne.n	800164e <draw_state+0x26>
 8001642:	4ba8      	ldr	r3, [pc, #672]	@ (80018e4 <draw_state+0x2bc>)
 8001644:	881b      	ldrh	r3, [r3, #0]
 8001646:	88ba      	ldrh	r2, [r7, #4]
 8001648:	429a      	cmp	r2, r3
 800164a:	f000 819b 	beq.w	8001984 <draw_state+0x35c>
    }

    UG_COLOR color;
    char string[15];

    switch(bms_status)  // BMS faults more important than VCU faults
 800164e:	88bb      	ldrh	r3, [r7, #4]
 8001650:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001654:	d052      	beq.n	80016fc <draw_state+0xd4>
 8001656:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800165a:	dc59      	bgt.n	8001710 <draw_state+0xe8>
 800165c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8001660:	d03f      	beq.n	80016e2 <draw_state+0xba>
 8001662:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8001666:	dc53      	bgt.n	8001710 <draw_state+0xe8>
 8001668:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800166c:	d02f      	beq.n	80016ce <draw_state+0xa6>
 800166e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001672:	dc4d      	bgt.n	8001710 <draw_state+0xe8>
 8001674:	2b40      	cmp	r3, #64	@ 0x40
 8001676:	d020      	beq.n	80016ba <draw_state+0x92>
 8001678:	2b40      	cmp	r3, #64	@ 0x40
 800167a:	dc49      	bgt.n	8001710 <draw_state+0xe8>
 800167c:	2b10      	cmp	r3, #16
 800167e:	d012      	beq.n	80016a6 <draw_state+0x7e>
 8001680:	2b10      	cmp	r3, #16
 8001682:	dc45      	bgt.n	8001710 <draw_state+0xe8>
 8001684:	2b02      	cmp	r3, #2
 8001686:	d001      	beq.n	800168c <draw_state+0x64>
 8001688:	2b08      	cmp	r3, #8
 800168a:	d141      	bne.n	8001710 <draw_state+0xe8>
    {
        case PACK_TEMP_OVER:
        case PACK_TEMP_UNDER:
            color = C_RED;
 800168c:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001690:	83fb      	strh	r3, [r7, #30]
            strcpy(string, " BMS TEMP ");
 8001692:	f107 030c 	add.w	r3, r7, #12
 8001696:	4a94      	ldr	r2, [pc, #592]	@ (80018e8 <draw_state+0x2c0>)
 8001698:	ca07      	ldmia	r2, {r0, r1, r2}
 800169a:	c303      	stmia	r3!, {r0, r1}
 800169c:	801a      	strh	r2, [r3, #0]
 800169e:	3302      	adds	r3, #2
 80016a0:	0c12      	lsrs	r2, r2, #16
 80016a2:	701a      	strb	r2, [r3, #0]
            break;
 80016a4:	e166      	b.n	8001974 <draw_state+0x34c>
        case LOW_SOC:
            color = C_RED;
 80016a6:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 80016aa:	83fb      	strh	r3, [r7, #30]
            strcpy(string, " LOW SOC ");
 80016ac:	f107 030c 	add.w	r3, r7, #12
 80016b0:	4a8e      	ldr	r2, [pc, #568]	@ (80018ec <draw_state+0x2c4>)
 80016b2:	ca07      	ldmia	r2, {r0, r1, r2}
 80016b4:	c303      	stmia	r3!, {r0, r1}
 80016b6:	801a      	strh	r2, [r3, #0]
            break;
 80016b8:	e15c      	b.n	8001974 <draw_state+0x34c>
        case IMBALANCE:
            color = C_RED;
 80016ba:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 80016be:	83fb      	strh	r3, [r7, #30]
            strcpy(string, "IMBALANCE");
 80016c0:	f107 030c 	add.w	r3, r7, #12
 80016c4:	4a8a      	ldr	r2, [pc, #552]	@ (80018f0 <draw_state+0x2c8>)
 80016c6:	ca07      	ldmia	r2, {r0, r1, r2}
 80016c8:	c303      	stmia	r3!, {r0, r1}
 80016ca:	801a      	strh	r2, [r3, #0]
            break;
 80016cc:	e152      	b.n	8001974 <draw_state+0x34c>
        case SPI_FAULT:
            color = C_RED;
 80016ce:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 80016d2:	83fb      	strh	r3, [r7, #30]
            strcpy(string, "SPI FAULT");
 80016d4:	f107 030c 	add.w	r3, r7, #12
 80016d8:	4a86      	ldr	r2, [pc, #536]	@ (80018f4 <draw_state+0x2cc>)
 80016da:	ca07      	ldmia	r2, {r0, r1, r2}
 80016dc:	c303      	stmia	r3!, {r0, r1}
 80016de:	801a      	strh	r2, [r3, #0]
            break;
 80016e0:	e148      	b.n	8001974 <draw_state+0x34c>
        case CELL_VOLT_OVER:
            color = C_RED;
 80016e2:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 80016e6:	83fb      	strh	r3, [r7, #30]
            strcpy(string, " OVERVOLT ");
 80016e8:	f107 030c 	add.w	r3, r7, #12
 80016ec:	4a82      	ldr	r2, [pc, #520]	@ (80018f8 <draw_state+0x2d0>)
 80016ee:	ca07      	ldmia	r2, {r0, r1, r2}
 80016f0:	c303      	stmia	r3!, {r0, r1}
 80016f2:	801a      	strh	r2, [r3, #0]
 80016f4:	3302      	adds	r3, #2
 80016f6:	0c12      	lsrs	r2, r2, #16
 80016f8:	701a      	strb	r2, [r3, #0]
            break;
 80016fa:	e13b      	b.n	8001974 <draw_state+0x34c>
        case CELL_VOLT_UNDER:
            color = C_RED;
 80016fc:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001700:	83fb      	strh	r3, [r7, #30]
            strcpy(string, "UNDERVOLT");
 8001702:	f107 030c 	add.w	r3, r7, #12
 8001706:	4a7d      	ldr	r2, [pc, #500]	@ (80018fc <draw_state+0x2d4>)
 8001708:	ca07      	ldmia	r2, {r0, r1, r2}
 800170a:	c303      	stmia	r3!, {r0, r1}
 800170c:	801a      	strh	r2, [r3, #0]
            break;
 800170e:	e131      	b.n	8001974 <draw_state+0x34c>
        default:
            // check fault bit
            if (state & 0x80) {
 8001710:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001714:	2b00      	cmp	r3, #0
 8001716:	f280 80be 	bge.w	8001896 <draw_state+0x26e>
                // *************** FAULTS ***************
                uint8_t fault = state & 0x7f; // mask off fault bit
 800171a:	79fb      	ldrb	r3, [r7, #7]
 800171c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8001720:	777b      	strb	r3, [r7, #29]
                switch(fault)
 8001722:	7f7b      	ldrb	r3, [r7, #29]
 8001724:	2b0a      	cmp	r3, #10
 8001726:	dc1d      	bgt.n	8001764 <draw_state+0x13c>
 8001728:	2b00      	cmp	r3, #0
 800172a:	f340 80aa 	ble.w	8001882 <draw_state+0x25a>
 800172e:	3b01      	subs	r3, #1
 8001730:	2b09      	cmp	r3, #9
 8001732:	f200 80a6 	bhi.w	8001882 <draw_state+0x25a>
 8001736:	a201      	add	r2, pc, #4	@ (adr r2, 800173c <draw_state+0x114>)
 8001738:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800173c:	08001785 	.word	0x08001785
 8001740:	0800179f 	.word	0x0800179f
 8001744:	080017b9 	.word	0x080017b9
 8001748:	080017d3 	.word	0x080017d3
 800174c:	080017ed 	.word	0x080017ed
 8001750:	08001807 	.word	0x08001807
 8001754:	08001821 	.word	0x08001821
 8001758:	0800183b 	.word	0x0800183b
 800175c:	08001855 	.word	0x08001855
 8001760:	08001869 	.word	0x08001869
 8001764:	2bff      	cmp	r3, #255	@ 0xff
 8001766:	f040 808c 	bne.w	8001882 <draw_state+0x25a>
                {
//                    case NONE: // STARTUP (effectively)
                	case 255:
                        // not obtainable via CAN
                        // would only show when hardcoded on startup
                        color = C_YELLOW;
 800176a:	f64f 73c0 	movw	r3, #65472	@ 0xffc0
 800176e:	83fb      	strh	r3, [r7, #30]
                        strcpy(string, " STARTUP  ");
 8001770:	f107 030c 	add.w	r3, r7, #12
 8001774:	4a62      	ldr	r2, [pc, #392]	@ (8001900 <draw_state+0x2d8>)
 8001776:	ca07      	ldmia	r2, {r0, r1, r2}
 8001778:	c303      	stmia	r3!, {r0, r1}
 800177a:	801a      	strh	r2, [r3, #0]
 800177c:	3302      	adds	r3, #2
 800177e:	0c12      	lsrs	r2, r2, #16
 8001780:	701a      	strb	r2, [r3, #0]
                        break;
 8001782:	e0f7      	b.n	8001974 <draw_state+0x34c>
                    case DRIVE_REQUEST_FROM_LV:
                        color = C_RED;
 8001784:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001788:	83fb      	strh	r3, [r7, #30]
                        strcpy(string, "DRV FRM LV");
 800178a:	f107 030c 	add.w	r3, r7, #12
 800178e:	4a5d      	ldr	r2, [pc, #372]	@ (8001904 <draw_state+0x2dc>)
 8001790:	ca07      	ldmia	r2, {r0, r1, r2}
 8001792:	c303      	stmia	r3!, {r0, r1}
 8001794:	801a      	strh	r2, [r3, #0]
 8001796:	3302      	adds	r3, #2
 8001798:	0c12      	lsrs	r2, r2, #16
 800179a:	701a      	strb	r2, [r3, #0]
                        break;
 800179c:	e0ea      	b.n	8001974 <draw_state+0x34c>
                    case CONSERVATIVE_TIMER_MAXED:
                        color = C_RED;
 800179e:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 80017a2:	83fb      	strh	r3, [r7, #30]
                        strcpy(string, "PRE TM OUT");
 80017a4:	f107 030c 	add.w	r3, r7, #12
 80017a8:	4a57      	ldr	r2, [pc, #348]	@ (8001908 <draw_state+0x2e0>)
 80017aa:	ca07      	ldmia	r2, {r0, r1, r2}
 80017ac:	c303      	stmia	r3!, {r0, r1}
 80017ae:	801a      	strh	r2, [r3, #0]
 80017b0:	3302      	adds	r3, #2
 80017b2:	0c12      	lsrs	r2, r2, #16
 80017b4:	701a      	strb	r2, [r3, #0]
                        break;
 80017b6:	e0dd      	b.n	8001974 <draw_state+0x34c>
                    case BRAKE_NOT_PRESSED:
                        color = C_RED;
 80017b8:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 80017bc:	83fb      	strh	r3, [r7, #30]
                        strcpy(string, "BR NOT PRS");
 80017be:	f107 030c 	add.w	r3, r7, #12
 80017c2:	4a52      	ldr	r2, [pc, #328]	@ (800190c <draw_state+0x2e4>)
 80017c4:	ca07      	ldmia	r2, {r0, r1, r2}
 80017c6:	c303      	stmia	r3!, {r0, r1}
 80017c8:	801a      	strh	r2, [r3, #0]
 80017ca:	3302      	adds	r3, #2
 80017cc:	0c12      	lsrs	r2, r2, #16
 80017ce:	701a      	strb	r2, [r3, #0]
                        break;
 80017d0:	e0d0      	b.n	8001974 <draw_state+0x34c>
                    case HV_DISABLED_WHILE_DRIVING:
                        color = C_RED;
 80017d2:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 80017d6:	83fb      	strh	r3, [r7, #30]
                        strcpy(string, "HV OFF DRV");
 80017d8:	f107 030c 	add.w	r3, r7, #12
 80017dc:	4a4c      	ldr	r2, [pc, #304]	@ (8001910 <draw_state+0x2e8>)
 80017de:	ca07      	ldmia	r2, {r0, r1, r2}
 80017e0:	c303      	stmia	r3!, {r0, r1}
 80017e2:	801a      	strh	r2, [r3, #0]
 80017e4:	3302      	adds	r3, #2
 80017e6:	0c12      	lsrs	r2, r2, #16
 80017e8:	701a      	strb	r2, [r3, #0]
                        break;
 80017ea:	e0c3      	b.n	8001974 <draw_state+0x34c>
                    case SENSOR_DISCREPANCY:
                        color = C_RED;
 80017ec:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 80017f0:	83fb      	strh	r3, [r7, #30]
                        strcpy(string, "SNSR DSCRP");
 80017f2:	f107 030c 	add.w	r3, r7, #12
 80017f6:	4a47      	ldr	r2, [pc, #284]	@ (8001914 <draw_state+0x2ec>)
 80017f8:	ca07      	ldmia	r2, {r0, r1, r2}
 80017fa:	c303      	stmia	r3!, {r0, r1}
 80017fc:	801a      	strh	r2, [r3, #0]
 80017fe:	3302      	adds	r3, #2
 8001800:	0c12      	lsrs	r2, r2, #16
 8001802:	701a      	strb	r2, [r3, #0]
                        break;
 8001804:	e0b6      	b.n	8001974 <draw_state+0x34c>
                    case BRAKE_IMPLAUSIBLE:
                        color = C_YELLOW;
 8001806:	f64f 73c0 	movw	r3, #65472	@ 0xffc0
 800180a:	83fb      	strh	r3, [r7, #30]
                        strcpy(string, "BSPD TRIPD");
 800180c:	f107 030c 	add.w	r3, r7, #12
 8001810:	4a41      	ldr	r2, [pc, #260]	@ (8001918 <draw_state+0x2f0>)
 8001812:	ca07      	ldmia	r2, {r0, r1, r2}
 8001814:	c303      	stmia	r3!, {r0, r1}
 8001816:	801a      	strh	r2, [r3, #0]
 8001818:	3302      	adds	r3, #2
 800181a:	0c12      	lsrs	r2, r2, #16
 800181c:	701a      	strb	r2, [r3, #0]
                        break;
 800181e:	e0a9      	b.n	8001974 <draw_state+0x34c>
                    case SHUTDOWN_CIRCUIT_OPEN:
                        color = C_RED;
 8001820:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001824:	83fb      	strh	r3, [r7, #30]
                        strcpy(string, "SHTDWN OPN");
 8001826:	f107 030c 	add.w	r3, r7, #12
 800182a:	4a3c      	ldr	r2, [pc, #240]	@ (800191c <draw_state+0x2f4>)
 800182c:	ca07      	ldmia	r2, {r0, r1, r2}
 800182e:	c303      	stmia	r3!, {r0, r1}
 8001830:	801a      	strh	r2, [r3, #0]
 8001832:	3302      	adds	r3, #2
 8001834:	0c12      	lsrs	r2, r2, #16
 8001836:	701a      	strb	r2, [r3, #0]
                        break;
 8001838:	e09c      	b.n	8001974 <draw_state+0x34c>
                    case UNCALIBRATED:
                        color = C_RED;
 800183a:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 800183e:	83fb      	strh	r3, [r7, #30]
                        strcpy(string, "UNCALIBRTD");
 8001840:	f107 030c 	add.w	r3, r7, #12
 8001844:	4a36      	ldr	r2, [pc, #216]	@ (8001920 <draw_state+0x2f8>)
 8001846:	ca07      	ldmia	r2, {r0, r1, r2}
 8001848:	c303      	stmia	r3!, {r0, r1}
 800184a:	801a      	strh	r2, [r3, #0]
 800184c:	3302      	adds	r3, #2
 800184e:	0c12      	lsrs	r2, r2, #16
 8001850:	701a      	strb	r2, [r3, #0]
                        break;
 8001852:	e08f      	b.n	8001974 <draw_state+0x34c>
                    case HARD_BSPD:
                        color = C_RED;
 8001854:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001858:	83fb      	strh	r3, [r7, #30]
                        strcpy(string, "HARD BSPD");
 800185a:	f107 030c 	add.w	r3, r7, #12
 800185e:	4a31      	ldr	r2, [pc, #196]	@ (8001924 <draw_state+0x2fc>)
 8001860:	ca07      	ldmia	r2, {r0, r1, r2}
 8001862:	c303      	stmia	r3!, {r0, r1}
 8001864:	801a      	strh	r2, [r3, #0]
                        break;
 8001866:	e085      	b.n	8001974 <draw_state+0x34c>
                    case MC_FAULT:
                        color = C_RED;
 8001868:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 800186c:	83fb      	strh	r3, [r7, #30]
                        strcpy(string, " MC FAULT ");
 800186e:	f107 030c 	add.w	r3, r7, #12
 8001872:	4a2d      	ldr	r2, [pc, #180]	@ (8001928 <draw_state+0x300>)
 8001874:	ca07      	ldmia	r2, {r0, r1, r2}
 8001876:	c303      	stmia	r3!, {r0, r1}
 8001878:	801a      	strh	r2, [r3, #0]
 800187a:	3302      	adds	r3, #2
 800187c:	0c12      	lsrs	r2, r2, #16
 800187e:	701a      	strb	r2, [r3, #0]
                        break;
 8001880:	e078      	b.n	8001974 <draw_state+0x34c>
                    default:
                        color = C_RED;
 8001882:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001886:	83fb      	strh	r3, [r7, #30]
                        strcpy(string, " YO WTF? ");
 8001888:	f107 030c 	add.w	r3, r7, #12
 800188c:	4a27      	ldr	r2, [pc, #156]	@ (800192c <draw_state+0x304>)
 800188e:	ca07      	ldmia	r2, {r0, r1, r2}
 8001890:	c303      	stmia	r3!, {r0, r1}
 8001892:	801a      	strh	r2, [r3, #0]
                        break;
 8001894:	e06e      	b.n	8001974 <draw_state+0x34c>
                }
            }
            else
            {
                // *************** NO FAULTS ***************
                color = C_GREEN;
 8001896:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 800189a:	83fb      	strh	r3, [r7, #30]
                switch(state)
 800189c:	79fb      	ldrb	r3, [r7, #7]
 800189e:	2b03      	cmp	r3, #3
 80018a0:	d85e      	bhi.n	8001960 <draw_state+0x338>
 80018a2:	a201      	add	r2, pc, #4	@ (adr r2, 80018a8 <draw_state+0x280>)
 80018a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80018a8:	080018b9 	.word	0x080018b9
 80018ac:	080018cd 	.word	0x080018cd
 80018b0:	08001939 	.word	0x08001939
 80018b4:	0800194d 	.word	0x0800194d
                {
                    case LV:
                        strcpy(string, "    LV    ");
 80018b8:	f107 030c 	add.w	r3, r7, #12
 80018bc:	4a1c      	ldr	r2, [pc, #112]	@ (8001930 <draw_state+0x308>)
 80018be:	ca07      	ldmia	r2, {r0, r1, r2}
 80018c0:	c303      	stmia	r3!, {r0, r1}
 80018c2:	801a      	strh	r2, [r3, #0]
 80018c4:	3302      	adds	r3, #2
 80018c6:	0c12      	lsrs	r2, r2, #16
 80018c8:	701a      	strb	r2, [r3, #0]
                        break;
 80018ca:	e053      	b.n	8001974 <draw_state+0x34c>
                    case PRECHARGING:
                        strcpy(string, "PRECHARGE ");
 80018cc:	f107 030c 	add.w	r3, r7, #12
 80018d0:	4a18      	ldr	r2, [pc, #96]	@ (8001934 <draw_state+0x30c>)
 80018d2:	ca07      	ldmia	r2, {r0, r1, r2}
 80018d4:	c303      	stmia	r3!, {r0, r1}
 80018d6:	801a      	strh	r2, [r3, #0]
 80018d8:	3302      	adds	r3, #2
 80018da:	0c12      	lsrs	r2, r2, #16
 80018dc:	701a      	strb	r2, [r3, #0]
                        break;
 80018de:	e049      	b.n	8001974 <draw_state+0x34c>
 80018e0:	20000090 	.word	0x20000090
 80018e4:	2000022c 	.word	0x2000022c
 80018e8:	0800eab0 	.word	0x0800eab0
 80018ec:	0800eabc 	.word	0x0800eabc
 80018f0:	0800eac8 	.word	0x0800eac8
 80018f4:	0800ead4 	.word	0x0800ead4
 80018f8:	0800eae0 	.word	0x0800eae0
 80018fc:	0800eaec 	.word	0x0800eaec
 8001900:	0800eaf8 	.word	0x0800eaf8
 8001904:	0800eb04 	.word	0x0800eb04
 8001908:	0800eb10 	.word	0x0800eb10
 800190c:	0800eb1c 	.word	0x0800eb1c
 8001910:	0800eb28 	.word	0x0800eb28
 8001914:	0800eb34 	.word	0x0800eb34
 8001918:	0800eb40 	.word	0x0800eb40
 800191c:	0800eb4c 	.word	0x0800eb4c
 8001920:	0800eb58 	.word	0x0800eb58
 8001924:	0800eb64 	.word	0x0800eb64
 8001928:	0800eb70 	.word	0x0800eb70
 800192c:	0800eb7c 	.word	0x0800eb7c
 8001930:	0800eb88 	.word	0x0800eb88
 8001934:	0800eb94 	.word	0x0800eb94
                    case HV_ENABLED:
                        strcpy(string, "HV ENABLED");
 8001938:	f107 030c 	add.w	r3, r7, #12
 800193c:	4a13      	ldr	r2, [pc, #76]	@ (800198c <draw_state+0x364>)
 800193e:	ca07      	ldmia	r2, {r0, r1, r2}
 8001940:	c303      	stmia	r3!, {r0, r1}
 8001942:	801a      	strh	r2, [r3, #0]
 8001944:	3302      	adds	r3, #2
 8001946:	0c12      	lsrs	r2, r2, #16
 8001948:	701a      	strb	r2, [r3, #0]
                        break;
 800194a:	e013      	b.n	8001974 <draw_state+0x34c>
                    case DRIVE:
                        strcpy(string, "  DRIVE   ");
 800194c:	f107 030c 	add.w	r3, r7, #12
 8001950:	4a0f      	ldr	r2, [pc, #60]	@ (8001990 <draw_state+0x368>)
 8001952:	ca07      	ldmia	r2, {r0, r1, r2}
 8001954:	c303      	stmia	r3!, {r0, r1}
 8001956:	801a      	strh	r2, [r3, #0]
 8001958:	3302      	adds	r3, #2
 800195a:	0c12      	lsrs	r2, r2, #16
 800195c:	701a      	strb	r2, [r3, #0]
                        break;
 800195e:	e009      	b.n	8001974 <draw_state+0x34c>
                    default:
						color = C_RED;
 8001960:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001964:	83fb      	strh	r3, [r7, #30]
						strcpy(string, " YO WTF? ");
 8001966:	f107 030c 	add.w	r3, r7, #12
 800196a:	4a0a      	ldr	r2, [pc, #40]	@ (8001994 <draw_state+0x36c>)
 800196c:	ca07      	ldmia	r2, {r0, r1, r2}
 800196e:	c303      	stmia	r3!, {r0, r1}
 8001970:	801a      	strh	r2, [r3, #0]
						break;
 8001972:	bf00      	nop
                }
            }
    }

    draw_textbox(&state_box, color, string, 11);
 8001974:	f107 020c 	add.w	r2, r7, #12
 8001978:	8bf9      	ldrh	r1, [r7, #30]
 800197a:	230b      	movs	r3, #11
 800197c:	4806      	ldr	r0, [pc, #24]	@ (8001998 <draw_state+0x370>)
 800197e:	f000 f8c7 	bl	8001b10 <draw_textbox>
 8001982:	e000      	b.n	8001986 <draw_state+0x35e>
        return;
 8001984:	bf00      	nop
}
 8001986:	3720      	adds	r7, #32
 8001988:	46bd      	mov	sp, r7
 800198a:	bd80      	pop	{r7, pc}
 800198c:	0800eba0 	.word	0x0800eba0
 8001990:	0800ebac 	.word	0x0800ebac
 8001994:	0800eb7c 	.word	0x0800eb7c
 8001998:	20000178 	.word	0x20000178

0800199c <draw_glv_v>:


void draw_glv_v(uint32_t data) {
 800199c:	b580      	push	{r7, lr}
 800199e:	b084      	sub	sp, #16
 80019a0:	af00      	add	r7, sp, #0
 80019a2:	6078      	str	r0, [r7, #4]
    // translate from voltage divider measurement to true voltage
    // y = 0.4295x + 18.254
    data *= 859;
 80019a4:	687b      	ldr	r3, [r7, #4]
 80019a6:	f240 325b 	movw	r2, #859	@ 0x35b
 80019aa:	fb02 f303 	mul.w	r3, r2, r3
 80019ae:	607b      	str	r3, [r7, #4]
    data /= 2000; // 0.4295
 80019b0:	687b      	ldr	r3, [r7, #4]
 80019b2:	4a17      	ldr	r2, [pc, #92]	@ (8001a10 <draw_glv_v+0x74>)
 80019b4:	fba2 2303 	umull	r2, r3, r2, r3
 80019b8:	09db      	lsrs	r3, r3, #7
 80019ba:	607b      	str	r3, [r7, #4]
    data += 18;
 80019bc:	687b      	ldr	r3, [r7, #4]
 80019be:	3312      	adds	r3, #18
 80019c0:	607b      	str	r3, [r7, #4]
    UG_COLOR color;
    if (data > 1150) {
 80019c2:	687b      	ldr	r3, [r7, #4]
 80019c4:	f240 427e 	movw	r2, #1150	@ 0x47e
 80019c8:	4293      	cmp	r3, r2
 80019ca:	d903      	bls.n	80019d4 <draw_glv_v+0x38>
        color = C_GREEN;
 80019cc:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 80019d0:	81fb      	strh	r3, [r7, #14]
 80019d2:	e00b      	b.n	80019ec <draw_glv_v+0x50>
    } else if (data > 1100) {
 80019d4:	687b      	ldr	r3, [r7, #4]
 80019d6:	f240 424c 	movw	r2, #1100	@ 0x44c
 80019da:	4293      	cmp	r3, r2
 80019dc:	d903      	bls.n	80019e6 <draw_glv_v+0x4a>
        color = C_YELLOW;
 80019de:	f64f 73c0 	movw	r3, #65472	@ 0xffc0
 80019e2:	81fb      	strh	r3, [r7, #14]
 80019e4:	e002      	b.n	80019ec <draw_glv_v+0x50>
    } else {
    	color = C_RED;
 80019e6:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 80019ea:	81fb      	strh	r3, [r7, #14]
    }

    char str[6];
    sprintf(str, "%ld", data);
 80019ec:	f107 0308 	add.w	r3, r7, #8
 80019f0:	687a      	ldr	r2, [r7, #4]
 80019f2:	4908      	ldr	r1, [pc, #32]	@ (8001a14 <draw_glv_v+0x78>)
 80019f4:	4618      	mov	r0, r3
 80019f6:	f00c fb6d 	bl	800e0d4 <siprintf>
    draw_textbox(&glv_v_box, color, str, 11);
 80019fa:	f107 0208 	add.w	r2, r7, #8
 80019fe:	89f9      	ldrh	r1, [r7, #14]
 8001a00:	230b      	movs	r3, #11
 8001a02:	4805      	ldr	r0, [pc, #20]	@ (8001a18 <draw_glv_v+0x7c>)
 8001a04:	f000 f884 	bl	8001b10 <draw_textbox>
}
 8001a08:	bf00      	nop
 8001a0a:	3710      	adds	r7, #16
 8001a0c:	46bd      	mov	sp, r7
 8001a0e:	bd80      	pop	{r7, pc}
 8001a10:	10624dd3 	.word	0x10624dd3
 8001a14:	0800ebb8 	.word	0x0800ebb8
 8001a18:	20000060 	.word	0x20000060

08001a1c <value_to_color>:



UG_COLOR value_to_color(TEXTBOX_CONFIG cfg, uint16_t value)
{
 8001a1c:	b084      	sub	sp, #16
 8001a1e:	b490      	push	{r4, r7}
 8001a20:	af00      	add	r7, sp, #0
 8001a22:	f107 0408 	add.w	r4, r7, #8
 8001a26:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    if(cfg.grn_ylw_cutoff > cfg.ylw_org_cutoff)   // green for large red for small
 8001a2a:	8a3a      	ldrh	r2, [r7, #16]
 8001a2c:	8a7b      	ldrh	r3, [r7, #18]
 8001a2e:	429a      	cmp	r2, r3
 8001a30:	d917      	bls.n	8001a62 <value_to_color+0x46>
    {
        if(value > cfg.grn_ylw_cutoff)
 8001a32:	8a3b      	ldrh	r3, [r7, #16]
 8001a34:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 8001a36:	429a      	cmp	r2, r3
 8001a38:	d902      	bls.n	8001a40 <value_to_color+0x24>
        {
            return C_GREEN;
 8001a3a:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 8001a3e:	e027      	b.n	8001a90 <value_to_color+0x74>
        }
        else if(value > cfg.ylw_org_cutoff)
 8001a40:	8a7b      	ldrh	r3, [r7, #18]
 8001a42:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 8001a44:	429a      	cmp	r2, r3
 8001a46:	d902      	bls.n	8001a4e <value_to_color+0x32>
        {
            return C_YELLOW;
 8001a48:	f64f 73c0 	movw	r3, #65472	@ 0xffc0
 8001a4c:	e020      	b.n	8001a90 <value_to_color+0x74>
        }
        else if(value > cfg.org_red_cutoff)
 8001a4e:	8abb      	ldrh	r3, [r7, #20]
 8001a50:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 8001a52:	429a      	cmp	r2, r3
 8001a54:	d902      	bls.n	8001a5c <value_to_color+0x40>
        {
            return C_ORANGE_RED;  // normal orange looks yellow
 8001a56:	f64f 43a0 	movw	r3, #64672	@ 0xfca0
 8001a5a:	e019      	b.n	8001a90 <value_to_color+0x74>
        }
        else
        {
            return C_RED;
 8001a5c:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001a60:	e016      	b.n	8001a90 <value_to_color+0x74>
        }
    }
    else  // red for large green for small
    {
        if(value > cfg.org_red_cutoff)
 8001a62:	8abb      	ldrh	r3, [r7, #20]
 8001a64:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 8001a66:	429a      	cmp	r2, r3
 8001a68:	d902      	bls.n	8001a70 <value_to_color+0x54>
        {
            return C_RED;
 8001a6a:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001a6e:	e00f      	b.n	8001a90 <value_to_color+0x74>
        }
        else if(value > cfg.ylw_org_cutoff)
 8001a70:	8a7b      	ldrh	r3, [r7, #18]
 8001a72:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 8001a74:	429a      	cmp	r2, r3
 8001a76:	d902      	bls.n	8001a7e <value_to_color+0x62>
        {
            return C_ORANGE_RED;  // normal orange looks yellow
 8001a78:	f64f 43a0 	movw	r3, #64672	@ 0xfca0
 8001a7c:	e008      	b.n	8001a90 <value_to_color+0x74>
        }
        else if(value > cfg.grn_ylw_cutoff)
 8001a7e:	8a3b      	ldrh	r3, [r7, #16]
 8001a80:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 8001a82:	429a      	cmp	r2, r3
 8001a84:	d902      	bls.n	8001a8c <value_to_color+0x70>
        {
            return C_YELLOW;
 8001a86:	f64f 73c0 	movw	r3, #65472	@ 0xffc0
 8001a8a:	e001      	b.n	8001a90 <value_to_color+0x74>
        }
        else
        {
            return C_GREEN;
 8001a8c:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
        }
    }
}
 8001a90:	4618      	mov	r0, r3
 8001a92:	46bd      	mov	sp, r7
 8001a94:	bc90      	pop	{r4, r7}
 8001a96:	b004      	add	sp, #16
 8001a98:	4770      	bx	lr
	...

08001a9c <draw_value_textbox>:

void draw_value_textbox(TEXTBOX_CONFIG* cfg, uint16_t value)
{
 8001a9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001a9e:	b08f      	sub	sp, #60	@ 0x3c
 8001aa0:	af08      	add	r7, sp, #32
 8001aa2:	6078      	str	r0, [r7, #4]
 8001aa4:	460b      	mov	r3, r1
 8001aa6:	807b      	strh	r3, [r7, #2]
	if(value == cfg->last_value)
 8001aa8:	687b      	ldr	r3, [r7, #4]
 8001aaa:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8001aac:	887a      	ldrh	r2, [r7, #2]
 8001aae:	429a      	cmp	r2, r3
 8001ab0:	d028      	beq.n	8001b04 <draw_value_textbox+0x68>
	{
		return;
	}

	cfg->last_value = value;
 8001ab2:	687b      	ldr	r3, [r7, #4]
 8001ab4:	887a      	ldrh	r2, [r7, #2]
 8001ab6:	84da      	strh	r2, [r3, #38]	@ 0x26

	UG_COLOR color = value_to_color(*cfg, value);
 8001ab8:	687e      	ldr	r6, [r7, #4]
 8001aba:	887b      	ldrh	r3, [r7, #2]
 8001abc:	9307      	str	r3, [sp, #28]
 8001abe:	466d      	mov	r5, sp
 8001ac0:	f106 0410 	add.w	r4, r6, #16
 8001ac4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001ac6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001ac8:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8001acc:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8001ad0:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8001ad4:	f7ff ffa2 	bl	8001a1c <value_to_color>
 8001ad8:	4603      	mov	r3, r0
 8001ada:	82fb      	strh	r3, [r7, #22]
	char string[10];
	uint16_t str_len = sprintf(string, "%d%c", value, cfg->units);
 8001adc:	887a      	ldrh	r2, [r7, #2]
 8001ade:	687b      	ldr	r3, [r7, #4]
 8001ae0:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8001ae4:	f107 0008 	add.w	r0, r7, #8
 8001ae8:	4908      	ldr	r1, [pc, #32]	@ (8001b0c <draw_value_textbox+0x70>)
 8001aea:	f00c faf3 	bl	800e0d4 <siprintf>
 8001aee:	4603      	mov	r3, r0
 8001af0:	82bb      	strh	r3, [r7, #20]

	draw_textbox(cfg, color, string, str_len);
 8001af2:	8abb      	ldrh	r3, [r7, #20]
 8001af4:	b2db      	uxtb	r3, r3
 8001af6:	f107 0208 	add.w	r2, r7, #8
 8001afa:	8af9      	ldrh	r1, [r7, #22]
 8001afc:	6878      	ldr	r0, [r7, #4]
 8001afe:	f000 f807 	bl	8001b10 <draw_textbox>
 8001b02:	e000      	b.n	8001b06 <draw_value_textbox+0x6a>
		return;
 8001b04:	bf00      	nop
}
 8001b06:	371c      	adds	r7, #28
 8001b08:	46bd      	mov	sp, r7
 8001b0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b0c:	0800ebbc 	.word	0x0800ebbc

08001b10 <draw_textbox>:

void draw_textbox(TEXTBOX_CONFIG* cfg, UG_COLOR color, char* string, uint8_t str_len)
{
 8001b10:	b590      	push	{r4, r7, lr}
 8001b12:	b089      	sub	sp, #36	@ 0x24
 8001b14:	af02      	add	r7, sp, #8
 8001b16:	60f8      	str	r0, [r7, #12]
 8001b18:	607a      	str	r2, [r7, #4]
 8001b1a:	461a      	mov	r2, r3
 8001b1c:	460b      	mov	r3, r1
 8001b1e:	817b      	strh	r3, [r7, #10]
 8001b20:	4613      	mov	r3, r2
 8001b22:	727b      	strb	r3, [r7, #9]
    // determine x and y coordinates to center text
    uint16_t text_x = (cfg->box_x2 + cfg->box_x1)/2 - ((str_len * cfg->font.char_width)/2);
 8001b24:	68fb      	ldr	r3, [r7, #12]
 8001b26:	889b      	ldrh	r3, [r3, #4]
 8001b28:	461a      	mov	r2, r3
 8001b2a:	68fb      	ldr	r3, [r7, #12]
 8001b2c:	881b      	ldrh	r3, [r3, #0]
 8001b2e:	4413      	add	r3, r2
 8001b30:	2b00      	cmp	r3, #0
 8001b32:	da00      	bge.n	8001b36 <draw_textbox+0x26>
 8001b34:	3301      	adds	r3, #1
 8001b36:	105b      	asrs	r3, r3, #1
 8001b38:	b29a      	uxth	r2, r3
 8001b3a:	7a7b      	ldrb	r3, [r7, #9]
 8001b3c:	68f9      	ldr	r1, [r7, #12]
 8001b3e:	f9b1 1016 	ldrsh.w	r1, [r1, #22]
 8001b42:	fb01 f303 	mul.w	r3, r1, r3
 8001b46:	2b00      	cmp	r3, #0
 8001b48:	da00      	bge.n	8001b4c <draw_textbox+0x3c>
 8001b4a:	3301      	adds	r3, #1
 8001b4c:	105b      	asrs	r3, r3, #1
 8001b4e:	425b      	negs	r3, r3
 8001b50:	b29b      	uxth	r3, r3
 8001b52:	4413      	add	r3, r2
 8001b54:	82fb      	strh	r3, [r7, #22]
    uint16_t text_y = (cfg->box_y2 + cfg->box_y1)/2 - (cfg->font.char_height/2);
 8001b56:	68fb      	ldr	r3, [r7, #12]
 8001b58:	88db      	ldrh	r3, [r3, #6]
 8001b5a:	461a      	mov	r2, r3
 8001b5c:	68fb      	ldr	r3, [r7, #12]
 8001b5e:	885b      	ldrh	r3, [r3, #2]
 8001b60:	4413      	add	r3, r2
 8001b62:	2b00      	cmp	r3, #0
 8001b64:	da00      	bge.n	8001b68 <draw_textbox+0x58>
 8001b66:	3301      	adds	r3, #1
 8001b68:	105b      	asrs	r3, r3, #1
 8001b6a:	b29a      	uxth	r2, r3
 8001b6c:	68fb      	ldr	r3, [r7, #12]
 8001b6e:	f9b3 3018 	ldrsh.w	r3, [r3, #24]
 8001b72:	2b00      	cmp	r3, #0
 8001b74:	da00      	bge.n	8001b78 <draw_textbox+0x68>
 8001b76:	3301      	adds	r3, #1
 8001b78:	105b      	asrs	r3, r3, #1
 8001b7a:	b21b      	sxth	r3, r3
 8001b7c:	b29b      	uxth	r3, r3
 8001b7e:	1ad3      	subs	r3, r2, r3
 8001b80:	82bb      	strh	r3, [r7, #20]

    if(color != cfg->last_color)
 8001b82:	68fb      	ldr	r3, [r7, #12]
 8001b84:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8001b86:	897a      	ldrh	r2, [r7, #10]
 8001b88:	429a      	cmp	r2, r3
 8001b8a:	d013      	beq.n	8001bb4 <draw_textbox+0xa4>
    {
        UG_FillFrame(cfg->box_x1, cfg->box_y1, cfg->box_x2, cfg->box_y2, color);
 8001b8c:	68fb      	ldr	r3, [r7, #12]
 8001b8e:	881b      	ldrh	r3, [r3, #0]
 8001b90:	b218      	sxth	r0, r3
 8001b92:	68fb      	ldr	r3, [r7, #12]
 8001b94:	885b      	ldrh	r3, [r3, #2]
 8001b96:	b219      	sxth	r1, r3
 8001b98:	68fb      	ldr	r3, [r7, #12]
 8001b9a:	889b      	ldrh	r3, [r3, #4]
 8001b9c:	b21a      	sxth	r2, r3
 8001b9e:	68fb      	ldr	r3, [r7, #12]
 8001ba0:	88db      	ldrh	r3, [r3, #6]
 8001ba2:	b21c      	sxth	r4, r3
 8001ba4:	897b      	ldrh	r3, [r7, #10]
 8001ba6:	9300      	str	r3, [sp, #0]
 8001ba8:	4623      	mov	r3, r4
 8001baa:	f002 fa93 	bl	80040d4 <UG_FillFrame>
        cfg->last_color = color;
 8001bae:	68fb      	ldr	r3, [r7, #12]
 8001bb0:	897a      	ldrh	r2, [r7, #10]
 8001bb2:	849a      	strh	r2, [r3, #36]	@ 0x24
    }

    UG_FontSelect(&cfg->font);
 8001bb4:	68fb      	ldr	r3, [r7, #12]
 8001bb6:	3310      	adds	r3, #16
 8001bb8:	4618      	mov	r0, r3
 8001bba:	f002 fa53 	bl	8004064 <UG_FontSelect>
    UG_PutColorString(text_x, text_y, string, C_BLACK, color);
 8001bbe:	f9b7 0016 	ldrsh.w	r0, [r7, #22]
 8001bc2:	f9b7 1014 	ldrsh.w	r1, [r7, #20]
 8001bc6:	897b      	ldrh	r3, [r7, #10]
 8001bc8:	9300      	str	r3, [sp, #0]
 8001bca:	2300      	movs	r3, #0
 8001bcc:	687a      	ldr	r2, [r7, #4]
 8001bce:	f002 fb77 	bl	80042c0 <UG_PutColorString>
}
 8001bd2:	bf00      	nop
 8001bd4:	371c      	adds	r7, #28
 8001bd6:	46bd      	mov	sp, r7
 8001bd8:	bd90      	pop	{r4, r7, pc}
	...

08001bdc <change_state>:
 8001bdc:	b480      	push	{r7}
 8001bde:	b083      	sub	sp, #12
 8001be0:	af00      	add	r7, sp, #0
 8001be2:	4603      	mov	r3, r0
 8001be4:	71fb      	strb	r3, [r7, #7]
 8001be6:	4b0a      	ldr	r3, [pc, #40]	@ (8001c10 <change_state+0x34>)
 8001be8:	781b      	ldrb	r3, [r3, #0]
 8001bea:	b2db      	uxtb	r3, r3
 8001bec:	2b04      	cmp	r3, #4
 8001bee:	d105      	bne.n	8001bfc <change_state+0x20>
 8001bf0:	79fb      	ldrb	r3, [r7, #7]
 8001bf2:	2b04      	cmp	r3, #4
 8001bf4:	d002      	beq.n	8001bfc <change_state+0x20>
 8001bf6:	4b07      	ldr	r3, [pc, #28]	@ (8001c14 <change_state+0x38>)
 8001bf8:	2200      	movs	r2, #0
 8001bfa:	701a      	strb	r2, [r3, #0]
 8001bfc:	4a04      	ldr	r2, [pc, #16]	@ (8001c10 <change_state+0x34>)
 8001bfe:	79fb      	ldrb	r3, [r7, #7]
 8001c00:	7013      	strb	r3, [r2, #0]
 8001c02:	bf00      	nop
 8001c04:	370c      	adds	r7, #12
 8001c06:	46bd      	mov	sp, r7
 8001c08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c0c:	4770      	bx	lr
 8001c0e:	bf00      	nop
 8001c10:	20000091 	.word	0x20000091
 8001c14:	2000022e 	.word	0x2000022e

08001c18 <report_fault>:
 8001c18:	b580      	push	{r7, lr}
 8001c1a:	b082      	sub	sp, #8
 8001c1c:	af00      	add	r7, sp, #0
 8001c1e:	4603      	mov	r3, r0
 8001c20:	71fb      	strb	r3, [r7, #7]
 8001c22:	2004      	movs	r0, #4
 8001c24:	f7ff ffda 	bl	8001bdc <change_state>
 8001c28:	4a03      	ldr	r2, [pc, #12]	@ (8001c38 <report_fault+0x20>)
 8001c2a:	79fb      	ldrb	r3, [r7, #7]
 8001c2c:	7013      	strb	r3, [r2, #0]
 8001c2e:	bf00      	nop
 8001c30:	3708      	adds	r7, #8
 8001c32:	46bd      	mov	sp, r7
 8001c34:	bd80      	pop	{r7, pc}
 8001c36:	bf00      	nop
 8001c38:	2000022e 	.word	0x2000022e

08001c3c <hv_requested>:
 8001c3c:	b480      	push	{r7}
 8001c3e:	af00      	add	r7, sp, #0
 8001c40:	4b13      	ldr	r3, [pc, #76]	@ (8001c90 <hv_requested+0x54>)
 8001c42:	781b      	ldrb	r3, [r3, #0]
 8001c44:	b2db      	uxtb	r3, r3
 8001c46:	2b01      	cmp	r3, #1
 8001c48:	d018      	beq.n	8001c7c <hv_requested+0x40>
 8001c4a:	4b11      	ldr	r3, [pc, #68]	@ (8001c90 <hv_requested+0x54>)
 8001c4c:	781b      	ldrb	r3, [r3, #0]
 8001c4e:	b2db      	uxtb	r3, r3
 8001c50:	2b02      	cmp	r3, #2
 8001c52:	d013      	beq.n	8001c7c <hv_requested+0x40>
 8001c54:	4b0e      	ldr	r3, [pc, #56]	@ (8001c90 <hv_requested+0x54>)
 8001c56:	781b      	ldrb	r3, [r3, #0]
 8001c58:	b2db      	uxtb	r3, r3
 8001c5a:	2b03      	cmp	r3, #3
 8001c5c:	d00e      	beq.n	8001c7c <hv_requested+0x40>
 8001c5e:	4b0d      	ldr	r3, [pc, #52]	@ (8001c94 <hv_requested+0x58>)
 8001c60:	781b      	ldrb	r3, [r3, #0]
 8001c62:	b2db      	uxtb	r3, r3
 8001c64:	2b03      	cmp	r3, #3
 8001c66:	d009      	beq.n	8001c7c <hv_requested+0x40>
 8001c68:	4b0a      	ldr	r3, [pc, #40]	@ (8001c94 <hv_requested+0x58>)
 8001c6a:	781b      	ldrb	r3, [r3, #0]
 8001c6c:	b2db      	uxtb	r3, r3
 8001c6e:	2b05      	cmp	r3, #5
 8001c70:	d004      	beq.n	8001c7c <hv_requested+0x40>
 8001c72:	4b08      	ldr	r3, [pc, #32]	@ (8001c94 <hv_requested+0x58>)
 8001c74:	781b      	ldrb	r3, [r3, #0]
 8001c76:	b2db      	uxtb	r3, r3
 8001c78:	2b06      	cmp	r3, #6
 8001c7a:	d101      	bne.n	8001c80 <hv_requested+0x44>
 8001c7c:	2301      	movs	r3, #1
 8001c7e:	e000      	b.n	8001c82 <hv_requested+0x46>
 8001c80:	2300      	movs	r3, #0
 8001c82:	b2db      	uxtb	r3, r3
 8001c84:	4618      	mov	r0, r3
 8001c86:	46bd      	mov	sp, r7
 8001c88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c8c:	4770      	bx	lr
 8001c8e:	bf00      	nop
 8001c90:	20000091 	.word	0x20000091
 8001c94:	2000022e 	.word	0x2000022e

08001c98 <one_byte_state>:
 8001c98:	b480      	push	{r7}
 8001c9a:	b083      	sub	sp, #12
 8001c9c:	af00      	add	r7, sp, #0
 8001c9e:	4b0a      	ldr	r3, [pc, #40]	@ (8001cc8 <one_byte_state+0x30>)
 8001ca0:	781b      	ldrb	r3, [r3, #0]
 8001ca2:	71fb      	strb	r3, [r7, #7]
 8001ca4:	4b08      	ldr	r3, [pc, #32]	@ (8001cc8 <one_byte_state+0x30>)
 8001ca6:	781b      	ldrb	r3, [r3, #0]
 8001ca8:	b2db      	uxtb	r3, r3
 8001caa:	2b04      	cmp	r3, #4
 8001cac:	d104      	bne.n	8001cb8 <one_byte_state+0x20>
 8001cae:	4b07      	ldr	r3, [pc, #28]	@ (8001ccc <one_byte_state+0x34>)
 8001cb0:	781b      	ldrb	r3, [r3, #0]
 8001cb2:	b2db      	uxtb	r3, r3
 8001cb4:	3b80      	subs	r3, #128	@ 0x80
 8001cb6:	71fb      	strb	r3, [r7, #7]
 8001cb8:	79fb      	ldrb	r3, [r7, #7]
 8001cba:	4618      	mov	r0, r3
 8001cbc:	370c      	adds	r7, #12
 8001cbe:	46bd      	mov	sp, r7
 8001cc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cc4:	4770      	bx	lr
 8001cc6:	bf00      	nop
 8001cc8:	20000091 	.word	0x20000091
 8001ccc:	2000022e 	.word	0x2000022e

08001cd0 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001cd0:	b480      	push	{r7}
 8001cd2:	b083      	sub	sp, #12
 8001cd4:	af00      	add	r7, sp, #0
 8001cd6:	4603      	mov	r3, r0
 8001cd8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001cda:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001cde:	2b00      	cmp	r3, #0
 8001ce0:	db0b      	blt.n	8001cfa <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001ce2:	79fb      	ldrb	r3, [r7, #7]
 8001ce4:	f003 021f 	and.w	r2, r3, #31
 8001ce8:	4907      	ldr	r1, [pc, #28]	@ (8001d08 <__NVIC_EnableIRQ+0x38>)
 8001cea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001cee:	095b      	lsrs	r3, r3, #5
 8001cf0:	2001      	movs	r0, #1
 8001cf2:	fa00 f202 	lsl.w	r2, r0, r2
 8001cf6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8001cfa:	bf00      	nop
 8001cfc:	370c      	adds	r7, #12
 8001cfe:	46bd      	mov	sp, r7
 8001d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d04:	4770      	bx	lr
 8001d06:	bf00      	nop
 8001d08:	e000e100 	.word	0xe000e100

08001d0c <bufclear>:
uint32_t byteswritten, bytesread; /* File write/read counts */

extern CAN_RxHeaderTypeDef RxHeader;
extern uint8_t RxData[8];

void bufclear(void){
 8001d0c:	b480      	push	{r7}
 8001d0e:	b083      	sub	sp, #12
 8001d10:	af00      	add	r7, sp, #0
	for(int i = 0; i<8192; i++){
 8001d12:	2300      	movs	r3, #0
 8001d14:	607b      	str	r3, [r7, #4]
 8001d16:	e007      	b.n	8001d28 <bufclear+0x1c>
		buffer[i] = '\0';
 8001d18:	4a09      	ldr	r2, [pc, #36]	@ (8001d40 <bufclear+0x34>)
 8001d1a:	687b      	ldr	r3, [r7, #4]
 8001d1c:	4413      	add	r3, r2
 8001d1e:	2200      	movs	r2, #0
 8001d20:	701a      	strb	r2, [r3, #0]
	for(int i = 0; i<8192; i++){
 8001d22:	687b      	ldr	r3, [r7, #4]
 8001d24:	3301      	adds	r3, #1
 8001d26:	607b      	str	r3, [r7, #4]
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8001d2e:	dbf3      	blt.n	8001d18 <bufclear+0xc>
	}
}
 8001d30:	bf00      	nop
 8001d32:	bf00      	nop
 8001d34:	370c      	adds	r7, #12
 8001d36:	46bd      	mov	sp, r7
 8001d38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d3c:	4770      	bx	lr
 8001d3e:	bf00      	nop
 8001d40:	20000230 	.word	0x20000230

08001d44 <mount_sd_card>:

void mount_sd_card(void){
 8001d44:	b5b0      	push	{r4, r5, r7, lr}
 8001d46:	af00      	add	r7, sp, #0
  	 res = f_mount(&SDFatFS, (TCHAR const*)SDPath, 0);
 8001d48:	2200      	movs	r2, #0
 8001d4a:	4919      	ldr	r1, [pc, #100]	@ (8001db0 <mount_sd_card+0x6c>)
 8001d4c:	4819      	ldr	r0, [pc, #100]	@ (8001db4 <mount_sd_card+0x70>)
 8001d4e:	f00b fd1b 	bl	800d788 <f_mount>
 8001d52:	4603      	mov	r3, r0
 8001d54:	461a      	mov	r2, r3
 8001d56:	4b18      	ldr	r3, [pc, #96]	@ (8001db8 <mount_sd_card+0x74>)
 8001d58:	701a      	strb	r2, [r3, #0]
	           //Open file for writing (Create)
	 res = f_open(&SDFile, "CANData.txt",  FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_WRITE);
 8001d5a:	2232      	movs	r2, #50	@ 0x32
 8001d5c:	4917      	ldr	r1, [pc, #92]	@ (8001dbc <mount_sd_card+0x78>)
 8001d5e:	4818      	ldr	r0, [pc, #96]	@ (8001dc0 <mount_sd_card+0x7c>)
 8001d60:	f00b fd58 	bl	800d814 <f_open>
 8001d64:	4603      	mov	r3, r0
 8001d66:	461a      	mov	r2, r3
 8001d68:	4b13      	ldr	r3, [pc, #76]	@ (8001db8 <mount_sd_card+0x74>)
 8001d6a:	701a      	strb	r2, [r3, #0]
	 strcpy (buffer, "This file is for saving CAN Data\n");
 8001d6c:	4a15      	ldr	r2, [pc, #84]	@ (8001dc4 <mount_sd_card+0x80>)
 8001d6e:	4b16      	ldr	r3, [pc, #88]	@ (8001dc8 <mount_sd_card+0x84>)
 8001d70:	4614      	mov	r4, r2
 8001d72:	461d      	mov	r5, r3
 8001d74:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001d76:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001d78:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001d7a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001d7c:	682b      	ldr	r3, [r5, #0]
 8001d7e:	8023      	strh	r3, [r4, #0]
	 res = f_write(&SDFile, buffer, strlen((char *)buffer), (void *)&byteswritten);
 8001d80:	4810      	ldr	r0, [pc, #64]	@ (8001dc4 <mount_sd_card+0x80>)
 8001d82:	f7fe fa45 	bl	8000210 <strlen>
 8001d86:	4602      	mov	r2, r0
 8001d88:	4b10      	ldr	r3, [pc, #64]	@ (8001dcc <mount_sd_card+0x88>)
 8001d8a:	490e      	ldr	r1, [pc, #56]	@ (8001dc4 <mount_sd_card+0x80>)
 8001d8c:	480c      	ldr	r0, [pc, #48]	@ (8001dc0 <mount_sd_card+0x7c>)
 8001d8e:	f00b ff09 	bl	800dba4 <f_write>
 8001d92:	4603      	mov	r3, r0
 8001d94:	461a      	mov	r2, r3
 8001d96:	4b08      	ldr	r3, [pc, #32]	@ (8001db8 <mount_sd_card+0x74>)
 8001d98:	701a      	strb	r2, [r3, #0]
	 res = f_close(&SDFile);
 8001d9a:	4809      	ldr	r0, [pc, #36]	@ (8001dc0 <mount_sd_card+0x7c>)
 8001d9c:	f00c f914 	bl	800dfc8 <f_close>
 8001da0:	4603      	mov	r3, r0
 8001da2:	461a      	mov	r2, r3
 8001da4:	4b04      	ldr	r3, [pc, #16]	@ (8001db8 <mount_sd_card+0x74>)
 8001da6:	701a      	strb	r2, [r3, #0]
	 bufclear();
 8001da8:	f7ff ffb0 	bl	8001d0c <bufclear>
}
 8001dac:	bf00      	nop
 8001dae:	bdb0      	pop	{r4, r5, r7, pc}
 8001db0:	20002840 	.word	0x20002840
 8001db4:	20002844 	.word	0x20002844
 8001db8:	20002230 	.word	0x20002230
 8001dbc:	0800ebc4 	.word	0x0800ebc4
 8001dc0:	20003878 	.word	0x20003878
 8001dc4:	20000230 	.word	0x20000230
 8001dc8:	0800ebd0 	.word	0x0800ebd0
 8001dcc:	20002234 	.word	0x20002234

08001dd0 <write_to_sd>:

void write_to_sd(void){
 8001dd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001dd2:	b08d      	sub	sp, #52	@ 0x34
 8001dd4:	af08      	add	r7, sp, #32
  int TimeRightAfter_Get_From_Slave = HAL_GetTick();
 8001dd6:	f003 f941 	bl	800505c <HAL_GetTick>
 8001dda:	4603      	mov	r3, r0
 8001ddc:	60fb      	str	r3, [r7, #12]

  res = f_open(&SDFile, "CANData.txt",  FA_OPEN_APPEND | FA_WRITE);
 8001dde:	2232      	movs	r2, #50	@ 0x32
 8001de0:	4921      	ldr	r1, [pc, #132]	@ (8001e68 <write_to_sd+0x98>)
 8001de2:	4822      	ldr	r0, [pc, #136]	@ (8001e6c <write_to_sd+0x9c>)
 8001de4:	f00b fd16 	bl	800d814 <f_open>
 8001de8:	4603      	mov	r3, r0
 8001dea:	461a      	mov	r2, r3
 8001dec:	4b20      	ldr	r3, [pc, #128]	@ (8001e70 <write_to_sd+0xa0>)
 8001dee:	701a      	strb	r2, [r3, #0]
  sprintf(buffer,"%lX, %d, %d, %d, %d, %d, %d, %d, %d, %d \n ", RxHeader.StdId, RxData[0], RxData[1], RxData[2], RxData[3], RxData[4], RxData[5], RxData[6], RxData[7], TimeRightAfter_Get_From_Slave );
 8001df0:	4b20      	ldr	r3, [pc, #128]	@ (8001e74 <write_to_sd+0xa4>)
 8001df2:	681a      	ldr	r2, [r3, #0]
 8001df4:	4b20      	ldr	r3, [pc, #128]	@ (8001e78 <write_to_sd+0xa8>)
 8001df6:	781b      	ldrb	r3, [r3, #0]
 8001df8:	469c      	mov	ip, r3
 8001dfa:	4b1f      	ldr	r3, [pc, #124]	@ (8001e78 <write_to_sd+0xa8>)
 8001dfc:	785b      	ldrb	r3, [r3, #1]
 8001dfe:	4619      	mov	r1, r3
 8001e00:	4b1d      	ldr	r3, [pc, #116]	@ (8001e78 <write_to_sd+0xa8>)
 8001e02:	789b      	ldrb	r3, [r3, #2]
 8001e04:	4618      	mov	r0, r3
 8001e06:	4b1c      	ldr	r3, [pc, #112]	@ (8001e78 <write_to_sd+0xa8>)
 8001e08:	78db      	ldrb	r3, [r3, #3]
 8001e0a:	461c      	mov	r4, r3
 8001e0c:	4b1a      	ldr	r3, [pc, #104]	@ (8001e78 <write_to_sd+0xa8>)
 8001e0e:	791b      	ldrb	r3, [r3, #4]
 8001e10:	461d      	mov	r5, r3
 8001e12:	4b19      	ldr	r3, [pc, #100]	@ (8001e78 <write_to_sd+0xa8>)
 8001e14:	795b      	ldrb	r3, [r3, #5]
 8001e16:	461e      	mov	r6, r3
 8001e18:	4b17      	ldr	r3, [pc, #92]	@ (8001e78 <write_to_sd+0xa8>)
 8001e1a:	799b      	ldrb	r3, [r3, #6]
 8001e1c:	607b      	str	r3, [r7, #4]
 8001e1e:	4b16      	ldr	r3, [pc, #88]	@ (8001e78 <write_to_sd+0xa8>)
 8001e20:	79db      	ldrb	r3, [r3, #7]
 8001e22:	603b      	str	r3, [r7, #0]
 8001e24:	68fb      	ldr	r3, [r7, #12]
 8001e26:	9307      	str	r3, [sp, #28]
 8001e28:	683b      	ldr	r3, [r7, #0]
 8001e2a:	9306      	str	r3, [sp, #24]
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	9305      	str	r3, [sp, #20]
 8001e30:	9604      	str	r6, [sp, #16]
 8001e32:	9503      	str	r5, [sp, #12]
 8001e34:	9402      	str	r4, [sp, #8]
 8001e36:	9001      	str	r0, [sp, #4]
 8001e38:	9100      	str	r1, [sp, #0]
 8001e3a:	4663      	mov	r3, ip
 8001e3c:	490f      	ldr	r1, [pc, #60]	@ (8001e7c <write_to_sd+0xac>)
 8001e3e:	4810      	ldr	r0, [pc, #64]	@ (8001e80 <write_to_sd+0xb0>)
 8001e40:	f00c f948 	bl	800e0d4 <siprintf>
  f_write(&SDFile, buffer, strlen((char *)buffer), (void *)&byteswritten);
 8001e44:	480e      	ldr	r0, [pc, #56]	@ (8001e80 <write_to_sd+0xb0>)
 8001e46:	f7fe f9e3 	bl	8000210 <strlen>
 8001e4a:	4602      	mov	r2, r0
 8001e4c:	4b0d      	ldr	r3, [pc, #52]	@ (8001e84 <write_to_sd+0xb4>)
 8001e4e:	490c      	ldr	r1, [pc, #48]	@ (8001e80 <write_to_sd+0xb0>)
 8001e50:	4806      	ldr	r0, [pc, #24]	@ (8001e6c <write_to_sd+0x9c>)
 8001e52:	f00b fea7 	bl	800dba4 <f_write>

  f_close(&SDFile);
 8001e56:	4805      	ldr	r0, [pc, #20]	@ (8001e6c <write_to_sd+0x9c>)
 8001e58:	f00c f8b6 	bl	800dfc8 <f_close>
  bufclear();
 8001e5c:	f7ff ff56 	bl	8001d0c <bufclear>
}
 8001e60:	bf00      	nop
 8001e62:	3714      	adds	r7, #20
 8001e64:	46bd      	mov	sp, r7
 8001e66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e68:	0800ebc4 	.word	0x0800ebc4
 8001e6c:	20003878 	.word	0x20003878
 8001e70:	20002230 	.word	0x20002230
 8001e74:	20000138 	.word	0x20000138
 8001e78:	20000154 	.word	0x20000154
 8001e7c:	0800ebf4 	.word	0x0800ebf4
 8001e80:	20000230 	.word	0x20000230
 8001e84:	20002234 	.word	0x20002234

08001e88 <traction_control_enable>:
 *  - TC = switches & 0b100
 *  - Hv = switches & 0b10
 *  - Dr = switches & 0b1
 */

uint8_t traction_control_enable() {
 8001e88:	b580      	push	{r7, lr}
 8001e8a:	af00      	add	r7, sp, #0
	return HAL_GPIO_ReadPin(GPIOG, BUTTON_1_Pin);
 8001e8c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001e90:	4802      	ldr	r0, [pc, #8]	@ (8001e9c <traction_control_enable+0x14>)
 8001e92:	f005 f9c9 	bl	8007228 <HAL_GPIO_ReadPin>
 8001e96:	4603      	mov	r3, r0
}
 8001e98:	4618      	mov	r0, r3
 8001e9a:	bd80      	pop	{r7, pc}
 8001e9c:	40021800 	.word	0x40021800

08001ea0 <hv_switch>:

uint8_t display_debug_enabled() {
	return HAL_GPIO_ReadPin(GPIOG, BUTTON_2_Pin);
}

uint8_t hv_switch() {
 8001ea0:	b580      	push	{r7, lr}
 8001ea2:	af00      	add	r7, sp, #0
	return !HAL_GPIO_ReadPin(GPIOG, HV_REQUEST_Pin);
 8001ea4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001ea8:	4805      	ldr	r0, [pc, #20]	@ (8001ec0 <hv_switch+0x20>)
 8001eaa:	f005 f9bd 	bl	8007228 <HAL_GPIO_ReadPin>
 8001eae:	4603      	mov	r3, r0
 8001eb0:	2b00      	cmp	r3, #0
 8001eb2:	bf0c      	ite	eq
 8001eb4:	2301      	moveq	r3, #1
 8001eb6:	2300      	movne	r3, #0
 8001eb8:	b2db      	uxtb	r3, r3
}
 8001eba:	4618      	mov	r0, r3
 8001ebc:	bd80      	pop	{r7, pc}
 8001ebe:	bf00      	nop
 8001ec0:	40021800 	.word	0x40021800

08001ec4 <drive_switch>:

uint8_t drive_switch() {
 8001ec4:	b580      	push	{r7, lr}
 8001ec6:	af00      	add	r7, sp, #0
	return !HAL_GPIO_ReadPin(GPIOG, DRIVE_REQUEST_Pin);
 8001ec8:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001ecc:	4805      	ldr	r0, [pc, #20]	@ (8001ee4 <drive_switch+0x20>)
 8001ece:	f005 f9ab 	bl	8007228 <HAL_GPIO_ReadPin>
 8001ed2:	4603      	mov	r3, r0
 8001ed4:	2b00      	cmp	r3, #0
 8001ed6:	bf0c      	ite	eq
 8001ed8:	2301      	moveq	r3, #1
 8001eda:	2300      	movne	r3, #0
 8001edc:	b2db      	uxtb	r3, r3
}
 8001ede:	4618      	mov	r0, r3
 8001ee0:	bd80      	pop	{r7, pc}
 8001ee2:	bf00      	nop
 8001ee4:	40021800 	.word	0x40021800

08001ee8 <shutdown_closed>:


uint8_t shutdown_closed() {
 8001ee8:	b480      	push	{r7}
 8001eea:	af00      	add	r7, sp, #0
    if (estop_flags) return 0;
 8001eec:	4b0a      	ldr	r3, [pc, #40]	@ (8001f18 <shutdown_closed+0x30>)
 8001eee:	781b      	ldrb	r3, [r3, #0]
 8001ef0:	b2db      	uxtb	r3, r3
 8001ef2:	2b00      	cmp	r3, #0
 8001ef4:	d001      	beq.n	8001efa <shutdown_closed+0x12>
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	e009      	b.n	8001f0e <shutdown_closed+0x26>
    return (shutdown_flags & 0b00111000) == 0b00111000;
 8001efa:	4b08      	ldr	r3, [pc, #32]	@ (8001f1c <shutdown_closed+0x34>)
 8001efc:	781b      	ldrb	r3, [r3, #0]
 8001efe:	b2db      	uxtb	r3, r3
 8001f00:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8001f04:	2b38      	cmp	r3, #56	@ 0x38
 8001f06:	bf0c      	ite	eq
 8001f08:	2301      	moveq	r3, #1
 8001f0a:	2300      	movne	r3, #0
 8001f0c:	b2db      	uxtb	r3, r3
}
 8001f0e:	4618      	mov	r0, r3
 8001f10:	46bd      	mov	sp, r7
 8001f12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f16:	4770      	bx	lr
 8001f18:	20000118 	.word	0x20000118
 8001f1c:	20000000 	.word	0x20000000

08001f20 <HAL_TIM_PeriodElapsedCallback>:

// TEST

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001f20:	b580      	push	{r7, lr}
 8001f22:	b082      	sub	sp, #8
 8001f24:	af00      	add	r7, sp, #0
 8001f26:	6078      	str	r0, [r7, #4]
  // Check which version of the timer triggered this callback and toggle LED
  if (htim == &htim7)
 8001f28:	687b      	ldr	r3, [r7, #4]
 8001f2a:	4a0e      	ldr	r2, [pc, #56]	@ (8001f64 <HAL_TIM_PeriodElapsedCallback+0x44>)
 8001f2c:	4293      	cmp	r3, r2
 8001f2e:	d115      	bne.n	8001f5c <HAL_TIM_PeriodElapsedCallback+0x3c>
  {
	  if (state == PRECHARGING) {
 8001f30:	4b0d      	ldr	r3, [pc, #52]	@ (8001f68 <HAL_TIM_PeriodElapsedCallback+0x48>)
 8001f32:	781b      	ldrb	r3, [r3, #0]
 8001f34:	b2db      	uxtb	r3, r3
 8001f36:	2b01      	cmp	r3, #1
 8001f38:	d10d      	bne.n	8001f56 <HAL_TIM_PeriodElapsedCallback+0x36>
		  precharge_timer_ms += TMR1_PERIOD_MS;
 8001f3a:	4b0c      	ldr	r3, [pc, #48]	@ (8001f6c <HAL_TIM_PeriodElapsedCallback+0x4c>)
 8001f3c:	681b      	ldr	r3, [r3, #0]
 8001f3e:	3314      	adds	r3, #20
 8001f40:	4a0a      	ldr	r2, [pc, #40]	@ (8001f6c <HAL_TIM_PeriodElapsedCallback+0x4c>)
 8001f42:	6013      	str	r3, [r2, #0]
		  if (precharge_timer_ms > PRECHARGE_TIMEOUT_MS) {
 8001f44:	4b09      	ldr	r3, [pc, #36]	@ (8001f6c <HAL_TIM_PeriodElapsedCallback+0x4c>)
 8001f46:	681b      	ldr	r3, [r3, #0]
 8001f48:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 8001f4c:	d906      	bls.n	8001f5c <HAL_TIM_PeriodElapsedCallback+0x3c>
			  report_fault(CONSERVATIVE_TIMER_MAXED);
 8001f4e:	2002      	movs	r0, #2
 8001f50:	f7ff fe62 	bl	8001c18 <report_fault>
		  }
	  } else {
		  precharge_timer_ms = 0;
	  }
  }
}
 8001f54:	e002      	b.n	8001f5c <HAL_TIM_PeriodElapsedCallback+0x3c>
		  precharge_timer_ms = 0;
 8001f56:	4b05      	ldr	r3, [pc, #20]	@ (8001f6c <HAL_TIM_PeriodElapsedCallback+0x4c>)
 8001f58:	2200      	movs	r2, #0
 8001f5a:	601a      	str	r2, [r3, #0]
}
 8001f5c:	bf00      	nop
 8001f5e:	3708      	adds	r7, #8
 8001f60:	46bd      	mov	sp, r7
 8001f62:	bd80      	pop	{r7, pc}
 8001f64:	200025b4 	.word	0x200025b4
 8001f68:	20000091 	.word	0x20000091
 8001f6c:	200027e4 	.word	0x200027e4

08001f70 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001f70:	b580      	push	{r7, lr}
 8001f72:	b09c      	sub	sp, #112	@ 0x70
 8001f74:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001f76:	f003 f820 	bl	8004fba <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001f7a:	f000 f9c3 	bl	8002304 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001f7e:	f000 fdc3 	bl	8002b08 <MX_GPIO_Init>
  MX_DMA_Init();
 8001f82:	f000 fd29 	bl	80029d8 <MX_DMA_Init>
  MX_CAN2_Init();
 8001f86:	f000 fb59 	bl	800263c <MX_CAN2_Init>
  MX_SDMMC1_SD_Init();
 8001f8a:	f000 fb8d 	bl	80026a8 <MX_SDMMC1_SD_Init>
  MX_ADC1_Init();
 8001f8e:	f000 fa25 	bl	80023dc <MX_ADC1_Init>
  MX_ADC3_Init();
 8001f92:	f000 fa8d 	bl	80024b0 <MX_ADC3_Init>
  MX_TIM2_Init();
 8001f96:	f000 fba7 	bl	80026e8 <MX_TIM2_Init>
  MX_TIM4_Init();
 8001f9a:	f000 fbfb 	bl	8002794 <MX_TIM4_Init>
  MX_UART4_Init();
 8001f9e:	f000 fc8b 	bl	80028b8 <MX_UART4_Init>
  MX_UART7_Init();
 8001fa2:	f000 fcb9 	bl	8002918 <MX_UART7_Init>
  MX_FMC_Init();
 8001fa6:	f000 fd4d 	bl	8002a44 <MX_FMC_Init>
  MX_CAN1_Init();
 8001faa:	f000 fadf 	bl	800256c <MX_CAN1_Init>
  MX_USART3_UART_Init();
 8001fae:	f000 fce3 	bl	8002978 <MX_USART3_UART_Init>
  MX_TIM7_Init();
 8001fb2:	f000 fc47 	bl	8002844 <MX_TIM7_Init>
  MX_FATFS_Init();
 8001fb6:	f009 fbbb 	bl	800b730 <MX_FATFS_Init>
  /* USER CODE BEGIN 2 */

  init_sensors();
 8001fba:	f000 fe73 	bl	8002ca4 <init_sensors>

  Display_Init();
 8001fbe:	f7ff f9f5 	bl	80013ac <Display_Init>
  UG_FontSelect(&FONT_12X16);
 8001fc2:	48c1      	ldr	r0, [pc, #772]	@ (80022c8 <main+0x358>)
 8001fc4:	f002 f84e 	bl	8004064 <UG_FontSelect>
  UG_SetBackcolor(C_BLACK);
 8001fc8:	2000      	movs	r0, #0
 8001fca:	f002 fa33 	bl	8004434 <UG_SetBackcolor>
  UG_SetForecolor(C_YELLOW);
 8001fce:	f64f 70c0 	movw	r0, #65472	@ 0xffc0
 8001fd2:	f002 fa1d 	bl	8004410 <UG_SetForecolor>

  Display_CalibrateScreen();
 8001fd6:	f7ff fa13 	bl	8001400 <Display_CalibrateScreen>

  Display_DriveTemplate();
 8001fda:	f7ff fa3d 	bl	8001458 <Display_DriveTemplate>

  if (HAL_TIM_Base_Start_IT(&htim7) != HAL_OK) {
 8001fde:	48bb      	ldr	r0, [pc, #748]	@ (80022cc <main+0x35c>)
 8001fe0:	f007 fc24 	bl	800982c <HAL_TIM_Base_Start_IT>
 8001fe4:	4603      	mov	r3, r0
 8001fe6:	2b00      	cmp	r3, #0
 8001fe8:	d001      	beq.n	8001fee <main+0x7e>
      Error_Handler();
 8001fea:	f000 fe4f 	bl	8002c8c <Error_Handler>
  }


  mount_sd_card();
 8001fee:	f7ff fea9 	bl	8001d44 <mount_sd_card>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {

	  Display_Update();
 8001ff2:	f7ff fad1 	bl	8001598 <Display_Update>

	  write_to_sd();
 8001ff6:	f7ff feeb 	bl	8001dd0 <write_to_sd>

	  telem_send();
 8001ffa:	f001 fe4b 	bl	8003c94 <telem_send>

	  char sstr[100];
	  sprintf(sstr, "apps1: %d, apps2: %d, bse: %d      ", throttle1.percent, throttle2.percent, brake.percent);
 8001ffe:	4bb4      	ldr	r3, [pc, #720]	@ (80022d0 <main+0x360>)
 8002000:	891b      	ldrh	r3, [r3, #8]
 8002002:	461a      	mov	r2, r3
 8002004:	4bb3      	ldr	r3, [pc, #716]	@ (80022d4 <main+0x364>)
 8002006:	891b      	ldrh	r3, [r3, #8]
 8002008:	4619      	mov	r1, r3
 800200a:	4bb3      	ldr	r3, [pc, #716]	@ (80022d8 <main+0x368>)
 800200c:	891b      	ldrh	r3, [r3, #8]
 800200e:	1d38      	adds	r0, r7, #4
 8002010:	9300      	str	r3, [sp, #0]
 8002012:	460b      	mov	r3, r1
 8002014:	49b1      	ldr	r1, [pc, #708]	@ (80022dc <main+0x36c>)
 8002016:	f00c f85d 	bl	800e0d4 <siprintf>
	  UG_PutString(5, 250, sstr);
 800201a:	1d3b      	adds	r3, r7, #4
 800201c:	461a      	mov	r2, r3
 800201e:	21fa      	movs	r1, #250	@ 0xfa
 8002020:	2005      	movs	r0, #5
 8002022:	f002 f8c7 	bl	80041b4 <UG_PutString>

	  update_sensor_vals(&hadc1, &hadc3);
 8002026:	49ae      	ldr	r1, [pc, #696]	@ (80022e0 <main+0x370>)
 8002028:	48ae      	ldr	r0, [pc, #696]	@ (80022e4 <main+0x374>)
 800202a:	f000 fef3 	bl	8002e14 <update_sensor_vals>

	  can_tx_vcu_state(&hcan1);
 800202e:	48ae      	ldr	r0, [pc, #696]	@ (80022e8 <main+0x378>)
 8002030:	f7ff f8c6 	bl	80011c0 <can_tx_vcu_state>

	  can_tx_torque_request(&hcan1);
 8002034:	48ac      	ldr	r0, [pc, #688]	@ (80022e8 <main+0x378>)
 8002036:	f7ff f90b 	bl	8001250 <can_tx_torque_request>

	  // Traction control
	  if (traction_control_enable()) {
 800203a:	f7ff ff25 	bl	8001e88 <traction_control_enable>
 800203e:	4603      	mov	r3, r0
 8002040:	2b00      	cmp	r3, #0
 8002042:	d001      	beq.n	8002048 <main+0xd8>
		  traction_control_PID();
 8002044:	f001 fea8 	bl	8003d98 <traction_control_PID>
	  }

	  // If shutdown circuit opens in any state
	  if (!shutdown_closed()) {
 8002048:	f7ff ff4e 	bl	8001ee8 <shutdown_closed>
 800204c:	4603      	mov	r3, r0
 800204e:	2b00      	cmp	r3, #0
 8002050:	d102      	bne.n	8002058 <main+0xe8>
		  report_fault(SHUTDOWN_CIRCUIT_OPEN);
 8002052:	2007      	movs	r0, #7
 8002054:	f7ff fde0 	bl	8001c18 <report_fault>
//	  if (mc_fault) {
//		  report_fault(MC_FAULT);
//	  }


	  if (!init_fault_cleared) {
 8002058:	4ba4      	ldr	r3, [pc, #656]	@ (80022ec <main+0x37c>)
 800205a:	781b      	ldrb	r3, [r3, #0]
 800205c:	b2db      	uxtb	r3, r3
 800205e:	2b00      	cmp	r3, #0
 8002060:	d10a      	bne.n	8002078 <main+0x108>
		  can_clear_MC_fault(&hcan1);
 8002062:	48a1      	ldr	r0, [pc, #644]	@ (80022e8 <main+0x378>)
 8002064:	f7ff f968 	bl	8001338 <can_clear_MC_fault>
		  if (mc_fault_clear_success) {
 8002068:	4ba1      	ldr	r3, [pc, #644]	@ (80022f0 <main+0x380>)
 800206a:	781b      	ldrb	r3, [r3, #0]
 800206c:	b2db      	uxtb	r3, r3
 800206e:	2b00      	cmp	r3, #0
 8002070:	d002      	beq.n	8002078 <main+0x108>
			 init_fault_cleared = 1;
 8002072:	4b9e      	ldr	r3, [pc, #632]	@ (80022ec <main+0x37c>)
 8002074:	2201      	movs	r2, #1
 8002076:	701a      	strb	r2, [r3, #0]
//	  }
//	  else {
//		  Display_DriveTemplate();
//	  }

	  switch (state) {
 8002078:	4b9e      	ldr	r3, [pc, #632]	@ (80022f4 <main+0x384>)
 800207a:	781b      	ldrb	r3, [r3, #0]
 800207c:	b2db      	uxtb	r3, r3
 800207e:	2b05      	cmp	r3, #5
 8002080:	d8b7      	bhi.n	8001ff2 <main+0x82>
 8002082:	a201      	add	r2, pc, #4	@ (adr r2, 8002088 <main+0x118>)
 8002084:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002088:	080020c5 	.word	0x080020c5
 800208c:	08002105 	.word	0x08002105
 8002090:	08002141 	.word	0x08002141
 8002094:	08002167 	.word	0x08002167
 8002098:	0800218d 	.word	0x0800218d
 800209c:	080020a1 	.word	0x080020a1
		  case STARTUP:
			  run_calibration();
 80020a0:	f000 fea4 	bl	8002dec <run_calibration>

			  if (!hv_switch() && !drive_switch()) {
 80020a4:	f7ff fefc 	bl	8001ea0 <hv_switch>
 80020a8:	4603      	mov	r3, r0
 80020aa:	2b00      	cmp	r3, #0
 80020ac:	f040 8101 	bne.w	80022b2 <main+0x342>
 80020b0:	f7ff ff08 	bl	8001ec4 <drive_switch>
 80020b4:	4603      	mov	r3, r0
 80020b6:	2b00      	cmp	r3, #0
 80020b8:	f040 80fb 	bne.w	80022b2 <main+0x342>
				  change_state(LV);
 80020bc:	2000      	movs	r0, #0
 80020be:	f7ff fd8d 	bl	8001bdc <change_state>
			  }
			  break;
 80020c2:	e0f6      	b.n	80022b2 <main+0x342>
		  case LV:
			  run_calibration();
 80020c4:	f000 fe92 	bl	8002dec <run_calibration>

			  if (drive_switch()) {
 80020c8:	f7ff fefc 	bl	8001ec4 <drive_switch>
 80020cc:	4603      	mov	r3, r0
 80020ce:	2b00      	cmp	r3, #0
 80020d0:	d003      	beq.n	80020da <main+0x16a>
				  // Drive switch should not be enabled during LV
				  report_fault(DRIVE_REQUEST_FROM_LV);
 80020d2:	2001      	movs	r0, #1
 80020d4:	f7ff fda0 	bl	8001c18 <report_fault>
				  break;
 80020d8:	e0f5      	b.n	80022c6 <main+0x356>
			  }

			  if (hv_switch()) {
 80020da:	f7ff fee1 	bl	8001ea0 <hv_switch>
 80020de:	4603      	mov	r3, r0
 80020e0:	2b00      	cmp	r3, #0
 80020e2:	f000 80e8 	beq.w	80022b6 <main+0x346>
				  // HV switch was flipped
				  // check if APPS pedal was calibrated
				  if (sensors_calibrated()) {
 80020e6:	f000 ff61 	bl	8002fac <sensors_calibrated>
 80020ea:	4603      	mov	r3, r0
 80020ec:	2b00      	cmp	r3, #0
 80020ee:	d005      	beq.n	80020fc <main+0x18c>
					  // Start charging the car to high voltage state
					  add_apps_deadzone();
 80020f0:	f001 f81a 	bl	8003128 <add_apps_deadzone>
					  change_state(PRECHARGING);
 80020f4:	2001      	movs	r0, #1
 80020f6:	f7ff fd71 	bl	8001bdc <change_state>
				  } else {
					  report_fault(UNCALIBRATED);
				  }
			  }

			  break;
 80020fa:	e0dc      	b.n	80022b6 <main+0x346>
					  report_fault(UNCALIBRATED);
 80020fc:	2008      	movs	r0, #8
 80020fe:	f7ff fd8b 	bl	8001c18 <report_fault>
			  break;
 8002102:	e0d8      	b.n	80022b6 <main+0x346>
		  case PRECHARGING:
//			  if (capacitor_volt > PRECHARGE_THRESHOLD) {

			  // if main AIRs closed
			  if ((shutdown_flags & 0b110) == 0b110) {
 8002104:	4b7c      	ldr	r3, [pc, #496]	@ (80022f8 <main+0x388>)
 8002106:	781b      	ldrb	r3, [r3, #0]
 8002108:	b2db      	uxtb	r3, r3
 800210a:	f003 0306 	and.w	r3, r3, #6
 800210e:	2b06      	cmp	r3, #6
 8002110:	d103      	bne.n	800211a <main+0x1aa>
				  // Finished charging to HV on time
				  change_state(HV_ENABLED);
 8002112:	2002      	movs	r0, #2
 8002114:	f7ff fd62 	bl	8001bdc <change_state>
				  break;
 8002118:	e0d5      	b.n	80022c6 <main+0x356>
			  }
			  if (!hv_switch()) {
 800211a:	f7ff fec1 	bl	8001ea0 <hv_switch>
 800211e:	4603      	mov	r3, r0
 8002120:	2b00      	cmp	r3, #0
 8002122:	d103      	bne.n	800212c <main+0x1bc>
				  // Driver flipped off HV switch
				  change_state(LV);
 8002124:	2000      	movs	r0, #0
 8002126:	f7ff fd59 	bl	8001bdc <change_state>
				  break;
 800212a:	e0cc      	b.n	80022c6 <main+0x356>
			  }
			  if (drive_switch()) {
 800212c:	f7ff feca 	bl	8001ec4 <drive_switch>
 8002130:	4603      	mov	r3, r0
 8002132:	2b00      	cmp	r3, #0
 8002134:	f000 80c1 	beq.w	80022ba <main+0x34a>
				  // Drive switch should not be enabled during PRECHARGING
				  report_fault(DRIVE_REQUEST_FROM_LV);
 8002138:	2001      	movs	r0, #1
 800213a:	f7ff fd6d 	bl	8001c18 <report_fault>
				  break;
 800213e:	e0c2      	b.n	80022c6 <main+0x356>
			  }
			  break;
		  case HV_ENABLED:
			  if (!hv_switch()) {// || capacitor_volt < PRECHARGE_THRESHOLD) { // don't really need volt check by rules
 8002140:	f7ff feae 	bl	8001ea0 <hv_switch>
 8002144:	4603      	mov	r3, r0
 8002146:	2b00      	cmp	r3, #0
 8002148:	d103      	bne.n	8002152 <main+0x1e2>
				  // Driver flipped off HV switch
				  change_state(LV);
 800214a:	2000      	movs	r0, #0
 800214c:	f7ff fd46 	bl	8001bdc <change_state>
				  break;
 8002150:	e0b9      	b.n	80022c6 <main+0x356>
			  }

			  if (drive_switch()) {
 8002152:	f7ff feb7 	bl	8001ec4 <drive_switch>
 8002156:	4603      	mov	r3, r0
 8002158:	2b00      	cmp	r3, #0
 800215a:	f000 80b0 	beq.w	80022be <main+0x34e>
				  // Driver flipped on drive switch
				  // Need to press on pedal at the same time to go to drive

//				  if (brake_mashed()) {
					  change_state(DRIVE);
 800215e:	2003      	movs	r0, #3
 8002160:	f7ff fd3c 	bl	8001bdc <change_state>
//					  // Driver didn't press pedal
//					  report_fault(BRAKE_NOT_PRESSED);
//				  }
			  }

			  break;
 8002164:	e0ab      	b.n	80022be <main+0x34e>
		  case DRIVE:
			  if (!drive_switch()) {
 8002166:	f7ff fead 	bl	8001ec4 <drive_switch>
 800216a:	4603      	mov	r3, r0
 800216c:	2b00      	cmp	r3, #0
 800216e:	d103      	bne.n	8002178 <main+0x208>
				  // Drive switch was flipped off
				  // Revert to HV
				  change_state(HV_ENABLED);
 8002170:	2002      	movs	r0, #2
 8002172:	f7ff fd33 	bl	8001bdc <change_state>
				 break;
 8002176:	e0a6      	b.n	80022c6 <main+0x356>
			  }

			  if (!hv_switch()) {// || capacitor_volt < PRECHARGE_THRESHOLD) { // don't really need volt check by rules || capacitor_volt < PRECHARGE_THRESHOLD) {
 8002178:	f7ff fe92 	bl	8001ea0 <hv_switch>
 800217c:	4603      	mov	r3, r0
 800217e:	2b00      	cmp	r3, #0
 8002180:	f040 809f 	bne.w	80022c2 <main+0x352>
				  // HV switched flipped off, so can't drive
				  // or capacitor dropped below threshold
				  report_fault(HV_DISABLED_WHILE_DRIVING);
 8002184:	2004      	movs	r0, #4
 8002186:	f7ff fd47 	bl	8001c18 <report_fault>
				  break;
 800218a:	e09c      	b.n	80022c6 <main+0x356>
//				  report_fault(BRAKE_IMPLAUSIBLE);
//			  }

			  break;
		  case FAULT:
			  switch (error) {
 800218c:	4b5b      	ldr	r3, [pc, #364]	@ (80022fc <main+0x38c>)
 800218e:	781b      	ldrb	r3, [r3, #0]
 8002190:	b2db      	uxtb	r3, r3
 8002192:	3b03      	subs	r3, #3
 8002194:	2b06      	cmp	r3, #6
 8002196:	d872      	bhi.n	800227e <main+0x30e>
 8002198:	a201      	add	r2, pc, #4	@ (adr r2, 80021a0 <main+0x230>)
 800219a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800219e:	bf00      	nop
 80021a0:	080021bd 	.word	0x080021bd
 80021a4:	0800227f 	.word	0x0800227f
 80021a8:	080021df 	.word	0x080021df
 80021ac:	08002207 	.word	0x08002207
 80021b0:	0800226d 	.word	0x0800226d
 80021b4:	0800227f 	.word	0x0800227f
 80021b8:	0800229b 	.word	0x0800229b
				  case BRAKE_NOT_PRESSED:
					  if (!hv_switch())
 80021bc:	f7ff fe70 	bl	8001ea0 <hv_switch>
 80021c0:	4603      	mov	r3, r0
 80021c2:	2b00      	cmp	r3, #0
 80021c4:	d102      	bne.n	80021cc <main+0x25c>
						  change_state(LV);
 80021c6:	2000      	movs	r0, #0
 80021c8:	f7ff fd08 	bl	8001bdc <change_state>

					  if (!drive_switch()) {
 80021cc:	f7ff fe7a 	bl	8001ec4 <drive_switch>
 80021d0:	4603      	mov	r3, r0
 80021d2:	2b00      	cmp	r3, #0
 80021d4:	d163      	bne.n	800229e <main+0x32e>
						  // reset drive switch and try again
						  change_state(HV_ENABLED);
 80021d6:	2002      	movs	r0, #2
 80021d8:	f7ff fd00 	bl	8001bdc <change_state>
					  }
					  break;
 80021dc:	e05f      	b.n	800229e <main+0x32e>
				  case SENSOR_DISCREPANCY:
					  // stop power to motors if discrepancy persists for >100ms
					  // see rule T.4.2.5 in FSAE 2022 rulebook
					  if (!drive_switch()) {
 80021de:	f7ff fe71 	bl	8001ec4 <drive_switch>
 80021e2:	4603      	mov	r3, r0
 80021e4:	2b00      	cmp	r3, #0
 80021e6:	d105      	bne.n	80021f4 <main+0x284>
						  discrepancy_timer_ms = 0;
 80021e8:	4b45      	ldr	r3, [pc, #276]	@ (8002300 <main+0x390>)
 80021ea:	2200      	movs	r2, #0
 80021ec:	601a      	str	r2, [r3, #0]
						  change_state(HV_ENABLED);
 80021ee:	2002      	movs	r0, #2
 80021f0:	f7ff fcf4 	bl	8001bdc <change_state>
					  }

					  if (!hv_switch())
 80021f4:	f7ff fe54 	bl	8001ea0 <hv_switch>
 80021f8:	4603      	mov	r3, r0
 80021fa:	2b00      	cmp	r3, #0
 80021fc:	d151      	bne.n	80022a2 <main+0x332>
						  report_fault(HV_DISABLED_WHILE_DRIVING);
 80021fe:	2004      	movs	r0, #4
 8002200:	f7ff fd0a 	bl	8001c18 <report_fault>

					  break;
 8002204:	e04d      	b.n	80022a2 <main+0x332>
				  case BRAKE_IMPLAUSIBLE:
					  if (!brake_implausible() && hv_switch() && drive_switch())
 8002206:	f000 ff15 	bl	8003034 <brake_implausible>
 800220a:	4603      	mov	r3, r0
 800220c:	f083 0301 	eor.w	r3, r3, #1
 8002210:	b2db      	uxtb	r3, r3
 8002212:	2b00      	cmp	r3, #0
 8002214:	d00c      	beq.n	8002230 <main+0x2c0>
 8002216:	f7ff fe43 	bl	8001ea0 <hv_switch>
 800221a:	4603      	mov	r3, r0
 800221c:	2b00      	cmp	r3, #0
 800221e:	d007      	beq.n	8002230 <main+0x2c0>
 8002220:	f7ff fe50 	bl	8001ec4 <drive_switch>
 8002224:	4603      	mov	r3, r0
 8002226:	2b00      	cmp	r3, #0
 8002228:	d002      	beq.n	8002230 <main+0x2c0>
						  change_state(DRIVE);
 800222a:	2003      	movs	r0, #3
 800222c:	f7ff fcd6 	bl	8001bdc <change_state>

					  if (!hv_switch() && !drive_switch())
 8002230:	f7ff fe36 	bl	8001ea0 <hv_switch>
 8002234:	4603      	mov	r3, r0
 8002236:	2b00      	cmp	r3, #0
 8002238:	d107      	bne.n	800224a <main+0x2da>
 800223a:	f7ff fe43 	bl	8001ec4 <drive_switch>
 800223e:	4603      	mov	r3, r0
 8002240:	2b00      	cmp	r3, #0
 8002242:	d102      	bne.n	800224a <main+0x2da>
						  change_state(LV);
 8002244:	2000      	movs	r0, #0
 8002246:	f7ff fcc9 	bl	8001bdc <change_state>

					  if (!drive_switch())
 800224a:	f7ff fe3b 	bl	8001ec4 <drive_switch>
 800224e:	4603      	mov	r3, r0
 8002250:	2b00      	cmp	r3, #0
 8002252:	d102      	bne.n	800225a <main+0x2ea>
						  change_state(HV_ENABLED);
 8002254:	2002      	movs	r0, #2
 8002256:	f7ff fcc1 	bl	8001bdc <change_state>

					  if (!hv_switch())
 800225a:	f7ff fe21 	bl	8001ea0 <hv_switch>
 800225e:	4603      	mov	r3, r0
 8002260:	2b00      	cmp	r3, #0
 8002262:	d120      	bne.n	80022a6 <main+0x336>
						  report_fault(HV_DISABLED_WHILE_DRIVING);
 8002264:	2004      	movs	r0, #4
 8002266:	f7ff fcd7 	bl	8001c18 <report_fault>

					  break;
 800226a:	e01c      	b.n	80022a6 <main+0x336>
				  case SHUTDOWN_CIRCUIT_OPEN:
					  if (shutdown_closed()) {
 800226c:	f7ff fe3c 	bl	8001ee8 <shutdown_closed>
 8002270:	4603      	mov	r3, r0
 8002272:	2b00      	cmp	r3, #0
 8002274:	d019      	beq.n	80022aa <main+0x33a>
						  change_state(LV);
 8002276:	2000      	movs	r0, #0
 8002278:	f7ff fcb0 	bl	8001bdc <change_state>
					  }
					  break;
 800227c:	e015      	b.n	80022aa <main+0x33a>
 //					  if (!HAL_GPIO_ReadPin(BSPD_LATCH) {
 //						  change_state(LV);
 //			  		  }
					  break;
				  default:  //UNCALIBRATED, DRIVE_REQUEST_FROM_LV, CONSERVATIVE_TIMER_MAXED, HV_DISABLED_WHILE_DRIVING, MC FAULT
					  if (!hv_switch() && !drive_switch()) {
 800227e:	f7ff fe0f 	bl	8001ea0 <hv_switch>
 8002282:	4603      	mov	r3, r0
 8002284:	2b00      	cmp	r3, #0
 8002286:	d112      	bne.n	80022ae <main+0x33e>
 8002288:	f7ff fe1c 	bl	8001ec4 <drive_switch>
 800228c:	4603      	mov	r3, r0
 800228e:	2b00      	cmp	r3, #0
 8002290:	d10d      	bne.n	80022ae <main+0x33e>
						  change_state(LV);
 8002292:	2000      	movs	r0, #0
 8002294:	f7ff fca2 	bl	8001bdc <change_state>
					  }
					  break;
 8002298:	e009      	b.n	80022ae <main+0x33e>
					  break;
 800229a:	bf00      	nop
 800229c:	e013      	b.n	80022c6 <main+0x356>
					  break;
 800229e:	bf00      	nop
 80022a0:	e011      	b.n	80022c6 <main+0x356>
					  break;
 80022a2:	bf00      	nop
 80022a4:	e00f      	b.n	80022c6 <main+0x356>
					  break;
 80022a6:	bf00      	nop
 80022a8:	e00d      	b.n	80022c6 <main+0x356>
					  break;
 80022aa:	bf00      	nop
 80022ac:	e00b      	b.n	80022c6 <main+0x356>
					  break;
 80022ae:	bf00      	nop
			  }
			  break;
 80022b0:	e009      	b.n	80022c6 <main+0x356>
			  break;
 80022b2:	bf00      	nop
 80022b4:	e69d      	b.n	8001ff2 <main+0x82>
			  break;
 80022b6:	bf00      	nop
 80022b8:	e69b      	b.n	8001ff2 <main+0x82>
			  break;
 80022ba:	bf00      	nop
 80022bc:	e699      	b.n	8001ff2 <main+0x82>
			  break;
 80022be:	bf00      	nop
 80022c0:	e697      	b.n	8001ff2 <main+0x82>
			  break;
 80022c2:	bf00      	nop
 80022c4:	e695      	b.n	8001ff2 <main+0x82>
  {
 80022c6:	e694      	b.n	8001ff2 <main+0x82>
 80022c8:	0801e0b4 	.word	0x0801e0b4
 80022cc:	200025b4 	.word	0x200025b4
 80022d0:	200027ec 	.word	0x200027ec
 80022d4:	200027f8 	.word	0x200027f8
 80022d8:	20002804 	.word	0x20002804
 80022dc:	0800ec20 	.word	0x0800ec20
 80022e0:	20002280 	.word	0x20002280
 80022e4:	20002238 	.word	0x20002238
 80022e8:	20002388 	.word	0x20002388
 80022ec:	200027e8 	.word	0x200027e8
 80022f0:	2000011e 	.word	0x2000011e
 80022f4:	20000091 	.word	0x20000091
 80022f8:	20000000 	.word	0x20000000
 80022fc:	2000022e 	.word	0x2000022e
 8002300:	20002810 	.word	0x20002810

08002304 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002304:	b580      	push	{r7, lr}
 8002306:	b094      	sub	sp, #80	@ 0x50
 8002308:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800230a:	f107 0320 	add.w	r3, r7, #32
 800230e:	2230      	movs	r2, #48	@ 0x30
 8002310:	2100      	movs	r1, #0
 8002312:	4618      	mov	r0, r3
 8002314:	f00b fefe 	bl	800e114 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002318:	f107 030c 	add.w	r3, r7, #12
 800231c:	2200      	movs	r2, #0
 800231e:	601a      	str	r2, [r3, #0]
 8002320:	605a      	str	r2, [r3, #4]
 8002322:	609a      	str	r2, [r3, #8]
 8002324:	60da      	str	r2, [r3, #12]
 8002326:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002328:	4b2a      	ldr	r3, [pc, #168]	@ (80023d4 <SystemClock_Config+0xd0>)
 800232a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800232c:	4a29      	ldr	r2, [pc, #164]	@ (80023d4 <SystemClock_Config+0xd0>)
 800232e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002332:	6413      	str	r3, [r2, #64]	@ 0x40
 8002334:	4b27      	ldr	r3, [pc, #156]	@ (80023d4 <SystemClock_Config+0xd0>)
 8002336:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002338:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800233c:	60bb      	str	r3, [r7, #8]
 800233e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002340:	4b25      	ldr	r3, [pc, #148]	@ (80023d8 <SystemClock_Config+0xd4>)
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	4a24      	ldr	r2, [pc, #144]	@ (80023d8 <SystemClock_Config+0xd4>)
 8002346:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800234a:	6013      	str	r3, [r2, #0]
 800234c:	4b22      	ldr	r3, [pc, #136]	@ (80023d8 <SystemClock_Config+0xd4>)
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8002354:	607b      	str	r3, [r7, #4]
 8002356:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8002358:	2301      	movs	r3, #1
 800235a:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800235c:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8002360:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002362:	2302      	movs	r3, #2
 8002364:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8002366:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 800236a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 800236c:	2308      	movs	r3, #8
 800236e:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 216;
 8002370:	23d8      	movs	r3, #216	@ 0xd8
 8002372:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8002374:	2302      	movs	r3, #2
 8002376:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 9;
 8002378:	2309      	movs	r3, #9
 800237a:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800237c:	f107 0320 	add.w	r3, r7, #32
 8002380:	4618      	mov	r0, r3
 8002382:	f004 ffd3 	bl	800732c <HAL_RCC_OscConfig>
 8002386:	4603      	mov	r3, r0
 8002388:	2b00      	cmp	r3, #0
 800238a:	d001      	beq.n	8002390 <SystemClock_Config+0x8c>
  {
    Error_Handler();
 800238c:	f000 fc7e 	bl	8002c8c <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8002390:	f004 ff7c 	bl	800728c <HAL_PWREx_EnableOverDrive>
 8002394:	4603      	mov	r3, r0
 8002396:	2b00      	cmp	r3, #0
 8002398:	d001      	beq.n	800239e <SystemClock_Config+0x9a>
  {
    Error_Handler();
 800239a:	f000 fc77 	bl	8002c8c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800239e:	230f      	movs	r3, #15
 80023a0:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80023a2:	2302      	movs	r3, #2
 80023a4:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80023a6:	2300      	movs	r3, #0
 80023a8:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80023aa:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80023ae:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80023b0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80023b4:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80023b6:	f107 030c 	add.w	r3, r7, #12
 80023ba:	2107      	movs	r1, #7
 80023bc:	4618      	mov	r0, r3
 80023be:	f005 fa59 	bl	8007874 <HAL_RCC_ClockConfig>
 80023c2:	4603      	mov	r3, r0
 80023c4:	2b00      	cmp	r3, #0
 80023c6:	d001      	beq.n	80023cc <SystemClock_Config+0xc8>
  {
    Error_Handler();
 80023c8:	f000 fc60 	bl	8002c8c <Error_Handler>
  }
}
 80023cc:	bf00      	nop
 80023ce:	3750      	adds	r7, #80	@ 0x50
 80023d0:	46bd      	mov	sp, r7
 80023d2:	bd80      	pop	{r7, pc}
 80023d4:	40023800 	.word	0x40023800
 80023d8:	40007000 	.word	0x40007000

080023dc <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80023dc:	b580      	push	{r7, lr}
 80023de:	b084      	sub	sp, #16
 80023e0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80023e2:	463b      	mov	r3, r7
 80023e4:	2200      	movs	r2, #0
 80023e6:	601a      	str	r2, [r3, #0]
 80023e8:	605a      	str	r2, [r3, #4]
 80023ea:	609a      	str	r2, [r3, #8]
 80023ec:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80023ee:	4b2d      	ldr	r3, [pc, #180]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 80023f0:	4a2d      	ldr	r2, [pc, #180]	@ (80024a8 <MX_ADC1_Init+0xcc>)
 80023f2:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80023f4:	4b2b      	ldr	r3, [pc, #172]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 80023f6:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80023fa:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80023fc:	4b29      	ldr	r3, [pc, #164]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 80023fe:	2200      	movs	r2, #0
 8002400:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 8002402:	4b28      	ldr	r3, [pc, #160]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 8002404:	2201      	movs	r2, #1
 8002406:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8002408:	4b26      	ldr	r3, [pc, #152]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 800240a:	2200      	movs	r2, #0
 800240c:	619a      	str	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800240e:	4b25      	ldr	r3, [pc, #148]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 8002410:	2200      	movs	r2, #0
 8002412:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8002416:	4b23      	ldr	r3, [pc, #140]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 8002418:	2200      	movs	r2, #0
 800241a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800241c:	4b21      	ldr	r3, [pc, #132]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 800241e:	4a23      	ldr	r2, [pc, #140]	@ (80024ac <MX_ADC1_Init+0xd0>)
 8002420:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8002422:	4b20      	ldr	r3, [pc, #128]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 8002424:	2200      	movs	r2, #0
 8002426:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 3;
 8002428:	4b1e      	ldr	r3, [pc, #120]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 800242a:	2203      	movs	r2, #3
 800242c:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800242e:	4b1d      	ldr	r3, [pc, #116]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 8002430:	2200      	movs	r2, #0
 8002432:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8002436:	4b1b      	ldr	r3, [pc, #108]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 8002438:	2201      	movs	r2, #1
 800243a:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800243c:	4819      	ldr	r0, [pc, #100]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 800243e:	f002 fe3d 	bl	80050bc <HAL_ADC_Init>
 8002442:	4603      	mov	r3, r0
 8002444:	2b00      	cmp	r3, #0
 8002446:	d001      	beq.n	800244c <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8002448:	f000 fc20 	bl	8002c8c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_10;
 800244c:	230a      	movs	r3, #10
 800244e:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8002450:	2301      	movs	r3, #1
 8002452:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8002454:	2300      	movs	r3, #0
 8002456:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8002458:	463b      	mov	r3, r7
 800245a:	4619      	mov	r1, r3
 800245c:	4811      	ldr	r0, [pc, #68]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 800245e:	f002 ffd7 	bl	8005410 <HAL_ADC_ConfigChannel>
 8002462:	4603      	mov	r3, r0
 8002464:	2b00      	cmp	r3, #0
 8002466:	d001      	beq.n	800246c <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8002468:	f000 fc10 	bl	8002c8c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = ADC_REGULAR_RANK_2;
 800246c:	2302      	movs	r3, #2
 800246e:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8002470:	463b      	mov	r3, r7
 8002472:	4619      	mov	r1, r3
 8002474:	480b      	ldr	r0, [pc, #44]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 8002476:	f002 ffcb 	bl	8005410 <HAL_ADC_ConfigChannel>
 800247a:	4603      	mov	r3, r0
 800247c:	2b00      	cmp	r3, #0
 800247e:	d001      	beq.n	8002484 <MX_ADC1_Init+0xa8>
  {
    Error_Handler();
 8002480:	f000 fc04 	bl	8002c8c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = ADC_REGULAR_RANK_3;
 8002484:	2303      	movs	r3, #3
 8002486:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8002488:	463b      	mov	r3, r7
 800248a:	4619      	mov	r1, r3
 800248c:	4805      	ldr	r0, [pc, #20]	@ (80024a4 <MX_ADC1_Init+0xc8>)
 800248e:	f002 ffbf 	bl	8005410 <HAL_ADC_ConfigChannel>
 8002492:	4603      	mov	r3, r0
 8002494:	2b00      	cmp	r3, #0
 8002496:	d001      	beq.n	800249c <MX_ADC1_Init+0xc0>
  {
    Error_Handler();
 8002498:	f000 fbf8 	bl	8002c8c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */
//
  /* USER CODE END ADC1_Init 2 */

}
 800249c:	bf00      	nop
 800249e:	3710      	adds	r7, #16
 80024a0:	46bd      	mov	sp, r7
 80024a2:	bd80      	pop	{r7, pc}
 80024a4:	20002238 	.word	0x20002238
 80024a8:	40012000 	.word	0x40012000
 80024ac:	0f000001 	.word	0x0f000001

080024b0 <MX_ADC3_Init>:
  * @brief ADC3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC3_Init(void)
{
 80024b0:	b580      	push	{r7, lr}
 80024b2:	b084      	sub	sp, #16
 80024b4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC3_Init 0 */

  /* USER CODE END ADC3_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80024b6:	463b      	mov	r3, r7
 80024b8:	2200      	movs	r2, #0
 80024ba:	601a      	str	r2, [r3, #0]
 80024bc:	605a      	str	r2, [r3, #4]
 80024be:	609a      	str	r2, [r3, #8]
 80024c0:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC3_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc3.Instance = ADC3;
 80024c2:	4b27      	ldr	r3, [pc, #156]	@ (8002560 <MX_ADC3_Init+0xb0>)
 80024c4:	4a27      	ldr	r2, [pc, #156]	@ (8002564 <MX_ADC3_Init+0xb4>)
 80024c6:	601a      	str	r2, [r3, #0]
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80024c8:	4b25      	ldr	r3, [pc, #148]	@ (8002560 <MX_ADC3_Init+0xb0>)
 80024ca:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80024ce:	605a      	str	r2, [r3, #4]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 80024d0:	4b23      	ldr	r3, [pc, #140]	@ (8002560 <MX_ADC3_Init+0xb0>)
 80024d2:	2200      	movs	r2, #0
 80024d4:	609a      	str	r2, [r3, #8]
  hadc3.Init.ScanConvMode = ADC_SCAN_ENABLE;
 80024d6:	4b22      	ldr	r3, [pc, #136]	@ (8002560 <MX_ADC3_Init+0xb0>)
 80024d8:	2201      	movs	r2, #1
 80024da:	611a      	str	r2, [r3, #16]
  hadc3.Init.ContinuousConvMode = DISABLE;
 80024dc:	4b20      	ldr	r3, [pc, #128]	@ (8002560 <MX_ADC3_Init+0xb0>)
 80024de:	2200      	movs	r2, #0
 80024e0:	619a      	str	r2, [r3, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 80024e2:	4b1f      	ldr	r3, [pc, #124]	@ (8002560 <MX_ADC3_Init+0xb0>)
 80024e4:	2200      	movs	r2, #0
 80024e6:	f883 2020 	strb.w	r2, [r3, #32]
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80024ea:	4b1d      	ldr	r3, [pc, #116]	@ (8002560 <MX_ADC3_Init+0xb0>)
 80024ec:	2200      	movs	r2, #0
 80024ee:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80024f0:	4b1b      	ldr	r3, [pc, #108]	@ (8002560 <MX_ADC3_Init+0xb0>)
 80024f2:	4a1d      	ldr	r2, [pc, #116]	@ (8002568 <MX_ADC3_Init+0xb8>)
 80024f4:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80024f6:	4b1a      	ldr	r3, [pc, #104]	@ (8002560 <MX_ADC3_Init+0xb0>)
 80024f8:	2200      	movs	r2, #0
 80024fa:	60da      	str	r2, [r3, #12]
  hadc3.Init.NbrOfConversion = 2;
 80024fc:	4b18      	ldr	r3, [pc, #96]	@ (8002560 <MX_ADC3_Init+0xb0>)
 80024fe:	2202      	movs	r2, #2
 8002500:	61da      	str	r2, [r3, #28]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 8002502:	4b17      	ldr	r3, [pc, #92]	@ (8002560 <MX_ADC3_Init+0xb0>)
 8002504:	2200      	movs	r2, #0
 8002506:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800250a:	4b15      	ldr	r3, [pc, #84]	@ (8002560 <MX_ADC3_Init+0xb0>)
 800250c:	2201      	movs	r2, #1
 800250e:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8002510:	4813      	ldr	r0, [pc, #76]	@ (8002560 <MX_ADC3_Init+0xb0>)
 8002512:	f002 fdd3 	bl	80050bc <HAL_ADC_Init>
 8002516:	4603      	mov	r3, r0
 8002518:	2b00      	cmp	r3, #0
 800251a:	d001      	beq.n	8002520 <MX_ADC3_Init+0x70>
  {
    Error_Handler();
 800251c:	f000 fbb6 	bl	8002c8c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_8;
 8002520:	2308      	movs	r3, #8
 8002522:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8002524:	2301      	movs	r3, #1
 8002526:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8002528:	2300      	movs	r3, #0
 800252a:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 800252c:	463b      	mov	r3, r7
 800252e:	4619      	mov	r1, r3
 8002530:	480b      	ldr	r0, [pc, #44]	@ (8002560 <MX_ADC3_Init+0xb0>)
 8002532:	f002 ff6d 	bl	8005410 <HAL_ADC_ConfigChannel>
 8002536:	4603      	mov	r3, r0
 8002538:	2b00      	cmp	r3, #0
 800253a:	d001      	beq.n	8002540 <MX_ADC3_Init+0x90>
  {
    Error_Handler();
 800253c:	f000 fba6 	bl	8002c8c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = ADC_REGULAR_RANK_2;
 8002540:	2302      	movs	r3, #2
 8002542:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8002544:	463b      	mov	r3, r7
 8002546:	4619      	mov	r1, r3
 8002548:	4805      	ldr	r0, [pc, #20]	@ (8002560 <MX_ADC3_Init+0xb0>)
 800254a:	f002 ff61 	bl	8005410 <HAL_ADC_ConfigChannel>
 800254e:	4603      	mov	r3, r0
 8002550:	2b00      	cmp	r3, #0
 8002552:	d001      	beq.n	8002558 <MX_ADC3_Init+0xa8>
  {
    Error_Handler();
 8002554:	f000 fb9a 	bl	8002c8c <Error_Handler>
  }
  /* USER CODE BEGIN ADC3_Init 2 */

  /* USER CODE END ADC3_Init 2 */

}
 8002558:	bf00      	nop
 800255a:	3710      	adds	r7, #16
 800255c:	46bd      	mov	sp, r7
 800255e:	bd80      	pop	{r7, pc}
 8002560:	20002280 	.word	0x20002280
 8002564:	40012200 	.word	0x40012200
 8002568:	0f000001 	.word	0x0f000001

0800256c <MX_CAN1_Init>:
  * @brief CAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN1_Init(void)
{
 800256c:	b580      	push	{r7, lr}
 800256e:	b08a      	sub	sp, #40	@ 0x28
 8002570:	af00      	add	r7, sp, #0
  /* USER CODE END CAN1_Init 0 */

  /* USER CODE BEGIN CAN1_Init 1 */

  /* USER CODE END CAN1_Init 1 */
  hcan1.Instance = CAN1;
 8002572:	4b30      	ldr	r3, [pc, #192]	@ (8002634 <MX_CAN1_Init+0xc8>)
 8002574:	4a30      	ldr	r2, [pc, #192]	@ (8002638 <MX_CAN1_Init+0xcc>)
 8002576:	601a      	str	r2, [r3, #0]
  hcan1.Init.Prescaler = 18;
 8002578:	4b2e      	ldr	r3, [pc, #184]	@ (8002634 <MX_CAN1_Init+0xc8>)
 800257a:	2212      	movs	r2, #18
 800257c:	605a      	str	r2, [r3, #4]
  hcan1.Init.Mode = CAN_MODE_NORMAL;
 800257e:	4b2d      	ldr	r3, [pc, #180]	@ (8002634 <MX_CAN1_Init+0xc8>)
 8002580:	2200      	movs	r2, #0
 8002582:	609a      	str	r2, [r3, #8]
  hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8002584:	4b2b      	ldr	r3, [pc, #172]	@ (8002634 <MX_CAN1_Init+0xc8>)
 8002586:	2200      	movs	r2, #0
 8002588:	60da      	str	r2, [r3, #12]
  hcan1.Init.TimeSeg1 = CAN_BS1_2TQ;
 800258a:	4b2a      	ldr	r3, [pc, #168]	@ (8002634 <MX_CAN1_Init+0xc8>)
 800258c:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8002590:	611a      	str	r2, [r3, #16]
  hcan1.Init.TimeSeg2 = CAN_BS2_3TQ;
 8002592:	4b28      	ldr	r3, [pc, #160]	@ (8002634 <MX_CAN1_Init+0xc8>)
 8002594:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8002598:	615a      	str	r2, [r3, #20]
  hcan1.Init.TimeTriggeredMode = DISABLE;
 800259a:	4b26      	ldr	r3, [pc, #152]	@ (8002634 <MX_CAN1_Init+0xc8>)
 800259c:	2200      	movs	r2, #0
 800259e:	761a      	strb	r2, [r3, #24]
  hcan1.Init.AutoBusOff = DISABLE;
 80025a0:	4b24      	ldr	r3, [pc, #144]	@ (8002634 <MX_CAN1_Init+0xc8>)
 80025a2:	2200      	movs	r2, #0
 80025a4:	765a      	strb	r2, [r3, #25]
  hcan1.Init.AutoWakeUp = DISABLE;
 80025a6:	4b23      	ldr	r3, [pc, #140]	@ (8002634 <MX_CAN1_Init+0xc8>)
 80025a8:	2200      	movs	r2, #0
 80025aa:	769a      	strb	r2, [r3, #26]
  hcan1.Init.AutoRetransmission = DISABLE;
 80025ac:	4b21      	ldr	r3, [pc, #132]	@ (8002634 <MX_CAN1_Init+0xc8>)
 80025ae:	2200      	movs	r2, #0
 80025b0:	76da      	strb	r2, [r3, #27]
  hcan1.Init.ReceiveFifoLocked = DISABLE;
 80025b2:	4b20      	ldr	r3, [pc, #128]	@ (8002634 <MX_CAN1_Init+0xc8>)
 80025b4:	2200      	movs	r2, #0
 80025b6:	771a      	strb	r2, [r3, #28]
  hcan1.Init.TransmitFifoPriority = DISABLE;
 80025b8:	4b1e      	ldr	r3, [pc, #120]	@ (8002634 <MX_CAN1_Init+0xc8>)
 80025ba:	2200      	movs	r2, #0
 80025bc:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan1) != HAL_OK)
 80025be:	481d      	ldr	r0, [pc, #116]	@ (8002634 <MX_CAN1_Init+0xc8>)
 80025c0:	f003 f976 	bl	80058b0 <HAL_CAN_Init>
 80025c4:	4603      	mov	r3, r0
 80025c6:	2b00      	cmp	r3, #0
 80025c8:	d001      	beq.n	80025ce <MX_CAN1_Init+0x62>
  {
    Error_Handler();
 80025ca:	f000 fb5f 	bl	8002c8c <Error_Handler>
  /* USER CODE BEGIN CAN1_Init 2 */

  /*##-2- Configure the CAN Filter ###########################################*/
    CAN_FilterTypeDef canfilterconfig;

    canfilterconfig.FilterActivation = CAN_FILTER_ENABLE;
 80025ce:	2301      	movs	r3, #1
 80025d0:	623b      	str	r3, [r7, #32]
    canfilterconfig.FilterBank = 18;  // which filter bank to use from the assigned ones
 80025d2:	2312      	movs	r3, #18
 80025d4:	617b      	str	r3, [r7, #20]
    canfilterconfig.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 80025d6:	2300      	movs	r3, #0
 80025d8:	613b      	str	r3, [r7, #16]
    canfilterconfig.FilterIdHigh = 0x0;
 80025da:	2300      	movs	r3, #0
 80025dc:	603b      	str	r3, [r7, #0]
    canfilterconfig.FilterIdLow = 0x0;
 80025de:	2300      	movs	r3, #0
 80025e0:	607b      	str	r3, [r7, #4]
    canfilterconfig.FilterMaskIdHigh = 0x0;
 80025e2:	2300      	movs	r3, #0
 80025e4:	60bb      	str	r3, [r7, #8]
    canfilterconfig.FilterMaskIdLow = 0x0000;
 80025e6:	2300      	movs	r3, #0
 80025e8:	60fb      	str	r3, [r7, #12]
    canfilterconfig.FilterMode = CAN_FILTERMODE_IDMASK;
 80025ea:	2300      	movs	r3, #0
 80025ec:	61bb      	str	r3, [r7, #24]
    canfilterconfig.FilterScale = CAN_FILTERSCALE_32BIT;
 80025ee:	2301      	movs	r3, #1
 80025f0:	61fb      	str	r3, [r7, #28]
    canfilterconfig.SlaveStartFilterBank = 20;  // how many filters to assign to the CAN1 (master can)
 80025f2:	2314      	movs	r3, #20
 80025f4:	627b      	str	r3, [r7, #36]	@ 0x24

  	if (HAL_CAN_ConfigFilter(&hcan1, &canfilterconfig) != HAL_OK)
 80025f6:	463b      	mov	r3, r7
 80025f8:	4619      	mov	r1, r3
 80025fa:	480e      	ldr	r0, [pc, #56]	@ (8002634 <MX_CAN1_Init+0xc8>)
 80025fc:	f003 fa54 	bl	8005aa8 <HAL_CAN_ConfigFilter>
 8002600:	4603      	mov	r3, r0
 8002602:	2b00      	cmp	r3, #0
 8002604:	d001      	beq.n	800260a <MX_CAN1_Init+0x9e>
  	{
  	  /* Filter configuration Error */
  	  Error_Handler();
 8002606:	f000 fb41 	bl	8002c8c <Error_Handler>
  	}

  	/*##-3- Start the CAN peripheral ###########################################*/
  	if (HAL_CAN_Start(&hcan1) != HAL_OK)
 800260a:	480a      	ldr	r0, [pc, #40]	@ (8002634 <MX_CAN1_Init+0xc8>)
 800260c:	f003 fb2c 	bl	8005c68 <HAL_CAN_Start>
 8002610:	4603      	mov	r3, r0
 8002612:	2b00      	cmp	r3, #0
 8002614:	d001      	beq.n	800261a <MX_CAN1_Init+0xae>
  	{
  	  /* Start Error */
  	  Error_Handler();
 8002616:	f000 fb39 	bl	8002c8c <Error_Handler>
  	}

  	/*##-4- Activate CAN RX notification #######################################*/
  	if (HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING) != HAL_OK)
 800261a:	2102      	movs	r1, #2
 800261c:	4805      	ldr	r0, [pc, #20]	@ (8002634 <MX_CAN1_Init+0xc8>)
 800261e:	f003 fd49 	bl	80060b4 <HAL_CAN_ActivateNotification>
 8002622:	4603      	mov	r3, r0
 8002624:	2b00      	cmp	r3, #0
 8002626:	d001      	beq.n	800262c <MX_CAN1_Init+0xc0>
  	{
  	  /* Notification Error */
  	  Error_Handler();
 8002628:	f000 fb30 	bl	8002c8c <Error_Handler>
  	}

  /* USER CODE END CAN1_Init 2 */

}
 800262c:	bf00      	nop
 800262e:	3728      	adds	r7, #40	@ 0x28
 8002630:	46bd      	mov	sp, r7
 8002632:	bd80      	pop	{r7, pc}
 8002634:	20002388 	.word	0x20002388
 8002638:	40006400 	.word	0x40006400

0800263c <MX_CAN2_Init>:
  * @brief CAN2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN2_Init(void)
{
 800263c:	b580      	push	{r7, lr}
 800263e:	af00      	add	r7, sp, #0
  /* USER CODE END CAN2_Init 0 */

  /* USER CODE BEGIN CAN2_Init 1 */

  /* USER CODE END CAN2_Init 1 */
  hcan2.Instance = CAN2;
 8002640:	4b17      	ldr	r3, [pc, #92]	@ (80026a0 <MX_CAN2_Init+0x64>)
 8002642:	4a18      	ldr	r2, [pc, #96]	@ (80026a4 <MX_CAN2_Init+0x68>)
 8002644:	601a      	str	r2, [r3, #0]
  hcan2.Init.Prescaler = 18;
 8002646:	4b16      	ldr	r3, [pc, #88]	@ (80026a0 <MX_CAN2_Init+0x64>)
 8002648:	2212      	movs	r2, #18
 800264a:	605a      	str	r2, [r3, #4]
  hcan2.Init.Mode = CAN_MODE_NORMAL;
 800264c:	4b14      	ldr	r3, [pc, #80]	@ (80026a0 <MX_CAN2_Init+0x64>)
 800264e:	2200      	movs	r2, #0
 8002650:	609a      	str	r2, [r3, #8]
  hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8002652:	4b13      	ldr	r3, [pc, #76]	@ (80026a0 <MX_CAN2_Init+0x64>)
 8002654:	2200      	movs	r2, #0
 8002656:	60da      	str	r2, [r3, #12]
  hcan2.Init.TimeSeg1 = CAN_BS1_2TQ;
 8002658:	4b11      	ldr	r3, [pc, #68]	@ (80026a0 <MX_CAN2_Init+0x64>)
 800265a:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800265e:	611a      	str	r2, [r3, #16]
  hcan2.Init.TimeSeg2 = CAN_BS2_3TQ;
 8002660:	4b0f      	ldr	r3, [pc, #60]	@ (80026a0 <MX_CAN2_Init+0x64>)
 8002662:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8002666:	615a      	str	r2, [r3, #20]
  hcan2.Init.TimeTriggeredMode = DISABLE;
 8002668:	4b0d      	ldr	r3, [pc, #52]	@ (80026a0 <MX_CAN2_Init+0x64>)
 800266a:	2200      	movs	r2, #0
 800266c:	761a      	strb	r2, [r3, #24]
  hcan2.Init.AutoBusOff = DISABLE;
 800266e:	4b0c      	ldr	r3, [pc, #48]	@ (80026a0 <MX_CAN2_Init+0x64>)
 8002670:	2200      	movs	r2, #0
 8002672:	765a      	strb	r2, [r3, #25]
  hcan2.Init.AutoWakeUp = DISABLE;
 8002674:	4b0a      	ldr	r3, [pc, #40]	@ (80026a0 <MX_CAN2_Init+0x64>)
 8002676:	2200      	movs	r2, #0
 8002678:	769a      	strb	r2, [r3, #26]
  hcan2.Init.AutoRetransmission = DISABLE;
 800267a:	4b09      	ldr	r3, [pc, #36]	@ (80026a0 <MX_CAN2_Init+0x64>)
 800267c:	2200      	movs	r2, #0
 800267e:	76da      	strb	r2, [r3, #27]
  hcan2.Init.ReceiveFifoLocked = DISABLE;
 8002680:	4b07      	ldr	r3, [pc, #28]	@ (80026a0 <MX_CAN2_Init+0x64>)
 8002682:	2200      	movs	r2, #0
 8002684:	771a      	strb	r2, [r3, #28]
  hcan2.Init.TransmitFifoPriority = DISABLE;
 8002686:	4b06      	ldr	r3, [pc, #24]	@ (80026a0 <MX_CAN2_Init+0x64>)
 8002688:	2200      	movs	r2, #0
 800268a:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan2) != HAL_OK)
 800268c:	4804      	ldr	r0, [pc, #16]	@ (80026a0 <MX_CAN2_Init+0x64>)
 800268e:	f003 f90f 	bl	80058b0 <HAL_CAN_Init>
 8002692:	4603      	mov	r3, r0
 8002694:	2b00      	cmp	r3, #0
 8002696:	d001      	beq.n	800269c <MX_CAN2_Init+0x60>
  {
    Error_Handler();
 8002698:	f000 faf8 	bl	8002c8c <Error_Handler>
  }
  /* USER CODE BEGIN CAN2_Init 2 */

  /* USER CODE END CAN2_Init 2 */

}
 800269c:	bf00      	nop
 800269e:	bd80      	pop	{r7, pc}
 80026a0:	200023b0 	.word	0x200023b0
 80026a4:	40006800 	.word	0x40006800

080026a8 <MX_SDMMC1_SD_Init>:
  * @brief SDMMC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SDMMC1_SD_Init(void)
{
 80026a8:	b480      	push	{r7}
 80026aa:	af00      	add	r7, sp, #0
  /* USER CODE END SDMMC1_Init 0 */

  /* USER CODE BEGIN SDMMC1_Init 1 */

  /* USER CODE END SDMMC1_Init 1 */
  hsd1.Instance = SDMMC1;
 80026ac:	4b0c      	ldr	r3, [pc, #48]	@ (80026e0 <MX_SDMMC1_SD_Init+0x38>)
 80026ae:	4a0d      	ldr	r2, [pc, #52]	@ (80026e4 <MX_SDMMC1_SD_Init+0x3c>)
 80026b0:	601a      	str	r2, [r3, #0]
  hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
 80026b2:	4b0b      	ldr	r3, [pc, #44]	@ (80026e0 <MX_SDMMC1_SD_Init+0x38>)
 80026b4:	2200      	movs	r2, #0
 80026b6:	605a      	str	r2, [r3, #4]
  hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
 80026b8:	4b09      	ldr	r3, [pc, #36]	@ (80026e0 <MX_SDMMC1_SD_Init+0x38>)
 80026ba:	2200      	movs	r2, #0
 80026bc:	609a      	str	r2, [r3, #8]
  hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
 80026be:	4b08      	ldr	r3, [pc, #32]	@ (80026e0 <MX_SDMMC1_SD_Init+0x38>)
 80026c0:	2200      	movs	r2, #0
 80026c2:	60da      	str	r2, [r3, #12]
  hsd1.Init.BusWide = SDMMC_BUS_WIDE_1B;
 80026c4:	4b06      	ldr	r3, [pc, #24]	@ (80026e0 <MX_SDMMC1_SD_Init+0x38>)
 80026c6:	2200      	movs	r2, #0
 80026c8:	611a      	str	r2, [r3, #16]
  hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
 80026ca:	4b05      	ldr	r3, [pc, #20]	@ (80026e0 <MX_SDMMC1_SD_Init+0x38>)
 80026cc:	2200      	movs	r2, #0
 80026ce:	615a      	str	r2, [r3, #20]
  hsd1.Init.ClockDiv = 0;
 80026d0:	4b03      	ldr	r3, [pc, #12]	@ (80026e0 <MX_SDMMC1_SD_Init+0x38>)
 80026d2:	2200      	movs	r2, #0
 80026d4:	619a      	str	r2, [r3, #24]
  /* USER CODE BEGIN SDMMC1_Init 2 */

  /* USER CODE END SDMMC1_Init 2 */

}
 80026d6:	bf00      	nop
 80026d8:	46bd      	mov	sp, r7
 80026da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026de:	4770      	bx	lr
 80026e0:	200023d8 	.word	0x200023d8
 80026e4:	40012c00 	.word	0x40012c00

080026e8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80026e8:	b580      	push	{r7, lr}
 80026ea:	b088      	sub	sp, #32
 80026ec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 80026ee:	f107 030c 	add.w	r3, r7, #12
 80026f2:	2200      	movs	r2, #0
 80026f4:	601a      	str	r2, [r3, #0]
 80026f6:	605a      	str	r2, [r3, #4]
 80026f8:	609a      	str	r2, [r3, #8]
 80026fa:	60da      	str	r2, [r3, #12]
 80026fc:	611a      	str	r2, [r3, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80026fe:	463b      	mov	r3, r7
 8002700:	2200      	movs	r2, #0
 8002702:	601a      	str	r2, [r3, #0]
 8002704:	605a      	str	r2, [r3, #4]
 8002706:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8002708:	4b21      	ldr	r3, [pc, #132]	@ (8002790 <MX_TIM2_Init+0xa8>)
 800270a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800270e:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8002710:	4b1f      	ldr	r3, [pc, #124]	@ (8002790 <MX_TIM2_Init+0xa8>)
 8002712:	2200      	movs	r2, #0
 8002714:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002716:	4b1e      	ldr	r3, [pc, #120]	@ (8002790 <MX_TIM2_Init+0xa8>)
 8002718:	2200      	movs	r2, #0
 800271a:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 800271c:	4b1c      	ldr	r3, [pc, #112]	@ (8002790 <MX_TIM2_Init+0xa8>)
 800271e:	f04f 32ff 	mov.w	r2, #4294967295
 8002722:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002724:	4b1a      	ldr	r3, [pc, #104]	@ (8002790 <MX_TIM2_Init+0xa8>)
 8002726:	2200      	movs	r2, #0
 8002728:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800272a:	4b19      	ldr	r3, [pc, #100]	@ (8002790 <MX_TIM2_Init+0xa8>)
 800272c:	2200      	movs	r2, #0
 800272e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8002730:	4817      	ldr	r0, [pc, #92]	@ (8002790 <MX_TIM2_Init+0xa8>)
 8002732:	f007 f823 	bl	800977c <HAL_TIM_Base_Init>
 8002736:	4603      	mov	r3, r0
 8002738:	2b00      	cmp	r3, #0
 800273a:	d001      	beq.n	8002740 <MX_TIM2_Init+0x58>
  {
    Error_Handler();
 800273c:	f000 faa6 	bl	8002c8c <Error_Handler>
  }
  sSlaveConfig.SlaveMode = TIM_SLAVEMODE_EXTERNAL1;
 8002740:	2307      	movs	r3, #7
 8002742:	60fb      	str	r3, [r7, #12]
  sSlaveConfig.InputTrigger = TIM_TS_ETRF;
 8002744:	2370      	movs	r3, #112	@ 0x70
 8002746:	613b      	str	r3, [r7, #16]
  sSlaveConfig.TriggerPolarity = TIM_TRIGGERPOLARITY_NONINVERTED;
 8002748:	2300      	movs	r3, #0
 800274a:	617b      	str	r3, [r7, #20]
  sSlaveConfig.TriggerPrescaler = TIM_TRIGGERPRESCALER_DIV1;
 800274c:	2300      	movs	r3, #0
 800274e:	61bb      	str	r3, [r7, #24]
  sSlaveConfig.TriggerFilter = 0;
 8002750:	2300      	movs	r3, #0
 8002752:	61fb      	str	r3, [r7, #28]
  if (HAL_TIM_SlaveConfigSynchro(&htim2, &sSlaveConfig) != HAL_OK)
 8002754:	f107 030c 	add.w	r3, r7, #12
 8002758:	4619      	mov	r1, r3
 800275a:	480d      	ldr	r0, [pc, #52]	@ (8002790 <MX_TIM2_Init+0xa8>)
 800275c:	f007 f9fd 	bl	8009b5a <HAL_TIM_SlaveConfigSynchro>
 8002760:	4603      	mov	r3, r0
 8002762:	2b00      	cmp	r3, #0
 8002764:	d001      	beq.n	800276a <MX_TIM2_Init+0x82>
  {
    Error_Handler();
 8002766:	f000 fa91 	bl	8002c8c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800276a:	2300      	movs	r3, #0
 800276c:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800276e:	2300      	movs	r3, #0
 8002770:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002772:	463b      	mov	r3, r7
 8002774:	4619      	mov	r1, r3
 8002776:	4806      	ldr	r0, [pc, #24]	@ (8002790 <MX_TIM2_Init+0xa8>)
 8002778:	f007 fc0e 	bl	8009f98 <HAL_TIMEx_MasterConfigSynchronization>
 800277c:	4603      	mov	r3, r0
 800277e:	2b00      	cmp	r3, #0
 8002780:	d001      	beq.n	8002786 <MX_TIM2_Init+0x9e>
  {
    Error_Handler();
 8002782:	f000 fa83 	bl	8002c8c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8002786:	bf00      	nop
 8002788:	3720      	adds	r7, #32
 800278a:	46bd      	mov	sp, r7
 800278c:	bd80      	pop	{r7, pc}
 800278e:	bf00      	nop
 8002790:	2000251c 	.word	0x2000251c

08002794 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8002794:	b580      	push	{r7, lr}
 8002796:	b088      	sub	sp, #32
 8002798:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800279a:	f107 030c 	add.w	r3, r7, #12
 800279e:	2200      	movs	r2, #0
 80027a0:	601a      	str	r2, [r3, #0]
 80027a2:	605a      	str	r2, [r3, #4]
 80027a4:	609a      	str	r2, [r3, #8]
 80027a6:	60da      	str	r2, [r3, #12]
 80027a8:	611a      	str	r2, [r3, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80027aa:	463b      	mov	r3, r7
 80027ac:	2200      	movs	r2, #0
 80027ae:	601a      	str	r2, [r3, #0]
 80027b0:	605a      	str	r2, [r3, #4]
 80027b2:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 80027b4:	4b21      	ldr	r3, [pc, #132]	@ (800283c <MX_TIM4_Init+0xa8>)
 80027b6:	4a22      	ldr	r2, [pc, #136]	@ (8002840 <MX_TIM4_Init+0xac>)
 80027b8:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 8000;
 80027ba:	4b20      	ldr	r3, [pc, #128]	@ (800283c <MX_TIM4_Init+0xa8>)
 80027bc:	f44f 52fa 	mov.w	r2, #8000	@ 0x1f40
 80027c0:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 80027c2:	4b1e      	ldr	r3, [pc, #120]	@ (800283c <MX_TIM4_Init+0xa8>)
 80027c4:	2200      	movs	r2, #0
 80027c6:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 80027c8:	4b1c      	ldr	r3, [pc, #112]	@ (800283c <MX_TIM4_Init+0xa8>)
 80027ca:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80027ce:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80027d0:	4b1a      	ldr	r3, [pc, #104]	@ (800283c <MX_TIM4_Init+0xa8>)
 80027d2:	2200      	movs	r2, #0
 80027d4:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80027d6:	4b19      	ldr	r3, [pc, #100]	@ (800283c <MX_TIM4_Init+0xa8>)
 80027d8:	2200      	movs	r2, #0
 80027da:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 80027dc:	4817      	ldr	r0, [pc, #92]	@ (800283c <MX_TIM4_Init+0xa8>)
 80027de:	f006 ffcd 	bl	800977c <HAL_TIM_Base_Init>
 80027e2:	4603      	mov	r3, r0
 80027e4:	2b00      	cmp	r3, #0
 80027e6:	d001      	beq.n	80027ec <MX_TIM4_Init+0x58>
  {
    Error_Handler();
 80027e8:	f000 fa50 	bl	8002c8c <Error_Handler>
  }
  sSlaveConfig.SlaveMode = TIM_SLAVEMODE_EXTERNAL1;
 80027ec:	2307      	movs	r3, #7
 80027ee:	60fb      	str	r3, [r7, #12]
  sSlaveConfig.InputTrigger = TIM_TS_ETRF;
 80027f0:	2370      	movs	r3, #112	@ 0x70
 80027f2:	613b      	str	r3, [r7, #16]
  sSlaveConfig.TriggerPolarity = TIM_TRIGGERPOLARITY_NONINVERTED;
 80027f4:	2300      	movs	r3, #0
 80027f6:	617b      	str	r3, [r7, #20]
  sSlaveConfig.TriggerPrescaler = TIM_TRIGGERPRESCALER_DIV1;
 80027f8:	2300      	movs	r3, #0
 80027fa:	61bb      	str	r3, [r7, #24]
  sSlaveConfig.TriggerFilter = 0;
 80027fc:	2300      	movs	r3, #0
 80027fe:	61fb      	str	r3, [r7, #28]
  if (HAL_TIM_SlaveConfigSynchro(&htim4, &sSlaveConfig) != HAL_OK)
 8002800:	f107 030c 	add.w	r3, r7, #12
 8002804:	4619      	mov	r1, r3
 8002806:	480d      	ldr	r0, [pc, #52]	@ (800283c <MX_TIM4_Init+0xa8>)
 8002808:	f007 f9a7 	bl	8009b5a <HAL_TIM_SlaveConfigSynchro>
 800280c:	4603      	mov	r3, r0
 800280e:	2b00      	cmp	r3, #0
 8002810:	d001      	beq.n	8002816 <MX_TIM4_Init+0x82>
  {
    Error_Handler();
 8002812:	f000 fa3b 	bl	8002c8c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002816:	2300      	movs	r3, #0
 8002818:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800281a:	2300      	movs	r3, #0
 800281c:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800281e:	463b      	mov	r3, r7
 8002820:	4619      	mov	r1, r3
 8002822:	4806      	ldr	r0, [pc, #24]	@ (800283c <MX_TIM4_Init+0xa8>)
 8002824:	f007 fbb8 	bl	8009f98 <HAL_TIMEx_MasterConfigSynchronization>
 8002828:	4603      	mov	r3, r0
 800282a:	2b00      	cmp	r3, #0
 800282c:	d001      	beq.n	8002832 <MX_TIM4_Init+0x9e>
  {
    Error_Handler();
 800282e:	f000 fa2d 	bl	8002c8c <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8002832:	bf00      	nop
 8002834:	3720      	adds	r7, #32
 8002836:	46bd      	mov	sp, r7
 8002838:	bd80      	pop	{r7, pc}
 800283a:	bf00      	nop
 800283c:	20002568 	.word	0x20002568
 8002840:	40000800 	.word	0x40000800

08002844 <MX_TIM7_Init>:
  * @brief TIM7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM7_Init(void)
{
 8002844:	b580      	push	{r7, lr}
 8002846:	b084      	sub	sp, #16
 8002848:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800284a:	1d3b      	adds	r3, r7, #4
 800284c:	2200      	movs	r2, #0
 800284e:	601a      	str	r2, [r3, #0]
 8002850:	605a      	str	r2, [r3, #4]
 8002852:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 8002854:	4b16      	ldr	r3, [pc, #88]	@ (80028b0 <MX_TIM7_Init+0x6c>)
 8002856:	4a17      	ldr	r2, [pc, #92]	@ (80028b4 <MX_TIM7_Init+0x70>)
 8002858:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 8000;
 800285a:	4b15      	ldr	r3, [pc, #84]	@ (80028b0 <MX_TIM7_Init+0x6c>)
 800285c:	f44f 52fa 	mov.w	r2, #8000	@ 0x1f40
 8002860:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002862:	4b13      	ldr	r3, [pc, #76]	@ (80028b0 <MX_TIM7_Init+0x6c>)
 8002864:	2200      	movs	r2, #0
 8002866:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 5000;
 8002868:	4b11      	ldr	r3, [pc, #68]	@ (80028b0 <MX_TIM7_Init+0x6c>)
 800286a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800286e:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002870:	4b0f      	ldr	r3, [pc, #60]	@ (80028b0 <MX_TIM7_Init+0x6c>)
 8002872:	2200      	movs	r2, #0
 8002874:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8002876:	480e      	ldr	r0, [pc, #56]	@ (80028b0 <MX_TIM7_Init+0x6c>)
 8002878:	f006 ff80 	bl	800977c <HAL_TIM_Base_Init>
 800287c:	4603      	mov	r3, r0
 800287e:	2b00      	cmp	r3, #0
 8002880:	d001      	beq.n	8002886 <MX_TIM7_Init+0x42>
  {
    Error_Handler();
 8002882:	f000 fa03 	bl	8002c8c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002886:	2300      	movs	r3, #0
 8002888:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800288a:	2300      	movs	r3, #0
 800288c:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800288e:	1d3b      	adds	r3, r7, #4
 8002890:	4619      	mov	r1, r3
 8002892:	4807      	ldr	r0, [pc, #28]	@ (80028b0 <MX_TIM7_Init+0x6c>)
 8002894:	f007 fb80 	bl	8009f98 <HAL_TIMEx_MasterConfigSynchronization>
 8002898:	4603      	mov	r3, r0
 800289a:	2b00      	cmp	r3, #0
 800289c:	d001      	beq.n	80028a2 <MX_TIM7_Init+0x5e>
  {
    Error_Handler();
 800289e:	f000 f9f5 	bl	8002c8c <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */
  NVIC_EnableIRQ(TIM7_IRQn);
 80028a2:	2037      	movs	r0, #55	@ 0x37
 80028a4:	f7ff fa14 	bl	8001cd0 <__NVIC_EnableIRQ>

  /* USER CODE END TIM7_Init 2 */

}
 80028a8:	bf00      	nop
 80028aa:	3710      	adds	r7, #16
 80028ac:	46bd      	mov	sp, r7
 80028ae:	bd80      	pop	{r7, pc}
 80028b0:	200025b4 	.word	0x200025b4
 80028b4:	40001400 	.word	0x40001400

080028b8 <MX_UART4_Init>:
  * @brief UART4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART4_Init(void)
{
 80028b8:	b580      	push	{r7, lr}
 80028ba:	af00      	add	r7, sp, #0
  /* USER CODE END UART4_Init 0 */

  /* USER CODE BEGIN UART4_Init 1 */

  /* USER CODE END UART4_Init 1 */
  huart4.Instance = UART4;
 80028bc:	4b14      	ldr	r3, [pc, #80]	@ (8002910 <MX_UART4_Init+0x58>)
 80028be:	4a15      	ldr	r2, [pc, #84]	@ (8002914 <MX_UART4_Init+0x5c>)
 80028c0:	601a      	str	r2, [r3, #0]
  huart4.Init.BaudRate = 115200;
 80028c2:	4b13      	ldr	r3, [pc, #76]	@ (8002910 <MX_UART4_Init+0x58>)
 80028c4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80028c8:	605a      	str	r2, [r3, #4]
  huart4.Init.WordLength = UART_WORDLENGTH_8B;
 80028ca:	4b11      	ldr	r3, [pc, #68]	@ (8002910 <MX_UART4_Init+0x58>)
 80028cc:	2200      	movs	r2, #0
 80028ce:	609a      	str	r2, [r3, #8]
  huart4.Init.StopBits = UART_STOPBITS_1;
 80028d0:	4b0f      	ldr	r3, [pc, #60]	@ (8002910 <MX_UART4_Init+0x58>)
 80028d2:	2200      	movs	r2, #0
 80028d4:	60da      	str	r2, [r3, #12]
  huart4.Init.Parity = UART_PARITY_NONE;
 80028d6:	4b0e      	ldr	r3, [pc, #56]	@ (8002910 <MX_UART4_Init+0x58>)
 80028d8:	2200      	movs	r2, #0
 80028da:	611a      	str	r2, [r3, #16]
  huart4.Init.Mode = UART_MODE_TX_RX;
 80028dc:	4b0c      	ldr	r3, [pc, #48]	@ (8002910 <MX_UART4_Init+0x58>)
 80028de:	220c      	movs	r2, #12
 80028e0:	615a      	str	r2, [r3, #20]
  huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80028e2:	4b0b      	ldr	r3, [pc, #44]	@ (8002910 <MX_UART4_Init+0x58>)
 80028e4:	2200      	movs	r2, #0
 80028e6:	619a      	str	r2, [r3, #24]
  huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 80028e8:	4b09      	ldr	r3, [pc, #36]	@ (8002910 <MX_UART4_Init+0x58>)
 80028ea:	2200      	movs	r2, #0
 80028ec:	61da      	str	r2, [r3, #28]
  huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80028ee:	4b08      	ldr	r3, [pc, #32]	@ (8002910 <MX_UART4_Init+0x58>)
 80028f0:	2200      	movs	r2, #0
 80028f2:	621a      	str	r2, [r3, #32]
  huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80028f4:	4b06      	ldr	r3, [pc, #24]	@ (8002910 <MX_UART4_Init+0x58>)
 80028f6:	2200      	movs	r2, #0
 80028f8:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart4) != HAL_OK)
 80028fa:	4805      	ldr	r0, [pc, #20]	@ (8002910 <MX_UART4_Init+0x58>)
 80028fc:	f007 fbf8 	bl	800a0f0 <HAL_UART_Init>
 8002900:	4603      	mov	r3, r0
 8002902:	2b00      	cmp	r3, #0
 8002904:	d001      	beq.n	800290a <MX_UART4_Init+0x52>
  {
    Error_Handler();
 8002906:	f000 f9c1 	bl	8002c8c <Error_Handler>
  }
  /* USER CODE BEGIN UART4_Init 2 */

  /* USER CODE END UART4_Init 2 */

}
 800290a:	bf00      	nop
 800290c:	bd80      	pop	{r7, pc}
 800290e:	bf00      	nop
 8002910:	20002600 	.word	0x20002600
 8002914:	40004c00 	.word	0x40004c00

08002918 <MX_UART7_Init>:
  * @brief UART7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART7_Init(void)
{
 8002918:	b580      	push	{r7, lr}
 800291a:	af00      	add	r7, sp, #0
  /* USER CODE END UART7_Init 0 */

  /* USER CODE BEGIN UART7_Init 1 */

  /* USER CODE END UART7_Init 1 */
  huart7.Instance = UART7;
 800291c:	4b14      	ldr	r3, [pc, #80]	@ (8002970 <MX_UART7_Init+0x58>)
 800291e:	4a15      	ldr	r2, [pc, #84]	@ (8002974 <MX_UART7_Init+0x5c>)
 8002920:	601a      	str	r2, [r3, #0]
  huart7.Init.BaudRate = 115200;
 8002922:	4b13      	ldr	r3, [pc, #76]	@ (8002970 <MX_UART7_Init+0x58>)
 8002924:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002928:	605a      	str	r2, [r3, #4]
  huart7.Init.WordLength = UART_WORDLENGTH_8B;
 800292a:	4b11      	ldr	r3, [pc, #68]	@ (8002970 <MX_UART7_Init+0x58>)
 800292c:	2200      	movs	r2, #0
 800292e:	609a      	str	r2, [r3, #8]
  huart7.Init.StopBits = UART_STOPBITS_1;
 8002930:	4b0f      	ldr	r3, [pc, #60]	@ (8002970 <MX_UART7_Init+0x58>)
 8002932:	2200      	movs	r2, #0
 8002934:	60da      	str	r2, [r3, #12]
  huart7.Init.Parity = UART_PARITY_NONE;
 8002936:	4b0e      	ldr	r3, [pc, #56]	@ (8002970 <MX_UART7_Init+0x58>)
 8002938:	2200      	movs	r2, #0
 800293a:	611a      	str	r2, [r3, #16]
  huart7.Init.Mode = UART_MODE_TX_RX;
 800293c:	4b0c      	ldr	r3, [pc, #48]	@ (8002970 <MX_UART7_Init+0x58>)
 800293e:	220c      	movs	r2, #12
 8002940:	615a      	str	r2, [r3, #20]
  huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002942:	4b0b      	ldr	r3, [pc, #44]	@ (8002970 <MX_UART7_Init+0x58>)
 8002944:	2200      	movs	r2, #0
 8002946:	619a      	str	r2, [r3, #24]
  huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 8002948:	4b09      	ldr	r3, [pc, #36]	@ (8002970 <MX_UART7_Init+0x58>)
 800294a:	2200      	movs	r2, #0
 800294c:	61da      	str	r2, [r3, #28]
  huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800294e:	4b08      	ldr	r3, [pc, #32]	@ (8002970 <MX_UART7_Init+0x58>)
 8002950:	2200      	movs	r2, #0
 8002952:	621a      	str	r2, [r3, #32]
  huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002954:	4b06      	ldr	r3, [pc, #24]	@ (8002970 <MX_UART7_Init+0x58>)
 8002956:	2200      	movs	r2, #0
 8002958:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart7) != HAL_OK)
 800295a:	4805      	ldr	r0, [pc, #20]	@ (8002970 <MX_UART7_Init+0x58>)
 800295c:	f007 fbc8 	bl	800a0f0 <HAL_UART_Init>
 8002960:	4603      	mov	r3, r0
 8002962:	2b00      	cmp	r3, #0
 8002964:	d001      	beq.n	800296a <MX_UART7_Init+0x52>
  {
    Error_Handler();
 8002966:	f000 f991 	bl	8002c8c <Error_Handler>
  }
  /* USER CODE BEGIN UART7_Init 2 */

  /* USER CODE END UART7_Init 2 */

}
 800296a:	bf00      	nop
 800296c:	bd80      	pop	{r7, pc}
 800296e:	bf00      	nop
 8002970:	20002688 	.word	0x20002688
 8002974:	40007800 	.word	0x40007800

08002978 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8002978:	b580      	push	{r7, lr}
 800297a:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 800297c:	4b14      	ldr	r3, [pc, #80]	@ (80029d0 <MX_USART3_UART_Init+0x58>)
 800297e:	4a15      	ldr	r2, [pc, #84]	@ (80029d4 <MX_USART3_UART_Init+0x5c>)
 8002980:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 8002982:	4b13      	ldr	r3, [pc, #76]	@ (80029d0 <MX_USART3_UART_Init+0x58>)
 8002984:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002988:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 800298a:	4b11      	ldr	r3, [pc, #68]	@ (80029d0 <MX_USART3_UART_Init+0x58>)
 800298c:	2200      	movs	r2, #0
 800298e:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8002990:	4b0f      	ldr	r3, [pc, #60]	@ (80029d0 <MX_USART3_UART_Init+0x58>)
 8002992:	2200      	movs	r2, #0
 8002994:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8002996:	4b0e      	ldr	r3, [pc, #56]	@ (80029d0 <MX_USART3_UART_Init+0x58>)
 8002998:	2200      	movs	r2, #0
 800299a:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 800299c:	4b0c      	ldr	r3, [pc, #48]	@ (80029d0 <MX_USART3_UART_Init+0x58>)
 800299e:	220c      	movs	r2, #12
 80029a0:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80029a2:	4b0b      	ldr	r3, [pc, #44]	@ (80029d0 <MX_USART3_UART_Init+0x58>)
 80029a4:	2200      	movs	r2, #0
 80029a6:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80029a8:	4b09      	ldr	r3, [pc, #36]	@ (80029d0 <MX_USART3_UART_Init+0x58>)
 80029aa:	2200      	movs	r2, #0
 80029ac:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80029ae:	4b08      	ldr	r3, [pc, #32]	@ (80029d0 <MX_USART3_UART_Init+0x58>)
 80029b0:	2200      	movs	r2, #0
 80029b2:	621a      	str	r2, [r3, #32]
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80029b4:	4b06      	ldr	r3, [pc, #24]	@ (80029d0 <MX_USART3_UART_Init+0x58>)
 80029b6:	2200      	movs	r2, #0
 80029b8:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80029ba:	4805      	ldr	r0, [pc, #20]	@ (80029d0 <MX_USART3_UART_Init+0x58>)
 80029bc:	f007 fb98 	bl	800a0f0 <HAL_UART_Init>
 80029c0:	4603      	mov	r3, r0
 80029c2:	2b00      	cmp	r3, #0
 80029c4:	d001      	beq.n	80029ca <MX_USART3_UART_Init+0x52>
  {
    Error_Handler();
 80029c6:	f000 f961 	bl	8002c8c <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 80029ca:	bf00      	nop
 80029cc:	bd80      	pop	{r7, pc}
 80029ce:	bf00      	nop
 80029d0:	20002710 	.word	0x20002710
 80029d4:	40004800 	.word	0x40004800

080029d8 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80029d8:	b580      	push	{r7, lr}
 80029da:	b082      	sub	sp, #8
 80029dc:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 80029de:	4b18      	ldr	r3, [pc, #96]	@ (8002a40 <MX_DMA_Init+0x68>)
 80029e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80029e2:	4a17      	ldr	r2, [pc, #92]	@ (8002a40 <MX_DMA_Init+0x68>)
 80029e4:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80029e8:	6313      	str	r3, [r2, #48]	@ 0x30
 80029ea:	4b15      	ldr	r3, [pc, #84]	@ (8002a40 <MX_DMA_Init+0x68>)
 80029ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80029ee:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80029f2:	607b      	str	r3, [r7, #4]
 80029f4:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 80029f6:	2200      	movs	r2, #0
 80029f8:	2100      	movs	r1, #0
 80029fa:	2038      	movs	r0, #56	@ 0x38
 80029fc:	f003 fe8b 	bl	8006716 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8002a00:	2038      	movs	r0, #56	@ 0x38
 8002a02:	f003 fea4 	bl	800674e <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 0, 0);
 8002a06:	2200      	movs	r2, #0
 8002a08:	2100      	movs	r1, #0
 8002a0a:	2039      	movs	r0, #57	@ 0x39
 8002a0c:	f003 fe83 	bl	8006716 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
 8002a10:	2039      	movs	r0, #57	@ 0x39
 8002a12:	f003 fe9c 	bl	800674e <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 0, 0);
 8002a16:	2200      	movs	r2, #0
 8002a18:	2100      	movs	r1, #0
 8002a1a:	203b      	movs	r0, #59	@ 0x3b
 8002a1c:	f003 fe7b 	bl	8006716 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 8002a20:	203b      	movs	r0, #59	@ 0x3b
 8002a22:	f003 fe94 	bl	800674e <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream6_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream6_IRQn, 0, 0);
 8002a26:	2200      	movs	r2, #0
 8002a28:	2100      	movs	r1, #0
 8002a2a:	2045      	movs	r0, #69	@ 0x45
 8002a2c:	f003 fe73 	bl	8006716 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
 8002a30:	2045      	movs	r0, #69	@ 0x45
 8002a32:	f003 fe8c 	bl	800674e <HAL_NVIC_EnableIRQ>

}
 8002a36:	bf00      	nop
 8002a38:	3708      	adds	r7, #8
 8002a3a:	46bd      	mov	sp, r7
 8002a3c:	bd80      	pop	{r7, pc}
 8002a3e:	bf00      	nop
 8002a40:	40023800 	.word	0x40023800

08002a44 <MX_FMC_Init>:

/* FMC initialization function */
static void MX_FMC_Init(void)
{
 8002a44:	b580      	push	{r7, lr}
 8002a46:	b088      	sub	sp, #32
 8002a48:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN FMC_Init 0 */

  /* USER CODE END FMC_Init 0 */

  FMC_NORSRAM_TimingTypeDef Timing = {0};
 8002a4a:	1d3b      	adds	r3, r7, #4
 8002a4c:	2200      	movs	r2, #0
 8002a4e:	601a      	str	r2, [r3, #0]
 8002a50:	605a      	str	r2, [r3, #4]
 8002a52:	609a      	str	r2, [r3, #8]
 8002a54:	60da      	str	r2, [r3, #12]
 8002a56:	611a      	str	r2, [r3, #16]
 8002a58:	615a      	str	r2, [r3, #20]
 8002a5a:	619a      	str	r2, [r3, #24]

  /* USER CODE END FMC_Init 1 */

  /** Perform the SRAM1 memory initialization sequence
  */
  hsram1.Instance = FMC_NORSRAM_DEVICE;
 8002a5c:	4b28      	ldr	r3, [pc, #160]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002a5e:	f04f 4220 	mov.w	r2, #2684354560	@ 0xa0000000
 8002a62:	601a      	str	r2, [r3, #0]
  hsram1.Extended = FMC_NORSRAM_EXTENDED_DEVICE;
 8002a64:	4b26      	ldr	r3, [pc, #152]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002a66:	4a27      	ldr	r2, [pc, #156]	@ (8002b04 <MX_FMC_Init+0xc0>)
 8002a68:	605a      	str	r2, [r3, #4]
  /* hsram1.Init */
  hsram1.Init.NSBank = FMC_NORSRAM_BANK1;
 8002a6a:	4b25      	ldr	r3, [pc, #148]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002a6c:	2200      	movs	r2, #0
 8002a6e:	609a      	str	r2, [r3, #8]
  hsram1.Init.DataAddressMux = FMC_DATA_ADDRESS_MUX_DISABLE;
 8002a70:	4b23      	ldr	r3, [pc, #140]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002a72:	2200      	movs	r2, #0
 8002a74:	60da      	str	r2, [r3, #12]
  hsram1.Init.MemoryType = FMC_MEMORY_TYPE_SRAM;
 8002a76:	4b22      	ldr	r3, [pc, #136]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002a78:	2200      	movs	r2, #0
 8002a7a:	611a      	str	r2, [r3, #16]
  hsram1.Init.MemoryDataWidth = FMC_NORSRAM_MEM_BUS_WIDTH_16;
 8002a7c:	4b20      	ldr	r3, [pc, #128]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002a7e:	2210      	movs	r2, #16
 8002a80:	615a      	str	r2, [r3, #20]
  hsram1.Init.BurstAccessMode = FMC_BURST_ACCESS_MODE_DISABLE;
 8002a82:	4b1f      	ldr	r3, [pc, #124]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002a84:	2200      	movs	r2, #0
 8002a86:	619a      	str	r2, [r3, #24]
  hsram1.Init.WaitSignalPolarity = FMC_WAIT_SIGNAL_POLARITY_LOW;
 8002a88:	4b1d      	ldr	r3, [pc, #116]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002a8a:	2200      	movs	r2, #0
 8002a8c:	61da      	str	r2, [r3, #28]
  hsram1.Init.WaitSignalActive = FMC_WAIT_TIMING_BEFORE_WS;
 8002a8e:	4b1c      	ldr	r3, [pc, #112]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002a90:	2200      	movs	r2, #0
 8002a92:	621a      	str	r2, [r3, #32]
  hsram1.Init.WriteOperation = FMC_WRITE_OPERATION_ENABLE;
 8002a94:	4b1a      	ldr	r3, [pc, #104]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002a96:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8002a9a:	625a      	str	r2, [r3, #36]	@ 0x24
  hsram1.Init.WaitSignal = FMC_WAIT_SIGNAL_DISABLE;
 8002a9c:	4b18      	ldr	r3, [pc, #96]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002a9e:	2200      	movs	r2, #0
 8002aa0:	629a      	str	r2, [r3, #40]	@ 0x28
  hsram1.Init.ExtendedMode = FMC_EXTENDED_MODE_DISABLE;
 8002aa2:	4b17      	ldr	r3, [pc, #92]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002aa4:	2200      	movs	r2, #0
 8002aa6:	62da      	str	r2, [r3, #44]	@ 0x2c
  hsram1.Init.AsynchronousWait = FMC_ASYNCHRONOUS_WAIT_DISABLE;
 8002aa8:	4b15      	ldr	r3, [pc, #84]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002aaa:	2200      	movs	r2, #0
 8002aac:	631a      	str	r2, [r3, #48]	@ 0x30
  hsram1.Init.WriteBurst = FMC_WRITE_BURST_DISABLE;
 8002aae:	4b14      	ldr	r3, [pc, #80]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002ab0:	2200      	movs	r2, #0
 8002ab2:	635a      	str	r2, [r3, #52]	@ 0x34
  hsram1.Init.ContinuousClock = FMC_CONTINUOUS_CLOCK_SYNC_ONLY;
 8002ab4:	4b12      	ldr	r3, [pc, #72]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002ab6:	2200      	movs	r2, #0
 8002ab8:	639a      	str	r2, [r3, #56]	@ 0x38
  hsram1.Init.WriteFifo = FMC_WRITE_FIFO_ENABLE;
 8002aba:	4b11      	ldr	r3, [pc, #68]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002abc:	2200      	movs	r2, #0
 8002abe:	63da      	str	r2, [r3, #60]	@ 0x3c
  hsram1.Init.PageSize = FMC_PAGE_SIZE_NONE;
 8002ac0:	4b0f      	ldr	r3, [pc, #60]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002ac2:	2200      	movs	r2, #0
 8002ac4:	641a      	str	r2, [r3, #64]	@ 0x40
  /* Timing */
  Timing.AddressSetupTime = 15;
 8002ac6:	230f      	movs	r3, #15
 8002ac8:	607b      	str	r3, [r7, #4]
  Timing.AddressHoldTime = 15;
 8002aca:	230f      	movs	r3, #15
 8002acc:	60bb      	str	r3, [r7, #8]
  Timing.DataSetupTime = 255;
 8002ace:	23ff      	movs	r3, #255	@ 0xff
 8002ad0:	60fb      	str	r3, [r7, #12]
  Timing.BusTurnAroundDuration = 15;
 8002ad2:	230f      	movs	r3, #15
 8002ad4:	613b      	str	r3, [r7, #16]
  Timing.CLKDivision = 16;
 8002ad6:	2310      	movs	r3, #16
 8002ad8:	617b      	str	r3, [r7, #20]
  Timing.DataLatency = 17;
 8002ada:	2311      	movs	r3, #17
 8002adc:	61bb      	str	r3, [r7, #24]
  Timing.AccessMode = FMC_ACCESS_MODE_A;
 8002ade:	2300      	movs	r3, #0
 8002ae0:	61fb      	str	r3, [r7, #28]
  /* ExtTiming */

  if (HAL_SRAM_Init(&hsram1, &Timing, NULL) != HAL_OK)
 8002ae2:	1d3b      	adds	r3, r7, #4
 8002ae4:	2200      	movs	r2, #0
 8002ae6:	4619      	mov	r1, r3
 8002ae8:	4805      	ldr	r0, [pc, #20]	@ (8002b00 <MX_FMC_Init+0xbc>)
 8002aea:	f006 fdff 	bl	80096ec <HAL_SRAM_Init>
 8002aee:	4603      	mov	r3, r0
 8002af0:	2b00      	cmp	r3, #0
 8002af2:	d001      	beq.n	8002af8 <MX_FMC_Init+0xb4>
  {
    Error_Handler( );
 8002af4:	f000 f8ca 	bl	8002c8c <Error_Handler>
  }

  /* USER CODE BEGIN FMC_Init 2 */

  /* USER CODE END FMC_Init 2 */
}
 8002af8:	bf00      	nop
 8002afa:	3720      	adds	r7, #32
 8002afc:	46bd      	mov	sp, r7
 8002afe:	bd80      	pop	{r7, pc}
 8002b00:	20002798 	.word	0x20002798
 8002b04:	a0000104 	.word	0xa0000104

08002b08 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002b08:	b580      	push	{r7, lr}
 8002b0a:	b08e      	sub	sp, #56	@ 0x38
 8002b0c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002b0e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002b12:	2200      	movs	r2, #0
 8002b14:	601a      	str	r2, [r3, #0]
 8002b16:	605a      	str	r2, [r3, #4]
 8002b18:	609a      	str	r2, [r3, #8]
 8002b1a:	60da      	str	r2, [r3, #12]
 8002b1c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8002b1e:	4b55      	ldr	r3, [pc, #340]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b22:	4a54      	ldr	r2, [pc, #336]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b24:	f043 0320 	orr.w	r3, r3, #32
 8002b28:	6313      	str	r3, [r2, #48]	@ 0x30
 8002b2a:	4b52      	ldr	r3, [pc, #328]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b2e:	f003 0320 	and.w	r3, r3, #32
 8002b32:	623b      	str	r3, [r7, #32]
 8002b34:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002b36:	4b4f      	ldr	r3, [pc, #316]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b3a:	4a4e      	ldr	r2, [pc, #312]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b3c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002b40:	6313      	str	r3, [r2, #48]	@ 0x30
 8002b42:	4b4c      	ldr	r3, [pc, #304]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b46:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002b4a:	61fb      	str	r3, [r7, #28]
 8002b4c:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002b4e:	4b49      	ldr	r3, [pc, #292]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b52:	4a48      	ldr	r2, [pc, #288]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b54:	f043 0304 	orr.w	r3, r3, #4
 8002b58:	6313      	str	r3, [r2, #48]	@ 0x30
 8002b5a:	4b46      	ldr	r3, [pc, #280]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b5e:	f003 0304 	and.w	r3, r3, #4
 8002b62:	61bb      	str	r3, [r7, #24]
 8002b64:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002b66:	4b43      	ldr	r3, [pc, #268]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b6a:	4a42      	ldr	r2, [pc, #264]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b6c:	f043 0301 	orr.w	r3, r3, #1
 8002b70:	6313      	str	r3, [r2, #48]	@ 0x30
 8002b72:	4b40      	ldr	r3, [pc, #256]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b76:	f003 0301 	and.w	r3, r3, #1
 8002b7a:	617b      	str	r3, [r7, #20]
 8002b7c:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002b7e:	4b3d      	ldr	r3, [pc, #244]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b82:	4a3c      	ldr	r2, [pc, #240]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b84:	f043 0310 	orr.w	r3, r3, #16
 8002b88:	6313      	str	r3, [r2, #48]	@ 0x30
 8002b8a:	4b3a      	ldr	r3, [pc, #232]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b8c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b8e:	f003 0310 	and.w	r3, r3, #16
 8002b92:	613b      	str	r3, [r7, #16]
 8002b94:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002b96:	4b37      	ldr	r3, [pc, #220]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b98:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b9a:	4a36      	ldr	r2, [pc, #216]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002b9c:	f043 0302 	orr.w	r3, r3, #2
 8002ba0:	6313      	str	r3, [r2, #48]	@ 0x30
 8002ba2:	4b34      	ldr	r3, [pc, #208]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002ba4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ba6:	f003 0302 	and.w	r3, r3, #2
 8002baa:	60fb      	str	r3, [r7, #12]
 8002bac:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8002bae:	4b31      	ldr	r3, [pc, #196]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002bb0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002bb2:	4a30      	ldr	r2, [pc, #192]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002bb4:	f043 0308 	orr.w	r3, r3, #8
 8002bb8:	6313      	str	r3, [r2, #48]	@ 0x30
 8002bba:	4b2e      	ldr	r3, [pc, #184]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002bbc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002bbe:	f003 0308 	and.w	r3, r3, #8
 8002bc2:	60bb      	str	r3, [r7, #8]
 8002bc4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8002bc6:	4b2b      	ldr	r3, [pc, #172]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002bc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002bca:	4a2a      	ldr	r2, [pc, #168]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002bcc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002bd0:	6313      	str	r3, [r2, #48]	@ 0x30
 8002bd2:	4b28      	ldr	r3, [pc, #160]	@ (8002c74 <MX_GPIO_Init+0x16c>)
 8002bd4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002bd6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002bda:	607b      	str	r3, [r7, #4]
 8002bdc:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(HEARTBEAT_GPIO_Port, HEARTBEAT_Pin, GPIO_PIN_RESET);
 8002bde:	2200      	movs	r2, #0
 8002be0:	2108      	movs	r1, #8
 8002be2:	4825      	ldr	r0, [pc, #148]	@ (8002c78 <MX_GPIO_Init+0x170>)
 8002be4:	f004 fb38 	bl	8007258 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PF2 EXTRA_SENS2_Pin */
  GPIO_InitStruct.Pin = GPIO_PIN_2|EXTRA_SENS2_Pin;
 8002be8:	f44f 7301 	mov.w	r3, #516	@ 0x204
 8002bec:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002bee:	2300      	movs	r3, #0
 8002bf0:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002bf2:	2300      	movs	r3, #0
 8002bf4:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002bf6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002bfa:	4619      	mov	r1, r3
 8002bfc:	481f      	ldr	r0, [pc, #124]	@ (8002c7c <MX_GPIO_Init+0x174>)
 8002bfe:	f004 f967 	bl	8006ed0 <HAL_GPIO_Init>

  /*Configure GPIO pin : EXTRA_SENS_1_Pin */
  GPIO_InitStruct.Pin = EXTRA_SENS_1_Pin;
 8002c02:	2302      	movs	r3, #2
 8002c04:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002c06:	2300      	movs	r3, #0
 8002c08:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c0a:	2300      	movs	r3, #0
 8002c0c:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(EXTRA_SENS_1_GPIO_Port, &GPIO_InitStruct);
 8002c0e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002c12:	4619      	mov	r1, r3
 8002c14:	481a      	ldr	r0, [pc, #104]	@ (8002c80 <MX_GPIO_Init+0x178>)
 8002c16:	f004 f95b 	bl	8006ed0 <HAL_GPIO_Init>

  /*Configure GPIO pin : HEARTBEAT_Pin */
  GPIO_InitStruct.Pin = HEARTBEAT_Pin;
 8002c1a:	2308      	movs	r3, #8
 8002c1c:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002c1e:	2301      	movs	r3, #1
 8002c20:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c22:	2300      	movs	r3, #0
 8002c24:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002c26:	2300      	movs	r3, #0
 8002c28:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(HEARTBEAT_GPIO_Port, &GPIO_InitStruct);
 8002c2a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002c2e:	4619      	mov	r1, r3
 8002c30:	4811      	ldr	r0, [pc, #68]	@ (8002c78 <MX_GPIO_Init+0x170>)
 8002c32:	f004 f94d 	bl	8006ed0 <HAL_GPIO_Init>

  /*Configure GPIO pins : SHORTED_TO_PB11_Pin SHORTED_TO_PB10_Pin BAT_12V_MEASURE_Pin */
  GPIO_InitStruct.Pin = SHORTED_TO_PB11_Pin|SHORTED_TO_PB10_Pin|BAT_12V_MEASURE_Pin;
 8002c36:	f24c 0308 	movw	r3, #49160	@ 0xc008
 8002c3a:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002c3c:	2300      	movs	r3, #0
 8002c3e:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c40:	2300      	movs	r3, #0
 8002c42:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002c44:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002c48:	4619      	mov	r1, r3
 8002c4a:	480e      	ldr	r0, [pc, #56]	@ (8002c84 <MX_GPIO_Init+0x17c>)
 8002c4c:	f004 f940 	bl	8006ed0 <HAL_GPIO_Init>

  /*Configure GPIO pins : BUTTON_4_Pin BUTTON_3_Pin BUTTON_2_Pin BUTTON_1_Pin
                           HV_REQUEST_Pin DRIVE_REQUEST_Pin GASP_INTERRUPT_Pin */
  GPIO_InitStruct.Pin = BUTTON_4_Pin|BUTTON_3_Pin|BUTTON_2_Pin|BUTTON_1_Pin
 8002c50:	f44f 437e 	mov.w	r3, #65024	@ 0xfe00
 8002c54:	627b      	str	r3, [r7, #36]	@ 0x24
                          |HV_REQUEST_Pin|DRIVE_REQUEST_Pin|GASP_INTERRUPT_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002c56:	2300      	movs	r3, #0
 8002c58:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c5a:	2300      	movs	r3, #0
 8002c5c:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002c5e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002c62:	4619      	mov	r1, r3
 8002c64:	4808      	ldr	r0, [pc, #32]	@ (8002c88 <MX_GPIO_Init+0x180>)
 8002c66:	f004 f933 	bl	8006ed0 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8002c6a:	bf00      	nop
 8002c6c:	3738      	adds	r7, #56	@ 0x38
 8002c6e:	46bd      	mov	sp, r7
 8002c70:	bd80      	pop	{r7, pc}
 8002c72:	bf00      	nop
 8002c74:	40023800 	.word	0x40023800
 8002c78:	40020000 	.word	0x40020000
 8002c7c:	40021400 	.word	0x40021400
 8002c80:	40020800 	.word	0x40020800
 8002c84:	40020400 	.word	0x40020400
 8002c88:	40021800 	.word	0x40021800

08002c8c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002c8c:	b580      	push	{r7, lr}
 8002c8e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002c90:	b672      	cpsid	i
}
 8002c92:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
  {
	  UG_PutString(5, 250, "HAL ERROR");
 8002c94:	4a02      	ldr	r2, [pc, #8]	@ (8002ca0 <Error_Handler+0x14>)
 8002c96:	21fa      	movs	r1, #250	@ 0xfa
 8002c98:	2005      	movs	r0, #5
 8002c9a:	f001 fa8b 	bl	80041b4 <UG_PutString>
 8002c9e:	e7f9      	b.n	8002c94 <Error_Handler+0x8>
 8002ca0:	0800ec44 	.word	0x0800ec44

08002ca4 <init_sensors>:

/************ Timer ************/
unsigned int discrepancy_timer_ms = 0;


void init_sensors(){
 8002ca4:	b480      	push	{r7}
 8002ca6:	af00      	add	r7, sp, #0
    throttle1.min = 0x7FFF;
 8002ca8:	4b11      	ldr	r3, [pc, #68]	@ (8002cf0 <init_sensors+0x4c>)
 8002caa:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8002cae:	805a      	strh	r2, [r3, #2]
    throttle1.max = 0;
 8002cb0:	4b0f      	ldr	r3, [pc, #60]	@ (8002cf0 <init_sensors+0x4c>)
 8002cb2:	2200      	movs	r2, #0
 8002cb4:	809a      	strh	r2, [r3, #4]
    throttle1.range = 1;
 8002cb6:	4b0e      	ldr	r3, [pc, #56]	@ (8002cf0 <init_sensors+0x4c>)
 8002cb8:	2201      	movs	r2, #1
 8002cba:	80da      	strh	r2, [r3, #6]
    throttle2.min = 0x7FFF;
 8002cbc:	4b0d      	ldr	r3, [pc, #52]	@ (8002cf4 <init_sensors+0x50>)
 8002cbe:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8002cc2:	805a      	strh	r2, [r3, #2]
    throttle2.max = 0;
 8002cc4:	4b0b      	ldr	r3, [pc, #44]	@ (8002cf4 <init_sensors+0x50>)
 8002cc6:	2200      	movs	r2, #0
 8002cc8:	809a      	strh	r2, [r3, #4]
    throttle2.range = 1;
 8002cca:	4b0a      	ldr	r3, [pc, #40]	@ (8002cf4 <init_sensors+0x50>)
 8002ccc:	2201      	movs	r2, #1
 8002cce:	80da      	strh	r2, [r3, #6]
    brake.min = 0x7FFF;
 8002cd0:	4b09      	ldr	r3, [pc, #36]	@ (8002cf8 <init_sensors+0x54>)
 8002cd2:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8002cd6:	805a      	strh	r2, [r3, #2]
    brake.max = 0;
 8002cd8:	4b07      	ldr	r3, [pc, #28]	@ (8002cf8 <init_sensors+0x54>)
 8002cda:	2200      	movs	r2, #0
 8002cdc:	809a      	strh	r2, [r3, #4]
    brake.range = 1;
 8002cde:	4b06      	ldr	r3, [pc, #24]	@ (8002cf8 <init_sensors+0x54>)
 8002ce0:	2201      	movs	r2, #1
 8002ce2:	80da      	strh	r2, [r3, #6]
}
 8002ce4:	bf00      	nop
 8002ce6:	46bd      	mov	sp, r7
 8002ce8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cec:	4770      	bx	lr
 8002cee:	bf00      	nop
 8002cf0:	200027ec 	.word	0x200027ec
 8002cf4:	200027f8 	.word	0x200027f8
 8002cf8:	20002804 	.word	0x20002804

08002cfc <select_adc_channel>:
// APPS
uint8_t THROTTLE_MULTIPLIER = 100;
const uint8_t THROTTLE_MAP[8] = { 95, 71, 59, 47, 35, 23, 11, 5 };

void select_adc_channel(ADC_HandleTypeDef *hadc, ADC_CHAN channel)
{
 8002cfc:	b580      	push	{r7, lr}
 8002cfe:	b086      	sub	sp, #24
 8002d00:	af00      	add	r7, sp, #0
 8002d02:	6078      	str	r0, [r7, #4]
 8002d04:	460b      	mov	r3, r1
 8002d06:	70fb      	strb	r3, [r7, #3]
    ADC_ChannelConfTypeDef sConfig = {0};
 8002d08:	f107 0308 	add.w	r3, r7, #8
 8002d0c:	2200      	movs	r2, #0
 8002d0e:	601a      	str	r2, [r3, #0]
 8002d10:	605a      	str	r2, [r3, #4]
 8002d12:	609a      	str	r2, [r3, #8]
 8002d14:	60da      	str	r2, [r3, #12]
    sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8002d16:	2300      	movs	r3, #0
 8002d18:	613b      	str	r3, [r7, #16]
    switch (channel)
 8002d1a:	78fb      	ldrb	r3, [r7, #3]
 8002d1c:	2b04      	cmp	r3, #4
 8002d1e:	d844      	bhi.n	8002daa <select_adc_channel+0xae>
 8002d20:	a201      	add	r2, pc, #4	@ (adr r2, 8002d28 <select_adc_channel+0x2c>)
 8002d22:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002d26:	bf00      	nop
 8002d28:	08002d3d 	.word	0x08002d3d
 8002d2c:	08002d53 	.word	0x08002d53
 8002d30:	08002d69 	.word	0x08002d69
 8002d34:	08002d7f 	.word	0x08002d7f
 8002d38:	08002d95 	.word	0x08002d95
    {
        case APPS1:
            sConfig.Channel = ADC_CHANNEL_10;
 8002d3c:	230a      	movs	r3, #10
 8002d3e:	60bb      	str	r3, [r7, #8]
			sConfig.Rank = 1;
 8002d40:	2301      	movs	r3, #1
 8002d42:	60fb      	str	r3, [r7, #12]

			if (HAL_ADC_ConfigChannel(hadc, &sConfig) != HAL_OK)
 8002d44:	f107 0308 	add.w	r3, r7, #8
 8002d48:	4619      	mov	r1, r3
 8002d4a:	6878      	ldr	r0, [r7, #4]
 8002d4c:	f002 fb60 	bl	8005410 <HAL_ADC_ConfigChannel>
			{
//				Error_Handler();
			}
			break;
 8002d50:	e02c      	b.n	8002dac <select_adc_channel+0xb0>

        case APPS2:
			sConfig.Channel = ADC_CHANNEL_8;
 8002d52:	2308      	movs	r3, #8
 8002d54:	60bb      	str	r3, [r7, #8]
			sConfig.Rank = 1;
 8002d56:	2301      	movs	r3, #1
 8002d58:	60fb      	str	r3, [r7, #12]
			if (HAL_ADC_ConfigChannel(hadc, &sConfig) != HAL_OK)
 8002d5a:	f107 0308 	add.w	r3, r7, #8
 8002d5e:	4619      	mov	r1, r3
 8002d60:	6878      	ldr	r0, [r7, #4]
 8002d62:	f002 fb55 	bl	8005410 <HAL_ADC_ConfigChannel>
			{
//				Error_Handler();
			}
			break;
 8002d66:	e021      	b.n	8002dac <select_adc_channel+0xb0>
        case BSE:
			sConfig.Channel = ADC_CHANNEL_15;
 8002d68:	230f      	movs	r3, #15
 8002d6a:	60bb      	str	r3, [r7, #8]
			sConfig.Rank = 1;
 8002d6c:	2301      	movs	r3, #1
 8002d6e:	60fb      	str	r3, [r7, #12]
			if (HAL_ADC_ConfigChannel(hadc, &sConfig) != HAL_OK)
 8002d70:	f107 0308 	add.w	r3, r7, #8
 8002d74:	4619      	mov	r1, r3
 8002d76:	6878      	ldr	r0, [r7, #4]
 8002d78:	f002 fb4a 	bl	8005410 <HAL_ADC_ConfigChannel>
			{
//				Error_Handler();
			}
			break;
 8002d7c:	e016      	b.n	8002dac <select_adc_channel+0xb0>
        case KNOB1:
			sConfig.Channel = ADC_CHANNEL_13;
 8002d7e:	230d      	movs	r3, #13
 8002d80:	60bb      	str	r3, [r7, #8]
			sConfig.Rank = 1;
 8002d82:	2301      	movs	r3, #1
 8002d84:	60fb      	str	r3, [r7, #12]
			if (HAL_ADC_ConfigChannel(hadc, &sConfig) != HAL_OK)
 8002d86:	f107 0308 	add.w	r3, r7, #8
 8002d8a:	4619      	mov	r1, r3
 8002d8c:	6878      	ldr	r0, [r7, #4]
 8002d8e:	f002 fb3f 	bl	8005410 <HAL_ADC_ConfigChannel>
			{
//				Error_Handler();
			}
			break;
 8002d92:	e00b      	b.n	8002dac <select_adc_channel+0xb0>
        case KNOB2:
			sConfig.Channel = ADC_CHANNEL_12;
 8002d94:	230c      	movs	r3, #12
 8002d96:	60bb      	str	r3, [r7, #8]
			sConfig.Rank = 1;
 8002d98:	2301      	movs	r3, #1
 8002d9a:	60fb      	str	r3, [r7, #12]
			if (HAL_ADC_ConfigChannel(hadc, &sConfig) != HAL_OK)
 8002d9c:	f107 0308 	add.w	r3, r7, #8
 8002da0:	4619      	mov	r1, r3
 8002da2:	6878      	ldr	r0, [r7, #4]
 8002da4:	f002 fb34 	bl	8005410 <HAL_ADC_ConfigChannel>
			{
//				Error_Handler();
			}
			break;
 8002da8:	e000      	b.n	8002dac <select_adc_channel+0xb0>
        default:
            break;
 8002daa:	bf00      	nop
    }
}
 8002dac:	bf00      	nop
 8002dae:	3718      	adds	r7, #24
 8002db0:	46bd      	mov	sp, r7
 8002db2:	bd80      	pop	{r7, pc}

08002db4 <get_adc_conversion>:

uint32_t get_adc_conversion(ADC_HandleTypeDef *hadc, ADC_CHAN channel) {
 8002db4:	b580      	push	{r7, lr}
 8002db6:	b084      	sub	sp, #16
 8002db8:	af00      	add	r7, sp, #0
 8002dba:	6078      	str	r0, [r7, #4]
 8002dbc:	460b      	mov	r3, r1
 8002dbe:	70fb      	strb	r3, [r7, #3]

	select_adc_channel(hadc, channel);
 8002dc0:	78fb      	ldrb	r3, [r7, #3]
 8002dc2:	4619      	mov	r1, r3
 8002dc4:	6878      	ldr	r0, [r7, #4]
 8002dc6:	f7ff ff99 	bl	8002cfc <select_adc_channel>

	uint32_t conversion;

	HAL_ADC_Start(hadc);
 8002dca:	6878      	ldr	r0, [r7, #4]
 8002dcc:	f002 f9ba 	bl	8005144 <HAL_ADC_Start>

	// Wait for the conversion to complete
	HAL_ADC_PollForConversion(hadc, HAL_MAX_DELAY);
 8002dd0:	f04f 31ff 	mov.w	r1, #4294967295
 8002dd4:	6878      	ldr	r0, [r7, #4]
 8002dd6:	f002 fa83 	bl	80052e0 <HAL_ADC_PollForConversion>

	// Get the ADC value
	conversion = HAL_ADC_GetValue(hadc);
 8002dda:	6878      	ldr	r0, [r7, #4]
 8002ddc:	f002 fb0b 	bl	80053f6 <HAL_ADC_GetValue>
 8002de0:	60f8      	str	r0, [r7, #12]

	return conversion;
 8002de2:	68fb      	ldr	r3, [r7, #12]
}
 8002de4:	4618      	mov	r0, r3
 8002de6:	3710      	adds	r7, #16
 8002de8:	46bd      	mov	sp, r7
 8002dea:	bd80      	pop	{r7, pc}

08002dec <run_calibration>:


// Update sensors

void run_calibration() {
 8002dec:	b580      	push	{r7, lr}
 8002dee:	af00      	add	r7, sp, #0
    update_minmax(&throttle1);
 8002df0:	4805      	ldr	r0, [pc, #20]	@ (8002e08 <run_calibration+0x1c>)
 8002df2:	f000 f96b 	bl	80030cc <update_minmax>
    update_minmax(&throttle2);
 8002df6:	4805      	ldr	r0, [pc, #20]	@ (8002e0c <run_calibration+0x20>)
 8002df8:	f000 f968 	bl	80030cc <update_minmax>
    update_minmax(&brake);
 8002dfc:	4804      	ldr	r0, [pc, #16]	@ (8002e10 <run_calibration+0x24>)
 8002dfe:	f000 f965 	bl	80030cc <update_minmax>
}
 8002e02:	bf00      	nop
 8002e04:	bd80      	pop	{r7, pc}
 8002e06:	bf00      	nop
 8002e08:	200027ec 	.word	0x200027ec
 8002e0c:	200027f8 	.word	0x200027f8
 8002e10:	20002804 	.word	0x20002804

08002e14 <update_sensor_vals>:

void update_sensor_vals(ADC_HandleTypeDef *hadc1, ADC_HandleTypeDef *hadc3) {
 8002e14:	b580      	push	{r7, lr}
 8002e16:	b082      	sub	sp, #8
 8002e18:	af00      	add	r7, sp, #0
 8002e1a:	6078      	str	r0, [r7, #4]
 8002e1c:	6039      	str	r1, [r7, #0]
    throttle1.raw = get_adc_conversion(hadc1, APPS1);
 8002e1e:	2100      	movs	r1, #0
 8002e20:	6878      	ldr	r0, [r7, #4]
 8002e22:	f7ff ffc7 	bl	8002db4 <get_adc_conversion>
 8002e26:	4603      	mov	r3, r0
 8002e28:	b29a      	uxth	r2, r3
 8002e2a:	4b25      	ldr	r3, [pc, #148]	@ (8002ec0 <update_sensor_vals+0xac>)
 8002e2c:	801a      	strh	r2, [r3, #0]
    update_percent(&throttle1);
 8002e2e:	4824      	ldr	r0, [pc, #144]	@ (8002ec0 <update_sensor_vals+0xac>)
 8002e30:	f000 f92a 	bl	8003088 <update_percent>
    throttle2.raw = get_adc_conversion(hadc3, APPS2);
 8002e34:	2101      	movs	r1, #1
 8002e36:	6838      	ldr	r0, [r7, #0]
 8002e38:	f7ff ffbc 	bl	8002db4 <get_adc_conversion>
 8002e3c:	4603      	mov	r3, r0
 8002e3e:	b29a      	uxth	r2, r3
 8002e40:	4b20      	ldr	r3, [pc, #128]	@ (8002ec4 <update_sensor_vals+0xb0>)
 8002e42:	801a      	strh	r2, [r3, #0]
    update_percent(&throttle2);
 8002e44:	481f      	ldr	r0, [pc, #124]	@ (8002ec4 <update_sensor_vals+0xb0>)
 8002e46:	f000 f91f 	bl	8003088 <update_percent>
    brake.raw = get_adc_conversion(hadc3, BSE);
 8002e4a:	2102      	movs	r1, #2
 8002e4c:	6838      	ldr	r0, [r7, #0]
 8002e4e:	f7ff ffb1 	bl	8002db4 <get_adc_conversion>
 8002e52:	4603      	mov	r3, r0
 8002e54:	b29a      	uxth	r2, r3
 8002e56:	4b1c      	ldr	r3, [pc, #112]	@ (8002ec8 <update_sensor_vals+0xb4>)
 8002e58:	801a      	strh	r2, [r3, #0]
    update_percent(&brake);
 8002e5a:	481b      	ldr	r0, [pc, #108]	@ (8002ec8 <update_sensor_vals+0xb4>)
 8002e5c:	f000 f914 	bl	8003088 <update_percent>
    torque_percentage = get_adc_conversion(hadc1, KNOB2) * 100 / 4095;
 8002e60:	2104      	movs	r1, #4
 8002e62:	6878      	ldr	r0, [r7, #4]
 8002e64:	f7ff ffa6 	bl	8002db4 <get_adc_conversion>
 8002e68:	4603      	mov	r3, r0
 8002e6a:	2264      	movs	r2, #100	@ 0x64
 8002e6c:	fb03 f202 	mul.w	r2, r3, r2
 8002e70:	4b16      	ldr	r3, [pc, #88]	@ (8002ecc <update_sensor_vals+0xb8>)
 8002e72:	fba3 1302 	umull	r1, r3, r3, r2
 8002e76:	1ad2      	subs	r2, r2, r3
 8002e78:	0852      	lsrs	r2, r2, #1
 8002e7a:	4413      	add	r3, r2
 8002e7c:	0adb      	lsrs	r3, r3, #11
 8002e7e:	4a14      	ldr	r2, [pc, #80]	@ (8002ed0 <update_sensor_vals+0xbc>)
 8002e80:	6013      	str	r3, [r2, #0]
     * be immediately stopped completely.
     *
     * It is not necessary to Open the Shutdown Circuit, the motor
     * controller(s) stopping the power to the Motor(s) is sufficient.
     */
    if (has_discrepancy()) {
 8002e82:	f000 f8a5 	bl	8002fd0 <has_discrepancy>
 8002e86:	4603      	mov	r3, r0
 8002e88:	2b00      	cmp	r3, #0
 8002e8a:	d011      	beq.n	8002eb0 <update_sensor_vals+0x9c>
        discrepancy_timer_ms += TMR1_PERIOD_MS;
 8002e8c:	4b11      	ldr	r3, [pc, #68]	@ (8002ed4 <update_sensor_vals+0xc0>)
 8002e8e:	681b      	ldr	r3, [r3, #0]
 8002e90:	3314      	adds	r3, #20
 8002e92:	4a10      	ldr	r2, [pc, #64]	@ (8002ed4 <update_sensor_vals+0xc0>)
 8002e94:	6013      	str	r3, [r2, #0]
        if (discrepancy_timer_ms > MAX_DISCREPANCY_MS && state == DRIVE) {
 8002e96:	4b0f      	ldr	r3, [pc, #60]	@ (8002ed4 <update_sensor_vals+0xc0>)
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	2b64      	cmp	r3, #100	@ 0x64
 8002e9c:	d90b      	bls.n	8002eb6 <update_sensor_vals+0xa2>
 8002e9e:	4b0e      	ldr	r3, [pc, #56]	@ (8002ed8 <update_sensor_vals+0xc4>)
 8002ea0:	781b      	ldrb	r3, [r3, #0]
 8002ea2:	b2db      	uxtb	r3, r3
 8002ea4:	2b03      	cmp	r3, #3
 8002ea6:	d106      	bne.n	8002eb6 <update_sensor_vals+0xa2>
            report_fault(SENSOR_DISCREPANCY);
 8002ea8:	2005      	movs	r0, #5
 8002eaa:	f7fe feb5 	bl	8001c18 <report_fault>
        }
    } else {
        discrepancy_timer_ms = 0;
    }
}
 8002eae:	e002      	b.n	8002eb6 <update_sensor_vals+0xa2>
        discrepancy_timer_ms = 0;
 8002eb0:	4b08      	ldr	r3, [pc, #32]	@ (8002ed4 <update_sensor_vals+0xc0>)
 8002eb2:	2200      	movs	r2, #0
 8002eb4:	601a      	str	r2, [r3, #0]
}
 8002eb6:	bf00      	nop
 8002eb8:	3708      	adds	r7, #8
 8002eba:	46bd      	mov	sp, r7
 8002ebc:	bd80      	pop	{r7, pc}
 8002ebe:	bf00      	nop
 8002ec0:	200027ec 	.word	0x200027ec
 8002ec4:	200027f8 	.word	0x200027f8
 8002ec8:	20002804 	.word	0x20002804
 8002ecc:	00100101 	.word	0x00100101
 8002ed0:	20000094 	.word	0x20000094
 8002ed4:	20002810 	.word	0x20002810
 8002ed8:	20000091 	.word	0x20000091

08002edc <requested_throttle>:

uint16_t requested_throttle(){
 8002edc:	b580      	push	{r7, lr}
 8002ede:	b082      	sub	sp, #8
 8002ee0:	af00      	add	r7, sp, #0
    temp_attenuate();
 8002ee2:	f000 f837 	bl	8002f54 <temp_attenuate>


    uint32_t throttle = ((uint32_t)throttle2.percent * MAX_TORQUE) / 100;  //upscale for MC code
 8002ee6:	4b17      	ldr	r3, [pc, #92]	@ (8002f44 <requested_throttle+0x68>)
 8002ee8:	891b      	ldrh	r3, [r3, #8]
 8002eea:	461a      	mov	r2, r3
 8002eec:	f640 03fc 	movw	r3, #2300	@ 0x8fc
 8002ef0:	fb02 f303 	mul.w	r3, r2, r3
 8002ef4:	4a14      	ldr	r2, [pc, #80]	@ (8002f48 <requested_throttle+0x6c>)
 8002ef6:	fba2 2303 	umull	r2, r3, r2, r3
 8002efa:	095b      	lsrs	r3, r3, #5
 8002efc:	607b      	str	r3, [r7, #4]

    throttle = (throttle * THROTTLE_MULTIPLIER) / 100;       //attenuate for temperature
 8002efe:	4b13      	ldr	r3, [pc, #76]	@ (8002f4c <requested_throttle+0x70>)
 8002f00:	781b      	ldrb	r3, [r3, #0]
 8002f02:	461a      	mov	r2, r3
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	fb02 f303 	mul.w	r3, r2, r3
 8002f0a:	4a0f      	ldr	r2, [pc, #60]	@ (8002f48 <requested_throttle+0x6c>)
 8002f0c:	fba2 2303 	umull	r2, r3, r2, r3
 8002f10:	095b      	lsrs	r3, r3, #5
 8002f12:	607b      	str	r3, [r7, #4]
    throttle = throttle * torque_percentage / 100;
 8002f14:	4b0e      	ldr	r3, [pc, #56]	@ (8002f50 <requested_throttle+0x74>)
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	687a      	ldr	r2, [r7, #4]
 8002f1a:	fb02 f303 	mul.w	r3, r2, r3
 8002f1e:	4a0a      	ldr	r2, [pc, #40]	@ (8002f48 <requested_throttle+0x6c>)
 8002f20:	fba2 2303 	umull	r2, r3, r2, r3
 8002f24:	095b      	lsrs	r3, r3, #5
 8002f26:	607b      	str	r3, [r7, #4]

    if (throttle >= 5.0) {			//case 1: if the pedal is actually being pressed return on a 1:1 scale
 8002f28:	687b      	ldr	r3, [r7, #4]
 8002f2a:	2b04      	cmp	r3, #4
 8002f2c:	d902      	bls.n	8002f34 <requested_throttle+0x58>
    	return (uint16_t)throttle;
 8002f2e:	687b      	ldr	r3, [r7, #4]
 8002f30:	b29b      	uxth	r3, r3
 8002f32:	e003      	b.n	8002f3c <requested_throttle+0x60>
    } else {						//case 2: if we don't know if it's being pressed or just car shaking
    	return (uint16_t)throttle / 2;	//return on 1:1/2 scale
 8002f34:	687b      	ldr	r3, [r7, #4]
 8002f36:	b29b      	uxth	r3, r3
 8002f38:	085b      	lsrs	r3, r3, #1
 8002f3a:	b29b      	uxth	r3, r3
    }
	return 1;
}
 8002f3c:	4618      	mov	r0, r3
 8002f3e:	3708      	adds	r7, #8
 8002f40:	46bd      	mov	sp, r7
 8002f42:	bd80      	pop	{r7, pc}
 8002f44:	200027f8 	.word	0x200027f8
 8002f48:	51eb851f 	.word	0x51eb851f
 8002f4c:	20000098 	.word	0x20000098
 8002f50:	20000094 	.word	0x20000094

08002f54 <temp_attenuate>:

void temp_attenuate() {
 8002f54:	b480      	push	{r7}
 8002f56:	b083      	sub	sp, #12
 8002f58:	af00      	add	r7, sp, #0
    int t = PACK_TEMP - 50;
 8002f5a:	4b11      	ldr	r3, [pc, #68]	@ (8002fa0 <temp_attenuate+0x4c>)
 8002f5c:	781b      	ldrb	r3, [r3, #0]
 8002f5e:	b2db      	uxtb	r3, r3
 8002f60:	3b32      	subs	r3, #50	@ 0x32
 8002f62:	607b      	str	r3, [r7, #4]
    if (t < 0) {
 8002f64:	687b      	ldr	r3, [r7, #4]
 8002f66:	2b00      	cmp	r3, #0
 8002f68:	da03      	bge.n	8002f72 <temp_attenuate+0x1e>
        THROTTLE_MULTIPLIER = 100;
 8002f6a:	4b0e      	ldr	r3, [pc, #56]	@ (8002fa4 <temp_attenuate+0x50>)
 8002f6c:	2264      	movs	r2, #100	@ 0x64
 8002f6e:	701a      	strb	r2, [r3, #0]
    } else if (t < 8) {
        THROTTLE_MULTIPLIER = THROTTLE_MAP[t];
    } else if (t >= 8) {
        THROTTLE_MULTIPLIER = THROTTLE_MAP[7];
    }
}
 8002f70:	e00f      	b.n	8002f92 <temp_attenuate+0x3e>
    } else if (t < 8) {
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	2b07      	cmp	r3, #7
 8002f76:	dc06      	bgt.n	8002f86 <temp_attenuate+0x32>
        THROTTLE_MULTIPLIER = THROTTLE_MAP[t];
 8002f78:	4a0b      	ldr	r2, [pc, #44]	@ (8002fa8 <temp_attenuate+0x54>)
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	4413      	add	r3, r2
 8002f7e:	781a      	ldrb	r2, [r3, #0]
 8002f80:	4b08      	ldr	r3, [pc, #32]	@ (8002fa4 <temp_attenuate+0x50>)
 8002f82:	701a      	strb	r2, [r3, #0]
}
 8002f84:	e005      	b.n	8002f92 <temp_attenuate+0x3e>
    } else if (t >= 8) {
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	2b07      	cmp	r3, #7
 8002f8a:	dd02      	ble.n	8002f92 <temp_attenuate+0x3e>
        THROTTLE_MULTIPLIER = THROTTLE_MAP[7];
 8002f8c:	2205      	movs	r2, #5
 8002f8e:	4b05      	ldr	r3, [pc, #20]	@ (8002fa4 <temp_attenuate+0x50>)
 8002f90:	701a      	strb	r2, [r3, #0]
}
 8002f92:	bf00      	nop
 8002f94:	370c      	adds	r7, #12
 8002f96:	46bd      	mov	sp, r7
 8002f98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f9c:	4770      	bx	lr
 8002f9e:	bf00      	nop
 8002fa0:	20000119 	.word	0x20000119
 8002fa4:	20000098 	.word	0x20000098
 8002fa8:	0800ec94 	.word	0x0800ec94

08002fac <sensors_calibrated>:

bool sensors_calibrated(){
 8002fac:	b480      	push	{r7}
 8002fae:	af00      	add	r7, sp, #0
    if(throttle2.range < APPS1_MIN_RANGE) return 0;
 8002fb0:	4b06      	ldr	r3, [pc, #24]	@ (8002fcc <sensors_calibrated+0x20>)
 8002fb2:	88db      	ldrh	r3, [r3, #6]
 8002fb4:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 8002fb8:	d201      	bcs.n	8002fbe <sensors_calibrated+0x12>
 8002fba:	2300      	movs	r3, #0
 8002fbc:	e000      	b.n	8002fc0 <sensors_calibrated+0x14>
    if(brake.range < BRAKE_MIN_RANGE) return 0;

    return 1;
 8002fbe:	2301      	movs	r3, #1
}
 8002fc0:	4618      	mov	r0, r3
 8002fc2:	46bd      	mov	sp, r7
 8002fc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fc8:	4770      	bx	lr
 8002fca:	bf00      	nop
 8002fcc:	200027f8 	.word	0x200027f8

08002fd0 <has_discrepancy>:
}

// check differential between the throttle sensors
// returns true only if the sensor discrepancy is > 10%
// Note: after verifying there's no discrepancy, can use either sensor(1 or 2) for remaining checks
bool has_discrepancy() {
 8002fd0:	b480      	push	{r7}
 8002fd2:	af00      	add	r7, sp, #0
    if(abs((int)throttle1.percent - (int)throttle2.percent) > 10) return 1;  //percentage discrepancy
 8002fd4:	4b15      	ldr	r3, [pc, #84]	@ (800302c <has_discrepancy+0x5c>)
 8002fd6:	891b      	ldrh	r3, [r3, #8]
 8002fd8:	461a      	mov	r2, r3
 8002fda:	4b15      	ldr	r3, [pc, #84]	@ (8003030 <has_discrepancy+0x60>)
 8002fdc:	891b      	ldrh	r3, [r3, #8]
 8002fde:	1ad3      	subs	r3, r2, r3
 8002fe0:	2b00      	cmp	r3, #0
 8002fe2:	bfb8      	it	lt
 8002fe4:	425b      	neglt	r3, r3
 8002fe6:	2b0a      	cmp	r3, #10
 8002fe8:	dd01      	ble.n	8002fee <has_discrepancy+0x1e>
 8002fea:	2301      	movs	r3, #1
 8002fec:	e019      	b.n	8003022 <has_discrepancy+0x52>

    return (throttle1.raw < APPS_OPEN_THRESH)
 8002fee:	4b0f      	ldr	r3, [pc, #60]	@ (800302c <has_discrepancy+0x5c>)
 8002ff0:	881b      	ldrh	r3, [r3, #0]
        || (throttle1.raw > APPS_SHORT_THRESH)
        || (throttle2.raw < APPS_OPEN_THRESH)
        || (throttle2.raw > APPS_SHORT_THRESH);   //wiring fault
 8002ff2:	2bc7      	cmp	r3, #199	@ 0xc7
 8002ff4:	d90f      	bls.n	8003016 <has_discrepancy+0x46>
        || (throttle1.raw > APPS_SHORT_THRESH)
 8002ff6:	4b0d      	ldr	r3, [pc, #52]	@ (800302c <has_discrepancy+0x5c>)
 8002ff8:	881b      	ldrh	r3, [r3, #0]
 8002ffa:	f640 723c 	movw	r2, #3900	@ 0xf3c
 8002ffe:	4293      	cmp	r3, r2
 8003000:	d809      	bhi.n	8003016 <has_discrepancy+0x46>
        || (throttle2.raw < APPS_OPEN_THRESH)
 8003002:	4b0b      	ldr	r3, [pc, #44]	@ (8003030 <has_discrepancy+0x60>)
 8003004:	881b      	ldrh	r3, [r3, #0]
 8003006:	2bc7      	cmp	r3, #199	@ 0xc7
 8003008:	d905      	bls.n	8003016 <has_discrepancy+0x46>
        || (throttle2.raw > APPS_SHORT_THRESH);   //wiring fault
 800300a:	4b09      	ldr	r3, [pc, #36]	@ (8003030 <has_discrepancy+0x60>)
 800300c:	881b      	ldrh	r3, [r3, #0]
 800300e:	f640 723c 	movw	r2, #3900	@ 0xf3c
 8003012:	4293      	cmp	r3, r2
 8003014:	d901      	bls.n	800301a <has_discrepancy+0x4a>
 8003016:	2301      	movs	r3, #1
 8003018:	e000      	b.n	800301c <has_discrepancy+0x4c>
 800301a:	2300      	movs	r3, #0
 800301c:	f003 0301 	and.w	r3, r3, #1
 8003020:	b2db      	uxtb	r3, r3
	return false;

}
 8003022:	4618      	mov	r0, r3
 8003024:	46bd      	mov	sp, r7
 8003026:	f85d 7b04 	ldr.w	r7, [sp], #4
 800302a:	4770      	bx	lr
 800302c:	200027ec 	.word	0x200027ec
 8003030:	200027f8 	.word	0x200027f8

08003034 <brake_implausible>:

// check for soft BSPD
// see EV.5.7 of FSAE 2022 rulebook
bool brake_implausible() {
 8003034:	b480      	push	{r7}
 8003036:	af00      	add	r7, sp, #0
    if (error == BRAKE_IMPLAUSIBLE) {
 8003038:	4b10      	ldr	r3, [pc, #64]	@ (800307c <brake_implausible+0x48>)
 800303a:	781b      	ldrb	r3, [r3, #0]
 800303c:	b2db      	uxtb	r3, r3
 800303e:	2b06      	cmp	r3, #6
 8003040:	d107      	bne.n	8003052 <brake_implausible+0x1e>
        // once brake implausibility detected,
        // can only revert to normal if throttle unapplied
        return !(throttle1.percent <= APPS1_BSPD_RESET);
 8003042:	4b0f      	ldr	r3, [pc, #60]	@ (8003080 <brake_implausible+0x4c>)
 8003044:	891b      	ldrh	r3, [r3, #8]
 8003046:	2b05      	cmp	r3, #5
 8003048:	bf8c      	ite	hi
 800304a:	2301      	movhi	r3, #1
 800304c:	2300      	movls	r3, #0
 800304e:	b2db      	uxtb	r3, r3
 8003050:	e00e      	b.n	8003070 <brake_implausible+0x3c>
    }

    // if both brake and throttle applied, brake implausible
    //return (temp_brake > 0 && temp_throttle > throttle_range * 0.25);
    return (brake.raw >= BRAKE_BSPD_THRESHOLD && throttle1.percent > APPS1_BSPD_THRESHOLD);
 8003052:	4b0c      	ldr	r3, [pc, #48]	@ (8003084 <brake_implausible+0x50>)
 8003054:	881b      	ldrh	r3, [r3, #0]
 8003056:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800305a:	d305      	bcc.n	8003068 <brake_implausible+0x34>
 800305c:	4b08      	ldr	r3, [pc, #32]	@ (8003080 <brake_implausible+0x4c>)
 800305e:	891b      	ldrh	r3, [r3, #8]
 8003060:	2b19      	cmp	r3, #25
 8003062:	d901      	bls.n	8003068 <brake_implausible+0x34>
 8003064:	2301      	movs	r3, #1
 8003066:	e000      	b.n	800306a <brake_implausible+0x36>
 8003068:	2300      	movs	r3, #0
 800306a:	f003 0301 	and.w	r3, r3, #1
 800306e:	b2db      	uxtb	r3, r3
	return false;
}
 8003070:	4618      	mov	r0, r3
 8003072:	46bd      	mov	sp, r7
 8003074:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003078:	4770      	bx	lr
 800307a:	bf00      	nop
 800307c:	2000022e 	.word	0x2000022e
 8003080:	200027ec 	.word	0x200027ec
 8003084:	20002804 	.word	0x20002804

08003088 <update_percent>:

void update_percent(CALIBRATED_SENSOR_t* sensor){
 8003088:	b580      	push	{r7, lr}
 800308a:	b084      	sub	sp, #16
 800308c:	af00      	add	r7, sp, #0
 800308e:	6078      	str	r0, [r7, #4]
    uint32_t raw = (uint32_t)clamp(sensor->raw, sensor->min, sensor->max);
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	8818      	ldrh	r0, [r3, #0]
 8003094:	687b      	ldr	r3, [r7, #4]
 8003096:	8859      	ldrh	r1, [r3, #2]
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	889b      	ldrh	r3, [r3, #4]
 800309c:	461a      	mov	r2, r3
 800309e:	f000 f889 	bl	80031b4 <clamp>
 80030a2:	4603      	mov	r3, r0
 80030a4:	60fb      	str	r3, [r7, #12]
    sensor->percent = (uint16_t)((100*(raw-sensor->min))/((sensor->range)));
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	885b      	ldrh	r3, [r3, #2]
 80030aa:	461a      	mov	r2, r3
 80030ac:	68fb      	ldr	r3, [r7, #12]
 80030ae:	1a9b      	subs	r3, r3, r2
 80030b0:	2264      	movs	r2, #100	@ 0x64
 80030b2:	fb02 f303 	mul.w	r3, r2, r3
 80030b6:	687a      	ldr	r2, [r7, #4]
 80030b8:	88d2      	ldrh	r2, [r2, #6]
 80030ba:	fbb3 f3f2 	udiv	r3, r3, r2
 80030be:	b29a      	uxth	r2, r3
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	811a      	strh	r2, [r3, #8]
}
 80030c4:	bf00      	nop
 80030c6:	3710      	adds	r7, #16
 80030c8:	46bd      	mov	sp, r7
 80030ca:	bd80      	pop	{r7, pc}

080030cc <update_minmax>:

void update_minmax(CALIBRATED_SENSOR_t* sensor){
 80030cc:	b480      	push	{r7}
 80030ce:	b083      	sub	sp, #12
 80030d0:	af00      	add	r7, sp, #0
 80030d2:	6078      	str	r0, [r7, #4]
    if (sensor->raw > sensor->max) sensor->max = sensor->raw;
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	881a      	ldrh	r2, [r3, #0]
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	889b      	ldrh	r3, [r3, #4]
 80030dc:	429a      	cmp	r2, r3
 80030de:	d904      	bls.n	80030ea <update_minmax+0x1e>
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	881a      	ldrh	r2, [r3, #0]
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	809a      	strh	r2, [r3, #4]
 80030e8:	e009      	b.n	80030fe <update_minmax+0x32>
    else if (sensor->raw < sensor->min) sensor->min = sensor->raw;
 80030ea:	687b      	ldr	r3, [r7, #4]
 80030ec:	881a      	ldrh	r2, [r3, #0]
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	885b      	ldrh	r3, [r3, #2]
 80030f2:	429a      	cmp	r2, r3
 80030f4:	d203      	bcs.n	80030fe <update_minmax+0x32>
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	881a      	ldrh	r2, [r3, #0]
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	805a      	strh	r2, [r3, #2]
    if(sensor->max > sensor->min) sensor->range = sensor->max - sensor->min;
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	889a      	ldrh	r2, [r3, #4]
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	885b      	ldrh	r3, [r3, #2]
 8003106:	429a      	cmp	r2, r3
 8003108:	d907      	bls.n	800311a <update_minmax+0x4e>
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	889a      	ldrh	r2, [r3, #4]
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	885b      	ldrh	r3, [r3, #2]
 8003112:	1ad3      	subs	r3, r2, r3
 8003114:	b29a      	uxth	r2, r3
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	80da      	strh	r2, [r3, #6]
}
 800311a:	bf00      	nop
 800311c:	370c      	adds	r7, #12
 800311e:	46bd      	mov	sp, r7
 8003120:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003124:	4770      	bx	lr
	...

08003128 <add_apps_deadzone>:

void add_apps_deadzone(){
 8003128:	b580      	push	{r7, lr}
 800312a:	af00      	add	r7, sp, #0
	add_deadzone(&throttle1, 5);
 800312c:	2105      	movs	r1, #5
 800312e:	4806      	ldr	r0, [pc, #24]	@ (8003148 <add_apps_deadzone+0x20>)
 8003130:	f000 f810 	bl	8003154 <add_deadzone>
	add_deadzone(&throttle2, 5);
 8003134:	2105      	movs	r1, #5
 8003136:	4805      	ldr	r0, [pc, #20]	@ (800314c <add_apps_deadzone+0x24>)
 8003138:	f000 f80c 	bl	8003154 <add_deadzone>
	add_deadzone(&brake, 10);
 800313c:	210a      	movs	r1, #10
 800313e:	4804      	ldr	r0, [pc, #16]	@ (8003150 <add_apps_deadzone+0x28>)
 8003140:	f000 f808 	bl	8003154 <add_deadzone>
}
 8003144:	bf00      	nop
 8003146:	bd80      	pop	{r7, pc}
 8003148:	200027ec 	.word	0x200027ec
 800314c:	200027f8 	.word	0x200027f8
 8003150:	20002804 	.word	0x20002804

08003154 <add_deadzone>:

void add_deadzone(CALIBRATED_SENSOR_t* sensor, uint16_t deadzone_percentage){
 8003154:	b480      	push	{r7}
 8003156:	b085      	sub	sp, #20
 8003158:	af00      	add	r7, sp, #0
 800315a:	6078      	str	r0, [r7, #4]
 800315c:	460b      	mov	r3, r1
 800315e:	807b      	strh	r3, [r7, #2]
	uint16_t deadzone = sensor->range * deadzone_percentage / 100;
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	88db      	ldrh	r3, [r3, #6]
 8003164:	461a      	mov	r2, r3
 8003166:	887b      	ldrh	r3, [r7, #2]
 8003168:	fb02 f303 	mul.w	r3, r2, r3
 800316c:	4a10      	ldr	r2, [pc, #64]	@ (80031b0 <add_deadzone+0x5c>)
 800316e:	fb82 1203 	smull	r1, r2, r2, r3
 8003172:	1152      	asrs	r2, r2, #5
 8003174:	17db      	asrs	r3, r3, #31
 8003176:	1ad3      	subs	r3, r2, r3
 8003178:	81fb      	strh	r3, [r7, #14]

	// catch funky cases that would end up with a negative or 0 range
	if(deadzone >= sensor->range) return;
 800317a:	687b      	ldr	r3, [r7, #4]
 800317c:	88db      	ldrh	r3, [r3, #6]
 800317e:	89fa      	ldrh	r2, [r7, #14]
 8003180:	429a      	cmp	r2, r3
 8003182:	d20e      	bcs.n	80031a2 <add_deadzone+0x4e>

	sensor->min += deadzone;
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	885a      	ldrh	r2, [r3, #2]
 8003188:	89fb      	ldrh	r3, [r7, #14]
 800318a:	4413      	add	r3, r2
 800318c:	b29a      	uxth	r2, r3
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	805a      	strh	r2, [r3, #2]
	sensor->range -= deadzone;
 8003192:	687b      	ldr	r3, [r7, #4]
 8003194:	88da      	ldrh	r2, [r3, #6]
 8003196:	89fb      	ldrh	r3, [r7, #14]
 8003198:	1ad3      	subs	r3, r2, r3
 800319a:	b29a      	uxth	r2, r3
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	80da      	strh	r2, [r3, #6]
 80031a0:	e000      	b.n	80031a4 <add_deadzone+0x50>
	if(deadzone >= sensor->range) return;
 80031a2:	bf00      	nop
}
 80031a4:	3714      	adds	r7, #20
 80031a6:	46bd      	mov	sp, r7
 80031a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031ac:	4770      	bx	lr
 80031ae:	bf00      	nop
 80031b0:	51eb851f 	.word	0x51eb851f

080031b4 <clamp>:

uint16_t clamp(uint16_t in, uint16_t min, uint16_t max){
 80031b4:	b480      	push	{r7}
 80031b6:	b083      	sub	sp, #12
 80031b8:	af00      	add	r7, sp, #0
 80031ba:	4603      	mov	r3, r0
 80031bc:	80fb      	strh	r3, [r7, #6]
 80031be:	460b      	mov	r3, r1
 80031c0:	80bb      	strh	r3, [r7, #4]
 80031c2:	4613      	mov	r3, r2
 80031c4:	807b      	strh	r3, [r7, #2]
    if(in > max) return max;
 80031c6:	88fa      	ldrh	r2, [r7, #6]
 80031c8:	887b      	ldrh	r3, [r7, #2]
 80031ca:	429a      	cmp	r2, r3
 80031cc:	d901      	bls.n	80031d2 <clamp+0x1e>
 80031ce:	887b      	ldrh	r3, [r7, #2]
 80031d0:	e006      	b.n	80031e0 <clamp+0x2c>
    if(in < min) return min;
 80031d2:	88fa      	ldrh	r2, [r7, #6]
 80031d4:	88bb      	ldrh	r3, [r7, #4]
 80031d6:	429a      	cmp	r2, r3
 80031d8:	d201      	bcs.n	80031de <clamp+0x2a>
 80031da:	88bb      	ldrh	r3, [r7, #4]
 80031dc:	e000      	b.n	80031e0 <clamp+0x2c>
    return in;
 80031de:	88fb      	ldrh	r3, [r7, #6]
}
 80031e0:	4618      	mov	r0, r3
 80031e2:	370c      	adds	r7, #12
 80031e4:	46bd      	mov	sp, r7
 80031e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031ea:	4770      	bx	lr

080031ec <print>:
 80031ec:	b480      	push	{r7}
 80031ee:	b083      	sub	sp, #12
 80031f0:	af00      	add	r7, sp, #0
 80031f2:	6078      	str	r0, [r7, #4]
 80031f4:	bf00      	nop
 80031f6:	370c      	adds	r7, #12
 80031f8:	46bd      	mov	sp, r7
 80031fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031fe:	4770      	bx	lr

08003200 <HAL_MspInit>:
 8003200:	b480      	push	{r7}
 8003202:	b083      	sub	sp, #12
 8003204:	af00      	add	r7, sp, #0
 8003206:	4b0f      	ldr	r3, [pc, #60]	@ (8003244 <HAL_MspInit+0x44>)
 8003208:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800320a:	4a0e      	ldr	r2, [pc, #56]	@ (8003244 <HAL_MspInit+0x44>)
 800320c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003210:	6413      	str	r3, [r2, #64]	@ 0x40
 8003212:	4b0c      	ldr	r3, [pc, #48]	@ (8003244 <HAL_MspInit+0x44>)
 8003214:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003216:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800321a:	607b      	str	r3, [r7, #4]
 800321c:	687b      	ldr	r3, [r7, #4]
 800321e:	4b09      	ldr	r3, [pc, #36]	@ (8003244 <HAL_MspInit+0x44>)
 8003220:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003222:	4a08      	ldr	r2, [pc, #32]	@ (8003244 <HAL_MspInit+0x44>)
 8003224:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003228:	6453      	str	r3, [r2, #68]	@ 0x44
 800322a:	4b06      	ldr	r3, [pc, #24]	@ (8003244 <HAL_MspInit+0x44>)
 800322c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800322e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003232:	603b      	str	r3, [r7, #0]
 8003234:	683b      	ldr	r3, [r7, #0]
 8003236:	bf00      	nop
 8003238:	370c      	adds	r7, #12
 800323a:	46bd      	mov	sp, r7
 800323c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003240:	4770      	bx	lr
 8003242:	bf00      	nop
 8003244:	40023800 	.word	0x40023800

08003248 <HAL_ADC_MspInit>:
 8003248:	b580      	push	{r7, lr}
 800324a:	b08c      	sub	sp, #48	@ 0x30
 800324c:	af00      	add	r7, sp, #0
 800324e:	6078      	str	r0, [r7, #4]
 8003250:	f107 031c 	add.w	r3, r7, #28
 8003254:	2200      	movs	r2, #0
 8003256:	601a      	str	r2, [r3, #0]
 8003258:	605a      	str	r2, [r3, #4]
 800325a:	609a      	str	r2, [r3, #8]
 800325c:	60da      	str	r2, [r3, #12]
 800325e:	611a      	str	r2, [r3, #16]
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	681b      	ldr	r3, [r3, #0]
 8003264:	4a5b      	ldr	r2, [pc, #364]	@ (80033d4 <HAL_ADC_MspInit+0x18c>)
 8003266:	4293      	cmp	r3, r2
 8003268:	d154      	bne.n	8003314 <HAL_ADC_MspInit+0xcc>
 800326a:	4b5b      	ldr	r3, [pc, #364]	@ (80033d8 <HAL_ADC_MspInit+0x190>)
 800326c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800326e:	4a5a      	ldr	r2, [pc, #360]	@ (80033d8 <HAL_ADC_MspInit+0x190>)
 8003270:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003274:	6453      	str	r3, [r2, #68]	@ 0x44
 8003276:	4b58      	ldr	r3, [pc, #352]	@ (80033d8 <HAL_ADC_MspInit+0x190>)
 8003278:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800327a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800327e:	61bb      	str	r3, [r7, #24]
 8003280:	69bb      	ldr	r3, [r7, #24]
 8003282:	4b55      	ldr	r3, [pc, #340]	@ (80033d8 <HAL_ADC_MspInit+0x190>)
 8003284:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003286:	4a54      	ldr	r2, [pc, #336]	@ (80033d8 <HAL_ADC_MspInit+0x190>)
 8003288:	f043 0304 	orr.w	r3, r3, #4
 800328c:	6313      	str	r3, [r2, #48]	@ 0x30
 800328e:	4b52      	ldr	r3, [pc, #328]	@ (80033d8 <HAL_ADC_MspInit+0x190>)
 8003290:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003292:	f003 0304 	and.w	r3, r3, #4
 8003296:	617b      	str	r3, [r7, #20]
 8003298:	697b      	ldr	r3, [r7, #20]
 800329a:	230d      	movs	r3, #13
 800329c:	61fb      	str	r3, [r7, #28]
 800329e:	2303      	movs	r3, #3
 80032a0:	623b      	str	r3, [r7, #32]
 80032a2:	2300      	movs	r3, #0
 80032a4:	627b      	str	r3, [r7, #36]	@ 0x24
 80032a6:	f107 031c 	add.w	r3, r7, #28
 80032aa:	4619      	mov	r1, r3
 80032ac:	484b      	ldr	r0, [pc, #300]	@ (80033dc <HAL_ADC_MspInit+0x194>)
 80032ae:	f003 fe0f 	bl	8006ed0 <HAL_GPIO_Init>
 80032b2:	4b4b      	ldr	r3, [pc, #300]	@ (80033e0 <HAL_ADC_MspInit+0x198>)
 80032b4:	4a4b      	ldr	r2, [pc, #300]	@ (80033e4 <HAL_ADC_MspInit+0x19c>)
 80032b6:	601a      	str	r2, [r3, #0]
 80032b8:	4b49      	ldr	r3, [pc, #292]	@ (80033e0 <HAL_ADC_MspInit+0x198>)
 80032ba:	2200      	movs	r2, #0
 80032bc:	605a      	str	r2, [r3, #4]
 80032be:	4b48      	ldr	r3, [pc, #288]	@ (80033e0 <HAL_ADC_MspInit+0x198>)
 80032c0:	2200      	movs	r2, #0
 80032c2:	609a      	str	r2, [r3, #8]
 80032c4:	4b46      	ldr	r3, [pc, #280]	@ (80033e0 <HAL_ADC_MspInit+0x198>)
 80032c6:	2200      	movs	r2, #0
 80032c8:	60da      	str	r2, [r3, #12]
 80032ca:	4b45      	ldr	r3, [pc, #276]	@ (80033e0 <HAL_ADC_MspInit+0x198>)
 80032cc:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80032d0:	611a      	str	r2, [r3, #16]
 80032d2:	4b43      	ldr	r3, [pc, #268]	@ (80033e0 <HAL_ADC_MspInit+0x198>)
 80032d4:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80032d8:	615a      	str	r2, [r3, #20]
 80032da:	4b41      	ldr	r3, [pc, #260]	@ (80033e0 <HAL_ADC_MspInit+0x198>)
 80032dc:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80032e0:	619a      	str	r2, [r3, #24]
 80032e2:	4b3f      	ldr	r3, [pc, #252]	@ (80033e0 <HAL_ADC_MspInit+0x198>)
 80032e4:	2200      	movs	r2, #0
 80032e6:	61da      	str	r2, [r3, #28]
 80032e8:	4b3d      	ldr	r3, [pc, #244]	@ (80033e0 <HAL_ADC_MspInit+0x198>)
 80032ea:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80032ee:	621a      	str	r2, [r3, #32]
 80032f0:	4b3b      	ldr	r3, [pc, #236]	@ (80033e0 <HAL_ADC_MspInit+0x198>)
 80032f2:	2200      	movs	r2, #0
 80032f4:	625a      	str	r2, [r3, #36]	@ 0x24
 80032f6:	483a      	ldr	r0, [pc, #232]	@ (80033e0 <HAL_ADC_MspInit+0x198>)
 80032f8:	f003 fa44 	bl	8006784 <HAL_DMA_Init>
 80032fc:	4603      	mov	r3, r0
 80032fe:	2b00      	cmp	r3, #0
 8003300:	d001      	beq.n	8003306 <HAL_ADC_MspInit+0xbe>
 8003302:	f7ff fcc3 	bl	8002c8c <Error_Handler>
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	4a35      	ldr	r2, [pc, #212]	@ (80033e0 <HAL_ADC_MspInit+0x198>)
 800330a:	639a      	str	r2, [r3, #56]	@ 0x38
 800330c:	4a34      	ldr	r2, [pc, #208]	@ (80033e0 <HAL_ADC_MspInit+0x198>)
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	6393      	str	r3, [r2, #56]	@ 0x38
 8003312:	e05b      	b.n	80033cc <HAL_ADC_MspInit+0x184>
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	4a33      	ldr	r2, [pc, #204]	@ (80033e8 <HAL_ADC_MspInit+0x1a0>)
 800331a:	4293      	cmp	r3, r2
 800331c:	d156      	bne.n	80033cc <HAL_ADC_MspInit+0x184>
 800331e:	4b2e      	ldr	r3, [pc, #184]	@ (80033d8 <HAL_ADC_MspInit+0x190>)
 8003320:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003322:	4a2d      	ldr	r2, [pc, #180]	@ (80033d8 <HAL_ADC_MspInit+0x190>)
 8003324:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8003328:	6453      	str	r3, [r2, #68]	@ 0x44
 800332a:	4b2b      	ldr	r3, [pc, #172]	@ (80033d8 <HAL_ADC_MspInit+0x190>)
 800332c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800332e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003332:	613b      	str	r3, [r7, #16]
 8003334:	693b      	ldr	r3, [r7, #16]
 8003336:	4b28      	ldr	r3, [pc, #160]	@ (80033d8 <HAL_ADC_MspInit+0x190>)
 8003338:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800333a:	4a27      	ldr	r2, [pc, #156]	@ (80033d8 <HAL_ADC_MspInit+0x190>)
 800333c:	f043 0320 	orr.w	r3, r3, #32
 8003340:	6313      	str	r3, [r2, #48]	@ 0x30
 8003342:	4b25      	ldr	r3, [pc, #148]	@ (80033d8 <HAL_ADC_MspInit+0x190>)
 8003344:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003346:	f003 0320 	and.w	r3, r3, #32
 800334a:	60fb      	str	r3, [r7, #12]
 800334c:	68fb      	ldr	r3, [r7, #12]
 800334e:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 8003352:	61fb      	str	r3, [r7, #28]
 8003354:	2303      	movs	r3, #3
 8003356:	623b      	str	r3, [r7, #32]
 8003358:	2300      	movs	r3, #0
 800335a:	627b      	str	r3, [r7, #36]	@ 0x24
 800335c:	f107 031c 	add.w	r3, r7, #28
 8003360:	4619      	mov	r1, r3
 8003362:	4822      	ldr	r0, [pc, #136]	@ (80033ec <HAL_ADC_MspInit+0x1a4>)
 8003364:	f003 fdb4 	bl	8006ed0 <HAL_GPIO_Init>
 8003368:	4b21      	ldr	r3, [pc, #132]	@ (80033f0 <HAL_ADC_MspInit+0x1a8>)
 800336a:	4a22      	ldr	r2, [pc, #136]	@ (80033f4 <HAL_ADC_MspInit+0x1ac>)
 800336c:	601a      	str	r2, [r3, #0]
 800336e:	4b20      	ldr	r3, [pc, #128]	@ (80033f0 <HAL_ADC_MspInit+0x1a8>)
 8003370:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8003374:	605a      	str	r2, [r3, #4]
 8003376:	4b1e      	ldr	r3, [pc, #120]	@ (80033f0 <HAL_ADC_MspInit+0x1a8>)
 8003378:	2200      	movs	r2, #0
 800337a:	609a      	str	r2, [r3, #8]
 800337c:	4b1c      	ldr	r3, [pc, #112]	@ (80033f0 <HAL_ADC_MspInit+0x1a8>)
 800337e:	2200      	movs	r2, #0
 8003380:	60da      	str	r2, [r3, #12]
 8003382:	4b1b      	ldr	r3, [pc, #108]	@ (80033f0 <HAL_ADC_MspInit+0x1a8>)
 8003384:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8003388:	611a      	str	r2, [r3, #16]
 800338a:	4b19      	ldr	r3, [pc, #100]	@ (80033f0 <HAL_ADC_MspInit+0x1a8>)
 800338c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8003390:	615a      	str	r2, [r3, #20]
 8003392:	4b17      	ldr	r3, [pc, #92]	@ (80033f0 <HAL_ADC_MspInit+0x1a8>)
 8003394:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8003398:	619a      	str	r2, [r3, #24]
 800339a:	4b15      	ldr	r3, [pc, #84]	@ (80033f0 <HAL_ADC_MspInit+0x1a8>)
 800339c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80033a0:	61da      	str	r2, [r3, #28]
 80033a2:	4b13      	ldr	r3, [pc, #76]	@ (80033f0 <HAL_ADC_MspInit+0x1a8>)
 80033a4:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80033a8:	621a      	str	r2, [r3, #32]
 80033aa:	4b11      	ldr	r3, [pc, #68]	@ (80033f0 <HAL_ADC_MspInit+0x1a8>)
 80033ac:	2200      	movs	r2, #0
 80033ae:	625a      	str	r2, [r3, #36]	@ 0x24
 80033b0:	480f      	ldr	r0, [pc, #60]	@ (80033f0 <HAL_ADC_MspInit+0x1a8>)
 80033b2:	f003 f9e7 	bl	8006784 <HAL_DMA_Init>
 80033b6:	4603      	mov	r3, r0
 80033b8:	2b00      	cmp	r3, #0
 80033ba:	d001      	beq.n	80033c0 <HAL_ADC_MspInit+0x178>
 80033bc:	f7ff fc66 	bl	8002c8c <Error_Handler>
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	4a0b      	ldr	r2, [pc, #44]	@ (80033f0 <HAL_ADC_MspInit+0x1a8>)
 80033c4:	639a      	str	r2, [r3, #56]	@ 0x38
 80033c6:	4a0a      	ldr	r2, [pc, #40]	@ (80033f0 <HAL_ADC_MspInit+0x1a8>)
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	6393      	str	r3, [r2, #56]	@ 0x38
 80033cc:	bf00      	nop
 80033ce:	3730      	adds	r7, #48	@ 0x30
 80033d0:	46bd      	mov	sp, r7
 80033d2:	bd80      	pop	{r7, pc}
 80033d4:	40012000 	.word	0x40012000
 80033d8:	40023800 	.word	0x40023800
 80033dc:	40020800 	.word	0x40020800
 80033e0:	200022c8 	.word	0x200022c8
 80033e4:	40026410 	.word	0x40026410
 80033e8:	40012200 	.word	0x40012200
 80033ec:	40021400 	.word	0x40021400
 80033f0:	20002328 	.word	0x20002328
 80033f4:	40026428 	.word	0x40026428

080033f8 <HAL_CAN_MspInit>:
 80033f8:	b580      	push	{r7, lr}
 80033fa:	b08c      	sub	sp, #48	@ 0x30
 80033fc:	af00      	add	r7, sp, #0
 80033fe:	6078      	str	r0, [r7, #4]
 8003400:	f107 031c 	add.w	r3, r7, #28
 8003404:	2200      	movs	r2, #0
 8003406:	601a      	str	r2, [r3, #0]
 8003408:	605a      	str	r2, [r3, #4]
 800340a:	609a      	str	r2, [r3, #8]
 800340c:	60da      	str	r2, [r3, #12]
 800340e:	611a      	str	r2, [r3, #16]
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	681b      	ldr	r3, [r3, #0]
 8003414:	4a42      	ldr	r2, [pc, #264]	@ (8003520 <HAL_CAN_MspInit+0x128>)
 8003416:	4293      	cmp	r3, r2
 8003418:	d13a      	bne.n	8003490 <HAL_CAN_MspInit+0x98>
 800341a:	4b42      	ldr	r3, [pc, #264]	@ (8003524 <HAL_CAN_MspInit+0x12c>)
 800341c:	681b      	ldr	r3, [r3, #0]
 800341e:	3301      	adds	r3, #1
 8003420:	4a40      	ldr	r2, [pc, #256]	@ (8003524 <HAL_CAN_MspInit+0x12c>)
 8003422:	6013      	str	r3, [r2, #0]
 8003424:	4b3f      	ldr	r3, [pc, #252]	@ (8003524 <HAL_CAN_MspInit+0x12c>)
 8003426:	681b      	ldr	r3, [r3, #0]
 8003428:	2b01      	cmp	r3, #1
 800342a:	d10b      	bne.n	8003444 <HAL_CAN_MspInit+0x4c>
 800342c:	4b3e      	ldr	r3, [pc, #248]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 800342e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003430:	4a3d      	ldr	r2, [pc, #244]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 8003432:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8003436:	6413      	str	r3, [r2, #64]	@ 0x40
 8003438:	4b3b      	ldr	r3, [pc, #236]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 800343a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800343c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003440:	61bb      	str	r3, [r7, #24]
 8003442:	69bb      	ldr	r3, [r7, #24]
 8003444:	4b38      	ldr	r3, [pc, #224]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 8003446:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003448:	4a37      	ldr	r2, [pc, #220]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 800344a:	f043 0301 	orr.w	r3, r3, #1
 800344e:	6313      	str	r3, [r2, #48]	@ 0x30
 8003450:	4b35      	ldr	r3, [pc, #212]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 8003452:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003454:	f003 0301 	and.w	r3, r3, #1
 8003458:	617b      	str	r3, [r7, #20]
 800345a:	697b      	ldr	r3, [r7, #20]
 800345c:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 8003460:	61fb      	str	r3, [r7, #28]
 8003462:	2302      	movs	r3, #2
 8003464:	623b      	str	r3, [r7, #32]
 8003466:	2300      	movs	r3, #0
 8003468:	627b      	str	r3, [r7, #36]	@ 0x24
 800346a:	2303      	movs	r3, #3
 800346c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800346e:	2309      	movs	r3, #9
 8003470:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003472:	f107 031c 	add.w	r3, r7, #28
 8003476:	4619      	mov	r1, r3
 8003478:	482c      	ldr	r0, [pc, #176]	@ (800352c <HAL_CAN_MspInit+0x134>)
 800347a:	f003 fd29 	bl	8006ed0 <HAL_GPIO_Init>
 800347e:	2200      	movs	r2, #0
 8003480:	2100      	movs	r1, #0
 8003482:	2014      	movs	r0, #20
 8003484:	f003 f947 	bl	8006716 <HAL_NVIC_SetPriority>
 8003488:	2014      	movs	r0, #20
 800348a:	f003 f960 	bl	800674e <HAL_NVIC_EnableIRQ>
 800348e:	e042      	b.n	8003516 <HAL_CAN_MspInit+0x11e>
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	4a26      	ldr	r2, [pc, #152]	@ (8003530 <HAL_CAN_MspInit+0x138>)
 8003496:	4293      	cmp	r3, r2
 8003498:	d13d      	bne.n	8003516 <HAL_CAN_MspInit+0x11e>
 800349a:	4b23      	ldr	r3, [pc, #140]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 800349c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800349e:	4a22      	ldr	r2, [pc, #136]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 80034a0:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80034a4:	6413      	str	r3, [r2, #64]	@ 0x40
 80034a6:	4b20      	ldr	r3, [pc, #128]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 80034a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034aa:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 80034ae:	613b      	str	r3, [r7, #16]
 80034b0:	693b      	ldr	r3, [r7, #16]
 80034b2:	4b1c      	ldr	r3, [pc, #112]	@ (8003524 <HAL_CAN_MspInit+0x12c>)
 80034b4:	681b      	ldr	r3, [r3, #0]
 80034b6:	3301      	adds	r3, #1
 80034b8:	4a1a      	ldr	r2, [pc, #104]	@ (8003524 <HAL_CAN_MspInit+0x12c>)
 80034ba:	6013      	str	r3, [r2, #0]
 80034bc:	4b19      	ldr	r3, [pc, #100]	@ (8003524 <HAL_CAN_MspInit+0x12c>)
 80034be:	681b      	ldr	r3, [r3, #0]
 80034c0:	2b01      	cmp	r3, #1
 80034c2:	d10b      	bne.n	80034dc <HAL_CAN_MspInit+0xe4>
 80034c4:	4b18      	ldr	r3, [pc, #96]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 80034c6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034c8:	4a17      	ldr	r2, [pc, #92]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 80034ca:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80034ce:	6413      	str	r3, [r2, #64]	@ 0x40
 80034d0:	4b15      	ldr	r3, [pc, #84]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 80034d2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034d4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80034d8:	60fb      	str	r3, [r7, #12]
 80034da:	68fb      	ldr	r3, [r7, #12]
 80034dc:	4b12      	ldr	r3, [pc, #72]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 80034de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80034e0:	4a11      	ldr	r2, [pc, #68]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 80034e2:	f043 0302 	orr.w	r3, r3, #2
 80034e6:	6313      	str	r3, [r2, #48]	@ 0x30
 80034e8:	4b0f      	ldr	r3, [pc, #60]	@ (8003528 <HAL_CAN_MspInit+0x130>)
 80034ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80034ec:	f003 0302 	and.w	r3, r3, #2
 80034f0:	60bb      	str	r3, [r7, #8]
 80034f2:	68bb      	ldr	r3, [r7, #8]
 80034f4:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 80034f8:	61fb      	str	r3, [r7, #28]
 80034fa:	2302      	movs	r3, #2
 80034fc:	623b      	str	r3, [r7, #32]
 80034fe:	2300      	movs	r3, #0
 8003500:	627b      	str	r3, [r7, #36]	@ 0x24
 8003502:	2303      	movs	r3, #3
 8003504:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003506:	2309      	movs	r3, #9
 8003508:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800350a:	f107 031c 	add.w	r3, r7, #28
 800350e:	4619      	mov	r1, r3
 8003510:	4808      	ldr	r0, [pc, #32]	@ (8003534 <HAL_CAN_MspInit+0x13c>)
 8003512:	f003 fcdd 	bl	8006ed0 <HAL_GPIO_Init>
 8003516:	bf00      	nop
 8003518:	3730      	adds	r7, #48	@ 0x30
 800351a:	46bd      	mov	sp, r7
 800351c:	bd80      	pop	{r7, pc}
 800351e:	bf00      	nop
 8003520:	40006400 	.word	0x40006400
 8003524:	20002814 	.word	0x20002814
 8003528:	40023800 	.word	0x40023800
 800352c:	40020000 	.word	0x40020000
 8003530:	40006800 	.word	0x40006800
 8003534:	40020400 	.word	0x40020400

08003538 <HAL_SD_MspInit>:
 8003538:	b580      	push	{r7, lr}
 800353a:	b0ac      	sub	sp, #176	@ 0xb0
 800353c:	af00      	add	r7, sp, #0
 800353e:	6078      	str	r0, [r7, #4]
 8003540:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 8003544:	2200      	movs	r2, #0
 8003546:	601a      	str	r2, [r3, #0]
 8003548:	605a      	str	r2, [r3, #4]
 800354a:	609a      	str	r2, [r3, #8]
 800354c:	60da      	str	r2, [r3, #12]
 800354e:	611a      	str	r2, [r3, #16]
 8003550:	f107 0318 	add.w	r3, r7, #24
 8003554:	2284      	movs	r2, #132	@ 0x84
 8003556:	2100      	movs	r1, #0
 8003558:	4618      	mov	r0, r3
 800355a:	f00a fddb 	bl	800e114 <memset>
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	4a74      	ldr	r2, [pc, #464]	@ (8003734 <HAL_SD_MspInit+0x1fc>)
 8003564:	4293      	cmp	r3, r2
 8003566:	f040 80e0 	bne.w	800372a <HAL_SD_MspInit+0x1f2>
 800356a:	f44f 0320 	mov.w	r3, #10485760	@ 0xa00000
 800356e:	61bb      	str	r3, [r7, #24]
 8003570:	2300      	movs	r3, #0
 8003572:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003576:	2300      	movs	r3, #0
 8003578:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800357c:	f107 0318 	add.w	r3, r7, #24
 8003580:	4618      	mov	r0, r3
 8003582:	f004 fb9b 	bl	8007cbc <HAL_RCCEx_PeriphCLKConfig>
 8003586:	4603      	mov	r3, r0
 8003588:	2b00      	cmp	r3, #0
 800358a:	d001      	beq.n	8003590 <HAL_SD_MspInit+0x58>
 800358c:	f7ff fb7e 	bl	8002c8c <Error_Handler>
 8003590:	4b69      	ldr	r3, [pc, #420]	@ (8003738 <HAL_SD_MspInit+0x200>)
 8003592:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003594:	4a68      	ldr	r2, [pc, #416]	@ (8003738 <HAL_SD_MspInit+0x200>)
 8003596:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800359a:	6453      	str	r3, [r2, #68]	@ 0x44
 800359c:	4b66      	ldr	r3, [pc, #408]	@ (8003738 <HAL_SD_MspInit+0x200>)
 800359e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80035a0:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80035a4:	617b      	str	r3, [r7, #20]
 80035a6:	697b      	ldr	r3, [r7, #20]
 80035a8:	4b63      	ldr	r3, [pc, #396]	@ (8003738 <HAL_SD_MspInit+0x200>)
 80035aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80035ac:	4a62      	ldr	r2, [pc, #392]	@ (8003738 <HAL_SD_MspInit+0x200>)
 80035ae:	f043 0304 	orr.w	r3, r3, #4
 80035b2:	6313      	str	r3, [r2, #48]	@ 0x30
 80035b4:	4b60      	ldr	r3, [pc, #384]	@ (8003738 <HAL_SD_MspInit+0x200>)
 80035b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80035b8:	f003 0304 	and.w	r3, r3, #4
 80035bc:	613b      	str	r3, [r7, #16]
 80035be:	693b      	ldr	r3, [r7, #16]
 80035c0:	4b5d      	ldr	r3, [pc, #372]	@ (8003738 <HAL_SD_MspInit+0x200>)
 80035c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80035c4:	4a5c      	ldr	r2, [pc, #368]	@ (8003738 <HAL_SD_MspInit+0x200>)
 80035c6:	f043 0308 	orr.w	r3, r3, #8
 80035ca:	6313      	str	r3, [r2, #48]	@ 0x30
 80035cc:	4b5a      	ldr	r3, [pc, #360]	@ (8003738 <HAL_SD_MspInit+0x200>)
 80035ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80035d0:	f003 0308 	and.w	r3, r3, #8
 80035d4:	60fb      	str	r3, [r7, #12]
 80035d6:	68fb      	ldr	r3, [r7, #12]
 80035d8:	f44f 5388 	mov.w	r3, #4352	@ 0x1100
 80035dc:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80035e0:	2302      	movs	r3, #2
 80035e2:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80035e6:	2301      	movs	r3, #1
 80035e8:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80035ec:	2303      	movs	r3, #3
 80035ee:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80035f2:	230c      	movs	r3, #12
 80035f4:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80035f8:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 80035fc:	4619      	mov	r1, r3
 80035fe:	484f      	ldr	r0, [pc, #316]	@ (800373c <HAL_SD_MspInit+0x204>)
 8003600:	f003 fc66 	bl	8006ed0 <HAL_GPIO_Init>
 8003604:	2304      	movs	r3, #4
 8003606:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800360a:	2302      	movs	r3, #2
 800360c:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8003610:	2301      	movs	r3, #1
 8003612:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8003616:	2303      	movs	r3, #3
 8003618:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 800361c:	230c      	movs	r3, #12
 800361e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003622:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 8003626:	4619      	mov	r1, r3
 8003628:	4845      	ldr	r0, [pc, #276]	@ (8003740 <HAL_SD_MspInit+0x208>)
 800362a:	f003 fc51 	bl	8006ed0 <HAL_GPIO_Init>
 800362e:	4b45      	ldr	r3, [pc, #276]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 8003630:	4a45      	ldr	r2, [pc, #276]	@ (8003748 <HAL_SD_MspInit+0x210>)
 8003632:	601a      	str	r2, [r3, #0]
 8003634:	4b43      	ldr	r3, [pc, #268]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 8003636:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800363a:	605a      	str	r2, [r3, #4]
 800363c:	4b41      	ldr	r3, [pc, #260]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 800363e:	2200      	movs	r2, #0
 8003640:	609a      	str	r2, [r3, #8]
 8003642:	4b40      	ldr	r3, [pc, #256]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 8003644:	2200      	movs	r2, #0
 8003646:	60da      	str	r2, [r3, #12]
 8003648:	4b3e      	ldr	r3, [pc, #248]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 800364a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800364e:	611a      	str	r2, [r3, #16]
 8003650:	4b3c      	ldr	r3, [pc, #240]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 8003652:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8003656:	615a      	str	r2, [r3, #20]
 8003658:	4b3a      	ldr	r3, [pc, #232]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 800365a:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800365e:	619a      	str	r2, [r3, #24]
 8003660:	4b38      	ldr	r3, [pc, #224]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 8003662:	2220      	movs	r2, #32
 8003664:	61da      	str	r2, [r3, #28]
 8003666:	4b37      	ldr	r3, [pc, #220]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 8003668:	2200      	movs	r2, #0
 800366a:	621a      	str	r2, [r3, #32]
 800366c:	4b35      	ldr	r3, [pc, #212]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 800366e:	2204      	movs	r2, #4
 8003670:	625a      	str	r2, [r3, #36]	@ 0x24
 8003672:	4b34      	ldr	r3, [pc, #208]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 8003674:	2203      	movs	r2, #3
 8003676:	629a      	str	r2, [r3, #40]	@ 0x28
 8003678:	4b32      	ldr	r3, [pc, #200]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 800367a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800367e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003680:	4b30      	ldr	r3, [pc, #192]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 8003682:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8003686:	631a      	str	r2, [r3, #48]	@ 0x30
 8003688:	482e      	ldr	r0, [pc, #184]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 800368a:	f003 f87b 	bl	8006784 <HAL_DMA_Init>
 800368e:	4603      	mov	r3, r0
 8003690:	2b00      	cmp	r3, #0
 8003692:	d001      	beq.n	8003698 <HAL_SD_MspInit+0x160>
 8003694:	f7ff fafa 	bl	8002c8c <Error_Handler>
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	4a2a      	ldr	r2, [pc, #168]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 800369c:	641a      	str	r2, [r3, #64]	@ 0x40
 800369e:	4a29      	ldr	r2, [pc, #164]	@ (8003744 <HAL_SD_MspInit+0x20c>)
 80036a0:	687b      	ldr	r3, [r7, #4]
 80036a2:	6393      	str	r3, [r2, #56]	@ 0x38
 80036a4:	4b29      	ldr	r3, [pc, #164]	@ (800374c <HAL_SD_MspInit+0x214>)
 80036a6:	4a2a      	ldr	r2, [pc, #168]	@ (8003750 <HAL_SD_MspInit+0x218>)
 80036a8:	601a      	str	r2, [r3, #0]
 80036aa:	4b28      	ldr	r3, [pc, #160]	@ (800374c <HAL_SD_MspInit+0x214>)
 80036ac:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80036b0:	605a      	str	r2, [r3, #4]
 80036b2:	4b26      	ldr	r3, [pc, #152]	@ (800374c <HAL_SD_MspInit+0x214>)
 80036b4:	2240      	movs	r2, #64	@ 0x40
 80036b6:	609a      	str	r2, [r3, #8]
 80036b8:	4b24      	ldr	r3, [pc, #144]	@ (800374c <HAL_SD_MspInit+0x214>)
 80036ba:	2200      	movs	r2, #0
 80036bc:	60da      	str	r2, [r3, #12]
 80036be:	4b23      	ldr	r3, [pc, #140]	@ (800374c <HAL_SD_MspInit+0x214>)
 80036c0:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80036c4:	611a      	str	r2, [r3, #16]
 80036c6:	4b21      	ldr	r3, [pc, #132]	@ (800374c <HAL_SD_MspInit+0x214>)
 80036c8:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80036cc:	615a      	str	r2, [r3, #20]
 80036ce:	4b1f      	ldr	r3, [pc, #124]	@ (800374c <HAL_SD_MspInit+0x214>)
 80036d0:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80036d4:	619a      	str	r2, [r3, #24]
 80036d6:	4b1d      	ldr	r3, [pc, #116]	@ (800374c <HAL_SD_MspInit+0x214>)
 80036d8:	2220      	movs	r2, #32
 80036da:	61da      	str	r2, [r3, #28]
 80036dc:	4b1b      	ldr	r3, [pc, #108]	@ (800374c <HAL_SD_MspInit+0x214>)
 80036de:	2200      	movs	r2, #0
 80036e0:	621a      	str	r2, [r3, #32]
 80036e2:	4b1a      	ldr	r3, [pc, #104]	@ (800374c <HAL_SD_MspInit+0x214>)
 80036e4:	2204      	movs	r2, #4
 80036e6:	625a      	str	r2, [r3, #36]	@ 0x24
 80036e8:	4b18      	ldr	r3, [pc, #96]	@ (800374c <HAL_SD_MspInit+0x214>)
 80036ea:	2203      	movs	r2, #3
 80036ec:	629a      	str	r2, [r3, #40]	@ 0x28
 80036ee:	4b17      	ldr	r3, [pc, #92]	@ (800374c <HAL_SD_MspInit+0x214>)
 80036f0:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80036f4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80036f6:	4b15      	ldr	r3, [pc, #84]	@ (800374c <HAL_SD_MspInit+0x214>)
 80036f8:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 80036fc:	631a      	str	r2, [r3, #48]	@ 0x30
 80036fe:	4813      	ldr	r0, [pc, #76]	@ (800374c <HAL_SD_MspInit+0x214>)
 8003700:	f003 f840 	bl	8006784 <HAL_DMA_Init>
 8003704:	4603      	mov	r3, r0
 8003706:	2b00      	cmp	r3, #0
 8003708:	d001      	beq.n	800370e <HAL_SD_MspInit+0x1d6>
 800370a:	f7ff fabf 	bl	8002c8c <Error_Handler>
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	4a0e      	ldr	r2, [pc, #56]	@ (800374c <HAL_SD_MspInit+0x214>)
 8003712:	63da      	str	r2, [r3, #60]	@ 0x3c
 8003714:	4a0d      	ldr	r2, [pc, #52]	@ (800374c <HAL_SD_MspInit+0x214>)
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	6393      	str	r3, [r2, #56]	@ 0x38
 800371a:	2200      	movs	r2, #0
 800371c:	2100      	movs	r1, #0
 800371e:	2031      	movs	r0, #49	@ 0x31
 8003720:	f002 fff9 	bl	8006716 <HAL_NVIC_SetPriority>
 8003724:	2031      	movs	r0, #49	@ 0x31
 8003726:	f003 f812 	bl	800674e <HAL_NVIC_EnableIRQ>
 800372a:	bf00      	nop
 800372c:	37b0      	adds	r7, #176	@ 0xb0
 800372e:	46bd      	mov	sp, r7
 8003730:	bd80      	pop	{r7, pc}
 8003732:	bf00      	nop
 8003734:	40012c00 	.word	0x40012c00
 8003738:	40023800 	.word	0x40023800
 800373c:	40020800 	.word	0x40020800
 8003740:	40020c00 	.word	0x40020c00
 8003744:	2000245c 	.word	0x2000245c
 8003748:	40026458 	.word	0x40026458
 800374c:	200024bc 	.word	0x200024bc
 8003750:	400264a0 	.word	0x400264a0

08003754 <HAL_TIM_Base_MspInit>:
 8003754:	b580      	push	{r7, lr}
 8003756:	b08c      	sub	sp, #48	@ 0x30
 8003758:	af00      	add	r7, sp, #0
 800375a:	6078      	str	r0, [r7, #4]
 800375c:	f107 031c 	add.w	r3, r7, #28
 8003760:	2200      	movs	r2, #0
 8003762:	601a      	str	r2, [r3, #0]
 8003764:	605a      	str	r2, [r3, #4]
 8003766:	609a      	str	r2, [r3, #8]
 8003768:	60da      	str	r2, [r3, #12]
 800376a:	611a      	str	r2, [r3, #16]
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	681b      	ldr	r3, [r3, #0]
 8003770:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003774:	d129      	bne.n	80037ca <HAL_TIM_Base_MspInit+0x76>
 8003776:	4b3a      	ldr	r3, [pc, #232]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 8003778:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800377a:	4a39      	ldr	r2, [pc, #228]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 800377c:	f043 0301 	orr.w	r3, r3, #1
 8003780:	6413      	str	r3, [r2, #64]	@ 0x40
 8003782:	4b37      	ldr	r3, [pc, #220]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 8003784:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003786:	f003 0301 	and.w	r3, r3, #1
 800378a:	61bb      	str	r3, [r7, #24]
 800378c:	69bb      	ldr	r3, [r7, #24]
 800378e:	4b34      	ldr	r3, [pc, #208]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 8003790:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003792:	4a33      	ldr	r2, [pc, #204]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 8003794:	f043 0301 	orr.w	r3, r3, #1
 8003798:	6313      	str	r3, [r2, #48]	@ 0x30
 800379a:	4b31      	ldr	r3, [pc, #196]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 800379c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800379e:	f003 0301 	and.w	r3, r3, #1
 80037a2:	617b      	str	r3, [r7, #20]
 80037a4:	697b      	ldr	r3, [r7, #20]
 80037a6:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80037aa:	61fb      	str	r3, [r7, #28]
 80037ac:	2302      	movs	r3, #2
 80037ae:	623b      	str	r3, [r7, #32]
 80037b0:	2300      	movs	r3, #0
 80037b2:	627b      	str	r3, [r7, #36]	@ 0x24
 80037b4:	2300      	movs	r3, #0
 80037b6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80037b8:	2301      	movs	r3, #1
 80037ba:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80037bc:	f107 031c 	add.w	r3, r7, #28
 80037c0:	4619      	mov	r1, r3
 80037c2:	4828      	ldr	r0, [pc, #160]	@ (8003864 <HAL_TIM_Base_MspInit+0x110>)
 80037c4:	f003 fb84 	bl	8006ed0 <HAL_GPIO_Init>
 80037c8:	e046      	b.n	8003858 <HAL_TIM_Base_MspInit+0x104>
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	681b      	ldr	r3, [r3, #0]
 80037ce:	4a26      	ldr	r2, [pc, #152]	@ (8003868 <HAL_TIM_Base_MspInit+0x114>)
 80037d0:	4293      	cmp	r3, r2
 80037d2:	d128      	bne.n	8003826 <HAL_TIM_Base_MspInit+0xd2>
 80037d4:	4b22      	ldr	r3, [pc, #136]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 80037d6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037d8:	4a21      	ldr	r2, [pc, #132]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 80037da:	f043 0304 	orr.w	r3, r3, #4
 80037de:	6413      	str	r3, [r2, #64]	@ 0x40
 80037e0:	4b1f      	ldr	r3, [pc, #124]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 80037e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037e4:	f003 0304 	and.w	r3, r3, #4
 80037e8:	613b      	str	r3, [r7, #16]
 80037ea:	693b      	ldr	r3, [r7, #16]
 80037ec:	4b1c      	ldr	r3, [pc, #112]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 80037ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80037f0:	4a1b      	ldr	r2, [pc, #108]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 80037f2:	f043 0310 	orr.w	r3, r3, #16
 80037f6:	6313      	str	r3, [r2, #48]	@ 0x30
 80037f8:	4b19      	ldr	r3, [pc, #100]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 80037fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80037fc:	f003 0310 	and.w	r3, r3, #16
 8003800:	60fb      	str	r3, [r7, #12]
 8003802:	68fb      	ldr	r3, [r7, #12]
 8003804:	2301      	movs	r3, #1
 8003806:	61fb      	str	r3, [r7, #28]
 8003808:	2302      	movs	r3, #2
 800380a:	623b      	str	r3, [r7, #32]
 800380c:	2300      	movs	r3, #0
 800380e:	627b      	str	r3, [r7, #36]	@ 0x24
 8003810:	2300      	movs	r3, #0
 8003812:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003814:	2302      	movs	r3, #2
 8003816:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003818:	f107 031c 	add.w	r3, r7, #28
 800381c:	4619      	mov	r1, r3
 800381e:	4813      	ldr	r0, [pc, #76]	@ (800386c <HAL_TIM_Base_MspInit+0x118>)
 8003820:	f003 fb56 	bl	8006ed0 <HAL_GPIO_Init>
 8003824:	e018      	b.n	8003858 <HAL_TIM_Base_MspInit+0x104>
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	681b      	ldr	r3, [r3, #0]
 800382a:	4a11      	ldr	r2, [pc, #68]	@ (8003870 <HAL_TIM_Base_MspInit+0x11c>)
 800382c:	4293      	cmp	r3, r2
 800382e:	d113      	bne.n	8003858 <HAL_TIM_Base_MspInit+0x104>
 8003830:	4b0b      	ldr	r3, [pc, #44]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 8003832:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003834:	4a0a      	ldr	r2, [pc, #40]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 8003836:	f043 0320 	orr.w	r3, r3, #32
 800383a:	6413      	str	r3, [r2, #64]	@ 0x40
 800383c:	4b08      	ldr	r3, [pc, #32]	@ (8003860 <HAL_TIM_Base_MspInit+0x10c>)
 800383e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003840:	f003 0320 	and.w	r3, r3, #32
 8003844:	60bb      	str	r3, [r7, #8]
 8003846:	68bb      	ldr	r3, [r7, #8]
 8003848:	2200      	movs	r2, #0
 800384a:	2100      	movs	r1, #0
 800384c:	2037      	movs	r0, #55	@ 0x37
 800384e:	f002 ff62 	bl	8006716 <HAL_NVIC_SetPriority>
 8003852:	2037      	movs	r0, #55	@ 0x37
 8003854:	f002 ff7b 	bl	800674e <HAL_NVIC_EnableIRQ>
 8003858:	bf00      	nop
 800385a:	3730      	adds	r7, #48	@ 0x30
 800385c:	46bd      	mov	sp, r7
 800385e:	bd80      	pop	{r7, pc}
 8003860:	40023800 	.word	0x40023800
 8003864:	40020000 	.word	0x40020000
 8003868:	40000800 	.word	0x40000800
 800386c:	40021000 	.word	0x40021000
 8003870:	40001400 	.word	0x40001400

08003874 <HAL_UART_MspInit>:
 8003874:	b580      	push	{r7, lr}
 8003876:	b0ae      	sub	sp, #184	@ 0xb8
 8003878:	af00      	add	r7, sp, #0
 800387a:	6078      	str	r0, [r7, #4]
 800387c:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8003880:	2200      	movs	r2, #0
 8003882:	601a      	str	r2, [r3, #0]
 8003884:	605a      	str	r2, [r3, #4]
 8003886:	609a      	str	r2, [r3, #8]
 8003888:	60da      	str	r2, [r3, #12]
 800388a:	611a      	str	r2, [r3, #16]
 800388c:	f107 0320 	add.w	r3, r7, #32
 8003890:	2284      	movs	r2, #132	@ 0x84
 8003892:	2100      	movs	r1, #0
 8003894:	4618      	mov	r0, r3
 8003896:	f00a fc3d 	bl	800e114 <memset>
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	4a64      	ldr	r2, [pc, #400]	@ (8003a30 <HAL_UART_MspInit+0x1bc>)
 80038a0:	4293      	cmp	r3, r2
 80038a2:	d13c      	bne.n	800391e <HAL_UART_MspInit+0xaa>
 80038a4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80038a8:	623b      	str	r3, [r7, #32]
 80038aa:	2300      	movs	r3, #0
 80038ac:	673b      	str	r3, [r7, #112]	@ 0x70
 80038ae:	f107 0320 	add.w	r3, r7, #32
 80038b2:	4618      	mov	r0, r3
 80038b4:	f004 fa02 	bl	8007cbc <HAL_RCCEx_PeriphCLKConfig>
 80038b8:	4603      	mov	r3, r0
 80038ba:	2b00      	cmp	r3, #0
 80038bc:	d001      	beq.n	80038c2 <HAL_UART_MspInit+0x4e>
 80038be:	f7ff f9e5 	bl	8002c8c <Error_Handler>
 80038c2:	4b5c      	ldr	r3, [pc, #368]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 80038c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80038c6:	4a5b      	ldr	r2, [pc, #364]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 80038c8:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80038cc:	6413      	str	r3, [r2, #64]	@ 0x40
 80038ce:	4b59      	ldr	r3, [pc, #356]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 80038d0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80038d2:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80038d6:	61fb      	str	r3, [r7, #28]
 80038d8:	69fb      	ldr	r3, [r7, #28]
 80038da:	4b56      	ldr	r3, [pc, #344]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 80038dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80038de:	4a55      	ldr	r2, [pc, #340]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 80038e0:	f043 0301 	orr.w	r3, r3, #1
 80038e4:	6313      	str	r3, [r2, #48]	@ 0x30
 80038e6:	4b53      	ldr	r3, [pc, #332]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 80038e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80038ea:	f003 0301 	and.w	r3, r3, #1
 80038ee:	61bb      	str	r3, [r7, #24]
 80038f0:	69bb      	ldr	r3, [r7, #24]
 80038f2:	2303      	movs	r3, #3
 80038f4:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80038f8:	2302      	movs	r3, #2
 80038fa:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80038fe:	2300      	movs	r3, #0
 8003900:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003904:	2303      	movs	r3, #3
 8003906:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800390a:	2308      	movs	r3, #8
 800390c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003910:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8003914:	4619      	mov	r1, r3
 8003916:	4848      	ldr	r0, [pc, #288]	@ (8003a38 <HAL_UART_MspInit+0x1c4>)
 8003918:	f003 fada 	bl	8006ed0 <HAL_GPIO_Init>
 800391c:	e083      	b.n	8003a26 <HAL_UART_MspInit+0x1b2>
 800391e:	687b      	ldr	r3, [r7, #4]
 8003920:	681b      	ldr	r3, [r3, #0]
 8003922:	4a46      	ldr	r2, [pc, #280]	@ (8003a3c <HAL_UART_MspInit+0x1c8>)
 8003924:	4293      	cmp	r3, r2
 8003926:	d13c      	bne.n	80039a2 <HAL_UART_MspInit+0x12e>
 8003928:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800392c:	623b      	str	r3, [r7, #32]
 800392e:	2300      	movs	r3, #0
 8003930:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8003932:	f107 0320 	add.w	r3, r7, #32
 8003936:	4618      	mov	r0, r3
 8003938:	f004 f9c0 	bl	8007cbc <HAL_RCCEx_PeriphCLKConfig>
 800393c:	4603      	mov	r3, r0
 800393e:	2b00      	cmp	r3, #0
 8003940:	d001      	beq.n	8003946 <HAL_UART_MspInit+0xd2>
 8003942:	f7ff f9a3 	bl	8002c8c <Error_Handler>
 8003946:	4b3b      	ldr	r3, [pc, #236]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 8003948:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800394a:	4a3a      	ldr	r2, [pc, #232]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 800394c:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8003950:	6413      	str	r3, [r2, #64]	@ 0x40
 8003952:	4b38      	ldr	r3, [pc, #224]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 8003954:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003956:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 800395a:	617b      	str	r3, [r7, #20]
 800395c:	697b      	ldr	r3, [r7, #20]
 800395e:	4b35      	ldr	r3, [pc, #212]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 8003960:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003962:	4a34      	ldr	r2, [pc, #208]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 8003964:	f043 0320 	orr.w	r3, r3, #32
 8003968:	6313      	str	r3, [r2, #48]	@ 0x30
 800396a:	4b32      	ldr	r3, [pc, #200]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 800396c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800396e:	f003 0320 	and.w	r3, r3, #32
 8003972:	613b      	str	r3, [r7, #16]
 8003974:	693b      	ldr	r3, [r7, #16]
 8003976:	23c0      	movs	r3, #192	@ 0xc0
 8003978:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800397c:	2302      	movs	r3, #2
 800397e:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8003982:	2300      	movs	r3, #0
 8003984:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003988:	2303      	movs	r3, #3
 800398a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800398e:	2308      	movs	r3, #8
 8003990:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003994:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8003998:	4619      	mov	r1, r3
 800399a:	4829      	ldr	r0, [pc, #164]	@ (8003a40 <HAL_UART_MspInit+0x1cc>)
 800399c:	f003 fa98 	bl	8006ed0 <HAL_GPIO_Init>
 80039a0:	e041      	b.n	8003a26 <HAL_UART_MspInit+0x1b2>
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	4a27      	ldr	r2, [pc, #156]	@ (8003a44 <HAL_UART_MspInit+0x1d0>)
 80039a8:	4293      	cmp	r3, r2
 80039aa:	d13c      	bne.n	8003a26 <HAL_UART_MspInit+0x1b2>
 80039ac:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80039b0:	623b      	str	r3, [r7, #32]
 80039b2:	2300      	movs	r3, #0
 80039b4:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80039b6:	f107 0320 	add.w	r3, r7, #32
 80039ba:	4618      	mov	r0, r3
 80039bc:	f004 f97e 	bl	8007cbc <HAL_RCCEx_PeriphCLKConfig>
 80039c0:	4603      	mov	r3, r0
 80039c2:	2b00      	cmp	r3, #0
 80039c4:	d001      	beq.n	80039ca <HAL_UART_MspInit+0x156>
 80039c6:	f7ff f961 	bl	8002c8c <Error_Handler>
 80039ca:	4b1a      	ldr	r3, [pc, #104]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 80039cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039ce:	4a19      	ldr	r2, [pc, #100]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 80039d0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80039d4:	6413      	str	r3, [r2, #64]	@ 0x40
 80039d6:	4b17      	ldr	r3, [pc, #92]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 80039d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039da:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80039de:	60fb      	str	r3, [r7, #12]
 80039e0:	68fb      	ldr	r3, [r7, #12]
 80039e2:	4b14      	ldr	r3, [pc, #80]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 80039e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80039e6:	4a13      	ldr	r2, [pc, #76]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 80039e8:	f043 0302 	orr.w	r3, r3, #2
 80039ec:	6313      	str	r3, [r2, #48]	@ 0x30
 80039ee:	4b11      	ldr	r3, [pc, #68]	@ (8003a34 <HAL_UART_MspInit+0x1c0>)
 80039f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80039f2:	f003 0302 	and.w	r3, r3, #2
 80039f6:	60bb      	str	r3, [r7, #8]
 80039f8:	68bb      	ldr	r3, [r7, #8]
 80039fa:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 80039fe:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8003a02:	2302      	movs	r3, #2
 8003a04:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8003a08:	2300      	movs	r3, #0
 8003a0a:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003a0e:	2303      	movs	r3, #3
 8003a10:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003a14:	2307      	movs	r3, #7
 8003a16:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003a1a:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8003a1e:	4619      	mov	r1, r3
 8003a20:	4809      	ldr	r0, [pc, #36]	@ (8003a48 <HAL_UART_MspInit+0x1d4>)
 8003a22:	f003 fa55 	bl	8006ed0 <HAL_GPIO_Init>
 8003a26:	bf00      	nop
 8003a28:	37b8      	adds	r7, #184	@ 0xb8
 8003a2a:	46bd      	mov	sp, r7
 8003a2c:	bd80      	pop	{r7, pc}
 8003a2e:	bf00      	nop
 8003a30:	40004c00 	.word	0x40004c00
 8003a34:	40023800 	.word	0x40023800
 8003a38:	40020000 	.word	0x40020000
 8003a3c:	40007800 	.word	0x40007800
 8003a40:	40021400 	.word	0x40021400
 8003a44:	40004800 	.word	0x40004800
 8003a48:	40020400 	.word	0x40020400

08003a4c <HAL_FMC_MspInit>:
 8003a4c:	b580      	push	{r7, lr}
 8003a4e:	b086      	sub	sp, #24
 8003a50:	af00      	add	r7, sp, #0
 8003a52:	1d3b      	adds	r3, r7, #4
 8003a54:	2200      	movs	r2, #0
 8003a56:	601a      	str	r2, [r3, #0]
 8003a58:	605a      	str	r2, [r3, #4]
 8003a5a:	609a      	str	r2, [r3, #8]
 8003a5c:	60da      	str	r2, [r3, #12]
 8003a5e:	611a      	str	r2, [r3, #16]
 8003a60:	4b23      	ldr	r3, [pc, #140]	@ (8003af0 <HAL_FMC_MspInit+0xa4>)
 8003a62:	681b      	ldr	r3, [r3, #0]
 8003a64:	2b00      	cmp	r3, #0
 8003a66:	d13f      	bne.n	8003ae8 <HAL_FMC_MspInit+0x9c>
 8003a68:	4b21      	ldr	r3, [pc, #132]	@ (8003af0 <HAL_FMC_MspInit+0xa4>)
 8003a6a:	2201      	movs	r2, #1
 8003a6c:	601a      	str	r2, [r3, #0]
 8003a6e:	4b21      	ldr	r3, [pc, #132]	@ (8003af4 <HAL_FMC_MspInit+0xa8>)
 8003a70:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003a72:	4a20      	ldr	r2, [pc, #128]	@ (8003af4 <HAL_FMC_MspInit+0xa8>)
 8003a74:	f043 0301 	orr.w	r3, r3, #1
 8003a78:	6393      	str	r3, [r2, #56]	@ 0x38
 8003a7a:	4b1e      	ldr	r3, [pc, #120]	@ (8003af4 <HAL_FMC_MspInit+0xa8>)
 8003a7c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003a7e:	f003 0301 	and.w	r3, r3, #1
 8003a82:	603b      	str	r3, [r7, #0]
 8003a84:	683b      	ldr	r3, [r7, #0]
 8003a86:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8003a8a:	607b      	str	r3, [r7, #4]
 8003a8c:	2302      	movs	r3, #2
 8003a8e:	60bb      	str	r3, [r7, #8]
 8003a90:	2300      	movs	r3, #0
 8003a92:	60fb      	str	r3, [r7, #12]
 8003a94:	2303      	movs	r3, #3
 8003a96:	613b      	str	r3, [r7, #16]
 8003a98:	230c      	movs	r3, #12
 8003a9a:	617b      	str	r3, [r7, #20]
 8003a9c:	1d3b      	adds	r3, r7, #4
 8003a9e:	4619      	mov	r1, r3
 8003aa0:	4815      	ldr	r0, [pc, #84]	@ (8003af8 <HAL_FMC_MspInit+0xac>)
 8003aa2:	f003 fa15 	bl	8006ed0 <HAL_GPIO_Init>
 8003aa6:	f64f 7380 	movw	r3, #65408	@ 0xff80
 8003aaa:	607b      	str	r3, [r7, #4]
 8003aac:	2302      	movs	r3, #2
 8003aae:	60bb      	str	r3, [r7, #8]
 8003ab0:	2300      	movs	r3, #0
 8003ab2:	60fb      	str	r3, [r7, #12]
 8003ab4:	2303      	movs	r3, #3
 8003ab6:	613b      	str	r3, [r7, #16]
 8003ab8:	230c      	movs	r3, #12
 8003aba:	617b      	str	r3, [r7, #20]
 8003abc:	1d3b      	adds	r3, r7, #4
 8003abe:	4619      	mov	r1, r3
 8003ac0:	480e      	ldr	r0, [pc, #56]	@ (8003afc <HAL_FMC_MspInit+0xb0>)
 8003ac2:	f003 fa05 	bl	8006ed0 <HAL_GPIO_Init>
 8003ac6:	f24c 73b3 	movw	r3, #51123	@ 0xc7b3
 8003aca:	607b      	str	r3, [r7, #4]
 8003acc:	2302      	movs	r3, #2
 8003ace:	60bb      	str	r3, [r7, #8]
 8003ad0:	2300      	movs	r3, #0
 8003ad2:	60fb      	str	r3, [r7, #12]
 8003ad4:	2303      	movs	r3, #3
 8003ad6:	613b      	str	r3, [r7, #16]
 8003ad8:	230c      	movs	r3, #12
 8003ada:	617b      	str	r3, [r7, #20]
 8003adc:	1d3b      	adds	r3, r7, #4
 8003ade:	4619      	mov	r1, r3
 8003ae0:	4807      	ldr	r0, [pc, #28]	@ (8003b00 <HAL_FMC_MspInit+0xb4>)
 8003ae2:	f003 f9f5 	bl	8006ed0 <HAL_GPIO_Init>
 8003ae6:	e000      	b.n	8003aea <HAL_FMC_MspInit+0x9e>
 8003ae8:	bf00      	nop
 8003aea:	3718      	adds	r7, #24
 8003aec:	46bd      	mov	sp, r7
 8003aee:	bd80      	pop	{r7, pc}
 8003af0:	20002818 	.word	0x20002818
 8003af4:	40023800 	.word	0x40023800
 8003af8:	40021400 	.word	0x40021400
 8003afc:	40021000 	.word	0x40021000
 8003b00:	40020c00 	.word	0x40020c00

08003b04 <HAL_SRAM_MspInit>:
 8003b04:	b580      	push	{r7, lr}
 8003b06:	b082      	sub	sp, #8
 8003b08:	af00      	add	r7, sp, #0
 8003b0a:	6078      	str	r0, [r7, #4]
 8003b0c:	f7ff ff9e 	bl	8003a4c <HAL_FMC_MspInit>
 8003b10:	bf00      	nop
 8003b12:	3708      	adds	r7, #8
 8003b14:	46bd      	mov	sp, r7
 8003b16:	bd80      	pop	{r7, pc}

08003b18 <NMI_Handler>:
 8003b18:	b480      	push	{r7}
 8003b1a:	af00      	add	r7, sp, #0
 8003b1c:	bf00      	nop
 8003b1e:	e7fd      	b.n	8003b1c <NMI_Handler+0x4>

08003b20 <HardFault_Handler>:
 8003b20:	b480      	push	{r7}
 8003b22:	af00      	add	r7, sp, #0
 8003b24:	bf00      	nop
 8003b26:	e7fd      	b.n	8003b24 <HardFault_Handler+0x4>

08003b28 <MemManage_Handler>:
 8003b28:	b480      	push	{r7}
 8003b2a:	af00      	add	r7, sp, #0
 8003b2c:	bf00      	nop
 8003b2e:	e7fd      	b.n	8003b2c <MemManage_Handler+0x4>

08003b30 <BusFault_Handler>:
 8003b30:	b480      	push	{r7}
 8003b32:	af00      	add	r7, sp, #0
 8003b34:	bf00      	nop
 8003b36:	e7fd      	b.n	8003b34 <BusFault_Handler+0x4>

08003b38 <UsageFault_Handler>:
 8003b38:	b480      	push	{r7}
 8003b3a:	af00      	add	r7, sp, #0
 8003b3c:	bf00      	nop
 8003b3e:	e7fd      	b.n	8003b3c <UsageFault_Handler+0x4>

08003b40 <SVC_Handler>:
 8003b40:	b480      	push	{r7}
 8003b42:	af00      	add	r7, sp, #0
 8003b44:	bf00      	nop
 8003b46:	46bd      	mov	sp, r7
 8003b48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b4c:	4770      	bx	lr

08003b4e <DebugMon_Handler>:
 8003b4e:	b480      	push	{r7}
 8003b50:	af00      	add	r7, sp, #0
 8003b52:	bf00      	nop
 8003b54:	46bd      	mov	sp, r7
 8003b56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b5a:	4770      	bx	lr

08003b5c <PendSV_Handler>:
 8003b5c:	b480      	push	{r7}
 8003b5e:	af00      	add	r7, sp, #0
 8003b60:	bf00      	nop
 8003b62:	46bd      	mov	sp, r7
 8003b64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b68:	4770      	bx	lr

08003b6a <SysTick_Handler>:
 8003b6a:	b580      	push	{r7, lr}
 8003b6c:	af00      	add	r7, sp, #0
 8003b6e:	f001 fa61 	bl	8005034 <HAL_IncTick>
 8003b72:	bf00      	nop
 8003b74:	bd80      	pop	{r7, pc}
	...

08003b78 <CAN1_RX0_IRQHandler>:
 8003b78:	b580      	push	{r7, lr}
 8003b7a:	af00      	add	r7, sp, #0
 8003b7c:	4802      	ldr	r0, [pc, #8]	@ (8003b88 <CAN1_RX0_IRQHandler+0x10>)
 8003b7e:	f002 fabf 	bl	8006100 <HAL_CAN_IRQHandler>
 8003b82:	bf00      	nop
 8003b84:	bd80      	pop	{r7, pc}
 8003b86:	bf00      	nop
 8003b88:	20002388 	.word	0x20002388

08003b8c <SDMMC1_IRQHandler>:
 8003b8c:	b580      	push	{r7, lr}
 8003b8e:	af00      	add	r7, sp, #0
 8003b90:	4802      	ldr	r0, [pc, #8]	@ (8003b9c <SDMMC1_IRQHandler+0x10>)
 8003b92:	f004 ff03 	bl	800899c <HAL_SD_IRQHandler>
 8003b96:	bf00      	nop
 8003b98:	bd80      	pop	{r7, pc}
 8003b9a:	bf00      	nop
 8003b9c:	200023d8 	.word	0x200023d8

08003ba0 <TIM7_IRQHandler>:
 8003ba0:	b580      	push	{r7, lr}
 8003ba2:	af00      	add	r7, sp, #0
 8003ba4:	4802      	ldr	r0, [pc, #8]	@ (8003bb0 <TIM7_IRQHandler+0x10>)
 8003ba6:	f005 feb9 	bl	800991c <HAL_TIM_IRQHandler>
 8003baa:	bf00      	nop
 8003bac:	bd80      	pop	{r7, pc}
 8003bae:	bf00      	nop
 8003bb0:	200025b4 	.word	0x200025b4

08003bb4 <DMA2_Stream0_IRQHandler>:
 8003bb4:	b580      	push	{r7, lr}
 8003bb6:	af00      	add	r7, sp, #0
 8003bb8:	4802      	ldr	r0, [pc, #8]	@ (8003bc4 <DMA2_Stream0_IRQHandler+0x10>)
 8003bba:	f002 ff13 	bl	80069e4 <HAL_DMA_IRQHandler>
 8003bbe:	bf00      	nop
 8003bc0:	bd80      	pop	{r7, pc}
 8003bc2:	bf00      	nop
 8003bc4:	200022c8 	.word	0x200022c8

08003bc8 <DMA2_Stream1_IRQHandler>:
 8003bc8:	b580      	push	{r7, lr}
 8003bca:	af00      	add	r7, sp, #0
 8003bcc:	4802      	ldr	r0, [pc, #8]	@ (8003bd8 <DMA2_Stream1_IRQHandler+0x10>)
 8003bce:	f002 ff09 	bl	80069e4 <HAL_DMA_IRQHandler>
 8003bd2:	bf00      	nop
 8003bd4:	bd80      	pop	{r7, pc}
 8003bd6:	bf00      	nop
 8003bd8:	20002328 	.word	0x20002328

08003bdc <DMA2_Stream3_IRQHandler>:
 8003bdc:	b580      	push	{r7, lr}
 8003bde:	af00      	add	r7, sp, #0
 8003be0:	4802      	ldr	r0, [pc, #8]	@ (8003bec <DMA2_Stream3_IRQHandler+0x10>)
 8003be2:	f002 feff 	bl	80069e4 <HAL_DMA_IRQHandler>
 8003be6:	bf00      	nop
 8003be8:	bd80      	pop	{r7, pc}
 8003bea:	bf00      	nop
 8003bec:	2000245c 	.word	0x2000245c

08003bf0 <DMA2_Stream6_IRQHandler>:
 8003bf0:	b580      	push	{r7, lr}
 8003bf2:	af00      	add	r7, sp, #0
 8003bf4:	4802      	ldr	r0, [pc, #8]	@ (8003c00 <DMA2_Stream6_IRQHandler+0x10>)
 8003bf6:	f002 fef5 	bl	80069e4 <HAL_DMA_IRQHandler>
 8003bfa:	bf00      	nop
 8003bfc:	bd80      	pop	{r7, pc}
 8003bfe:	bf00      	nop
 8003c00:	200024bc 	.word	0x200024bc

08003c04 <_sbrk>:
 8003c04:	b580      	push	{r7, lr}
 8003c06:	b086      	sub	sp, #24
 8003c08:	af00      	add	r7, sp, #0
 8003c0a:	6078      	str	r0, [r7, #4]
 8003c0c:	4a14      	ldr	r2, [pc, #80]	@ (8003c60 <_sbrk+0x5c>)
 8003c0e:	4b15      	ldr	r3, [pc, #84]	@ (8003c64 <_sbrk+0x60>)
 8003c10:	1ad3      	subs	r3, r2, r3
 8003c12:	617b      	str	r3, [r7, #20]
 8003c14:	697b      	ldr	r3, [r7, #20]
 8003c16:	613b      	str	r3, [r7, #16]
 8003c18:	4b13      	ldr	r3, [pc, #76]	@ (8003c68 <_sbrk+0x64>)
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	2b00      	cmp	r3, #0
 8003c1e:	d102      	bne.n	8003c26 <_sbrk+0x22>
 8003c20:	4b11      	ldr	r3, [pc, #68]	@ (8003c68 <_sbrk+0x64>)
 8003c22:	4a12      	ldr	r2, [pc, #72]	@ (8003c6c <_sbrk+0x68>)
 8003c24:	601a      	str	r2, [r3, #0]
 8003c26:	4b10      	ldr	r3, [pc, #64]	@ (8003c68 <_sbrk+0x64>)
 8003c28:	681a      	ldr	r2, [r3, #0]
 8003c2a:	687b      	ldr	r3, [r7, #4]
 8003c2c:	4413      	add	r3, r2
 8003c2e:	693a      	ldr	r2, [r7, #16]
 8003c30:	429a      	cmp	r2, r3
 8003c32:	d207      	bcs.n	8003c44 <_sbrk+0x40>
 8003c34:	f00a fa76 	bl	800e124 <__errno>
 8003c38:	4603      	mov	r3, r0
 8003c3a:	220c      	movs	r2, #12
 8003c3c:	601a      	str	r2, [r3, #0]
 8003c3e:	f04f 33ff 	mov.w	r3, #4294967295
 8003c42:	e009      	b.n	8003c58 <_sbrk+0x54>
 8003c44:	4b08      	ldr	r3, [pc, #32]	@ (8003c68 <_sbrk+0x64>)
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	60fb      	str	r3, [r7, #12]
 8003c4a:	4b07      	ldr	r3, [pc, #28]	@ (8003c68 <_sbrk+0x64>)
 8003c4c:	681a      	ldr	r2, [r3, #0]
 8003c4e:	687b      	ldr	r3, [r7, #4]
 8003c50:	4413      	add	r3, r2
 8003c52:	4a05      	ldr	r2, [pc, #20]	@ (8003c68 <_sbrk+0x64>)
 8003c54:	6013      	str	r3, [r2, #0]
 8003c56:	68fb      	ldr	r3, [r7, #12]
 8003c58:	4618      	mov	r0, r3
 8003c5a:	3718      	adds	r7, #24
 8003c5c:	46bd      	mov	sp, r7
 8003c5e:	bd80      	pop	{r7, pc}
 8003c60:	20050000 	.word	0x20050000
 8003c64:	00000400 	.word	0x00000400
 8003c68:	2000281c 	.word	0x2000281c
 8003c6c:	20004a30 	.word	0x20004a30

08003c70 <SystemInit>:
 8003c70:	b480      	push	{r7}
 8003c72:	af00      	add	r7, sp, #0
 8003c74:	4b06      	ldr	r3, [pc, #24]	@ (8003c90 <SystemInit+0x20>)
 8003c76:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003c7a:	4a05      	ldr	r2, [pc, #20]	@ (8003c90 <SystemInit+0x20>)
 8003c7c:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003c80:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8003c84:	bf00      	nop
 8003c86:	46bd      	mov	sp, r7
 8003c88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c8c:	4770      	bx	lr
 8003c8e:	bf00      	nop
 8003c90:	e000ed00 	.word	0xe000ed00

08003c94 <telem_send>:
uint32_t send_time;
uint32_t prev_time = 0;

extern UART_HandleTypeDef huart7;

void telem_send(void) {
 8003c94:	b580      	push	{r7, lr}
 8003c96:	b084      	sub	sp, #16
 8003c98:	af00      	add	r7, sp, #0
	send_time = HAL_GetTick();
 8003c9a:	f001 f9df 	bl	800505c <HAL_GetTick>
 8003c9e:	4603      	mov	r3, r0
 8003ca0:	4a31      	ldr	r2, [pc, #196]	@ (8003d68 <telem_send+0xd4>)
 8003ca2:	6013      	str	r3, [r2, #0]
	if (send_time - prev_time > TELEM_DELAY) {
 8003ca4:	4b30      	ldr	r3, [pc, #192]	@ (8003d68 <telem_send+0xd4>)
 8003ca6:	681a      	ldr	r2, [r3, #0]
 8003ca8:	4b30      	ldr	r3, [pc, #192]	@ (8003d6c <telem_send+0xd8>)
 8003caa:	681b      	ldr	r3, [r3, #0]
 8003cac:	1ad3      	subs	r3, r2, r3
 8003cae:	2b02      	cmp	r3, #2
 8003cb0:	d956      	bls.n	8003d60 <telem_send+0xcc>
		Packet p = {{packet_validation[0], packet_validation[1]},
 8003cb2:	2300      	movs	r3, #0
 8003cb4:	703b      	strb	r3, [r7, #0]
 8003cb6:	23ff      	movs	r3, #255	@ 0xff
 8003cb8:	707b      	strb	r3, [r7, #1]
 8003cba:	4b2d      	ldr	r3, [pc, #180]	@ (8003d70 <telem_send+0xdc>)
 8003cbc:	881b      	ldrh	r3, [r3, #0]
 8003cbe:	b29b      	uxth	r3, r3
 8003cc0:	807b      	strh	r3, [r7, #2]
 8003cc2:	2300      	movs	r3, #0
 8003cc4:	80bb      	strh	r3, [r7, #4]
 8003cc6:	2300      	movs	r3, #0
 8003cc8:	80fb      	strh	r3, [r7, #6]
 8003cca:	2300      	movs	r3, #0
 8003ccc:	813b      	strh	r3, [r7, #8]
 8003cce:	2300      	movs	r3, #0
 8003cd0:	817b      	strh	r3, [r7, #10]
 8003cd2:	4b25      	ldr	r3, [pc, #148]	@ (8003d68 <telem_send+0xd4>)
 8003cd4:	681b      	ldr	r3, [r3, #0]
 8003cd6:	60fb      	str	r3, [r7, #12]
					telem_id, {0, 0, 0, 0}, send_time};
		switch(telem_id) {
 8003cd8:	4b25      	ldr	r3, [pc, #148]	@ (8003d70 <telem_send+0xdc>)
 8003cda:	881b      	ldrh	r3, [r3, #0]
 8003cdc:	b29b      	uxth	r3, r3
 8003cde:	2b00      	cmp	r3, #0
 8003ce0:	d002      	beq.n	8003ce8 <telem_send+0x54>
 8003ce2:	2b01      	cmp	r3, #1
 8003ce4:	d011      	beq.n	8003d0a <telem_send+0x76>
				p.data[1] = outlet_temp;
				p.data[2] = inlet_pres;
				p.data[3] = outlet_pres;
				break;
			default:
				return;
 8003ce6:	e03b      	b.n	8003d60 <telem_send+0xcc>
				p.data[0] = front_right_wheel_speed;
 8003ce8:	4b22      	ldr	r3, [pc, #136]	@ (8003d74 <telem_send+0xe0>)
 8003cea:	881b      	ldrh	r3, [r3, #0]
 8003cec:	b29b      	uxth	r3, r3
 8003cee:	80bb      	strh	r3, [r7, #4]
				p.data[1] = front_left_wheel_speed;
 8003cf0:	4b21      	ldr	r3, [pc, #132]	@ (8003d78 <telem_send+0xe4>)
 8003cf2:	881b      	ldrh	r3, [r3, #0]
 8003cf4:	b29b      	uxth	r3, r3
 8003cf6:	80fb      	strh	r3, [r7, #6]
				p.data[2] = rear_right_wheel_speed;
 8003cf8:	4b20      	ldr	r3, [pc, #128]	@ (8003d7c <telem_send+0xe8>)
 8003cfa:	881b      	ldrh	r3, [r3, #0]
 8003cfc:	b29b      	uxth	r3, r3
 8003cfe:	813b      	strh	r3, [r7, #8]
				p.data[3] = rear_left_wheel_speed;
 8003d00:	4b1f      	ldr	r3, [pc, #124]	@ (8003d80 <telem_send+0xec>)
 8003d02:	881b      	ldrh	r3, [r3, #0]
 8003d04:	b29b      	uxth	r3, r3
 8003d06:	817b      	strh	r3, [r7, #10]
				break;
 8003d08:	e014      	b.n	8003d34 <telem_send+0xa0>
				p.data[0] = inlet_temp;
 8003d0a:	4b1e      	ldr	r3, [pc, #120]	@ (8003d84 <telem_send+0xf0>)
 8003d0c:	881b      	ldrh	r3, [r3, #0]
 8003d0e:	b21b      	sxth	r3, r3
 8003d10:	b29b      	uxth	r3, r3
 8003d12:	80bb      	strh	r3, [r7, #4]
				p.data[1] = outlet_temp;
 8003d14:	4b1c      	ldr	r3, [pc, #112]	@ (8003d88 <telem_send+0xf4>)
 8003d16:	881b      	ldrh	r3, [r3, #0]
 8003d18:	b21b      	sxth	r3, r3
 8003d1a:	b29b      	uxth	r3, r3
 8003d1c:	80fb      	strh	r3, [r7, #6]
				p.data[2] = inlet_pres;
 8003d1e:	4b1b      	ldr	r3, [pc, #108]	@ (8003d8c <telem_send+0xf8>)
 8003d20:	881b      	ldrh	r3, [r3, #0]
 8003d22:	b21b      	sxth	r3, r3
 8003d24:	b29b      	uxth	r3, r3
 8003d26:	813b      	strh	r3, [r7, #8]
				p.data[3] = outlet_pres;
 8003d28:	4b19      	ldr	r3, [pc, #100]	@ (8003d90 <telem_send+0xfc>)
 8003d2a:	881b      	ldrh	r3, [r3, #0]
 8003d2c:	b21b      	sxth	r3, r3
 8003d2e:	b29b      	uxth	r3, r3
 8003d30:	817b      	strh	r3, [r7, #10]
				break;
 8003d32:	bf00      	nop
		}
		HAL_UART_Transmit(&huart7, (uint8_t*)&p, PACKET_LENGTH, 1000);
 8003d34:	4639      	mov	r1, r7
 8003d36:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8003d3a:	2210      	movs	r2, #16
 8003d3c:	4815      	ldr	r0, [pc, #84]	@ (8003d94 <telem_send+0x100>)
 8003d3e:	f006 fa25 	bl	800a18c <HAL_UART_Transmit>
		telem_id = !telem_id;
 8003d42:	4b0b      	ldr	r3, [pc, #44]	@ (8003d70 <telem_send+0xdc>)
 8003d44:	881b      	ldrh	r3, [r3, #0]
 8003d46:	b29b      	uxth	r3, r3
 8003d48:	2b00      	cmp	r3, #0
 8003d4a:	bf0c      	ite	eq
 8003d4c:	2301      	moveq	r3, #1
 8003d4e:	2300      	movne	r3, #0
 8003d50:	b2db      	uxtb	r3, r3
 8003d52:	461a      	mov	r2, r3
 8003d54:	4b06      	ldr	r3, [pc, #24]	@ (8003d70 <telem_send+0xdc>)
 8003d56:	801a      	strh	r2, [r3, #0]
		prev_time = send_time;
 8003d58:	4b03      	ldr	r3, [pc, #12]	@ (8003d68 <telem_send+0xd4>)
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	4a03      	ldr	r2, [pc, #12]	@ (8003d6c <telem_send+0xd8>)
 8003d5e:	6013      	str	r3, [r2, #0]
	}
}
 8003d60:	3710      	adds	r7, #16
 8003d62:	46bd      	mov	sp, r7
 8003d64:	bd80      	pop	{r7, pc}
 8003d66:	bf00      	nop
 8003d68:	20002820 	.word	0x20002820
 8003d6c:	20002824 	.word	0x20002824
 8003d70:	20000134 	.word	0x20000134
 8003d74:	20000124 	.word	0x20000124
 8003d78:	20000126 	.word	0x20000126
 8003d7c:	20000128 	.word	0x20000128
 8003d80:	2000012a 	.word	0x2000012a
 8003d84:	2000012c 	.word	0x2000012c
 8003d88:	2000012e 	.word	0x2000012e
 8003d8c:	20000130 	.word	0x20000130
 8003d90:	20000132 	.word	0x20000132
 8003d94:	20002688 	.word	0x20002688

08003d98 <traction_control_PID>:
const uint8_t kI = 0;
const uint8_t kD = 0;

const uint16_t TC_torque_limit = 100;

void traction_control_PID(){
 8003d98:	b580      	push	{r7, lr}
 8003d9a:	b084      	sub	sp, #16
 8003d9c:	af00      	add	r7, sp, #0
    if (state != DRIVE) return;
 8003d9e:	4b59      	ldr	r3, [pc, #356]	@ (8003f04 <traction_control_PID+0x16c>)
 8003da0:	781b      	ldrb	r3, [r3, #0]
 8003da2:	b2db      	uxtb	r3, r3
 8003da4:	2b03      	cmp	r3, #3
 8003da6:	f040 80a8 	bne.w	8003efa <traction_control_PID+0x162>

    // note: wheel speeds are in units of pulses/20ms
    const float avg_front_wheel_speed = (front_right_wheel_speed + front_left_wheel_speed)/2.0;
 8003daa:	4b57      	ldr	r3, [pc, #348]	@ (8003f08 <traction_control_PID+0x170>)
 8003dac:	881b      	ldrh	r3, [r3, #0]
 8003dae:	b29b      	uxth	r3, r3
 8003db0:	461a      	mov	r2, r3
 8003db2:	4b56      	ldr	r3, [pc, #344]	@ (8003f0c <traction_control_PID+0x174>)
 8003db4:	881b      	ldrh	r3, [r3, #0]
 8003db6:	b29b      	uxth	r3, r3
 8003db8:	4413      	add	r3, r2
 8003dba:	4618      	mov	r0, r3
 8003dbc:	f7fc fbd2 	bl	8000564 <__aeabi_i2d>
 8003dc0:	f04f 0200 	mov.w	r2, #0
 8003dc4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8003dc8:	f7fc fd60 	bl	800088c <__aeabi_ddiv>
 8003dcc:	4602      	mov	r2, r0
 8003dce:	460b      	mov	r3, r1
 8003dd0:	4610      	mov	r0, r2
 8003dd2:	4619      	mov	r1, r3
 8003dd4:	f7fc fe42 	bl	8000a5c <__aeabi_d2f>
 8003dd8:	4603      	mov	r3, r0
 8003dda:	60fb      	str	r3, [r7, #12]
    const float avg_rear_wheel_speed = (rear_right_wheel_speed + rear_left_wheel_speed)/2.0;
 8003ddc:	4b4c      	ldr	r3, [pc, #304]	@ (8003f10 <traction_control_PID+0x178>)
 8003dde:	881b      	ldrh	r3, [r3, #0]
 8003de0:	b29b      	uxth	r3, r3
 8003de2:	461a      	mov	r2, r3
 8003de4:	4b4b      	ldr	r3, [pc, #300]	@ (8003f14 <traction_control_PID+0x17c>)
 8003de6:	881b      	ldrh	r3, [r3, #0]
 8003de8:	b29b      	uxth	r3, r3
 8003dea:	4413      	add	r3, r2
 8003dec:	4618      	mov	r0, r3
 8003dee:	f7fc fbb9 	bl	8000564 <__aeabi_i2d>
 8003df2:	f04f 0200 	mov.w	r2, #0
 8003df6:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8003dfa:	f7fc fd47 	bl	800088c <__aeabi_ddiv>
 8003dfe:	4602      	mov	r2, r0
 8003e00:	460b      	mov	r3, r1
 8003e02:	4610      	mov	r0, r2
 8003e04:	4619      	mov	r1, r3
 8003e06:	f7fc fe29 	bl	8000a5c <__aeabi_d2f>
 8003e0a:	4603      	mov	r3, r0
 8003e0c:	60bb      	str	r3, [r7, #8]
    const float conversion_factor = (2*pi*wheel_radius)/pulses_per_rev;
 8003e0e:	eddf 7a42 	vldr	s15, [pc, #264]	@ 8003f18 <traction_control_PID+0x180>
 8003e12:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8003e16:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003e1a:	ee67 6a87 	vmul.f32	s13, s15, s14
 8003e1e:	233c      	movs	r3, #60	@ 0x3c
 8003e20:	ee07 3a90 	vmov	s15, r3
 8003e24:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003e28:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003e2c:	edc7 7a01 	vstr	s15, [r7, #4]
    const float current_slip_ratio = (avg_rear_wheel_speed*conversion_factor) / (avg_front_wheel_speed*conversion_factor);
 8003e30:	ed97 7a02 	vldr	s14, [r7, #8]
 8003e34:	edd7 7a01 	vldr	s15, [r7, #4]
 8003e38:	ee67 6a27 	vmul.f32	s13, s14, s15
 8003e3c:	ed97 7a03 	vldr	s14, [r7, #12]
 8003e40:	edd7 7a01 	vldr	s15, [r7, #4]
 8003e44:	ee27 7a27 	vmul.f32	s14, s14, s15
 8003e48:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003e4c:	edc7 7a00 	vstr	s15, [r7]

    // if target slip ratio has been achieved
//    if (current_slip_ratio < target_slip_ratio + 0.001 || current_slip_ratio > target_slip_ratio - 0.001) return;

    pid_error = target_slip_ratio - current_slip_ratio;
 8003e50:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8003f1c <traction_control_PID+0x184>
 8003e54:	edd7 7a00 	vldr	s15, [r7]
 8003e58:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003e5c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003e60:	ee17 3a90 	vmov	r3, s15
 8003e64:	b29a      	uxth	r2, r3
 8003e66:	4b2e      	ldr	r3, [pc, #184]	@ (8003f20 <traction_control_PID+0x188>)
 8003e68:	801a      	strh	r2, [r3, #0]
    integral = integral + pid_error;
 8003e6a:	4b2e      	ldr	r3, [pc, #184]	@ (8003f24 <traction_control_PID+0x18c>)
 8003e6c:	881b      	ldrh	r3, [r3, #0]
 8003e6e:	b29a      	uxth	r2, r3
 8003e70:	4b2b      	ldr	r3, [pc, #172]	@ (8003f20 <traction_control_PID+0x188>)
 8003e72:	881b      	ldrh	r3, [r3, #0]
 8003e74:	b29b      	uxth	r3, r3
 8003e76:	4413      	add	r3, r2
 8003e78:	b29a      	uxth	r2, r3
 8003e7a:	4b2a      	ldr	r3, [pc, #168]	@ (8003f24 <traction_control_PID+0x18c>)
 8003e7c:	801a      	strh	r2, [r3, #0]
    derivative = pid_error - prev_pid_error;
 8003e7e:	4b28      	ldr	r3, [pc, #160]	@ (8003f20 <traction_control_PID+0x188>)
 8003e80:	881b      	ldrh	r3, [r3, #0]
 8003e82:	b29a      	uxth	r2, r3
 8003e84:	4b28      	ldr	r3, [pc, #160]	@ (8003f28 <traction_control_PID+0x190>)
 8003e86:	881b      	ldrh	r3, [r3, #0]
 8003e88:	b29b      	uxth	r3, r3
 8003e8a:	1ad3      	subs	r3, r2, r3
 8003e8c:	b29a      	uxth	r2, r3
 8003e8e:	4b27      	ldr	r3, [pc, #156]	@ (8003f2c <traction_control_PID+0x194>)
 8003e90:	801a      	strh	r2, [r3, #0]

    TC_control_var = (kP * pid_error) + (kI * integral) + (kD * derivative);
 8003e92:	2300      	movs	r3, #0
 8003e94:	461a      	mov	r2, r3
 8003e96:	4b22      	ldr	r3, [pc, #136]	@ (8003f20 <traction_control_PID+0x188>)
 8003e98:	881b      	ldrh	r3, [r3, #0]
 8003e9a:	b29b      	uxth	r3, r3
 8003e9c:	fb12 f303 	smulbb	r3, r2, r3
 8003ea0:	b29a      	uxth	r2, r3
 8003ea2:	2300      	movs	r3, #0
 8003ea4:	4619      	mov	r1, r3
 8003ea6:	4b1f      	ldr	r3, [pc, #124]	@ (8003f24 <traction_control_PID+0x18c>)
 8003ea8:	881b      	ldrh	r3, [r3, #0]
 8003eaa:	b29b      	uxth	r3, r3
 8003eac:	fb11 f303 	smulbb	r3, r1, r3
 8003eb0:	b29b      	uxth	r3, r3
 8003eb2:	4413      	add	r3, r2
 8003eb4:	b29a      	uxth	r2, r3
 8003eb6:	2300      	movs	r3, #0
 8003eb8:	4619      	mov	r1, r3
 8003eba:	4b1c      	ldr	r3, [pc, #112]	@ (8003f2c <traction_control_PID+0x194>)
 8003ebc:	881b      	ldrh	r3, [r3, #0]
 8003ebe:	b29b      	uxth	r3, r3
 8003ec0:	fb11 f303 	smulbb	r3, r1, r3
 8003ec4:	b29b      	uxth	r3, r3
 8003ec6:	4413      	add	r3, r2
 8003ec8:	b29a      	uxth	r2, r3
 8003eca:	4b19      	ldr	r3, [pc, #100]	@ (8003f30 <traction_control_PID+0x198>)
 8003ecc:	801a      	strh	r2, [r3, #0]

    // limit PID torque request
    if (TC_control_var > TC_torque_limit) TC_control_var = TC_torque_limit;
 8003ece:	4b18      	ldr	r3, [pc, #96]	@ (8003f30 <traction_control_PID+0x198>)
 8003ed0:	881b      	ldrh	r3, [r3, #0]
 8003ed2:	b29b      	uxth	r3, r3
 8003ed4:	2264      	movs	r2, #100	@ 0x64
 8003ed6:	4293      	cmp	r3, r2
 8003ed8:	d902      	bls.n	8003ee0 <traction_control_PID+0x148>
 8003eda:	2264      	movs	r2, #100	@ 0x64
 8003edc:	4b14      	ldr	r3, [pc, #80]	@ (8003f30 <traction_control_PID+0x198>)
 8003ede:	801a      	strh	r2, [r3, #0]
    if (TC_control_var < 0) TC_control_var = 0; // not the best way but works for now
 8003ee0:	4b13      	ldr	r3, [pc, #76]	@ (8003f30 <traction_control_PID+0x198>)
 8003ee2:	881b      	ldrh	r3, [r3, #0]

    TC_torque_adjustment = TC_control_var;
 8003ee4:	4b12      	ldr	r3, [pc, #72]	@ (8003f30 <traction_control_PID+0x198>)
 8003ee6:	881b      	ldrh	r3, [r3, #0]
 8003ee8:	b29a      	uxth	r2, r3
 8003eea:	4b12      	ldr	r3, [pc, #72]	@ (8003f34 <traction_control_PID+0x19c>)
 8003eec:	801a      	strh	r2, [r3, #0]

    prev_pid_error = pid_error;
 8003eee:	4b0c      	ldr	r3, [pc, #48]	@ (8003f20 <traction_control_PID+0x188>)
 8003ef0:	881b      	ldrh	r3, [r3, #0]
 8003ef2:	b29a      	uxth	r2, r3
 8003ef4:	4b0c      	ldr	r3, [pc, #48]	@ (8003f28 <traction_control_PID+0x190>)
 8003ef6:	801a      	strh	r2, [r3, #0]
 8003ef8:	e000      	b.n	8003efc <traction_control_PID+0x164>
    if (state != DRIVE) return;
 8003efa:	bf00      	nop
}
 8003efc:	3710      	adds	r7, #16
 8003efe:	46bd      	mov	sp, r7
 8003f00:	bd80      	pop	{r7, pc}
 8003f02:	bf00      	nop
 8003f04:	20000091 	.word	0x20000091
 8003f08:	20000124 	.word	0x20000124
 8003f0c:	20000126 	.word	0x20000126
 8003f10:	20000128 	.word	0x20000128
 8003f14:	2000012a 	.word	0x2000012a
 8003f18:	4048f5c3 	.word	0x4048f5c3
 8003f1c:	3dcccccd 	.word	0x3dcccccd
 8003f20:	2000282c 	.word	0x2000282c
 8003f24:	20002830 	.word	0x20002830
 8003f28:	2000282e 	.word	0x2000282e
 8003f2c:	20002832 	.word	0x20002832
 8003f30:	20002828 	.word	0x20002828
 8003f34:	2000282a 	.word	0x2000282a

08003f38 <UG_Init>:
 8003f38:	b480      	push	{r7}
 8003f3a:	b087      	sub	sp, #28
 8003f3c:	af00      	add	r7, sp, #0
 8003f3e:	60f8      	str	r0, [r7, #12]
 8003f40:	60b9      	str	r1, [r7, #8]
 8003f42:	4611      	mov	r1, r2
 8003f44:	461a      	mov	r2, r3
 8003f46:	460b      	mov	r3, r1
 8003f48:	80fb      	strh	r3, [r7, #6]
 8003f4a:	4613      	mov	r3, r2
 8003f4c:	80bb      	strh	r3, [r7, #4]
 8003f4e:	68fb      	ldr	r3, [r7, #12]
 8003f50:	68ba      	ldr	r2, [r7, #8]
 8003f52:	601a      	str	r2, [r3, #0]
 8003f54:	68fb      	ldr	r3, [r7, #12]
 8003f56:	88fa      	ldrh	r2, [r7, #6]
 8003f58:	809a      	strh	r2, [r3, #4]
 8003f5a:	68fb      	ldr	r3, [r7, #12]
 8003f5c:	88ba      	ldrh	r2, [r7, #4]
 8003f5e:	80da      	strh	r2, [r3, #6]
 8003f60:	68fb      	ldr	r3, [r7, #12]
 8003f62:	2204      	movs	r2, #4
 8003f64:	841a      	strh	r2, [r3, #32]
 8003f66:	68fb      	ldr	r3, [r7, #12]
 8003f68:	2204      	movs	r2, #4
 8003f6a:	845a      	strh	r2, [r3, #34]	@ 0x22
 8003f6c:	68fb      	ldr	r3, [r7, #12]
 8003f6e:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003f72:	b29a      	uxth	r2, r3
 8003f74:	68fb      	ldr	r3, [r7, #12]
 8003f76:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 8003f7a:	b29b      	uxth	r3, r3
 8003f7c:	1ad3      	subs	r3, r2, r3
 8003f7e:	b29b      	uxth	r3, r3
 8003f80:	3b01      	subs	r3, #1
 8003f82:	b29b      	uxth	r3, r3
 8003f84:	b21a      	sxth	r2, r3
 8003f86:	68fb      	ldr	r3, [r7, #12]
 8003f88:	849a      	strh	r2, [r3, #36]	@ 0x24
 8003f8a:	68fb      	ldr	r3, [r7, #12]
 8003f8c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8003f90:	b29a      	uxth	r2, r3
 8003f92:	68fb      	ldr	r3, [r7, #12]
 8003f94:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 8003f98:	b29b      	uxth	r3, r3
 8003f9a:	1ad3      	subs	r3, r2, r3
 8003f9c:	b29b      	uxth	r3, r3
 8003f9e:	3b01      	subs	r3, #1
 8003fa0:	b29b      	uxth	r3, r3
 8003fa2:	b21a      	sxth	r2, r3
 8003fa4:	68fb      	ldr	r3, [r7, #12]
 8003fa6:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003fa8:	68fb      	ldr	r3, [r7, #12]
 8003faa:	f9b3 2024 	ldrsh.w	r2, [r3, #36]	@ 0x24
 8003fae:	68fb      	ldr	r3, [r7, #12]
 8003fb0:	839a      	strh	r2, [r3, #28]
 8003fb2:	68fb      	ldr	r3, [r7, #12]
 8003fb4:	f9b3 2026 	ldrsh.w	r2, [r3, #38]	@ 0x26
 8003fb8:	68fb      	ldr	r3, [r7, #12]
 8003fba:	83da      	strh	r2, [r3, #30]
 8003fbc:	68fb      	ldr	r3, [r7, #12]
 8003fbe:	2201      	movs	r2, #1
 8003fc0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003fc4:	68fb      	ldr	r3, [r7, #12]
 8003fc6:	2201      	movs	r2, #1
 8003fc8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003fcc:	68fb      	ldr	r3, [r7, #12]
 8003fce:	2200      	movs	r2, #0
 8003fd0:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003fd2:	68fb      	ldr	r3, [r7, #12]
 8003fd4:	2200      	movs	r2, #0
 8003fd6:	869a      	strh	r2, [r3, #52]	@ 0x34
 8003fd8:	68fb      	ldr	r3, [r7, #12]
 8003fda:	2200      	movs	r2, #0
 8003fdc:	865a      	strh	r2, [r3, #50]	@ 0x32
 8003fde:	68fb      	ldr	r3, [r7, #12]
 8003fe0:	2200      	movs	r2, #0
 8003fe2:	86da      	strh	r2, [r3, #54]	@ 0x36
 8003fe4:	68fb      	ldr	r3, [r7, #12]
 8003fe6:	2200      	movs	r2, #0
 8003fe8:	871a      	strh	r2, [r3, #56]	@ 0x38
 8003fea:	68fb      	ldr	r3, [r7, #12]
 8003fec:	2200      	movs	r2, #0
 8003fee:	63da      	str	r2, [r3, #60]	@ 0x3c
 8003ff0:	68fb      	ldr	r3, [r7, #12]
 8003ff2:	f645 425d 	movw	r2, #23645	@ 0x5c5d
 8003ff6:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8003ffa:	68fb      	ldr	r3, [r7, #12]
 8003ffc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8004000:	f8a3 2042 	strh.w	r2, [r3, #66]	@ 0x42
 8004004:	68fb      	ldr	r3, [r7, #12]
 8004006:	2200      	movs	r2, #0
 8004008:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	2200      	movs	r2, #0
 8004010:	611a      	str	r2, [r3, #16]
 8004012:	68fb      	ldr	r3, [r7, #12]
 8004014:	2200      	movs	r2, #0
 8004016:	615a      	str	r2, [r3, #20]
 8004018:	68fb      	ldr	r3, [r7, #12]
 800401a:	2200      	movs	r2, #0
 800401c:	619a      	str	r2, [r3, #24]
 800401e:	2300      	movs	r3, #0
 8004020:	75fb      	strb	r3, [r7, #23]
 8004022:	e010      	b.n	8004046 <UG_Init+0x10e>
 8004024:	7dfb      	ldrb	r3, [r7, #23]
 8004026:	68fa      	ldr	r2, [r7, #12]
 8004028:	3309      	adds	r3, #9
 800402a:	00db      	lsls	r3, r3, #3
 800402c:	4413      	add	r3, r2
 800402e:	2200      	movs	r2, #0
 8004030:	605a      	str	r2, [r3, #4]
 8004032:	7dfb      	ldrb	r3, [r7, #23]
 8004034:	68fa      	ldr	r2, [r7, #12]
 8004036:	3309      	adds	r3, #9
 8004038:	00db      	lsls	r3, r3, #3
 800403a:	4413      	add	r3, r2
 800403c:	2200      	movs	r2, #0
 800403e:	721a      	strb	r2, [r3, #8]
 8004040:	7dfb      	ldrb	r3, [r7, #23]
 8004042:	3301      	adds	r3, #1
 8004044:	75fb      	strb	r3, [r7, #23]
 8004046:	7dfb      	ldrb	r3, [r7, #23]
 8004048:	2b06      	cmp	r3, #6
 800404a:	d9eb      	bls.n	8004024 <UG_Init+0xec>
 800404c:	4a04      	ldr	r2, [pc, #16]	@ (8004060 <UG_Init+0x128>)
 800404e:	68fb      	ldr	r3, [r7, #12]
 8004050:	6013      	str	r3, [r2, #0]
 8004052:	2301      	movs	r3, #1
 8004054:	4618      	mov	r0, r3
 8004056:	371c      	adds	r7, #28
 8004058:	46bd      	mov	sp, r7
 800405a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800405e:	4770      	bx	lr
 8004060:	20002834 	.word	0x20002834

08004064 <UG_FontSelect>:
 8004064:	b4b0      	push	{r4, r5, r7}
 8004066:	b083      	sub	sp, #12
 8004068:	af00      	add	r7, sp, #0
 800406a:	6078      	str	r0, [r7, #4]
 800406c:	4b07      	ldr	r3, [pc, #28]	@ (800408c <UG_FontSelect+0x28>)
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	687a      	ldr	r2, [r7, #4]
 8004072:	f103 042c 	add.w	r4, r3, #44	@ 0x2c
 8004076:	4615      	mov	r5, r2
 8004078:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800407a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800407c:	682b      	ldr	r3, [r5, #0]
 800407e:	6023      	str	r3, [r4, #0]
 8004080:	bf00      	nop
 8004082:	370c      	adds	r7, #12
 8004084:	46bd      	mov	sp, r7
 8004086:	bcb0      	pop	{r4, r5, r7}
 8004088:	4770      	bx	lr
 800408a:	bf00      	nop
 800408c:	20002834 	.word	0x20002834

08004090 <UG_FillScreen>:
 8004090:	b580      	push	{r7, lr}
 8004092:	b084      	sub	sp, #16
 8004094:	af02      	add	r7, sp, #8
 8004096:	4603      	mov	r3, r0
 8004098:	80fb      	strh	r3, [r7, #6]
 800409a:	4b0d      	ldr	r3, [pc, #52]	@ (80040d0 <UG_FillScreen+0x40>)
 800409c:	681b      	ldr	r3, [r3, #0]
 800409e:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80040a2:	b29b      	uxth	r3, r3
 80040a4:	3b01      	subs	r3, #1
 80040a6:	b29b      	uxth	r3, r3
 80040a8:	b21a      	sxth	r2, r3
 80040aa:	4b09      	ldr	r3, [pc, #36]	@ (80040d0 <UG_FillScreen+0x40>)
 80040ac:	681b      	ldr	r3, [r3, #0]
 80040ae:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80040b2:	b29b      	uxth	r3, r3
 80040b4:	3b01      	subs	r3, #1
 80040b6:	b29b      	uxth	r3, r3
 80040b8:	b219      	sxth	r1, r3
 80040ba:	88fb      	ldrh	r3, [r7, #6]
 80040bc:	9300      	str	r3, [sp, #0]
 80040be:	460b      	mov	r3, r1
 80040c0:	2100      	movs	r1, #0
 80040c2:	2000      	movs	r0, #0
 80040c4:	f000 f806 	bl	80040d4 <UG_FillFrame>
 80040c8:	bf00      	nop
 80040ca:	3708      	adds	r7, #8
 80040cc:	46bd      	mov	sp, r7
 80040ce:	bd80      	pop	{r7, pc}
 80040d0:	20002834 	.word	0x20002834

080040d4 <UG_FillFrame>:
 80040d4:	b5b0      	push	{r4, r5, r7, lr}
 80040d6:	b086      	sub	sp, #24
 80040d8:	af02      	add	r7, sp, #8
 80040da:	4604      	mov	r4, r0
 80040dc:	4608      	mov	r0, r1
 80040de:	4611      	mov	r1, r2
 80040e0:	461a      	mov	r2, r3
 80040e2:	4623      	mov	r3, r4
 80040e4:	80fb      	strh	r3, [r7, #6]
 80040e6:	4603      	mov	r3, r0
 80040e8:	80bb      	strh	r3, [r7, #4]
 80040ea:	460b      	mov	r3, r1
 80040ec:	807b      	strh	r3, [r7, #2]
 80040ee:	4613      	mov	r3, r2
 80040f0:	803b      	strh	r3, [r7, #0]
 80040f2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80040f6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80040fa:	429a      	cmp	r2, r3
 80040fc:	da05      	bge.n	800410a <UG_FillFrame+0x36>
 80040fe:	887b      	ldrh	r3, [r7, #2]
 8004100:	81fb      	strh	r3, [r7, #14]
 8004102:	88fb      	ldrh	r3, [r7, #6]
 8004104:	807b      	strh	r3, [r7, #2]
 8004106:	89fb      	ldrh	r3, [r7, #14]
 8004108:	80fb      	strh	r3, [r7, #6]
 800410a:	f9b7 2000 	ldrsh.w	r2, [r7]
 800410e:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8004112:	429a      	cmp	r2, r3
 8004114:	da05      	bge.n	8004122 <UG_FillFrame+0x4e>
 8004116:	883b      	ldrh	r3, [r7, #0]
 8004118:	81fb      	strh	r3, [r7, #14]
 800411a:	88bb      	ldrh	r3, [r7, #4]
 800411c:	803b      	strh	r3, [r7, #0]
 800411e:	89fb      	ldrh	r3, [r7, #14]
 8004120:	80bb      	strh	r3, [r7, #4]
 8004122:	4b23      	ldr	r3, [pc, #140]	@ (80041b0 <UG_FillFrame+0xdc>)
 8004124:	681b      	ldr	r3, [r3, #0]
 8004126:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 800412a:	f003 0302 	and.w	r3, r3, #2
 800412e:	2b00      	cmp	r3, #0
 8004130:	d012      	beq.n	8004158 <UG_FillFrame+0x84>
 8004132:	4b1f      	ldr	r3, [pc, #124]	@ (80041b0 <UG_FillFrame+0xdc>)
 8004134:	681b      	ldr	r3, [r3, #0]
 8004136:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004138:	461d      	mov	r5, r3
 800413a:	f9b7 4000 	ldrsh.w	r4, [r7]
 800413e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8004142:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 8004146:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 800414a:	8c3b      	ldrh	r3, [r7, #32]
 800414c:	9300      	str	r3, [sp, #0]
 800414e:	4623      	mov	r3, r4
 8004150:	47a8      	blx	r5
 8004152:	4603      	mov	r3, r0
 8004154:	2b00      	cmp	r3, #0
 8004156:	d027      	beq.n	80041a8 <UG_FillFrame+0xd4>
 8004158:	88bb      	ldrh	r3, [r7, #4]
 800415a:	81bb      	strh	r3, [r7, #12]
 800415c:	e01d      	b.n	800419a <UG_FillFrame+0xc6>
 800415e:	88fb      	ldrh	r3, [r7, #6]
 8004160:	81fb      	strh	r3, [r7, #14]
 8004162:	e00e      	b.n	8004182 <UG_FillFrame+0xae>
 8004164:	4b12      	ldr	r3, [pc, #72]	@ (80041b0 <UG_FillFrame+0xdc>)
 8004166:	681b      	ldr	r3, [r3, #0]
 8004168:	681b      	ldr	r3, [r3, #0]
 800416a:	8c3a      	ldrh	r2, [r7, #32]
 800416c:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8004170:	f9b7 000e 	ldrsh.w	r0, [r7, #14]
 8004174:	4798      	blx	r3
 8004176:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800417a:	b29b      	uxth	r3, r3
 800417c:	3301      	adds	r3, #1
 800417e:	b29b      	uxth	r3, r3
 8004180:	81fb      	strh	r3, [r7, #14]
 8004182:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8004186:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800418a:	429a      	cmp	r2, r3
 800418c:	ddea      	ble.n	8004164 <UG_FillFrame+0x90>
 800418e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004192:	b29b      	uxth	r3, r3
 8004194:	3301      	adds	r3, #1
 8004196:	b29b      	uxth	r3, r3
 8004198:	81bb      	strh	r3, [r7, #12]
 800419a:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 800419e:	f9b7 3000 	ldrsh.w	r3, [r7]
 80041a2:	429a      	cmp	r2, r3
 80041a4:	dddb      	ble.n	800415e <UG_FillFrame+0x8a>
 80041a6:	e000      	b.n	80041aa <UG_FillFrame+0xd6>
 80041a8:	bf00      	nop
 80041aa:	3710      	adds	r7, #16
 80041ac:	46bd      	mov	sp, r7
 80041ae:	bdb0      	pop	{r4, r5, r7, pc}
 80041b0:	20002834 	.word	0x20002834

080041b4 <UG_PutString>:
 80041b4:	b590      	push	{r4, r7, lr}
 80041b6:	b087      	sub	sp, #28
 80041b8:	af02      	add	r7, sp, #8
 80041ba:	4603      	mov	r3, r0
 80041bc:	603a      	str	r2, [r7, #0]
 80041be:	80fb      	strh	r3, [r7, #6]
 80041c0:	460b      	mov	r3, r1
 80041c2:	80bb      	strh	r3, [r7, #4]
 80041c4:	88fb      	ldrh	r3, [r7, #6]
 80041c6:	81fb      	strh	r3, [r7, #14]
 80041c8:	88bb      	ldrh	r3, [r7, #4]
 80041ca:	81bb      	strh	r3, [r7, #12]
 80041cc:	e06d      	b.n	80042aa <UG_PutString+0xf6>
 80041ce:	683b      	ldr	r3, [r7, #0]
 80041d0:	1c5a      	adds	r2, r3, #1
 80041d2:	603a      	str	r2, [r7, #0]
 80041d4:	781b      	ldrb	r3, [r3, #0]
 80041d6:	72fb      	strb	r3, [r7, #11]
 80041d8:	7afb      	ldrb	r3, [r7, #11]
 80041da:	b29a      	uxth	r2, r3
 80041dc:	4b37      	ldr	r3, [pc, #220]	@ (80042bc <UG_PutString+0x108>)
 80041de:	681b      	ldr	r3, [r3, #0]
 80041e0:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80041e2:	429a      	cmp	r2, r3
 80041e4:	d360      	bcc.n	80042a8 <UG_PutString+0xf4>
 80041e6:	7afb      	ldrb	r3, [r7, #11]
 80041e8:	b29a      	uxth	r2, r3
 80041ea:	4b34      	ldr	r3, [pc, #208]	@ (80042bc <UG_PutString+0x108>)
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	8f1b      	ldrh	r3, [r3, #56]	@ 0x38
 80041f0:	429a      	cmp	r2, r3
 80041f2:	d859      	bhi.n	80042a8 <UG_PutString+0xf4>
 80041f4:	7afb      	ldrb	r3, [r7, #11]
 80041f6:	2b0a      	cmp	r3, #10
 80041f8:	d104      	bne.n	8004204 <UG_PutString+0x50>
 80041fa:	4b30      	ldr	r3, [pc, #192]	@ (80042bc <UG_PutString+0x108>)
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	889b      	ldrh	r3, [r3, #4]
 8004200:	81fb      	strh	r3, [r7, #14]
 8004202:	e052      	b.n	80042aa <UG_PutString+0xf6>
 8004204:	4b2d      	ldr	r3, [pc, #180]	@ (80042bc <UG_PutString+0x108>)
 8004206:	681b      	ldr	r3, [r3, #0]
 8004208:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800420a:	2b00      	cmp	r3, #0
 800420c:	d00a      	beq.n	8004224 <UG_PutString+0x70>
 800420e:	4b2b      	ldr	r3, [pc, #172]	@ (80042bc <UG_PutString+0x108>)
 8004210:	681b      	ldr	r3, [r3, #0]
 8004212:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004214:	7afa      	ldrb	r2, [r7, #11]
 8004216:	4929      	ldr	r1, [pc, #164]	@ (80042bc <UG_PutString+0x108>)
 8004218:	6809      	ldr	r1, [r1, #0]
 800421a:	8ec9      	ldrh	r1, [r1, #54]	@ 0x36
 800421c:	1a52      	subs	r2, r2, r1
 800421e:	4413      	add	r3, r2
 8004220:	781b      	ldrb	r3, [r3, #0]
 8004222:	e004      	b.n	800422e <UG_PutString+0x7a>
 8004224:	4b25      	ldr	r3, [pc, #148]	@ (80042bc <UG_PutString+0x108>)
 8004226:	681b      	ldr	r3, [r3, #0]
 8004228:	f9b3 3032 	ldrsh.w	r3, [r3, #50]	@ 0x32
 800422c:	b2db      	uxtb	r3, r3
 800422e:	72bb      	strb	r3, [r7, #10]
 8004230:	4b22      	ldr	r3, [pc, #136]	@ (80042bc <UG_PutString+0x108>)
 8004232:	681b      	ldr	r3, [r3, #0]
 8004234:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8004238:	4619      	mov	r1, r3
 800423a:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800423e:	7abb      	ldrb	r3, [r7, #10]
 8004240:	4413      	add	r3, r2
 8004242:	4299      	cmp	r1, r3
 8004244:	dc11      	bgt.n	800426a <UG_PutString+0xb6>
 8004246:	88fb      	ldrh	r3, [r7, #6]
 8004248:	81fb      	strh	r3, [r7, #14]
 800424a:	4b1c      	ldr	r3, [pc, #112]	@ (80042bc <UG_PutString+0x108>)
 800424c:	681b      	ldr	r3, [r3, #0]
 800424e:	f9b3 3034 	ldrsh.w	r3, [r3, #52]	@ 0x34
 8004252:	b29a      	uxth	r2, r3
 8004254:	4b19      	ldr	r3, [pc, #100]	@ (80042bc <UG_PutString+0x108>)
 8004256:	681b      	ldr	r3, [r3, #0]
 8004258:	f993 3041 	ldrsb.w	r3, [r3, #65]	@ 0x41
 800425c:	b29b      	uxth	r3, r3
 800425e:	4413      	add	r3, r2
 8004260:	b29a      	uxth	r2, r3
 8004262:	89bb      	ldrh	r3, [r7, #12]
 8004264:	4413      	add	r3, r2
 8004266:	b29b      	uxth	r3, r3
 8004268:	81bb      	strh	r3, [r7, #12]
 800426a:	4b14      	ldr	r3, [pc, #80]	@ (80042bc <UG_PutString+0x108>)
 800426c:	681b      	ldr	r3, [r3, #0]
 800426e:	f8b3 4042 	ldrh.w	r4, [r3, #66]	@ 0x42
 8004272:	4b12      	ldr	r3, [pc, #72]	@ (80042bc <UG_PutString+0x108>)
 8004274:	681b      	ldr	r3, [r3, #0]
 8004276:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 800427a:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 800427e:	f9b7 100e 	ldrsh.w	r1, [r7, #14]
 8004282:	7af8      	ldrb	r0, [r7, #11]
 8004284:	9300      	str	r3, [sp, #0]
 8004286:	4623      	mov	r3, r4
 8004288:	f000 f89e 	bl	80043c8 <UG_PutChar>
 800428c:	7abb      	ldrb	r3, [r7, #10]
 800428e:	b21b      	sxth	r3, r3
 8004290:	4a0a      	ldr	r2, [pc, #40]	@ (80042bc <UG_PutString+0x108>)
 8004292:	6812      	ldr	r2, [r2, #0]
 8004294:	f992 2040 	ldrsb.w	r2, [r2, #64]	@ 0x40
 8004298:	4413      	add	r3, r2
 800429a:	b21b      	sxth	r3, r3
 800429c:	b29a      	uxth	r2, r3
 800429e:	89fb      	ldrh	r3, [r7, #14]
 80042a0:	4413      	add	r3, r2
 80042a2:	b29b      	uxth	r3, r3
 80042a4:	81fb      	strh	r3, [r7, #14]
 80042a6:	e000      	b.n	80042aa <UG_PutString+0xf6>
 80042a8:	bf00      	nop
 80042aa:	683b      	ldr	r3, [r7, #0]
 80042ac:	781b      	ldrb	r3, [r3, #0]
 80042ae:	2b00      	cmp	r3, #0
 80042b0:	d18d      	bne.n	80041ce <UG_PutString+0x1a>
 80042b2:	bf00      	nop
 80042b4:	bf00      	nop
 80042b6:	3714      	adds	r7, #20
 80042b8:	46bd      	mov	sp, r7
 80042ba:	bd90      	pop	{r4, r7, pc}
 80042bc:	20002834 	.word	0x20002834

080042c0 <UG_PutColorString>:
 80042c0:	b590      	push	{r4, r7, lr}
 80042c2:	b089      	sub	sp, #36	@ 0x24
 80042c4:	af02      	add	r7, sp, #8
 80042c6:	60ba      	str	r2, [r7, #8]
 80042c8:	461a      	mov	r2, r3
 80042ca:	4603      	mov	r3, r0
 80042cc:	81fb      	strh	r3, [r7, #14]
 80042ce:	460b      	mov	r3, r1
 80042d0:	81bb      	strh	r3, [r7, #12]
 80042d2:	4613      	mov	r3, r2
 80042d4:	80fb      	strh	r3, [r7, #6]
 80042d6:	89fb      	ldrh	r3, [r7, #14]
 80042d8:	82fb      	strh	r3, [r7, #22]
 80042da:	89bb      	ldrh	r3, [r7, #12]
 80042dc:	82bb      	strh	r3, [r7, #20]
 80042de:	e067      	b.n	80043b0 <UG_PutColorString+0xf0>
 80042e0:	68bb      	ldr	r3, [r7, #8]
 80042e2:	1c5a      	adds	r2, r3, #1
 80042e4:	60ba      	str	r2, [r7, #8]
 80042e6:	781b      	ldrb	r3, [r3, #0]
 80042e8:	74fb      	strb	r3, [r7, #19]
 80042ea:	7cfb      	ldrb	r3, [r7, #19]
 80042ec:	b29a      	uxth	r2, r3
 80042ee:	4b35      	ldr	r3, [pc, #212]	@ (80043c4 <UG_PutColorString+0x104>)
 80042f0:	681b      	ldr	r3, [r3, #0]
 80042f2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80042f4:	429a      	cmp	r2, r3
 80042f6:	d35a      	bcc.n	80043ae <UG_PutColorString+0xee>
 80042f8:	7cfb      	ldrb	r3, [r7, #19]
 80042fa:	b29a      	uxth	r2, r3
 80042fc:	4b31      	ldr	r3, [pc, #196]	@ (80043c4 <UG_PutColorString+0x104>)
 80042fe:	681b      	ldr	r3, [r3, #0]
 8004300:	8f1b      	ldrh	r3, [r3, #56]	@ 0x38
 8004302:	429a      	cmp	r2, r3
 8004304:	d853      	bhi.n	80043ae <UG_PutColorString+0xee>
 8004306:	7cfb      	ldrb	r3, [r7, #19]
 8004308:	2b0a      	cmp	r3, #10
 800430a:	d104      	bne.n	8004316 <UG_PutColorString+0x56>
 800430c:	4b2d      	ldr	r3, [pc, #180]	@ (80043c4 <UG_PutColorString+0x104>)
 800430e:	681b      	ldr	r3, [r3, #0]
 8004310:	889b      	ldrh	r3, [r3, #4]
 8004312:	82fb      	strh	r3, [r7, #22]
 8004314:	e04c      	b.n	80043b0 <UG_PutColorString+0xf0>
 8004316:	4b2b      	ldr	r3, [pc, #172]	@ (80043c4 <UG_PutColorString+0x104>)
 8004318:	681b      	ldr	r3, [r3, #0]
 800431a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800431c:	2b00      	cmp	r3, #0
 800431e:	d00a      	beq.n	8004336 <UG_PutColorString+0x76>
 8004320:	4b28      	ldr	r3, [pc, #160]	@ (80043c4 <UG_PutColorString+0x104>)
 8004322:	681b      	ldr	r3, [r3, #0]
 8004324:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004326:	7cfa      	ldrb	r2, [r7, #19]
 8004328:	4926      	ldr	r1, [pc, #152]	@ (80043c4 <UG_PutColorString+0x104>)
 800432a:	6809      	ldr	r1, [r1, #0]
 800432c:	8ec9      	ldrh	r1, [r1, #54]	@ 0x36
 800432e:	1a52      	subs	r2, r2, r1
 8004330:	4413      	add	r3, r2
 8004332:	781b      	ldrb	r3, [r3, #0]
 8004334:	e004      	b.n	8004340 <UG_PutColorString+0x80>
 8004336:	4b23      	ldr	r3, [pc, #140]	@ (80043c4 <UG_PutColorString+0x104>)
 8004338:	681b      	ldr	r3, [r3, #0]
 800433a:	f9b3 3032 	ldrsh.w	r3, [r3, #50]	@ 0x32
 800433e:	b2db      	uxtb	r3, r3
 8004340:	74bb      	strb	r3, [r7, #18]
 8004342:	4b20      	ldr	r3, [pc, #128]	@ (80043c4 <UG_PutColorString+0x104>)
 8004344:	681b      	ldr	r3, [r3, #0]
 8004346:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800434a:	4619      	mov	r1, r3
 800434c:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8004350:	7cbb      	ldrb	r3, [r7, #18]
 8004352:	4413      	add	r3, r2
 8004354:	4299      	cmp	r1, r3
 8004356:	dc11      	bgt.n	800437c <UG_PutColorString+0xbc>
 8004358:	89fb      	ldrh	r3, [r7, #14]
 800435a:	82fb      	strh	r3, [r7, #22]
 800435c:	4b19      	ldr	r3, [pc, #100]	@ (80043c4 <UG_PutColorString+0x104>)
 800435e:	681b      	ldr	r3, [r3, #0]
 8004360:	f9b3 3034 	ldrsh.w	r3, [r3, #52]	@ 0x34
 8004364:	b29a      	uxth	r2, r3
 8004366:	4b17      	ldr	r3, [pc, #92]	@ (80043c4 <UG_PutColorString+0x104>)
 8004368:	681b      	ldr	r3, [r3, #0]
 800436a:	f993 3041 	ldrsb.w	r3, [r3, #65]	@ 0x41
 800436e:	b29b      	uxth	r3, r3
 8004370:	4413      	add	r3, r2
 8004372:	b29a      	uxth	r2, r3
 8004374:	8abb      	ldrh	r3, [r7, #20]
 8004376:	4413      	add	r3, r2
 8004378:	b29b      	uxth	r3, r3
 800437a:	82bb      	strh	r3, [r7, #20]
 800437c:	88fc      	ldrh	r4, [r7, #6]
 800437e:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8004382:	f9b7 1016 	ldrsh.w	r1, [r7, #22]
 8004386:	7cf8      	ldrb	r0, [r7, #19]
 8004388:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 800438a:	9300      	str	r3, [sp, #0]
 800438c:	4623      	mov	r3, r4
 800438e:	f000 f81b 	bl	80043c8 <UG_PutChar>
 8004392:	7cbb      	ldrb	r3, [r7, #18]
 8004394:	b21b      	sxth	r3, r3
 8004396:	4a0b      	ldr	r2, [pc, #44]	@ (80043c4 <UG_PutColorString+0x104>)
 8004398:	6812      	ldr	r2, [r2, #0]
 800439a:	f992 2040 	ldrsb.w	r2, [r2, #64]	@ 0x40
 800439e:	4413      	add	r3, r2
 80043a0:	b21b      	sxth	r3, r3
 80043a2:	b29a      	uxth	r2, r3
 80043a4:	8afb      	ldrh	r3, [r7, #22]
 80043a6:	4413      	add	r3, r2
 80043a8:	b29b      	uxth	r3, r3
 80043aa:	82fb      	strh	r3, [r7, #22]
 80043ac:	e000      	b.n	80043b0 <UG_PutColorString+0xf0>
 80043ae:	bf00      	nop
 80043b0:	68bb      	ldr	r3, [r7, #8]
 80043b2:	781b      	ldrb	r3, [r3, #0]
 80043b4:	2b00      	cmp	r3, #0
 80043b6:	d193      	bne.n	80042e0 <UG_PutColorString+0x20>
 80043b8:	bf00      	nop
 80043ba:	bf00      	nop
 80043bc:	371c      	adds	r7, #28
 80043be:	46bd      	mov	sp, r7
 80043c0:	bd90      	pop	{r4, r7, pc}
 80043c2:	bf00      	nop
 80043c4:	20002834 	.word	0x20002834

080043c8 <UG_PutChar>:
 80043c8:	b590      	push	{r4, r7, lr}
 80043ca:	b085      	sub	sp, #20
 80043cc:	af02      	add	r7, sp, #8
 80043ce:	4604      	mov	r4, r0
 80043d0:	4608      	mov	r0, r1
 80043d2:	4611      	mov	r1, r2
 80043d4:	461a      	mov	r2, r3
 80043d6:	4623      	mov	r3, r4
 80043d8:	71fb      	strb	r3, [r7, #7]
 80043da:	4603      	mov	r3, r0
 80043dc:	80bb      	strh	r3, [r7, #4]
 80043de:	460b      	mov	r3, r1
 80043e0:	807b      	strh	r3, [r7, #2]
 80043e2:	4613      	mov	r3, r2
 80043e4:	803b      	strh	r3, [r7, #0]
 80043e6:	4b09      	ldr	r3, [pc, #36]	@ (800440c <UG_PutChar+0x44>)
 80043e8:	681b      	ldr	r3, [r3, #0]
 80043ea:	332c      	adds	r3, #44	@ 0x2c
 80043ec:	883c      	ldrh	r4, [r7, #0]
 80043ee:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80043f2:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 80043f6:	79f8      	ldrb	r0, [r7, #7]
 80043f8:	9301      	str	r3, [sp, #4]
 80043fa:	8b3b      	ldrh	r3, [r7, #24]
 80043fc:	9300      	str	r3, [sp, #0]
 80043fe:	4623      	mov	r3, r4
 8004400:	f000 f852 	bl	80044a8 <_UG_PutChar>
 8004404:	bf00      	nop
 8004406:	370c      	adds	r7, #12
 8004408:	46bd      	mov	sp, r7
 800440a:	bd90      	pop	{r4, r7, pc}
 800440c:	20002834 	.word	0x20002834

08004410 <UG_SetForecolor>:
 8004410:	b480      	push	{r7}
 8004412:	b083      	sub	sp, #12
 8004414:	af00      	add	r7, sp, #0
 8004416:	4603      	mov	r3, r0
 8004418:	80fb      	strh	r3, [r7, #6]
 800441a:	4b05      	ldr	r3, [pc, #20]	@ (8004430 <UG_SetForecolor+0x20>)
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	88fa      	ldrh	r2, [r7, #6]
 8004420:	f8a3 2042 	strh.w	r2, [r3, #66]	@ 0x42
 8004424:	bf00      	nop
 8004426:	370c      	adds	r7, #12
 8004428:	46bd      	mov	sp, r7
 800442a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800442e:	4770      	bx	lr
 8004430:	20002834 	.word	0x20002834

08004434 <UG_SetBackcolor>:
 8004434:	b480      	push	{r7}
 8004436:	b083      	sub	sp, #12
 8004438:	af00      	add	r7, sp, #0
 800443a:	4603      	mov	r3, r0
 800443c:	80fb      	strh	r3, [r7, #6]
 800443e:	4b05      	ldr	r3, [pc, #20]	@ (8004454 <UG_SetBackcolor+0x20>)
 8004440:	681b      	ldr	r3, [r3, #0]
 8004442:	88fa      	ldrh	r2, [r7, #6]
 8004444:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8004448:	bf00      	nop
 800444a:	370c      	adds	r7, #12
 800444c:	46bd      	mov	sp, r7
 800444e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004452:	4770      	bx	lr
 8004454:	20002834 	.word	0x20002834

08004458 <UG_FontSetHSpace>:
 8004458:	b480      	push	{r7}
 800445a:	b083      	sub	sp, #12
 800445c:	af00      	add	r7, sp, #0
 800445e:	4603      	mov	r3, r0
 8004460:	80fb      	strh	r3, [r7, #6]
 8004462:	4b06      	ldr	r3, [pc, #24]	@ (800447c <UG_FontSetHSpace+0x24>)
 8004464:	681b      	ldr	r3, [r3, #0]
 8004466:	88fa      	ldrh	r2, [r7, #6]
 8004468:	b252      	sxtb	r2, r2
 800446a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800446e:	bf00      	nop
 8004470:	370c      	adds	r7, #12
 8004472:	46bd      	mov	sp, r7
 8004474:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004478:	4770      	bx	lr
 800447a:	bf00      	nop
 800447c:	20002834 	.word	0x20002834

08004480 <UG_FontSetVSpace>:
 8004480:	b480      	push	{r7}
 8004482:	b083      	sub	sp, #12
 8004484:	af00      	add	r7, sp, #0
 8004486:	4603      	mov	r3, r0
 8004488:	80fb      	strh	r3, [r7, #6]
 800448a:	4b06      	ldr	r3, [pc, #24]	@ (80044a4 <UG_FontSetVSpace+0x24>)
 800448c:	681b      	ldr	r3, [r3, #0]
 800448e:	88fa      	ldrh	r2, [r7, #6]
 8004490:	b252      	sxtb	r2, r2
 8004492:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004496:	bf00      	nop
 8004498:	370c      	adds	r7, #12
 800449a:	46bd      	mov	sp, r7
 800449c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044a0:	4770      	bx	lr
 80044a2:	bf00      	nop
 80044a4:	20002834 	.word	0x20002834

080044a8 <_UG_PutChar>:
 80044a8:	b5b0      	push	{r4, r5, r7, lr}
 80044aa:	b08a      	sub	sp, #40	@ 0x28
 80044ac:	af00      	add	r7, sp, #0
 80044ae:	4604      	mov	r4, r0
 80044b0:	4608      	mov	r0, r1
 80044b2:	4611      	mov	r1, r2
 80044b4:	461a      	mov	r2, r3
 80044b6:	4623      	mov	r3, r4
 80044b8:	71fb      	strb	r3, [r7, #7]
 80044ba:	4603      	mov	r3, r0
 80044bc:	80bb      	strh	r3, [r7, #4]
 80044be:	460b      	mov	r3, r1
 80044c0:	807b      	strh	r3, [r7, #2]
 80044c2:	4613      	mov	r3, r2
 80044c4:	803b      	strh	r3, [r7, #0]
 80044c6:	79fb      	ldrb	r3, [r7, #7]
 80044c8:	763b      	strb	r3, [r7, #24]
 80044ca:	7e3b      	ldrb	r3, [r7, #24]
 80044cc:	2bfc      	cmp	r3, #252	@ 0xfc
 80044ce:	dc77      	bgt.n	80045c0 <_UG_PutChar+0x118>
 80044d0:	2bd6      	cmp	r3, #214	@ 0xd6
 80044d2:	da08      	bge.n	80044e6 <_UG_PutChar+0x3e>
 80044d4:	2bc4      	cmp	r3, #196	@ 0xc4
 80044d6:	d06a      	beq.n	80045ae <_UG_PutChar+0x106>
 80044d8:	2bc4      	cmp	r3, #196	@ 0xc4
 80044da:	dc71      	bgt.n	80045c0 <_UG_PutChar+0x118>
 80044dc:	2bb0      	cmp	r3, #176	@ 0xb0
 80044de:	d06c      	beq.n	80045ba <_UG_PutChar+0x112>
 80044e0:	2bb5      	cmp	r3, #181	@ 0xb5
 80044e2:	d067      	beq.n	80045b4 <_UG_PutChar+0x10c>
 80044e4:	e06c      	b.n	80045c0 <_UG_PutChar+0x118>
 80044e6:	3bd6      	subs	r3, #214	@ 0xd6
 80044e8:	2b26      	cmp	r3, #38	@ 0x26
 80044ea:	d869      	bhi.n	80045c0 <_UG_PutChar+0x118>
 80044ec:	a201      	add	r2, pc, #4	@ (adr r2, 80044f4 <_UG_PutChar+0x4c>)
 80044ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80044f2:	bf00      	nop
 80044f4:	08004597 	.word	0x08004597
 80044f8:	080045c1 	.word	0x080045c1
 80044fc:	080045c1 	.word	0x080045c1
 8004500:	080045c1 	.word	0x080045c1
 8004504:	080045c1 	.word	0x080045c1
 8004508:	080045c1 	.word	0x080045c1
 800450c:	080045a3 	.word	0x080045a3
 8004510:	080045c1 	.word	0x080045c1
 8004514:	080045c1 	.word	0x080045c1
 8004518:	080045c1 	.word	0x080045c1
 800451c:	080045c1 	.word	0x080045c1
 8004520:	080045c1 	.word	0x080045c1
 8004524:	080045c1 	.word	0x080045c1
 8004528:	080045c1 	.word	0x080045c1
 800452c:	080045a9 	.word	0x080045a9
 8004530:	080045c1 	.word	0x080045c1
 8004534:	080045c1 	.word	0x080045c1
 8004538:	080045c1 	.word	0x080045c1
 800453c:	080045c1 	.word	0x080045c1
 8004540:	080045c1 	.word	0x080045c1
 8004544:	080045c1 	.word	0x080045c1
 8004548:	080045c1 	.word	0x080045c1
 800454c:	080045c1 	.word	0x080045c1
 8004550:	080045c1 	.word	0x080045c1
 8004554:	080045c1 	.word	0x080045c1
 8004558:	080045c1 	.word	0x080045c1
 800455c:	080045c1 	.word	0x080045c1
 8004560:	080045c1 	.word	0x080045c1
 8004564:	080045c1 	.word	0x080045c1
 8004568:	080045c1 	.word	0x080045c1
 800456c:	080045c1 	.word	0x080045c1
 8004570:	080045c1 	.word	0x080045c1
 8004574:	08004591 	.word	0x08004591
 8004578:	080045c1 	.word	0x080045c1
 800457c:	080045c1 	.word	0x080045c1
 8004580:	080045c1 	.word	0x080045c1
 8004584:	080045c1 	.word	0x080045c1
 8004588:	080045c1 	.word	0x080045c1
 800458c:	0800459d 	.word	0x0800459d
 8004590:	2394      	movs	r3, #148	@ 0x94
 8004592:	763b      	strb	r3, [r7, #24]
 8004594:	e014      	b.n	80045c0 <_UG_PutChar+0x118>
 8004596:	2399      	movs	r3, #153	@ 0x99
 8004598:	763b      	strb	r3, [r7, #24]
 800459a:	e011      	b.n	80045c0 <_UG_PutChar+0x118>
 800459c:	2381      	movs	r3, #129	@ 0x81
 800459e:	763b      	strb	r3, [r7, #24]
 80045a0:	e00e      	b.n	80045c0 <_UG_PutChar+0x118>
 80045a2:	239a      	movs	r3, #154	@ 0x9a
 80045a4:	763b      	strb	r3, [r7, #24]
 80045a6:	e00b      	b.n	80045c0 <_UG_PutChar+0x118>
 80045a8:	2384      	movs	r3, #132	@ 0x84
 80045aa:	763b      	strb	r3, [r7, #24]
 80045ac:	e008      	b.n	80045c0 <_UG_PutChar+0x118>
 80045ae:	238e      	movs	r3, #142	@ 0x8e
 80045b0:	763b      	strb	r3, [r7, #24]
 80045b2:	e005      	b.n	80045c0 <_UG_PutChar+0x118>
 80045b4:	23e6      	movs	r3, #230	@ 0xe6
 80045b6:	763b      	strb	r3, [r7, #24]
 80045b8:	e002      	b.n	80045c0 <_UG_PutChar+0x118>
 80045ba:	23f8      	movs	r3, #248	@ 0xf8
 80045bc:	763b      	strb	r3, [r7, #24]
 80045be:	bf00      	nop
 80045c0:	7e3b      	ldrb	r3, [r7, #24]
 80045c2:	b29a      	uxth	r2, r3
 80045c4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80045c6:	895b      	ldrh	r3, [r3, #10]
 80045c8:	429a      	cmp	r2, r3
 80045ca:	f0c0 81fc 	bcc.w	80049c6 <_UG_PutChar+0x51e>
 80045ce:	7e3b      	ldrb	r3, [r7, #24]
 80045d0:	b29a      	uxth	r2, r3
 80045d2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80045d4:	899b      	ldrh	r3, [r3, #12]
 80045d6:	429a      	cmp	r2, r3
 80045d8:	f200 81f5 	bhi.w	80049c6 <_UG_PutChar+0x51e>
 80045dc:	887b      	ldrh	r3, [r7, #2]
 80045de:	83fb      	strh	r3, [r7, #30]
 80045e0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80045e2:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80045e6:	837b      	strh	r3, [r7, #26]
 80045e8:	8b7b      	ldrh	r3, [r7, #26]
 80045ea:	2b00      	cmp	r3, #0
 80045ec:	f000 81ed 	beq.w	80049ca <_UG_PutChar+0x522>
 80045f0:	8b7b      	ldrh	r3, [r7, #26]
 80045f2:	08db      	lsrs	r3, r3, #3
 80045f4:	837b      	strh	r3, [r7, #26]
 80045f6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80045f8:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80045fc:	b29b      	uxth	r3, r3
 80045fe:	f003 0307 	and.w	r3, r3, #7
 8004602:	b29b      	uxth	r3, r3
 8004604:	2b00      	cmp	r3, #0
 8004606:	d002      	beq.n	800460e <_UG_PutChar+0x166>
 8004608:	8b7b      	ldrh	r3, [r7, #26]
 800460a:	3301      	adds	r3, #1
 800460c:	837b      	strh	r3, [r7, #26]
 800460e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004610:	691b      	ldr	r3, [r3, #16]
 8004612:	2b00      	cmp	r3, #0
 8004614:	d008      	beq.n	8004628 <_UG_PutChar+0x180>
 8004616:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004618:	691b      	ldr	r3, [r3, #16]
 800461a:	7e3a      	ldrb	r2, [r7, #24]
 800461c:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800461e:	8949      	ldrh	r1, [r1, #10]
 8004620:	1a52      	subs	r2, r2, r1
 8004622:	4413      	add	r3, r2
 8004624:	781b      	ldrb	r3, [r3, #0]
 8004626:	e003      	b.n	8004630 <_UG_PutChar+0x188>
 8004628:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800462a:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800462e:	b29b      	uxth	r3, r3
 8004630:	827b      	strh	r3, [r7, #18]
 8004632:	4b94      	ldr	r3, [pc, #592]	@ (8004884 <_UG_PutChar+0x3dc>)
 8004634:	681b      	ldr	r3, [r3, #0]
 8004636:	f893 3060 	ldrb.w	r3, [r3, #96]	@ 0x60
 800463a:	f003 0302 	and.w	r3, r3, #2
 800463e:	2b00      	cmp	r3, #0
 8004640:	f000 80d8 	beq.w	80047f4 <_UG_PutChar+0x34c>
 8004644:	4b8f      	ldr	r3, [pc, #572]	@ (8004884 <_UG_PutChar+0x3dc>)
 8004646:	681b      	ldr	r3, [r3, #0]
 8004648:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800464a:	461d      	mov	r5, r3
 800464c:	88ba      	ldrh	r2, [r7, #4]
 800464e:	8a7b      	ldrh	r3, [r7, #18]
 8004650:	4413      	add	r3, r2
 8004652:	b29b      	uxth	r3, r3
 8004654:	3b01      	subs	r3, #1
 8004656:	b29b      	uxth	r3, r3
 8004658:	b21c      	sxth	r4, r3
 800465a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800465c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8004660:	b29a      	uxth	r2, r3
 8004662:	887b      	ldrh	r3, [r7, #2]
 8004664:	4413      	add	r3, r2
 8004666:	b29b      	uxth	r3, r3
 8004668:	3b01      	subs	r3, #1
 800466a:	b29b      	uxth	r3, r3
 800466c:	b21b      	sxth	r3, r3
 800466e:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 8004672:	f9b7 0004 	ldrsh.w	r0, [r7, #4]
 8004676:	4622      	mov	r2, r4
 8004678:	47a8      	blx	r5
 800467a:	4603      	mov	r3, r0
 800467c:	60fb      	str	r3, [r7, #12]
 800467e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004680:	791b      	ldrb	r3, [r3, #4]
 8004682:	2b00      	cmp	r3, #0
 8004684:	d14d      	bne.n	8004722 <_UG_PutChar+0x27a>
 8004686:	7e3b      	ldrb	r3, [r7, #24]
 8004688:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 800468a:	8952      	ldrh	r2, [r2, #10]
 800468c:	1a9b      	subs	r3, r3, r2
 800468e:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8004690:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8004694:	fb02 f303 	mul.w	r3, r2, r3
 8004698:	8b7a      	ldrh	r2, [r7, #26]
 800469a:	fb02 f303 	mul.w	r3, r2, r3
 800469e:	617b      	str	r3, [r7, #20]
 80046a0:	2300      	movs	r3, #0
 80046a2:	84bb      	strh	r3, [r7, #36]	@ 0x24
 80046a4:	e036      	b.n	8004714 <_UG_PutChar+0x26c>
 80046a6:	8a7b      	ldrh	r3, [r7, #18]
 80046a8:	83bb      	strh	r3, [r7, #28]
 80046aa:	2300      	movs	r3, #0
 80046ac:	84fb      	strh	r3, [r7, #38]	@ 0x26
 80046ae:	e02a      	b.n	8004706 <_UG_PutChar+0x25e>
 80046b0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80046b2:	681a      	ldr	r2, [r3, #0]
 80046b4:	697b      	ldr	r3, [r7, #20]
 80046b6:	1c59      	adds	r1, r3, #1
 80046b8:	6179      	str	r1, [r7, #20]
 80046ba:	4413      	add	r3, r2
 80046bc:	781b      	ldrb	r3, [r3, #0]
 80046be:	767b      	strb	r3, [r7, #25]
 80046c0:	2300      	movs	r3, #0
 80046c2:	847b      	strh	r3, [r7, #34]	@ 0x22
 80046c4:	e016      	b.n	80046f4 <_UG_PutChar+0x24c>
 80046c6:	7e7b      	ldrb	r3, [r7, #25]
 80046c8:	f003 0301 	and.w	r3, r3, #1
 80046cc:	2b00      	cmp	r3, #0
 80046ce:	d004      	beq.n	80046da <_UG_PutChar+0x232>
 80046d0:	883a      	ldrh	r2, [r7, #0]
 80046d2:	68fb      	ldr	r3, [r7, #12]
 80046d4:	4610      	mov	r0, r2
 80046d6:	4798      	blx	r3
 80046d8:	e003      	b.n	80046e2 <_UG_PutChar+0x23a>
 80046da:	8f3a      	ldrh	r2, [r7, #56]	@ 0x38
 80046dc:	68fb      	ldr	r3, [r7, #12]
 80046de:	4610      	mov	r0, r2
 80046e0:	4798      	blx	r3
 80046e2:	7e7b      	ldrb	r3, [r7, #25]
 80046e4:	085b      	lsrs	r3, r3, #1
 80046e6:	767b      	strb	r3, [r7, #25]
 80046e8:	8bbb      	ldrh	r3, [r7, #28]
 80046ea:	3b01      	subs	r3, #1
 80046ec:	83bb      	strh	r3, [r7, #28]
 80046ee:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 80046f0:	3301      	adds	r3, #1
 80046f2:	847b      	strh	r3, [r7, #34]	@ 0x22
 80046f4:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 80046f6:	2b07      	cmp	r3, #7
 80046f8:	d802      	bhi.n	8004700 <_UG_PutChar+0x258>
 80046fa:	8bbb      	ldrh	r3, [r7, #28]
 80046fc:	2b00      	cmp	r3, #0
 80046fe:	d1e2      	bne.n	80046c6 <_UG_PutChar+0x21e>
 8004700:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8004702:	3301      	adds	r3, #1
 8004704:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8004706:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 8004708:	8b7b      	ldrh	r3, [r7, #26]
 800470a:	429a      	cmp	r2, r3
 800470c:	d3d0      	bcc.n	80046b0 <_UG_PutChar+0x208>
 800470e:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8004710:	3301      	adds	r3, #1
 8004712:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8004714:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8004716:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8004718:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 800471c:	4293      	cmp	r3, r2
 800471e:	dbc2      	blt.n	80046a6 <_UG_PutChar+0x1fe>
 8004720:	e154      	b.n	80049cc <_UG_PutChar+0x524>
 8004722:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004724:	791b      	ldrb	r3, [r3, #4]
 8004726:	2b01      	cmp	r3, #1
 8004728:	f040 8150 	bne.w	80049cc <_UG_PutChar+0x524>
 800472c:	7e3b      	ldrb	r3, [r7, #24]
 800472e:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8004730:	8952      	ldrh	r2, [r2, #10]
 8004732:	1a9b      	subs	r3, r3, r2
 8004734:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8004736:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 800473a:	fb02 f303 	mul.w	r3, r2, r3
 800473e:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8004740:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8004744:	fb02 f303 	mul.w	r3, r2, r3
 8004748:	617b      	str	r3, [r7, #20]
 800474a:	2300      	movs	r3, #0
 800474c:	84bb      	strh	r3, [r7, #36]	@ 0x24
 800474e:	e04a      	b.n	80047e6 <_UG_PutChar+0x33e>
 8004750:	2300      	movs	r3, #0
 8004752:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8004754:	e036      	b.n	80047c4 <_UG_PutChar+0x31c>
 8004756:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004758:	681a      	ldr	r2, [r3, #0]
 800475a:	697b      	ldr	r3, [r7, #20]
 800475c:	1c59      	adds	r1, r3, #1
 800475e:	6179      	str	r1, [r7, #20]
 8004760:	4413      	add	r3, r2
 8004762:	781b      	ldrb	r3, [r3, #0]
 8004764:	767b      	strb	r3, [r7, #25]
 8004766:	883b      	ldrh	r3, [r7, #0]
 8004768:	b2db      	uxtb	r3, r3
 800476a:	7e7a      	ldrb	r2, [r7, #25]
 800476c:	fb03 f202 	mul.w	r2, r3, r2
 8004770:	8f3b      	ldrh	r3, [r7, #56]	@ 0x38
 8004772:	b2db      	uxtb	r3, r3
 8004774:	7e79      	ldrb	r1, [r7, #25]
 8004776:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 800477a:	fb01 f303 	mul.w	r3, r1, r3
 800477e:	4413      	add	r3, r2
 8004780:	121b      	asrs	r3, r3, #8
 8004782:	b21b      	sxth	r3, r3
 8004784:	b2db      	uxtb	r3, r3
 8004786:	b21a      	sxth	r2, r3
 8004788:	883b      	ldrh	r3, [r7, #0]
 800478a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 800478e:	7e79      	ldrb	r1, [r7, #25]
 8004790:	fb03 f101 	mul.w	r1, r3, r1
 8004794:	8f3b      	ldrh	r3, [r7, #56]	@ 0x38
 8004796:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 800479a:	7e78      	ldrb	r0, [r7, #25]
 800479c:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 80047a0:	fb00 f303 	mul.w	r3, r0, r3
 80047a4:	440b      	add	r3, r1
 80047a6:	121b      	asrs	r3, r3, #8
 80047a8:	b21b      	sxth	r3, r3
 80047aa:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80047ae:	b21b      	sxth	r3, r3
 80047b0:	4313      	orrs	r3, r2
 80047b2:	b21b      	sxth	r3, r3
 80047b4:	823b      	strh	r3, [r7, #16]
 80047b6:	8a3a      	ldrh	r2, [r7, #16]
 80047b8:	68fb      	ldr	r3, [r7, #12]
 80047ba:	4610      	mov	r0, r2
 80047bc:	4798      	blx	r3
 80047be:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80047c0:	3301      	adds	r3, #1
 80047c2:	84fb      	strh	r3, [r7, #38]	@ 0x26
 80047c4:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 80047c6:	8a7b      	ldrh	r3, [r7, #18]
 80047c8:	429a      	cmp	r2, r3
 80047ca:	d3c4      	bcc.n	8004756 <_UG_PutChar+0x2ae>
 80047cc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80047ce:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80047d2:	461a      	mov	r2, r3
 80047d4:	8a7b      	ldrh	r3, [r7, #18]
 80047d6:	1ad3      	subs	r3, r2, r3
 80047d8:	461a      	mov	r2, r3
 80047da:	697b      	ldr	r3, [r7, #20]
 80047dc:	4413      	add	r3, r2
 80047de:	617b      	str	r3, [r7, #20]
 80047e0:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 80047e2:	3301      	adds	r3, #1
 80047e4:	84bb      	strh	r3, [r7, #36]	@ 0x24
 80047e6:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 80047e8:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80047ea:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80047ee:	4293      	cmp	r3, r2
 80047f0:	dbae      	blt.n	8004750 <_UG_PutChar+0x2a8>
 80047f2:	e0eb      	b.n	80049cc <_UG_PutChar+0x524>
 80047f4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80047f6:	791b      	ldrb	r3, [r3, #4]
 80047f8:	2b00      	cmp	r3, #0
 80047fa:	d16f      	bne.n	80048dc <_UG_PutChar+0x434>
 80047fc:	f9b7 0004 	ldrsh.w	r0, [r7, #4]
 8004800:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8004804:	8a7b      	ldrh	r3, [r7, #18]
 8004806:	4413      	add	r3, r2
 8004808:	3b01      	subs	r3, #1
 800480a:	461c      	mov	r4, r3
 800480c:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 8004810:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8004814:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8004816:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 800481a:	4413      	add	r3, r2
 800481c:	3b01      	subs	r3, #1
 800481e:	460a      	mov	r2, r1
 8004820:	4621      	mov	r1, r4
 8004822:	f000 f99d 	bl	8004b60 <SSD1963_WindowSet>
 8004826:	f000 fa15 	bl	8004c54 <SSD1963_WriteMemoryStart>
 800482a:	7e3b      	ldrb	r3, [r7, #24]
 800482c:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 800482e:	8952      	ldrh	r2, [r2, #10]
 8004830:	1a9b      	subs	r3, r3, r2
 8004832:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8004834:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8004838:	fb02 f303 	mul.w	r3, r2, r3
 800483c:	8b7a      	ldrh	r2, [r7, #26]
 800483e:	fb02 f303 	mul.w	r3, r2, r3
 8004842:	617b      	str	r3, [r7, #20]
 8004844:	2300      	movs	r3, #0
 8004846:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8004848:	e041      	b.n	80048ce <_UG_PutChar+0x426>
 800484a:	88bb      	ldrh	r3, [r7, #4]
 800484c:	843b      	strh	r3, [r7, #32]
 800484e:	8a7b      	ldrh	r3, [r7, #18]
 8004850:	83bb      	strh	r3, [r7, #28]
 8004852:	2300      	movs	r3, #0
 8004854:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8004856:	e030      	b.n	80048ba <_UG_PutChar+0x412>
 8004858:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800485a:	681a      	ldr	r2, [r3, #0]
 800485c:	697b      	ldr	r3, [r7, #20]
 800485e:	1c59      	adds	r1, r3, #1
 8004860:	6179      	str	r1, [r7, #20]
 8004862:	4413      	add	r3, r2
 8004864:	781b      	ldrb	r3, [r3, #0]
 8004866:	767b      	strb	r3, [r7, #25]
 8004868:	2300      	movs	r3, #0
 800486a:	847b      	strh	r3, [r7, #34]	@ 0x22
 800486c:	e01c      	b.n	80048a8 <_UG_PutChar+0x400>
 800486e:	7e7b      	ldrb	r3, [r7, #25]
 8004870:	f003 0301 	and.w	r3, r3, #1
 8004874:	2b00      	cmp	r3, #0
 8004876:	d007      	beq.n	8004888 <_UG_PutChar+0x3e0>
 8004878:	883b      	ldrh	r3, [r7, #0]
 800487a:	4618      	mov	r0, r3
 800487c:	f000 f9f1 	bl	8004c62 <SSD1963_ConsecutivePSet>
 8004880:	e006      	b.n	8004890 <_UG_PutChar+0x3e8>
 8004882:	bf00      	nop
 8004884:	20002834 	.word	0x20002834
 8004888:	8f3b      	ldrh	r3, [r7, #56]	@ 0x38
 800488a:	4618      	mov	r0, r3
 800488c:	f000 f9e9 	bl	8004c62 <SSD1963_ConsecutivePSet>
 8004890:	7e7b      	ldrb	r3, [r7, #25]
 8004892:	085b      	lsrs	r3, r3, #1
 8004894:	767b      	strb	r3, [r7, #25]
 8004896:	8c3b      	ldrh	r3, [r7, #32]
 8004898:	3301      	adds	r3, #1
 800489a:	843b      	strh	r3, [r7, #32]
 800489c:	8bbb      	ldrh	r3, [r7, #28]
 800489e:	3b01      	subs	r3, #1
 80048a0:	83bb      	strh	r3, [r7, #28]
 80048a2:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 80048a4:	3301      	adds	r3, #1
 80048a6:	847b      	strh	r3, [r7, #34]	@ 0x22
 80048a8:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 80048aa:	2b07      	cmp	r3, #7
 80048ac:	d802      	bhi.n	80048b4 <_UG_PutChar+0x40c>
 80048ae:	8bbb      	ldrh	r3, [r7, #28]
 80048b0:	2b00      	cmp	r3, #0
 80048b2:	d1dc      	bne.n	800486e <_UG_PutChar+0x3c6>
 80048b4:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80048b6:	3301      	adds	r3, #1
 80048b8:	84fb      	strh	r3, [r7, #38]	@ 0x26
 80048ba:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 80048bc:	8b7b      	ldrh	r3, [r7, #26]
 80048be:	429a      	cmp	r2, r3
 80048c0:	d3ca      	bcc.n	8004858 <_UG_PutChar+0x3b0>
 80048c2:	8bfb      	ldrh	r3, [r7, #30]
 80048c4:	3301      	adds	r3, #1
 80048c6:	83fb      	strh	r3, [r7, #30]
 80048c8:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 80048ca:	3301      	adds	r3, #1
 80048cc:	84bb      	strh	r3, [r7, #36]	@ 0x24
 80048ce:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 80048d0:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80048d2:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80048d6:	4293      	cmp	r3, r2
 80048d8:	dbb7      	blt.n	800484a <_UG_PutChar+0x3a2>
 80048da:	e077      	b.n	80049cc <_UG_PutChar+0x524>
 80048dc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80048de:	791b      	ldrb	r3, [r3, #4]
 80048e0:	2b01      	cmp	r3, #1
 80048e2:	d173      	bne.n	80049cc <_UG_PutChar+0x524>
 80048e4:	7e3b      	ldrb	r3, [r7, #24]
 80048e6:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80048e8:	8952      	ldrh	r2, [r2, #10]
 80048ea:	1a9b      	subs	r3, r3, r2
 80048ec:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80048ee:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80048f2:	fb02 f303 	mul.w	r3, r2, r3
 80048f6:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80048f8:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 80048fc:	fb02 f303 	mul.w	r3, r2, r3
 8004900:	617b      	str	r3, [r7, #20]
 8004902:	2300      	movs	r3, #0
 8004904:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8004906:	e057      	b.n	80049b8 <_UG_PutChar+0x510>
 8004908:	88bb      	ldrh	r3, [r7, #4]
 800490a:	843b      	strh	r3, [r7, #32]
 800490c:	2300      	movs	r3, #0
 800490e:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8004910:	e03e      	b.n	8004990 <_UG_PutChar+0x4e8>
 8004912:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004914:	681a      	ldr	r2, [r3, #0]
 8004916:	697b      	ldr	r3, [r7, #20]
 8004918:	1c59      	adds	r1, r3, #1
 800491a:	6179      	str	r1, [r7, #20]
 800491c:	4413      	add	r3, r2
 800491e:	781b      	ldrb	r3, [r3, #0]
 8004920:	767b      	strb	r3, [r7, #25]
 8004922:	883b      	ldrh	r3, [r7, #0]
 8004924:	b2db      	uxtb	r3, r3
 8004926:	7e7a      	ldrb	r2, [r7, #25]
 8004928:	fb03 f202 	mul.w	r2, r3, r2
 800492c:	8f3b      	ldrh	r3, [r7, #56]	@ 0x38
 800492e:	b2db      	uxtb	r3, r3
 8004930:	7e79      	ldrb	r1, [r7, #25]
 8004932:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8004936:	fb01 f303 	mul.w	r3, r1, r3
 800493a:	4413      	add	r3, r2
 800493c:	121b      	asrs	r3, r3, #8
 800493e:	b21b      	sxth	r3, r3
 8004940:	b2db      	uxtb	r3, r3
 8004942:	b21a      	sxth	r2, r3
 8004944:	883b      	ldrh	r3, [r7, #0]
 8004946:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 800494a:	7e79      	ldrb	r1, [r7, #25]
 800494c:	fb03 f101 	mul.w	r1, r3, r1
 8004950:	8f3b      	ldrh	r3, [r7, #56]	@ 0x38
 8004952:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8004956:	7e78      	ldrb	r0, [r7, #25]
 8004958:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 800495c:	fb00 f303 	mul.w	r3, r0, r3
 8004960:	440b      	add	r3, r1
 8004962:	121b      	asrs	r3, r3, #8
 8004964:	b21b      	sxth	r3, r3
 8004966:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800496a:	b21b      	sxth	r3, r3
 800496c:	4313      	orrs	r3, r2
 800496e:	b21b      	sxth	r3, r3
 8004970:	823b      	strh	r3, [r7, #16]
 8004972:	4b18      	ldr	r3, [pc, #96]	@ (80049d4 <_UG_PutChar+0x52c>)
 8004974:	681b      	ldr	r3, [r3, #0]
 8004976:	681b      	ldr	r3, [r3, #0]
 8004978:	f9b7 0020 	ldrsh.w	r0, [r7, #32]
 800497c:	f9b7 101e 	ldrsh.w	r1, [r7, #30]
 8004980:	8a3a      	ldrh	r2, [r7, #16]
 8004982:	4798      	blx	r3
 8004984:	8c3b      	ldrh	r3, [r7, #32]
 8004986:	3301      	adds	r3, #1
 8004988:	843b      	strh	r3, [r7, #32]
 800498a:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 800498c:	3301      	adds	r3, #1
 800498e:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8004990:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 8004992:	8a7b      	ldrh	r3, [r7, #18]
 8004994:	429a      	cmp	r2, r3
 8004996:	d3bc      	bcc.n	8004912 <_UG_PutChar+0x46a>
 8004998:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800499a:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800499e:	461a      	mov	r2, r3
 80049a0:	8a7b      	ldrh	r3, [r7, #18]
 80049a2:	1ad3      	subs	r3, r2, r3
 80049a4:	461a      	mov	r2, r3
 80049a6:	697b      	ldr	r3, [r7, #20]
 80049a8:	4413      	add	r3, r2
 80049aa:	617b      	str	r3, [r7, #20]
 80049ac:	8bfb      	ldrh	r3, [r7, #30]
 80049ae:	3301      	adds	r3, #1
 80049b0:	83fb      	strh	r3, [r7, #30]
 80049b2:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 80049b4:	3301      	adds	r3, #1
 80049b6:	84bb      	strh	r3, [r7, #36]	@ 0x24
 80049b8:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 80049ba:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80049bc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80049c0:	4293      	cmp	r3, r2
 80049c2:	dba1      	blt.n	8004908 <_UG_PutChar+0x460>
 80049c4:	e002      	b.n	80049cc <_UG_PutChar+0x524>
 80049c6:	bf00      	nop
 80049c8:	e000      	b.n	80049cc <_UG_PutChar+0x524>
 80049ca:	bf00      	nop
 80049cc:	3728      	adds	r7, #40	@ 0x28
 80049ce:	46bd      	mov	sp, r7
 80049d0:	bdb0      	pop	{r4, r5, r7, pc}
 80049d2:	bf00      	nop
 80049d4:	20002834 	.word	0x20002834

080049d8 <UG_DriverRegister>:
 80049d8:	b480      	push	{r7}
 80049da:	b083      	sub	sp, #12
 80049dc:	af00      	add	r7, sp, #0
 80049de:	4603      	mov	r3, r0
 80049e0:	6039      	str	r1, [r7, #0]
 80049e2:	71fb      	strb	r3, [r7, #7]
 80049e4:	79fb      	ldrb	r3, [r7, #7]
 80049e6:	2b06      	cmp	r3, #6
 80049e8:	d810      	bhi.n	8004a0c <UG_DriverRegister+0x34>
 80049ea:	4b0b      	ldr	r3, [pc, #44]	@ (8004a18 <UG_DriverRegister+0x40>)
 80049ec:	681a      	ldr	r2, [r3, #0]
 80049ee:	79fb      	ldrb	r3, [r7, #7]
 80049f0:	3309      	adds	r3, #9
 80049f2:	00db      	lsls	r3, r3, #3
 80049f4:	4413      	add	r3, r2
 80049f6:	683a      	ldr	r2, [r7, #0]
 80049f8:	605a      	str	r2, [r3, #4]
 80049fa:	4b07      	ldr	r3, [pc, #28]	@ (8004a18 <UG_DriverRegister+0x40>)
 80049fc:	681a      	ldr	r2, [r3, #0]
 80049fe:	79fb      	ldrb	r3, [r7, #7]
 8004a00:	3309      	adds	r3, #9
 8004a02:	00db      	lsls	r3, r3, #3
 8004a04:	4413      	add	r3, r2
 8004a06:	2203      	movs	r2, #3
 8004a08:	721a      	strb	r2, [r3, #8]
 8004a0a:	e000      	b.n	8004a0e <UG_DriverRegister+0x36>
 8004a0c:	bf00      	nop
 8004a0e:	370c      	adds	r7, #12
 8004a10:	46bd      	mov	sp, r7
 8004a12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a16:	4770      	bx	lr
 8004a18:	20002834 	.word	0x20002834

08004a1c <SSD1963_Reset>:
 8004a1c:	b580      	push	{r7, lr}
 8004a1e:	af00      	add	r7, sp, #0
 8004a20:	2001      	movs	r0, #1
 8004a22:	f000 fa3e 	bl	8004ea2 <write_command>
 8004a26:	200a      	movs	r0, #10
 8004a28:	f000 fb24 	bl	8005074 <HAL_Delay>
 8004a2c:	bf00      	nop
 8004a2e:	bd80      	pop	{r7, pc}

08004a30 <SSD1963_Init>:
 8004a30:	b580      	push	{r7, lr}
 8004a32:	af00      	add	r7, sp, #0
 8004a34:	f7ff fff2 	bl	8004a1c <SSD1963_Reset>
 8004a38:	20e0      	movs	r0, #224	@ 0xe0
 8004a3a:	f000 fa32 	bl	8004ea2 <write_command>
 8004a3e:	2001      	movs	r0, #1
 8004a40:	f000 fa4a 	bl	8004ed8 <write_data>
 8004a44:	20e0      	movs	r0, #224	@ 0xe0
 8004a46:	f000 fa2c 	bl	8004ea2 <write_command>
 8004a4a:	2003      	movs	r0, #3
 8004a4c:	f000 fa44 	bl	8004ed8 <write_data>
 8004a50:	f7ff ffe4 	bl	8004a1c <SSD1963_Reset>
 8004a54:	20b0      	movs	r0, #176	@ 0xb0
 8004a56:	f000 fa24 	bl	8004ea2 <write_command>
 8004a5a:	2008      	movs	r0, #8
 8004a5c:	f000 fa3c 	bl	8004ed8 <write_data>
 8004a60:	2080      	movs	r0, #128	@ 0x80
 8004a62:	f000 fa39 	bl	8004ed8 <write_data>
 8004a66:	2001      	movs	r0, #1
 8004a68:	f000 fa36 	bl	8004ed8 <write_data>
 8004a6c:	20df      	movs	r0, #223	@ 0xdf
 8004a6e:	f000 fa33 	bl	8004ed8 <write_data>
 8004a72:	2001      	movs	r0, #1
 8004a74:	f000 fa30 	bl	8004ed8 <write_data>
 8004a78:	200f      	movs	r0, #15
 8004a7a:	f000 fa2d 	bl	8004ed8 <write_data>
 8004a7e:	2000      	movs	r0, #0
 8004a80:	f000 fa2a 	bl	8004ed8 <write_data>
 8004a84:	20f0      	movs	r0, #240	@ 0xf0
 8004a86:	f000 fa0c 	bl	8004ea2 <write_command>
 8004a8a:	2003      	movs	r0, #3
 8004a8c:	f000 fa24 	bl	8004ed8 <write_data>
 8004a90:	20e6      	movs	r0, #230	@ 0xe6
 8004a92:	f000 fa06 	bl	8004ea2 <write_command>
 8004a96:	2001      	movs	r0, #1
 8004a98:	f000 fa1e 	bl	8004ed8 <write_data>
 8004a9c:	2045      	movs	r0, #69	@ 0x45
 8004a9e:	f000 fa1b 	bl	8004ed8 <write_data>
 8004aa2:	2047      	movs	r0, #71	@ 0x47
 8004aa4:	f000 fa18 	bl	8004ed8 <write_data>
 8004aa8:	20b4      	movs	r0, #180	@ 0xb4
 8004aaa:	f000 f9fa 	bl	8004ea2 <write_command>
 8004aae:	2002      	movs	r0, #2
 8004ab0:	f000 fa12 	bl	8004ed8 <write_data>
 8004ab4:	200d      	movs	r0, #13
 8004ab6:	f000 fa0f 	bl	8004ed8 <write_data>
 8004aba:	2000      	movs	r0, #0
 8004abc:	f000 fa0c 	bl	8004ed8 <write_data>
 8004ac0:	202b      	movs	r0, #43	@ 0x2b
 8004ac2:	f000 fa09 	bl	8004ed8 <write_data>
 8004ac6:	2028      	movs	r0, #40	@ 0x28
 8004ac8:	f000 fa06 	bl	8004ed8 <write_data>
 8004acc:	2000      	movs	r0, #0
 8004ace:	f000 fa03 	bl	8004ed8 <write_data>
 8004ad2:	2000      	movs	r0, #0
 8004ad4:	f000 fa00 	bl	8004ed8 <write_data>
 8004ad8:	2000      	movs	r0, #0
 8004ada:	f000 f9fd 	bl	8004ed8 <write_data>
 8004ade:	20b6      	movs	r0, #182	@ 0xb6
 8004ae0:	f000 f9df 	bl	8004ea2 <write_command>
 8004ae4:	2001      	movs	r0, #1
 8004ae6:	f000 f9f7 	bl	8004ed8 <write_data>
 8004aea:	201d      	movs	r0, #29
 8004aec:	f000 f9f4 	bl	8004ed8 <write_data>
 8004af0:	2000      	movs	r0, #0
 8004af2:	f000 f9f1 	bl	8004ed8 <write_data>
 8004af6:	200c      	movs	r0, #12
 8004af8:	f000 f9ee 	bl	8004ed8 <write_data>
 8004afc:	2009      	movs	r0, #9
 8004afe:	f000 f9eb 	bl	8004ed8 <write_data>
 8004b02:	2000      	movs	r0, #0
 8004b04:	f000 f9e8 	bl	8004ed8 <write_data>
 8004b08:	2000      	movs	r0, #0
 8004b0a:	f000 f9e5 	bl	8004ed8 <write_data>
 8004b0e:	202a      	movs	r0, #42	@ 0x2a
 8004b10:	f000 f9c7 	bl	8004ea2 <write_command>
 8004b14:	2000      	movs	r0, #0
 8004b16:	f000 f9df 	bl	8004ed8 <write_data>
 8004b1a:	2000      	movs	r0, #0
 8004b1c:	f000 f9dc 	bl	8004ed8 <write_data>
 8004b20:	2001      	movs	r0, #1
 8004b22:	f000 f9d9 	bl	8004ed8 <write_data>
 8004b26:	20df      	movs	r0, #223	@ 0xdf
 8004b28:	f000 f9d6 	bl	8004ed8 <write_data>
 8004b2c:	202b      	movs	r0, #43	@ 0x2b
 8004b2e:	f000 f9b8 	bl	8004ea2 <write_command>
 8004b32:	2000      	movs	r0, #0
 8004b34:	f000 f9d0 	bl	8004ed8 <write_data>
 8004b38:	2000      	movs	r0, #0
 8004b3a:	f000 f9cd 	bl	8004ed8 <write_data>
 8004b3e:	2001      	movs	r0, #1
 8004b40:	f000 f9ca 	bl	8004ed8 <write_data>
 8004b44:	200f      	movs	r0, #15
 8004b46:	f000 f9c7 	bl	8004ed8 <write_data>
 8004b4a:	2013      	movs	r0, #19
 8004b4c:	f000 f9a9 	bl	8004ea2 <write_command>
 8004b50:	2038      	movs	r0, #56	@ 0x38
 8004b52:	f000 f9a6 	bl	8004ea2 <write_command>
 8004b56:	2029      	movs	r0, #41	@ 0x29
 8004b58:	f000 f9a3 	bl	8004ea2 <write_command>
 8004b5c:	bf00      	nop
 8004b5e:	bd80      	pop	{r7, pc}

08004b60 <SSD1963_WindowSet>:
 8004b60:	b580      	push	{r7, lr}
 8004b62:	b086      	sub	sp, #24
 8004b64:	af00      	add	r7, sp, #0
 8004b66:	60f8      	str	r0, [r7, #12]
 8004b68:	60b9      	str	r1, [r7, #8]
 8004b6a:	607a      	str	r2, [r7, #4]
 8004b6c:	603b      	str	r3, [r7, #0]
 8004b6e:	68fb      	ldr	r3, [r7, #12]
 8004b70:	0a1b      	lsrs	r3, r3, #8
 8004b72:	b29b      	uxth	r3, r3
 8004b74:	b2db      	uxtb	r3, r3
 8004b76:	b29b      	uxth	r3, r3
 8004b78:	823b      	strh	r3, [r7, #16]
 8004b7a:	68fb      	ldr	r3, [r7, #12]
 8004b7c:	b29b      	uxth	r3, r3
 8004b7e:	b2db      	uxtb	r3, r3
 8004b80:	b29b      	uxth	r3, r3
 8004b82:	827b      	strh	r3, [r7, #18]
 8004b84:	68bb      	ldr	r3, [r7, #8]
 8004b86:	0a1b      	lsrs	r3, r3, #8
 8004b88:	b29b      	uxth	r3, r3
 8004b8a:	b2db      	uxtb	r3, r3
 8004b8c:	b29b      	uxth	r3, r3
 8004b8e:	82bb      	strh	r3, [r7, #20]
 8004b90:	68bb      	ldr	r3, [r7, #8]
 8004b92:	b29b      	uxth	r3, r3
 8004b94:	b2db      	uxtb	r3, r3
 8004b96:	b29b      	uxth	r3, r3
 8004b98:	82fb      	strh	r3, [r7, #22]
 8004b9a:	202a      	movs	r0, #42	@ 0x2a
 8004b9c:	f000 f981 	bl	8004ea2 <write_command>
 8004ba0:	f107 0310 	add.w	r3, r7, #16
 8004ba4:	2104      	movs	r1, #4
 8004ba6:	4618      	mov	r0, r3
 8004ba8:	f000 f9b0 	bl	8004f0c <write_multi_data>
 8004bac:	687b      	ldr	r3, [r7, #4]
 8004bae:	0a1b      	lsrs	r3, r3, #8
 8004bb0:	b29b      	uxth	r3, r3
 8004bb2:	b2db      	uxtb	r3, r3
 8004bb4:	b29b      	uxth	r3, r3
 8004bb6:	823b      	strh	r3, [r7, #16]
 8004bb8:	687b      	ldr	r3, [r7, #4]
 8004bba:	b29b      	uxth	r3, r3
 8004bbc:	b2db      	uxtb	r3, r3
 8004bbe:	b29b      	uxth	r3, r3
 8004bc0:	827b      	strh	r3, [r7, #18]
 8004bc2:	683b      	ldr	r3, [r7, #0]
 8004bc4:	0a1b      	lsrs	r3, r3, #8
 8004bc6:	b29b      	uxth	r3, r3
 8004bc8:	b2db      	uxtb	r3, r3
 8004bca:	b29b      	uxth	r3, r3
 8004bcc:	82bb      	strh	r3, [r7, #20]
 8004bce:	683b      	ldr	r3, [r7, #0]
 8004bd0:	b29b      	uxth	r3, r3
 8004bd2:	b2db      	uxtb	r3, r3
 8004bd4:	b29b      	uxth	r3, r3
 8004bd6:	82fb      	strh	r3, [r7, #22]
 8004bd8:	202b      	movs	r0, #43	@ 0x2b
 8004bda:	f000 f962 	bl	8004ea2 <write_command>
 8004bde:	f107 0310 	add.w	r3, r7, #16
 8004be2:	2104      	movs	r1, #4
 8004be4:	4618      	mov	r0, r3
 8004be6:	f000 f991 	bl	8004f0c <write_multi_data>
 8004bea:	bf00      	nop
 8004bec:	3718      	adds	r7, #24
 8004bee:	46bd      	mov	sp, r7
 8004bf0:	bd80      	pop	{r7, pc}

08004bf2 <SSD1963_PSet>:
 8004bf2:	b580      	push	{r7, lr}
 8004bf4:	b082      	sub	sp, #8
 8004bf6:	af00      	add	r7, sp, #0
 8004bf8:	4603      	mov	r3, r0
 8004bfa:	80fb      	strh	r3, [r7, #6]
 8004bfc:	460b      	mov	r3, r1
 8004bfe:	80bb      	strh	r3, [r7, #4]
 8004c00:	4613      	mov	r3, r2
 8004c02:	807b      	strh	r3, [r7, #2]
 8004c04:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004c08:	2b00      	cmp	r3, #0
 8004c0a:	db1f      	blt.n	8004c4c <SSD1963_PSet+0x5a>
 8004c0c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004c10:	f5b3 7ff0 	cmp.w	r3, #480	@ 0x1e0
 8004c14:	da1a      	bge.n	8004c4c <SSD1963_PSet+0x5a>
 8004c16:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8004c1a:	2b00      	cmp	r3, #0
 8004c1c:	db16      	blt.n	8004c4c <SSD1963_PSet+0x5a>
 8004c1e:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8004c22:	f5b3 7f88 	cmp.w	r3, #272	@ 0x110
 8004c26:	da11      	bge.n	8004c4c <SSD1963_PSet+0x5a>
 8004c28:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 8004c2c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004c30:	3301      	adds	r3, #1
 8004c32:	4619      	mov	r1, r3
 8004c34:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8004c38:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8004c3c:	3301      	adds	r3, #1
 8004c3e:	f7ff ff8f 	bl	8004b60 <SSD1963_WindowSet>
 8004c42:	887b      	ldrh	r3, [r7, #2]
 8004c44:	4618      	mov	r0, r3
 8004c46:	f000 f947 	bl	8004ed8 <write_data>
 8004c4a:	e000      	b.n	8004c4e <SSD1963_PSet+0x5c>
 8004c4c:	bf00      	nop
 8004c4e:	3708      	adds	r7, #8
 8004c50:	46bd      	mov	sp, r7
 8004c52:	bd80      	pop	{r7, pc}

08004c54 <SSD1963_WriteMemoryStart>:
 8004c54:	b580      	push	{r7, lr}
 8004c56:	af00      	add	r7, sp, #0
 8004c58:	202c      	movs	r0, #44	@ 0x2c
 8004c5a:	f000 f922 	bl	8004ea2 <write_command>
 8004c5e:	bf00      	nop
 8004c60:	bd80      	pop	{r7, pc}

08004c62 <SSD1963_ConsecutivePSet>:
 8004c62:	b580      	push	{r7, lr}
 8004c64:	b082      	sub	sp, #8
 8004c66:	af00      	add	r7, sp, #0
 8004c68:	4603      	mov	r3, r0
 8004c6a:	80fb      	strh	r3, [r7, #6]
 8004c6c:	88fb      	ldrh	r3, [r7, #6]
 8004c6e:	4618      	mov	r0, r3
 8004c70:	f000 f932 	bl	8004ed8 <write_data>
 8004c74:	bf00      	nop
 8004c76:	3708      	adds	r7, #8
 8004c78:	46bd      	mov	sp, r7
 8004c7a:	bd80      	pop	{r7, pc}

08004c7c <HW_FillFrame>:
 8004c7c:	b590      	push	{r4, r7, lr}
 8004c7e:	b085      	sub	sp, #20
 8004c80:	af00      	add	r7, sp, #0
 8004c82:	4604      	mov	r4, r0
 8004c84:	4608      	mov	r0, r1
 8004c86:	4611      	mov	r1, r2
 8004c88:	461a      	mov	r2, r3
 8004c8a:	4623      	mov	r3, r4
 8004c8c:	80fb      	strh	r3, [r7, #6]
 8004c8e:	4603      	mov	r3, r0
 8004c90:	80bb      	strh	r3, [r7, #4]
 8004c92:	460b      	mov	r3, r1
 8004c94:	807b      	strh	r3, [r7, #2]
 8004c96:	4613      	mov	r3, r2
 8004c98:	803b      	strh	r3, [r7, #0]
 8004c9a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004c9e:	2b00      	cmp	r3, #0
 8004ca0:	db0d      	blt.n	8004cbe <HW_FillFrame+0x42>
 8004ca2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004ca6:	f5b3 7ff0 	cmp.w	r3, #480	@ 0x1e0
 8004caa:	da08      	bge.n	8004cbe <HW_FillFrame+0x42>
 8004cac:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8004cb0:	2b00      	cmp	r3, #0
 8004cb2:	db04      	blt.n	8004cbe <HW_FillFrame+0x42>
 8004cb4:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8004cb8:	f5b3 7f88 	cmp.w	r3, #272	@ 0x110
 8004cbc:	db02      	blt.n	8004cc4 <HW_FillFrame+0x48>
 8004cbe:	f04f 33ff 	mov.w	r3, #4294967295
 8004cc2:	e03c      	b.n	8004d3e <HW_FillFrame+0xc2>
 8004cc4:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8004cc8:	2b00      	cmp	r3, #0
 8004cca:	db0d      	blt.n	8004ce8 <HW_FillFrame+0x6c>
 8004ccc:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8004cd0:	f5b3 7ff0 	cmp.w	r3, #480	@ 0x1e0
 8004cd4:	da08      	bge.n	8004ce8 <HW_FillFrame+0x6c>
 8004cd6:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004cda:	2b00      	cmp	r3, #0
 8004cdc:	db04      	blt.n	8004ce8 <HW_FillFrame+0x6c>
 8004cde:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004ce2:	f5b3 7f88 	cmp.w	r3, #272	@ 0x110
 8004ce6:	db02      	blt.n	8004cee <HW_FillFrame+0x72>
 8004ce8:	f04f 33ff 	mov.w	r3, #4294967295
 8004cec:	e027      	b.n	8004d3e <HW_FillFrame+0xc2>
 8004cee:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 8004cf2:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 8004cf6:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8004cfa:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004cfe:	f7ff ff2f 	bl	8004b60 <SSD1963_WindowSet>
 8004d02:	202c      	movs	r0, #44	@ 0x2c
 8004d04:	f000 f8cd 	bl	8004ea2 <write_command>
 8004d08:	88fb      	ldrh	r3, [r7, #6]
 8004d0a:	81fb      	strh	r3, [r7, #14]
 8004d0c:	e011      	b.n	8004d32 <HW_FillFrame+0xb6>
 8004d0e:	88bb      	ldrh	r3, [r7, #4]
 8004d10:	81bb      	strh	r3, [r7, #12]
 8004d12:	e006      	b.n	8004d22 <HW_FillFrame+0xa6>
 8004d14:	8c3b      	ldrh	r3, [r7, #32]
 8004d16:	4618      	mov	r0, r3
 8004d18:	f000 f8de 	bl	8004ed8 <write_data>
 8004d1c:	89bb      	ldrh	r3, [r7, #12]
 8004d1e:	3301      	adds	r3, #1
 8004d20:	81bb      	strh	r3, [r7, #12]
 8004d22:	f9b7 2000 	ldrsh.w	r2, [r7]
 8004d26:	89bb      	ldrh	r3, [r7, #12]
 8004d28:	429a      	cmp	r2, r3
 8004d2a:	daf3      	bge.n	8004d14 <HW_FillFrame+0x98>
 8004d2c:	89fb      	ldrh	r3, [r7, #14]
 8004d2e:	3301      	adds	r3, #1
 8004d30:	81fb      	strh	r3, [r7, #14]
 8004d32:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8004d36:	89fb      	ldrh	r3, [r7, #14]
 8004d38:	429a      	cmp	r2, r3
 8004d3a:	dae8      	bge.n	8004d0e <HW_FillFrame+0x92>
 8004d3c:	2300      	movs	r3, #0
 8004d3e:	4618      	mov	r0, r3
 8004d40:	3714      	adds	r7, #20
 8004d42:	46bd      	mov	sp, r7
 8004d44:	bd90      	pop	{r4, r7, pc}

08004d46 <HW_DrawLine>:
 8004d46:	b590      	push	{r4, r7, lr}
 8004d48:	b085      	sub	sp, #20
 8004d4a:	af02      	add	r7, sp, #8
 8004d4c:	4604      	mov	r4, r0
 8004d4e:	4608      	mov	r0, r1
 8004d50:	4611      	mov	r1, r2
 8004d52:	461a      	mov	r2, r3
 8004d54:	4623      	mov	r3, r4
 8004d56:	80fb      	strh	r3, [r7, #6]
 8004d58:	4603      	mov	r3, r0
 8004d5a:	80bb      	strh	r3, [r7, #4]
 8004d5c:	460b      	mov	r3, r1
 8004d5e:	807b      	strh	r3, [r7, #2]
 8004d60:	4613      	mov	r3, r2
 8004d62:	803b      	strh	r3, [r7, #0]
 8004d64:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004d68:	2b00      	cmp	r3, #0
 8004d6a:	db0d      	blt.n	8004d88 <HW_DrawLine+0x42>
 8004d6c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004d70:	f5b3 7ff0 	cmp.w	r3, #480	@ 0x1e0
 8004d74:	da08      	bge.n	8004d88 <HW_DrawLine+0x42>
 8004d76:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8004d7a:	2b00      	cmp	r3, #0
 8004d7c:	db04      	blt.n	8004d88 <HW_DrawLine+0x42>
 8004d7e:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8004d82:	f5b3 7f88 	cmp.w	r3, #272	@ 0x110
 8004d86:	db02      	blt.n	8004d8e <HW_DrawLine+0x48>
 8004d88:	f04f 33ff 	mov.w	r3, #4294967295
 8004d8c:	e031      	b.n	8004df2 <HW_DrawLine+0xac>
 8004d8e:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8004d92:	2b00      	cmp	r3, #0
 8004d94:	db0d      	blt.n	8004db2 <HW_DrawLine+0x6c>
 8004d96:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8004d9a:	f5b3 7ff0 	cmp.w	r3, #480	@ 0x1e0
 8004d9e:	da08      	bge.n	8004db2 <HW_DrawLine+0x6c>
 8004da0:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004da4:	2b00      	cmp	r3, #0
 8004da6:	db04      	blt.n	8004db2 <HW_DrawLine+0x6c>
 8004da8:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004dac:	f5b3 7f88 	cmp.w	r3, #272	@ 0x110
 8004db0:	db02      	blt.n	8004db8 <HW_DrawLine+0x72>
 8004db2:	f04f 33ff 	mov.w	r3, #4294967295
 8004db6:	e01c      	b.n	8004df2 <HW_DrawLine+0xac>
 8004db8:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8004dbc:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8004dc0:	429a      	cmp	r2, r3
 8004dc2:	d005      	beq.n	8004dd0 <HW_DrawLine+0x8a>
 8004dc4:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8004dc8:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004dcc:	429a      	cmp	r2, r3
 8004dce:	d10e      	bne.n	8004dee <HW_DrawLine+0xa8>
 8004dd0:	f9b7 4000 	ldrsh.w	r4, [r7]
 8004dd4:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8004dd8:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 8004ddc:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 8004de0:	8b3b      	ldrh	r3, [r7, #24]
 8004de2:	9300      	str	r3, [sp, #0]
 8004de4:	4623      	mov	r3, r4
 8004de6:	f7ff ff49 	bl	8004c7c <HW_FillFrame>
 8004dea:	2300      	movs	r3, #0
 8004dec:	e001      	b.n	8004df2 <HW_DrawLine+0xac>
 8004dee:	f04f 33ff 	mov.w	r3, #4294967295
 8004df2:	4618      	mov	r0, r3
 8004df4:	370c      	adds	r7, #12
 8004df6:	46bd      	mov	sp, r7
 8004df8:	bd90      	pop	{r4, r7, pc}

08004dfa <HW_DrawImage>:
 8004dfa:	b590      	push	{r4, r7, lr}
 8004dfc:	b083      	sub	sp, #12
 8004dfe:	af00      	add	r7, sp, #0
 8004e00:	4604      	mov	r4, r0
 8004e02:	4608      	mov	r0, r1
 8004e04:	4611      	mov	r1, r2
 8004e06:	461a      	mov	r2, r3
 8004e08:	4623      	mov	r3, r4
 8004e0a:	80fb      	strh	r3, [r7, #6]
 8004e0c:	4603      	mov	r3, r0
 8004e0e:	80bb      	strh	r3, [r7, #4]
 8004e10:	460b      	mov	r3, r1
 8004e12:	807b      	strh	r3, [r7, #2]
 8004e14:	4613      	mov	r3, r2
 8004e16:	803b      	strh	r3, [r7, #0]
 8004e18:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004e1c:	2b00      	cmp	r3, #0
 8004e1e:	db0d      	blt.n	8004e3c <HW_DrawImage+0x42>
 8004e20:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004e24:	f5b3 7ff0 	cmp.w	r3, #480	@ 0x1e0
 8004e28:	da08      	bge.n	8004e3c <HW_DrawImage+0x42>
 8004e2a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8004e2e:	2b00      	cmp	r3, #0
 8004e30:	db04      	blt.n	8004e3c <HW_DrawImage+0x42>
 8004e32:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8004e36:	f5b3 7f88 	cmp.w	r3, #272	@ 0x110
 8004e3a:	db02      	blt.n	8004e42 <HW_DrawImage+0x48>
 8004e3c:	f04f 33ff 	mov.w	r3, #4294967295
 8004e40:	e02b      	b.n	8004e9a <HW_DrawImage+0xa0>
 8004e42:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8004e46:	2b00      	cmp	r3, #0
 8004e48:	db0d      	blt.n	8004e66 <HW_DrawImage+0x6c>
 8004e4a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8004e4e:	f5b3 7ff0 	cmp.w	r3, #480	@ 0x1e0
 8004e52:	da08      	bge.n	8004e66 <HW_DrawImage+0x6c>
 8004e54:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004e58:	2b00      	cmp	r3, #0
 8004e5a:	db04      	blt.n	8004e66 <HW_DrawImage+0x6c>
 8004e5c:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004e60:	f5b3 7f88 	cmp.w	r3, #272	@ 0x110
 8004e64:	db02      	blt.n	8004e6c <HW_DrawImage+0x72>
 8004e66:	f04f 33ff 	mov.w	r3, #4294967295
 8004e6a:	e016      	b.n	8004e9a <HW_DrawImage+0xa0>
 8004e6c:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 8004e70:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 8004e74:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8004e78:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004e7c:	f7ff fe70 	bl	8004b60 <SSD1963_WindowSet>
 8004e80:	202c      	movs	r0, #44	@ 0x2c
 8004e82:	f000 f80e 	bl	8004ea2 <write_command>
 8004e86:	8bbb      	ldrh	r3, [r7, #28]
 8004e88:	461a      	mov	r2, r3
 8004e8a:	0052      	lsls	r2, r2, #1
 8004e8c:	4413      	add	r3, r2
 8004e8e:	b29b      	uxth	r3, r3
 8004e90:	4619      	mov	r1, r3
 8004e92:	69b8      	ldr	r0, [r7, #24]
 8004e94:	f000 f83a 	bl	8004f0c <write_multi_data>
 8004e98:	2300      	movs	r3, #0
 8004e9a:	4618      	mov	r0, r3
 8004e9c:	370c      	adds	r7, #12
 8004e9e:	46bd      	mov	sp, r7
 8004ea0:	bd90      	pop	{r4, r7, pc}

08004ea2 <write_command>:
 8004ea2:	b480      	push	{r7}
 8004ea4:	b085      	sub	sp, #20
 8004ea6:	af00      	add	r7, sp, #0
 8004ea8:	4603      	mov	r3, r0
 8004eaa:	71fb      	strb	r3, [r7, #7]
 8004eac:	f04f 43c0 	mov.w	r3, #1610612736	@ 0x60000000
 8004eb0:	79fa      	ldrb	r2, [r7, #7]
 8004eb2:	b292      	uxth	r2, r2
 8004eb4:	801a      	strh	r2, [r3, #0]
 8004eb6:	2300      	movs	r3, #0
 8004eb8:	81fb      	strh	r3, [r7, #14]
 8004eba:	e002      	b.n	8004ec2 <write_command+0x20>
 8004ebc:	89fb      	ldrh	r3, [r7, #14]
 8004ebe:	3301      	adds	r3, #1
 8004ec0:	81fb      	strh	r3, [r7, #14]
 8004ec2:	89fb      	ldrh	r3, [r7, #14]
 8004ec4:	2b0b      	cmp	r3, #11
 8004ec6:	d9f9      	bls.n	8004ebc <write_command+0x1a>
 8004ec8:	bf00      	nop
 8004eca:	bf00      	nop
 8004ecc:	3714      	adds	r7, #20
 8004ece:	46bd      	mov	sp, r7
 8004ed0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ed4:	4770      	bx	lr
	...

08004ed8 <write_data>:
 8004ed8:	b480      	push	{r7}
 8004eda:	b085      	sub	sp, #20
 8004edc:	af00      	add	r7, sp, #0
 8004ede:	4603      	mov	r3, r0
 8004ee0:	80fb      	strh	r3, [r7, #6]
 8004ee2:	4a09      	ldr	r2, [pc, #36]	@ (8004f08 <write_data+0x30>)
 8004ee4:	88fb      	ldrh	r3, [r7, #6]
 8004ee6:	8013      	strh	r3, [r2, #0]
 8004ee8:	2300      	movs	r3, #0
 8004eea:	81fb      	strh	r3, [r7, #14]
 8004eec:	e002      	b.n	8004ef4 <write_data+0x1c>
 8004eee:	89fb      	ldrh	r3, [r7, #14]
 8004ef0:	3301      	adds	r3, #1
 8004ef2:	81fb      	strh	r3, [r7, #14]
 8004ef4:	89fb      	ldrh	r3, [r7, #14]
 8004ef6:	2b0b      	cmp	r3, #11
 8004ef8:	d9f9      	bls.n	8004eee <write_data+0x16>
 8004efa:	bf00      	nop
 8004efc:	bf00      	nop
 8004efe:	3714      	adds	r7, #20
 8004f00:	46bd      	mov	sp, r7
 8004f02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f06:	4770      	bx	lr
 8004f08:	60000100 	.word	0x60000100

08004f0c <write_multi_data>:
 8004f0c:	b480      	push	{r7}
 8004f0e:	b085      	sub	sp, #20
 8004f10:	af00      	add	r7, sp, #0
 8004f12:	6078      	str	r0, [r7, #4]
 8004f14:	460b      	mov	r3, r1
 8004f16:	807b      	strh	r3, [r7, #2]
 8004f18:	2300      	movs	r3, #0
 8004f1a:	81fb      	strh	r3, [r7, #14]
 8004f1c:	e016      	b.n	8004f4c <write_multi_data+0x40>
 8004f1e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004f22:	005b      	lsls	r3, r3, #1
 8004f24:	687a      	ldr	r2, [r7, #4]
 8004f26:	4413      	add	r3, r2
 8004f28:	4a0e      	ldr	r2, [pc, #56]	@ (8004f64 <write_multi_data+0x58>)
 8004f2a:	881b      	ldrh	r3, [r3, #0]
 8004f2c:	8013      	strh	r3, [r2, #0]
 8004f2e:	2300      	movs	r3, #0
 8004f30:	81bb      	strh	r3, [r7, #12]
 8004f32:	e002      	b.n	8004f3a <write_multi_data+0x2e>
 8004f34:	89bb      	ldrh	r3, [r7, #12]
 8004f36:	3301      	adds	r3, #1
 8004f38:	81bb      	strh	r3, [r7, #12]
 8004f3a:	89bb      	ldrh	r3, [r7, #12]
 8004f3c:	2b0b      	cmp	r3, #11
 8004f3e:	d9f9      	bls.n	8004f34 <write_multi_data+0x28>
 8004f40:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004f44:	b29b      	uxth	r3, r3
 8004f46:	3301      	adds	r3, #1
 8004f48:	b29b      	uxth	r3, r3
 8004f4a:	81fb      	strh	r3, [r7, #14]
 8004f4c:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8004f50:	887b      	ldrh	r3, [r7, #2]
 8004f52:	429a      	cmp	r2, r3
 8004f54:	dbe3      	blt.n	8004f1e <write_multi_data+0x12>
 8004f56:	bf00      	nop
 8004f58:	bf00      	nop
 8004f5a:	3714      	adds	r7, #20
 8004f5c:	46bd      	mov	sp, r7
 8004f5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f62:	4770      	bx	lr
 8004f64:	60000100 	.word	0x60000100

08004f68 <Reset_Handler>:
 8004f68:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8004fa0 <LoopFillZerobss+0x12>
 8004f6c:	480d      	ldr	r0, [pc, #52]	@ (8004fa4 <LoopFillZerobss+0x16>)
 8004f6e:	490e      	ldr	r1, [pc, #56]	@ (8004fa8 <LoopFillZerobss+0x1a>)
 8004f70:	4a0e      	ldr	r2, [pc, #56]	@ (8004fac <LoopFillZerobss+0x1e>)
 8004f72:	2300      	movs	r3, #0
 8004f74:	e002      	b.n	8004f7c <LoopCopyDataInit>

08004f76 <CopyDataInit>:
 8004f76:	58d4      	ldr	r4, [r2, r3]
 8004f78:	50c4      	str	r4, [r0, r3]
 8004f7a:	3304      	adds	r3, #4

08004f7c <LoopCopyDataInit>:
 8004f7c:	18c4      	adds	r4, r0, r3
 8004f7e:	428c      	cmp	r4, r1
 8004f80:	d3f9      	bcc.n	8004f76 <CopyDataInit>
 8004f82:	4a0b      	ldr	r2, [pc, #44]	@ (8004fb0 <LoopFillZerobss+0x22>)
 8004f84:	4c0b      	ldr	r4, [pc, #44]	@ (8004fb4 <LoopFillZerobss+0x26>)
 8004f86:	2300      	movs	r3, #0
 8004f88:	e001      	b.n	8004f8e <LoopFillZerobss>

08004f8a <FillZerobss>:
 8004f8a:	6013      	str	r3, [r2, #0]
 8004f8c:	3204      	adds	r2, #4

08004f8e <LoopFillZerobss>:
 8004f8e:	42a2      	cmp	r2, r4
 8004f90:	d3fb      	bcc.n	8004f8a <FillZerobss>
 8004f92:	f7fe fe6d 	bl	8003c70 <SystemInit>
 8004f96:	f009 f8cb 	bl	800e130 <__libc_init_array>
 8004f9a:	f7fc ffe9 	bl	8001f70 <main>
 8004f9e:	4770      	bx	lr
 8004fa0:	20050000 	.word	0x20050000
 8004fa4:	20000000 	.word	0x20000000
 8004fa8:	200000f8 	.word	0x200000f8
 8004fac:	0801e1bc 	.word	0x0801e1bc
 8004fb0:	200000f8 	.word	0x200000f8
 8004fb4:	20004a2c 	.word	0x20004a2c

08004fb8 <ADC_IRQHandler>:
 8004fb8:	e7fe      	b.n	8004fb8 <ADC_IRQHandler>

08004fba <HAL_Init>:
 8004fba:	b580      	push	{r7, lr}
 8004fbc:	af00      	add	r7, sp, #0
 8004fbe:	2003      	movs	r0, #3
 8004fc0:	f001 fb9e 	bl	8006700 <HAL_NVIC_SetPriorityGrouping>
 8004fc4:	200f      	movs	r0, #15
 8004fc6:	f000 f805 	bl	8004fd4 <HAL_InitTick>
 8004fca:	f7fe f919 	bl	8003200 <HAL_MspInit>
 8004fce:	2300      	movs	r3, #0
 8004fd0:	4618      	mov	r0, r3
 8004fd2:	bd80      	pop	{r7, pc}

08004fd4 <HAL_InitTick>:
 8004fd4:	b580      	push	{r7, lr}
 8004fd6:	b082      	sub	sp, #8
 8004fd8:	af00      	add	r7, sp, #0
 8004fda:	6078      	str	r0, [r7, #4]
 8004fdc:	4b12      	ldr	r3, [pc, #72]	@ (8005028 <HAL_InitTick+0x54>)
 8004fde:	681a      	ldr	r2, [r3, #0]
 8004fe0:	4b12      	ldr	r3, [pc, #72]	@ (800502c <HAL_InitTick+0x58>)
 8004fe2:	781b      	ldrb	r3, [r3, #0]
 8004fe4:	4619      	mov	r1, r3
 8004fe6:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8004fea:	fbb3 f3f1 	udiv	r3, r3, r1
 8004fee:	fbb2 f3f3 	udiv	r3, r2, r3
 8004ff2:	4618      	mov	r0, r3
 8004ff4:	f001 fbb9 	bl	800676a <HAL_SYSTICK_Config>
 8004ff8:	4603      	mov	r3, r0
 8004ffa:	2b00      	cmp	r3, #0
 8004ffc:	d001      	beq.n	8005002 <HAL_InitTick+0x2e>
 8004ffe:	2301      	movs	r3, #1
 8005000:	e00e      	b.n	8005020 <HAL_InitTick+0x4c>
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	2b0f      	cmp	r3, #15
 8005006:	d80a      	bhi.n	800501e <HAL_InitTick+0x4a>
 8005008:	2200      	movs	r2, #0
 800500a:	6879      	ldr	r1, [r7, #4]
 800500c:	f04f 30ff 	mov.w	r0, #4294967295
 8005010:	f001 fb81 	bl	8006716 <HAL_NVIC_SetPriority>
 8005014:	4a06      	ldr	r2, [pc, #24]	@ (8005030 <HAL_InitTick+0x5c>)
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	6013      	str	r3, [r2, #0]
 800501a:	2300      	movs	r3, #0
 800501c:	e000      	b.n	8005020 <HAL_InitTick+0x4c>
 800501e:	2301      	movs	r3, #1
 8005020:	4618      	mov	r0, r3
 8005022:	3708      	adds	r7, #8
 8005024:	46bd      	mov	sp, r7
 8005026:	bd80      	pop	{r7, pc}
 8005028:	2000009c 	.word	0x2000009c
 800502c:	200000a4 	.word	0x200000a4
 8005030:	200000a0 	.word	0x200000a0

08005034 <HAL_IncTick>:
 8005034:	b480      	push	{r7}
 8005036:	af00      	add	r7, sp, #0
 8005038:	4b06      	ldr	r3, [pc, #24]	@ (8005054 <HAL_IncTick+0x20>)
 800503a:	781b      	ldrb	r3, [r3, #0]
 800503c:	461a      	mov	r2, r3
 800503e:	4b06      	ldr	r3, [pc, #24]	@ (8005058 <HAL_IncTick+0x24>)
 8005040:	681b      	ldr	r3, [r3, #0]
 8005042:	4413      	add	r3, r2
 8005044:	4a04      	ldr	r2, [pc, #16]	@ (8005058 <HAL_IncTick+0x24>)
 8005046:	6013      	str	r3, [r2, #0]
 8005048:	bf00      	nop
 800504a:	46bd      	mov	sp, r7
 800504c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005050:	4770      	bx	lr
 8005052:	bf00      	nop
 8005054:	200000a4 	.word	0x200000a4
 8005058:	20002838 	.word	0x20002838

0800505c <HAL_GetTick>:
 800505c:	b480      	push	{r7}
 800505e:	af00      	add	r7, sp, #0
 8005060:	4b03      	ldr	r3, [pc, #12]	@ (8005070 <HAL_GetTick+0x14>)
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	4618      	mov	r0, r3
 8005066:	46bd      	mov	sp, r7
 8005068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800506c:	4770      	bx	lr
 800506e:	bf00      	nop
 8005070:	20002838 	.word	0x20002838

08005074 <HAL_Delay>:
 8005074:	b580      	push	{r7, lr}
 8005076:	b084      	sub	sp, #16
 8005078:	af00      	add	r7, sp, #0
 800507a:	6078      	str	r0, [r7, #4]
 800507c:	f7ff ffee 	bl	800505c <HAL_GetTick>
 8005080:	60b8      	str	r0, [r7, #8]
 8005082:	687b      	ldr	r3, [r7, #4]
 8005084:	60fb      	str	r3, [r7, #12]
 8005086:	68fb      	ldr	r3, [r7, #12]
 8005088:	f1b3 3fff 	cmp.w	r3, #4294967295
 800508c:	d005      	beq.n	800509a <HAL_Delay+0x26>
 800508e:	4b0a      	ldr	r3, [pc, #40]	@ (80050b8 <HAL_Delay+0x44>)
 8005090:	781b      	ldrb	r3, [r3, #0]
 8005092:	461a      	mov	r2, r3
 8005094:	68fb      	ldr	r3, [r7, #12]
 8005096:	4413      	add	r3, r2
 8005098:	60fb      	str	r3, [r7, #12]
 800509a:	bf00      	nop
 800509c:	f7ff ffde 	bl	800505c <HAL_GetTick>
 80050a0:	4602      	mov	r2, r0
 80050a2:	68bb      	ldr	r3, [r7, #8]
 80050a4:	1ad3      	subs	r3, r2, r3
 80050a6:	68fa      	ldr	r2, [r7, #12]
 80050a8:	429a      	cmp	r2, r3
 80050aa:	d8f7      	bhi.n	800509c <HAL_Delay+0x28>
 80050ac:	bf00      	nop
 80050ae:	bf00      	nop
 80050b0:	3710      	adds	r7, #16
 80050b2:	46bd      	mov	sp, r7
 80050b4:	bd80      	pop	{r7, pc}
 80050b6:	bf00      	nop
 80050b8:	200000a4 	.word	0x200000a4

080050bc <HAL_ADC_Init>:
 80050bc:	b580      	push	{r7, lr}
 80050be:	b084      	sub	sp, #16
 80050c0:	af00      	add	r7, sp, #0
 80050c2:	6078      	str	r0, [r7, #4]
 80050c4:	2300      	movs	r3, #0
 80050c6:	73fb      	strb	r3, [r7, #15]
 80050c8:	687b      	ldr	r3, [r7, #4]
 80050ca:	2b00      	cmp	r3, #0
 80050cc:	d101      	bne.n	80050d2 <HAL_ADC_Init+0x16>
 80050ce:	2301      	movs	r3, #1
 80050d0:	e031      	b.n	8005136 <HAL_ADC_Init+0x7a>
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80050d6:	2b00      	cmp	r3, #0
 80050d8:	d109      	bne.n	80050ee <HAL_ADC_Init+0x32>
 80050da:	6878      	ldr	r0, [r7, #4]
 80050dc:	f7fe f8b4 	bl	8003248 <HAL_ADC_MspInit>
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	2200      	movs	r2, #0
 80050e4:	645a      	str	r2, [r3, #68]	@ 0x44
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	2200      	movs	r2, #0
 80050ea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80050ee:	687b      	ldr	r3, [r7, #4]
 80050f0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80050f2:	f003 0310 	and.w	r3, r3, #16
 80050f6:	2b00      	cmp	r3, #0
 80050f8:	d116      	bne.n	8005128 <HAL_ADC_Init+0x6c>
 80050fa:	687b      	ldr	r3, [r7, #4]
 80050fc:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80050fe:	4b10      	ldr	r3, [pc, #64]	@ (8005140 <HAL_ADC_Init+0x84>)
 8005100:	4013      	ands	r3, r2
 8005102:	f043 0202 	orr.w	r2, r3, #2
 8005106:	687b      	ldr	r3, [r7, #4]
 8005108:	641a      	str	r2, [r3, #64]	@ 0x40
 800510a:	6878      	ldr	r0, [r7, #4]
 800510c:	f000 fad6 	bl	80056bc <ADC_Init>
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	2200      	movs	r2, #0
 8005114:	645a      	str	r2, [r3, #68]	@ 0x44
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800511a:	f023 0303 	bic.w	r3, r3, #3
 800511e:	f043 0201 	orr.w	r2, r3, #1
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	641a      	str	r2, [r3, #64]	@ 0x40
 8005126:	e001      	b.n	800512c <HAL_ADC_Init+0x70>
 8005128:	2301      	movs	r3, #1
 800512a:	73fb      	strb	r3, [r7, #15]
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	2200      	movs	r2, #0
 8005130:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005134:	7bfb      	ldrb	r3, [r7, #15]
 8005136:	4618      	mov	r0, r3
 8005138:	3710      	adds	r7, #16
 800513a:	46bd      	mov	sp, r7
 800513c:	bd80      	pop	{r7, pc}
 800513e:	bf00      	nop
 8005140:	ffffeefd 	.word	0xffffeefd

08005144 <HAL_ADC_Start>:
 8005144:	b480      	push	{r7}
 8005146:	b085      	sub	sp, #20
 8005148:	af00      	add	r7, sp, #0
 800514a:	6078      	str	r0, [r7, #4]
 800514c:	2300      	movs	r3, #0
 800514e:	60fb      	str	r3, [r7, #12]
 8005150:	687b      	ldr	r3, [r7, #4]
 8005152:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005156:	2b01      	cmp	r3, #1
 8005158:	d101      	bne.n	800515e <HAL_ADC_Start+0x1a>
 800515a:	2302      	movs	r3, #2
 800515c:	e0ad      	b.n	80052ba <HAL_ADC_Start+0x176>
 800515e:	687b      	ldr	r3, [r7, #4]
 8005160:	2201      	movs	r2, #1
 8005162:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	681b      	ldr	r3, [r3, #0]
 800516a:	689b      	ldr	r3, [r3, #8]
 800516c:	f003 0301 	and.w	r3, r3, #1
 8005170:	2b01      	cmp	r3, #1
 8005172:	d018      	beq.n	80051a6 <HAL_ADC_Start+0x62>
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	681b      	ldr	r3, [r3, #0]
 8005178:	689a      	ldr	r2, [r3, #8]
 800517a:	687b      	ldr	r3, [r7, #4]
 800517c:	681b      	ldr	r3, [r3, #0]
 800517e:	f042 0201 	orr.w	r2, r2, #1
 8005182:	609a      	str	r2, [r3, #8]
 8005184:	4b50      	ldr	r3, [pc, #320]	@ (80052c8 <HAL_ADC_Start+0x184>)
 8005186:	681b      	ldr	r3, [r3, #0]
 8005188:	4a50      	ldr	r2, [pc, #320]	@ (80052cc <HAL_ADC_Start+0x188>)
 800518a:	fba2 2303 	umull	r2, r3, r2, r3
 800518e:	0c9a      	lsrs	r2, r3, #18
 8005190:	4613      	mov	r3, r2
 8005192:	005b      	lsls	r3, r3, #1
 8005194:	4413      	add	r3, r2
 8005196:	60fb      	str	r3, [r7, #12]
 8005198:	e002      	b.n	80051a0 <HAL_ADC_Start+0x5c>
 800519a:	68fb      	ldr	r3, [r7, #12]
 800519c:	3b01      	subs	r3, #1
 800519e:	60fb      	str	r3, [r7, #12]
 80051a0:	68fb      	ldr	r3, [r7, #12]
 80051a2:	2b00      	cmp	r3, #0
 80051a4:	d1f9      	bne.n	800519a <HAL_ADC_Start+0x56>
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	681b      	ldr	r3, [r3, #0]
 80051aa:	689b      	ldr	r3, [r3, #8]
 80051ac:	f003 0301 	and.w	r3, r3, #1
 80051b0:	2b01      	cmp	r3, #1
 80051b2:	d175      	bne.n	80052a0 <HAL_ADC_Start+0x15c>
 80051b4:	687b      	ldr	r3, [r7, #4]
 80051b6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80051b8:	4b45      	ldr	r3, [pc, #276]	@ (80052d0 <HAL_ADC_Start+0x18c>)
 80051ba:	4013      	ands	r3, r2
 80051bc:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 80051c0:	687b      	ldr	r3, [r7, #4]
 80051c2:	641a      	str	r2, [r3, #64]	@ 0x40
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	685b      	ldr	r3, [r3, #4]
 80051ca:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80051ce:	2b00      	cmp	r3, #0
 80051d0:	d007      	beq.n	80051e2 <HAL_ADC_Start+0x9e>
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80051d6:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80051da:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	641a      	str	r2, [r3, #64]	@ 0x40
 80051e2:	687b      	ldr	r3, [r7, #4]
 80051e4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80051e6:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80051ea:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80051ee:	d106      	bne.n	80051fe <HAL_ADC_Start+0xba>
 80051f0:	687b      	ldr	r3, [r7, #4]
 80051f2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80051f4:	f023 0206 	bic.w	r2, r3, #6
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	645a      	str	r2, [r3, #68]	@ 0x44
 80051fc:	e002      	b.n	8005204 <HAL_ADC_Start+0xc0>
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	2200      	movs	r2, #0
 8005202:	645a      	str	r2, [r3, #68]	@ 0x44
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	2200      	movs	r2, #0
 8005208:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800520c:	687b      	ldr	r3, [r7, #4]
 800520e:	681b      	ldr	r3, [r3, #0]
 8005210:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8005214:	601a      	str	r2, [r3, #0]
 8005216:	4b2f      	ldr	r3, [pc, #188]	@ (80052d4 <HAL_ADC_Start+0x190>)
 8005218:	685b      	ldr	r3, [r3, #4]
 800521a:	f003 031f 	and.w	r3, r3, #31
 800521e:	2b00      	cmp	r3, #0
 8005220:	d10f      	bne.n	8005242 <HAL_ADC_Start+0xfe>
 8005222:	687b      	ldr	r3, [r7, #4]
 8005224:	681b      	ldr	r3, [r3, #0]
 8005226:	689b      	ldr	r3, [r3, #8]
 8005228:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800522c:	2b00      	cmp	r3, #0
 800522e:	d143      	bne.n	80052b8 <HAL_ADC_Start+0x174>
 8005230:	687b      	ldr	r3, [r7, #4]
 8005232:	681b      	ldr	r3, [r3, #0]
 8005234:	689a      	ldr	r2, [r3, #8]
 8005236:	687b      	ldr	r3, [r7, #4]
 8005238:	681b      	ldr	r3, [r3, #0]
 800523a:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800523e:	609a      	str	r2, [r3, #8]
 8005240:	e03a      	b.n	80052b8 <HAL_ADC_Start+0x174>
 8005242:	687b      	ldr	r3, [r7, #4]
 8005244:	681b      	ldr	r3, [r3, #0]
 8005246:	4a24      	ldr	r2, [pc, #144]	@ (80052d8 <HAL_ADC_Start+0x194>)
 8005248:	4293      	cmp	r3, r2
 800524a:	d10e      	bne.n	800526a <HAL_ADC_Start+0x126>
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	681b      	ldr	r3, [r3, #0]
 8005250:	689b      	ldr	r3, [r3, #8]
 8005252:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8005256:	2b00      	cmp	r3, #0
 8005258:	d107      	bne.n	800526a <HAL_ADC_Start+0x126>
 800525a:	687b      	ldr	r3, [r7, #4]
 800525c:	681b      	ldr	r3, [r3, #0]
 800525e:	689a      	ldr	r2, [r3, #8]
 8005260:	687b      	ldr	r3, [r7, #4]
 8005262:	681b      	ldr	r3, [r3, #0]
 8005264:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8005268:	609a      	str	r2, [r3, #8]
 800526a:	4b1a      	ldr	r3, [pc, #104]	@ (80052d4 <HAL_ADC_Start+0x190>)
 800526c:	685b      	ldr	r3, [r3, #4]
 800526e:	f003 0310 	and.w	r3, r3, #16
 8005272:	2b00      	cmp	r3, #0
 8005274:	d120      	bne.n	80052b8 <HAL_ADC_Start+0x174>
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	4a18      	ldr	r2, [pc, #96]	@ (80052dc <HAL_ADC_Start+0x198>)
 800527c:	4293      	cmp	r3, r2
 800527e:	d11b      	bne.n	80052b8 <HAL_ADC_Start+0x174>
 8005280:	687b      	ldr	r3, [r7, #4]
 8005282:	681b      	ldr	r3, [r3, #0]
 8005284:	689b      	ldr	r3, [r3, #8]
 8005286:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800528a:	2b00      	cmp	r3, #0
 800528c:	d114      	bne.n	80052b8 <HAL_ADC_Start+0x174>
 800528e:	687b      	ldr	r3, [r7, #4]
 8005290:	681b      	ldr	r3, [r3, #0]
 8005292:	689a      	ldr	r2, [r3, #8]
 8005294:	687b      	ldr	r3, [r7, #4]
 8005296:	681b      	ldr	r3, [r3, #0]
 8005298:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800529c:	609a      	str	r2, [r3, #8]
 800529e:	e00b      	b.n	80052b8 <HAL_ADC_Start+0x174>
 80052a0:	687b      	ldr	r3, [r7, #4]
 80052a2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80052a4:	f043 0210 	orr.w	r2, r3, #16
 80052a8:	687b      	ldr	r3, [r7, #4]
 80052aa:	641a      	str	r2, [r3, #64]	@ 0x40
 80052ac:	687b      	ldr	r3, [r7, #4]
 80052ae:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80052b0:	f043 0201 	orr.w	r2, r3, #1
 80052b4:	687b      	ldr	r3, [r7, #4]
 80052b6:	645a      	str	r2, [r3, #68]	@ 0x44
 80052b8:	2300      	movs	r3, #0
 80052ba:	4618      	mov	r0, r3
 80052bc:	3714      	adds	r7, #20
 80052be:	46bd      	mov	sp, r7
 80052c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052c4:	4770      	bx	lr
 80052c6:	bf00      	nop
 80052c8:	2000009c 	.word	0x2000009c
 80052cc:	431bde83 	.word	0x431bde83
 80052d0:	fffff8fe 	.word	0xfffff8fe
 80052d4:	40012300 	.word	0x40012300
 80052d8:	40012000 	.word	0x40012000
 80052dc:	40012200 	.word	0x40012200

080052e0 <HAL_ADC_PollForConversion>:
 80052e0:	b580      	push	{r7, lr}
 80052e2:	b084      	sub	sp, #16
 80052e4:	af00      	add	r7, sp, #0
 80052e6:	6078      	str	r0, [r7, #4]
 80052e8:	6039      	str	r1, [r7, #0]
 80052ea:	2300      	movs	r3, #0
 80052ec:	60fb      	str	r3, [r7, #12]
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	681b      	ldr	r3, [r3, #0]
 80052f2:	689b      	ldr	r3, [r3, #8]
 80052f4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80052f8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80052fc:	d113      	bne.n	8005326 <HAL_ADC_PollForConversion+0x46>
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	689b      	ldr	r3, [r3, #8]
 8005304:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005308:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800530c:	d10b      	bne.n	8005326 <HAL_ADC_PollForConversion+0x46>
 800530e:	687b      	ldr	r3, [r7, #4]
 8005310:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005312:	f043 0220 	orr.w	r2, r3, #32
 8005316:	687b      	ldr	r3, [r7, #4]
 8005318:	641a      	str	r2, [r3, #64]	@ 0x40
 800531a:	687b      	ldr	r3, [r7, #4]
 800531c:	2200      	movs	r2, #0
 800531e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005322:	2301      	movs	r3, #1
 8005324:	e063      	b.n	80053ee <HAL_ADC_PollForConversion+0x10e>
 8005326:	f7ff fe99 	bl	800505c <HAL_GetTick>
 800532a:	60f8      	str	r0, [r7, #12]
 800532c:	e021      	b.n	8005372 <HAL_ADC_PollForConversion+0x92>
 800532e:	683b      	ldr	r3, [r7, #0]
 8005330:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005334:	d01d      	beq.n	8005372 <HAL_ADC_PollForConversion+0x92>
 8005336:	683b      	ldr	r3, [r7, #0]
 8005338:	2b00      	cmp	r3, #0
 800533a:	d007      	beq.n	800534c <HAL_ADC_PollForConversion+0x6c>
 800533c:	f7ff fe8e 	bl	800505c <HAL_GetTick>
 8005340:	4602      	mov	r2, r0
 8005342:	68fb      	ldr	r3, [r7, #12]
 8005344:	1ad3      	subs	r3, r2, r3
 8005346:	683a      	ldr	r2, [r7, #0]
 8005348:	429a      	cmp	r2, r3
 800534a:	d212      	bcs.n	8005372 <HAL_ADC_PollForConversion+0x92>
 800534c:	687b      	ldr	r3, [r7, #4]
 800534e:	681b      	ldr	r3, [r3, #0]
 8005350:	681b      	ldr	r3, [r3, #0]
 8005352:	f003 0302 	and.w	r3, r3, #2
 8005356:	2b02      	cmp	r3, #2
 8005358:	d00b      	beq.n	8005372 <HAL_ADC_PollForConversion+0x92>
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800535e:	f043 0204 	orr.w	r2, r3, #4
 8005362:	687b      	ldr	r3, [r7, #4]
 8005364:	641a      	str	r2, [r3, #64]	@ 0x40
 8005366:	687b      	ldr	r3, [r7, #4]
 8005368:	2200      	movs	r2, #0
 800536a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800536e:	2303      	movs	r3, #3
 8005370:	e03d      	b.n	80053ee <HAL_ADC_PollForConversion+0x10e>
 8005372:	687b      	ldr	r3, [r7, #4]
 8005374:	681b      	ldr	r3, [r3, #0]
 8005376:	681b      	ldr	r3, [r3, #0]
 8005378:	f003 0302 	and.w	r3, r3, #2
 800537c:	2b02      	cmp	r3, #2
 800537e:	d1d6      	bne.n	800532e <HAL_ADC_PollForConversion+0x4e>
 8005380:	687b      	ldr	r3, [r7, #4]
 8005382:	681b      	ldr	r3, [r3, #0]
 8005384:	f06f 0212 	mvn.w	r2, #18
 8005388:	601a      	str	r2, [r3, #0]
 800538a:	687b      	ldr	r3, [r7, #4]
 800538c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800538e:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	641a      	str	r2, [r3, #64]	@ 0x40
 8005396:	687b      	ldr	r3, [r7, #4]
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	689b      	ldr	r3, [r3, #8]
 800539c:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80053a0:	2b00      	cmp	r3, #0
 80053a2:	d123      	bne.n	80053ec <HAL_ADC_PollForConversion+0x10c>
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	699b      	ldr	r3, [r3, #24]
 80053a8:	2b00      	cmp	r3, #0
 80053aa:	d11f      	bne.n	80053ec <HAL_ADC_PollForConversion+0x10c>
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	681b      	ldr	r3, [r3, #0]
 80053b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80053b2:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 80053b6:	2b00      	cmp	r3, #0
 80053b8:	d006      	beq.n	80053c8 <HAL_ADC_PollForConversion+0xe8>
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	681b      	ldr	r3, [r3, #0]
 80053be:	689b      	ldr	r3, [r3, #8]
 80053c0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80053c4:	2b00      	cmp	r3, #0
 80053c6:	d111      	bne.n	80053ec <HAL_ADC_PollForConversion+0x10c>
 80053c8:	687b      	ldr	r3, [r7, #4]
 80053ca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80053cc:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80053d0:	687b      	ldr	r3, [r7, #4]
 80053d2:	641a      	str	r2, [r3, #64]	@ 0x40
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80053d8:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80053dc:	2b00      	cmp	r3, #0
 80053de:	d105      	bne.n	80053ec <HAL_ADC_PollForConversion+0x10c>
 80053e0:	687b      	ldr	r3, [r7, #4]
 80053e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80053e4:	f043 0201 	orr.w	r2, r3, #1
 80053e8:	687b      	ldr	r3, [r7, #4]
 80053ea:	641a      	str	r2, [r3, #64]	@ 0x40
 80053ec:	2300      	movs	r3, #0
 80053ee:	4618      	mov	r0, r3
 80053f0:	3710      	adds	r7, #16
 80053f2:	46bd      	mov	sp, r7
 80053f4:	bd80      	pop	{r7, pc}

080053f6 <HAL_ADC_GetValue>:
 80053f6:	b480      	push	{r7}
 80053f8:	b083      	sub	sp, #12
 80053fa:	af00      	add	r7, sp, #0
 80053fc:	6078      	str	r0, [r7, #4]
 80053fe:	687b      	ldr	r3, [r7, #4]
 8005400:	681b      	ldr	r3, [r3, #0]
 8005402:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005404:	4618      	mov	r0, r3
 8005406:	370c      	adds	r7, #12
 8005408:	46bd      	mov	sp, r7
 800540a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800540e:	4770      	bx	lr

08005410 <HAL_ADC_ConfigChannel>:
 8005410:	b480      	push	{r7}
 8005412:	b085      	sub	sp, #20
 8005414:	af00      	add	r7, sp, #0
 8005416:	6078      	str	r0, [r7, #4]
 8005418:	6039      	str	r1, [r7, #0]
 800541a:	2300      	movs	r3, #0
 800541c:	60fb      	str	r3, [r7, #12]
 800541e:	687b      	ldr	r3, [r7, #4]
 8005420:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005424:	2b01      	cmp	r3, #1
 8005426:	d101      	bne.n	800542c <HAL_ADC_ConfigChannel+0x1c>
 8005428:	2302      	movs	r3, #2
 800542a:	e136      	b.n	800569a <HAL_ADC_ConfigChannel+0x28a>
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	2201      	movs	r2, #1
 8005430:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005434:	683b      	ldr	r3, [r7, #0]
 8005436:	681b      	ldr	r3, [r3, #0]
 8005438:	2b09      	cmp	r3, #9
 800543a:	d93a      	bls.n	80054b2 <HAL_ADC_ConfigChannel+0xa2>
 800543c:	683b      	ldr	r3, [r7, #0]
 800543e:	681b      	ldr	r3, [r3, #0]
 8005440:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8005444:	d035      	beq.n	80054b2 <HAL_ADC_ConfigChannel+0xa2>
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	68d9      	ldr	r1, [r3, #12]
 800544c:	683b      	ldr	r3, [r7, #0]
 800544e:	681b      	ldr	r3, [r3, #0]
 8005450:	b29b      	uxth	r3, r3
 8005452:	461a      	mov	r2, r3
 8005454:	4613      	mov	r3, r2
 8005456:	005b      	lsls	r3, r3, #1
 8005458:	4413      	add	r3, r2
 800545a:	3b1e      	subs	r3, #30
 800545c:	2207      	movs	r2, #7
 800545e:	fa02 f303 	lsl.w	r3, r2, r3
 8005462:	43da      	mvns	r2, r3
 8005464:	687b      	ldr	r3, [r7, #4]
 8005466:	681b      	ldr	r3, [r3, #0]
 8005468:	400a      	ands	r2, r1
 800546a:	60da      	str	r2, [r3, #12]
 800546c:	683b      	ldr	r3, [r7, #0]
 800546e:	681b      	ldr	r3, [r3, #0]
 8005470:	4a8d      	ldr	r2, [pc, #564]	@ (80056a8 <HAL_ADC_ConfigChannel+0x298>)
 8005472:	4293      	cmp	r3, r2
 8005474:	d10a      	bne.n	800548c <HAL_ADC_ConfigChannel+0x7c>
 8005476:	687b      	ldr	r3, [r7, #4]
 8005478:	681b      	ldr	r3, [r3, #0]
 800547a:	68d9      	ldr	r1, [r3, #12]
 800547c:	683b      	ldr	r3, [r7, #0]
 800547e:	689b      	ldr	r3, [r3, #8]
 8005480:	061a      	lsls	r2, r3, #24
 8005482:	687b      	ldr	r3, [r7, #4]
 8005484:	681b      	ldr	r3, [r3, #0]
 8005486:	430a      	orrs	r2, r1
 8005488:	60da      	str	r2, [r3, #12]
 800548a:	e035      	b.n	80054f8 <HAL_ADC_ConfigChannel+0xe8>
 800548c:	687b      	ldr	r3, [r7, #4]
 800548e:	681b      	ldr	r3, [r3, #0]
 8005490:	68d9      	ldr	r1, [r3, #12]
 8005492:	683b      	ldr	r3, [r7, #0]
 8005494:	689a      	ldr	r2, [r3, #8]
 8005496:	683b      	ldr	r3, [r7, #0]
 8005498:	681b      	ldr	r3, [r3, #0]
 800549a:	b29b      	uxth	r3, r3
 800549c:	4618      	mov	r0, r3
 800549e:	4603      	mov	r3, r0
 80054a0:	005b      	lsls	r3, r3, #1
 80054a2:	4403      	add	r3, r0
 80054a4:	3b1e      	subs	r3, #30
 80054a6:	409a      	lsls	r2, r3
 80054a8:	687b      	ldr	r3, [r7, #4]
 80054aa:	681b      	ldr	r3, [r3, #0]
 80054ac:	430a      	orrs	r2, r1
 80054ae:	60da      	str	r2, [r3, #12]
 80054b0:	e022      	b.n	80054f8 <HAL_ADC_ConfigChannel+0xe8>
 80054b2:	687b      	ldr	r3, [r7, #4]
 80054b4:	681b      	ldr	r3, [r3, #0]
 80054b6:	6919      	ldr	r1, [r3, #16]
 80054b8:	683b      	ldr	r3, [r7, #0]
 80054ba:	681b      	ldr	r3, [r3, #0]
 80054bc:	b29b      	uxth	r3, r3
 80054be:	461a      	mov	r2, r3
 80054c0:	4613      	mov	r3, r2
 80054c2:	005b      	lsls	r3, r3, #1
 80054c4:	4413      	add	r3, r2
 80054c6:	2207      	movs	r2, #7
 80054c8:	fa02 f303 	lsl.w	r3, r2, r3
 80054cc:	43da      	mvns	r2, r3
 80054ce:	687b      	ldr	r3, [r7, #4]
 80054d0:	681b      	ldr	r3, [r3, #0]
 80054d2:	400a      	ands	r2, r1
 80054d4:	611a      	str	r2, [r3, #16]
 80054d6:	687b      	ldr	r3, [r7, #4]
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	6919      	ldr	r1, [r3, #16]
 80054dc:	683b      	ldr	r3, [r7, #0]
 80054de:	689a      	ldr	r2, [r3, #8]
 80054e0:	683b      	ldr	r3, [r7, #0]
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	b29b      	uxth	r3, r3
 80054e6:	4618      	mov	r0, r3
 80054e8:	4603      	mov	r3, r0
 80054ea:	005b      	lsls	r3, r3, #1
 80054ec:	4403      	add	r3, r0
 80054ee:	409a      	lsls	r2, r3
 80054f0:	687b      	ldr	r3, [r7, #4]
 80054f2:	681b      	ldr	r3, [r3, #0]
 80054f4:	430a      	orrs	r2, r1
 80054f6:	611a      	str	r2, [r3, #16]
 80054f8:	683b      	ldr	r3, [r7, #0]
 80054fa:	685b      	ldr	r3, [r3, #4]
 80054fc:	2b06      	cmp	r3, #6
 80054fe:	d824      	bhi.n	800554a <HAL_ADC_ConfigChannel+0x13a>
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	681b      	ldr	r3, [r3, #0]
 8005504:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8005506:	683b      	ldr	r3, [r7, #0]
 8005508:	685a      	ldr	r2, [r3, #4]
 800550a:	4613      	mov	r3, r2
 800550c:	009b      	lsls	r3, r3, #2
 800550e:	4413      	add	r3, r2
 8005510:	3b05      	subs	r3, #5
 8005512:	221f      	movs	r2, #31
 8005514:	fa02 f303 	lsl.w	r3, r2, r3
 8005518:	43da      	mvns	r2, r3
 800551a:	687b      	ldr	r3, [r7, #4]
 800551c:	681b      	ldr	r3, [r3, #0]
 800551e:	400a      	ands	r2, r1
 8005520:	635a      	str	r2, [r3, #52]	@ 0x34
 8005522:	687b      	ldr	r3, [r7, #4]
 8005524:	681b      	ldr	r3, [r3, #0]
 8005526:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8005528:	683b      	ldr	r3, [r7, #0]
 800552a:	681b      	ldr	r3, [r3, #0]
 800552c:	b29b      	uxth	r3, r3
 800552e:	4618      	mov	r0, r3
 8005530:	683b      	ldr	r3, [r7, #0]
 8005532:	685a      	ldr	r2, [r3, #4]
 8005534:	4613      	mov	r3, r2
 8005536:	009b      	lsls	r3, r3, #2
 8005538:	4413      	add	r3, r2
 800553a:	3b05      	subs	r3, #5
 800553c:	fa00 f203 	lsl.w	r2, r0, r3
 8005540:	687b      	ldr	r3, [r7, #4]
 8005542:	681b      	ldr	r3, [r3, #0]
 8005544:	430a      	orrs	r2, r1
 8005546:	635a      	str	r2, [r3, #52]	@ 0x34
 8005548:	e04c      	b.n	80055e4 <HAL_ADC_ConfigChannel+0x1d4>
 800554a:	683b      	ldr	r3, [r7, #0]
 800554c:	685b      	ldr	r3, [r3, #4]
 800554e:	2b0c      	cmp	r3, #12
 8005550:	d824      	bhi.n	800559c <HAL_ADC_ConfigChannel+0x18c>
 8005552:	687b      	ldr	r3, [r7, #4]
 8005554:	681b      	ldr	r3, [r3, #0]
 8005556:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8005558:	683b      	ldr	r3, [r7, #0]
 800555a:	685a      	ldr	r2, [r3, #4]
 800555c:	4613      	mov	r3, r2
 800555e:	009b      	lsls	r3, r3, #2
 8005560:	4413      	add	r3, r2
 8005562:	3b23      	subs	r3, #35	@ 0x23
 8005564:	221f      	movs	r2, #31
 8005566:	fa02 f303 	lsl.w	r3, r2, r3
 800556a:	43da      	mvns	r2, r3
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	681b      	ldr	r3, [r3, #0]
 8005570:	400a      	ands	r2, r1
 8005572:	631a      	str	r2, [r3, #48]	@ 0x30
 8005574:	687b      	ldr	r3, [r7, #4]
 8005576:	681b      	ldr	r3, [r3, #0]
 8005578:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800557a:	683b      	ldr	r3, [r7, #0]
 800557c:	681b      	ldr	r3, [r3, #0]
 800557e:	b29b      	uxth	r3, r3
 8005580:	4618      	mov	r0, r3
 8005582:	683b      	ldr	r3, [r7, #0]
 8005584:	685a      	ldr	r2, [r3, #4]
 8005586:	4613      	mov	r3, r2
 8005588:	009b      	lsls	r3, r3, #2
 800558a:	4413      	add	r3, r2
 800558c:	3b23      	subs	r3, #35	@ 0x23
 800558e:	fa00 f203 	lsl.w	r2, r0, r3
 8005592:	687b      	ldr	r3, [r7, #4]
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	430a      	orrs	r2, r1
 8005598:	631a      	str	r2, [r3, #48]	@ 0x30
 800559a:	e023      	b.n	80055e4 <HAL_ADC_ConfigChannel+0x1d4>
 800559c:	687b      	ldr	r3, [r7, #4]
 800559e:	681b      	ldr	r3, [r3, #0]
 80055a0:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80055a2:	683b      	ldr	r3, [r7, #0]
 80055a4:	685a      	ldr	r2, [r3, #4]
 80055a6:	4613      	mov	r3, r2
 80055a8:	009b      	lsls	r3, r3, #2
 80055aa:	4413      	add	r3, r2
 80055ac:	3b41      	subs	r3, #65	@ 0x41
 80055ae:	221f      	movs	r2, #31
 80055b0:	fa02 f303 	lsl.w	r3, r2, r3
 80055b4:	43da      	mvns	r2, r3
 80055b6:	687b      	ldr	r3, [r7, #4]
 80055b8:	681b      	ldr	r3, [r3, #0]
 80055ba:	400a      	ands	r2, r1
 80055bc:	62da      	str	r2, [r3, #44]	@ 0x2c
 80055be:	687b      	ldr	r3, [r7, #4]
 80055c0:	681b      	ldr	r3, [r3, #0]
 80055c2:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80055c4:	683b      	ldr	r3, [r7, #0]
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	b29b      	uxth	r3, r3
 80055ca:	4618      	mov	r0, r3
 80055cc:	683b      	ldr	r3, [r7, #0]
 80055ce:	685a      	ldr	r2, [r3, #4]
 80055d0:	4613      	mov	r3, r2
 80055d2:	009b      	lsls	r3, r3, #2
 80055d4:	4413      	add	r3, r2
 80055d6:	3b41      	subs	r3, #65	@ 0x41
 80055d8:	fa00 f203 	lsl.w	r2, r0, r3
 80055dc:	687b      	ldr	r3, [r7, #4]
 80055de:	681b      	ldr	r3, [r3, #0]
 80055e0:	430a      	orrs	r2, r1
 80055e2:	62da      	str	r2, [r3, #44]	@ 0x2c
 80055e4:	687b      	ldr	r3, [r7, #4]
 80055e6:	681b      	ldr	r3, [r3, #0]
 80055e8:	4a30      	ldr	r2, [pc, #192]	@ (80056ac <HAL_ADC_ConfigChannel+0x29c>)
 80055ea:	4293      	cmp	r3, r2
 80055ec:	d10a      	bne.n	8005604 <HAL_ADC_ConfigChannel+0x1f4>
 80055ee:	683b      	ldr	r3, [r7, #0]
 80055f0:	681b      	ldr	r3, [r3, #0]
 80055f2:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80055f6:	d105      	bne.n	8005604 <HAL_ADC_ConfigChannel+0x1f4>
 80055f8:	4b2d      	ldr	r3, [pc, #180]	@ (80056b0 <HAL_ADC_ConfigChannel+0x2a0>)
 80055fa:	685b      	ldr	r3, [r3, #4]
 80055fc:	4a2c      	ldr	r2, [pc, #176]	@ (80056b0 <HAL_ADC_ConfigChannel+0x2a0>)
 80055fe:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8005602:	6053      	str	r3, [r2, #4]
 8005604:	687b      	ldr	r3, [r7, #4]
 8005606:	681b      	ldr	r3, [r3, #0]
 8005608:	4a28      	ldr	r2, [pc, #160]	@ (80056ac <HAL_ADC_ConfigChannel+0x29c>)
 800560a:	4293      	cmp	r3, r2
 800560c:	d10f      	bne.n	800562e <HAL_ADC_ConfigChannel+0x21e>
 800560e:	683b      	ldr	r3, [r7, #0]
 8005610:	681b      	ldr	r3, [r3, #0]
 8005612:	2b12      	cmp	r3, #18
 8005614:	d10b      	bne.n	800562e <HAL_ADC_ConfigChannel+0x21e>
 8005616:	4b26      	ldr	r3, [pc, #152]	@ (80056b0 <HAL_ADC_ConfigChannel+0x2a0>)
 8005618:	685b      	ldr	r3, [r3, #4]
 800561a:	4a25      	ldr	r2, [pc, #148]	@ (80056b0 <HAL_ADC_ConfigChannel+0x2a0>)
 800561c:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8005620:	6053      	str	r3, [r2, #4]
 8005622:	4b23      	ldr	r3, [pc, #140]	@ (80056b0 <HAL_ADC_ConfigChannel+0x2a0>)
 8005624:	685b      	ldr	r3, [r3, #4]
 8005626:	4a22      	ldr	r2, [pc, #136]	@ (80056b0 <HAL_ADC_ConfigChannel+0x2a0>)
 8005628:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800562c:	6053      	str	r3, [r2, #4]
 800562e:	687b      	ldr	r3, [r7, #4]
 8005630:	681b      	ldr	r3, [r3, #0]
 8005632:	4a1e      	ldr	r2, [pc, #120]	@ (80056ac <HAL_ADC_ConfigChannel+0x29c>)
 8005634:	4293      	cmp	r3, r2
 8005636:	d12b      	bne.n	8005690 <HAL_ADC_ConfigChannel+0x280>
 8005638:	683b      	ldr	r3, [r7, #0]
 800563a:	681b      	ldr	r3, [r3, #0]
 800563c:	4a1a      	ldr	r2, [pc, #104]	@ (80056a8 <HAL_ADC_ConfigChannel+0x298>)
 800563e:	4293      	cmp	r3, r2
 8005640:	d003      	beq.n	800564a <HAL_ADC_ConfigChannel+0x23a>
 8005642:	683b      	ldr	r3, [r7, #0]
 8005644:	681b      	ldr	r3, [r3, #0]
 8005646:	2b11      	cmp	r3, #17
 8005648:	d122      	bne.n	8005690 <HAL_ADC_ConfigChannel+0x280>
 800564a:	4b19      	ldr	r3, [pc, #100]	@ (80056b0 <HAL_ADC_ConfigChannel+0x2a0>)
 800564c:	685b      	ldr	r3, [r3, #4]
 800564e:	4a18      	ldr	r2, [pc, #96]	@ (80056b0 <HAL_ADC_ConfigChannel+0x2a0>)
 8005650:	f423 0380 	bic.w	r3, r3, #4194304	@ 0x400000
 8005654:	6053      	str	r3, [r2, #4]
 8005656:	4b16      	ldr	r3, [pc, #88]	@ (80056b0 <HAL_ADC_ConfigChannel+0x2a0>)
 8005658:	685b      	ldr	r3, [r3, #4]
 800565a:	4a15      	ldr	r2, [pc, #84]	@ (80056b0 <HAL_ADC_ConfigChannel+0x2a0>)
 800565c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8005660:	6053      	str	r3, [r2, #4]
 8005662:	683b      	ldr	r3, [r7, #0]
 8005664:	681b      	ldr	r3, [r3, #0]
 8005666:	4a10      	ldr	r2, [pc, #64]	@ (80056a8 <HAL_ADC_ConfigChannel+0x298>)
 8005668:	4293      	cmp	r3, r2
 800566a:	d111      	bne.n	8005690 <HAL_ADC_ConfigChannel+0x280>
 800566c:	4b11      	ldr	r3, [pc, #68]	@ (80056b4 <HAL_ADC_ConfigChannel+0x2a4>)
 800566e:	681b      	ldr	r3, [r3, #0]
 8005670:	4a11      	ldr	r2, [pc, #68]	@ (80056b8 <HAL_ADC_ConfigChannel+0x2a8>)
 8005672:	fba2 2303 	umull	r2, r3, r2, r3
 8005676:	0c9a      	lsrs	r2, r3, #18
 8005678:	4613      	mov	r3, r2
 800567a:	009b      	lsls	r3, r3, #2
 800567c:	4413      	add	r3, r2
 800567e:	005b      	lsls	r3, r3, #1
 8005680:	60fb      	str	r3, [r7, #12]
 8005682:	e002      	b.n	800568a <HAL_ADC_ConfigChannel+0x27a>
 8005684:	68fb      	ldr	r3, [r7, #12]
 8005686:	3b01      	subs	r3, #1
 8005688:	60fb      	str	r3, [r7, #12]
 800568a:	68fb      	ldr	r3, [r7, #12]
 800568c:	2b00      	cmp	r3, #0
 800568e:	d1f9      	bne.n	8005684 <HAL_ADC_ConfigChannel+0x274>
 8005690:	687b      	ldr	r3, [r7, #4]
 8005692:	2200      	movs	r2, #0
 8005694:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005698:	2300      	movs	r3, #0
 800569a:	4618      	mov	r0, r3
 800569c:	3714      	adds	r7, #20
 800569e:	46bd      	mov	sp, r7
 80056a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056a4:	4770      	bx	lr
 80056a6:	bf00      	nop
 80056a8:	10000012 	.word	0x10000012
 80056ac:	40012000 	.word	0x40012000
 80056b0:	40012300 	.word	0x40012300
 80056b4:	2000009c 	.word	0x2000009c
 80056b8:	431bde83 	.word	0x431bde83

080056bc <ADC_Init>:
 80056bc:	b480      	push	{r7}
 80056be:	b083      	sub	sp, #12
 80056c0:	af00      	add	r7, sp, #0
 80056c2:	6078      	str	r0, [r7, #4]
 80056c4:	4b78      	ldr	r3, [pc, #480]	@ (80058a8 <ADC_Init+0x1ec>)
 80056c6:	685b      	ldr	r3, [r3, #4]
 80056c8:	4a77      	ldr	r2, [pc, #476]	@ (80058a8 <ADC_Init+0x1ec>)
 80056ca:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 80056ce:	6053      	str	r3, [r2, #4]
 80056d0:	4b75      	ldr	r3, [pc, #468]	@ (80058a8 <ADC_Init+0x1ec>)
 80056d2:	685a      	ldr	r2, [r3, #4]
 80056d4:	687b      	ldr	r3, [r7, #4]
 80056d6:	685b      	ldr	r3, [r3, #4]
 80056d8:	4973      	ldr	r1, [pc, #460]	@ (80058a8 <ADC_Init+0x1ec>)
 80056da:	4313      	orrs	r3, r2
 80056dc:	604b      	str	r3, [r1, #4]
 80056de:	687b      	ldr	r3, [r7, #4]
 80056e0:	681b      	ldr	r3, [r3, #0]
 80056e2:	685a      	ldr	r2, [r3, #4]
 80056e4:	687b      	ldr	r3, [r7, #4]
 80056e6:	681b      	ldr	r3, [r3, #0]
 80056e8:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80056ec:	605a      	str	r2, [r3, #4]
 80056ee:	687b      	ldr	r3, [r7, #4]
 80056f0:	681b      	ldr	r3, [r3, #0]
 80056f2:	6859      	ldr	r1, [r3, #4]
 80056f4:	687b      	ldr	r3, [r7, #4]
 80056f6:	691b      	ldr	r3, [r3, #16]
 80056f8:	021a      	lsls	r2, r3, #8
 80056fa:	687b      	ldr	r3, [r7, #4]
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	430a      	orrs	r2, r1
 8005700:	605a      	str	r2, [r3, #4]
 8005702:	687b      	ldr	r3, [r7, #4]
 8005704:	681b      	ldr	r3, [r3, #0]
 8005706:	685a      	ldr	r2, [r3, #4]
 8005708:	687b      	ldr	r3, [r7, #4]
 800570a:	681b      	ldr	r3, [r3, #0]
 800570c:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8005710:	605a      	str	r2, [r3, #4]
 8005712:	687b      	ldr	r3, [r7, #4]
 8005714:	681b      	ldr	r3, [r3, #0]
 8005716:	6859      	ldr	r1, [r3, #4]
 8005718:	687b      	ldr	r3, [r7, #4]
 800571a:	689a      	ldr	r2, [r3, #8]
 800571c:	687b      	ldr	r3, [r7, #4]
 800571e:	681b      	ldr	r3, [r3, #0]
 8005720:	430a      	orrs	r2, r1
 8005722:	605a      	str	r2, [r3, #4]
 8005724:	687b      	ldr	r3, [r7, #4]
 8005726:	681b      	ldr	r3, [r3, #0]
 8005728:	689a      	ldr	r2, [r3, #8]
 800572a:	687b      	ldr	r3, [r7, #4]
 800572c:	681b      	ldr	r3, [r3, #0]
 800572e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005732:	609a      	str	r2, [r3, #8]
 8005734:	687b      	ldr	r3, [r7, #4]
 8005736:	681b      	ldr	r3, [r3, #0]
 8005738:	6899      	ldr	r1, [r3, #8]
 800573a:	687b      	ldr	r3, [r7, #4]
 800573c:	68da      	ldr	r2, [r3, #12]
 800573e:	687b      	ldr	r3, [r7, #4]
 8005740:	681b      	ldr	r3, [r3, #0]
 8005742:	430a      	orrs	r2, r1
 8005744:	609a      	str	r2, [r3, #8]
 8005746:	687b      	ldr	r3, [r7, #4]
 8005748:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800574a:	4a58      	ldr	r2, [pc, #352]	@ (80058ac <ADC_Init+0x1f0>)
 800574c:	4293      	cmp	r3, r2
 800574e:	d022      	beq.n	8005796 <ADC_Init+0xda>
 8005750:	687b      	ldr	r3, [r7, #4]
 8005752:	681b      	ldr	r3, [r3, #0]
 8005754:	689a      	ldr	r2, [r3, #8]
 8005756:	687b      	ldr	r3, [r7, #4]
 8005758:	681b      	ldr	r3, [r3, #0]
 800575a:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800575e:	609a      	str	r2, [r3, #8]
 8005760:	687b      	ldr	r3, [r7, #4]
 8005762:	681b      	ldr	r3, [r3, #0]
 8005764:	6899      	ldr	r1, [r3, #8]
 8005766:	687b      	ldr	r3, [r7, #4]
 8005768:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	681b      	ldr	r3, [r3, #0]
 800576e:	430a      	orrs	r2, r1
 8005770:	609a      	str	r2, [r3, #8]
 8005772:	687b      	ldr	r3, [r7, #4]
 8005774:	681b      	ldr	r3, [r3, #0]
 8005776:	689a      	ldr	r2, [r3, #8]
 8005778:	687b      	ldr	r3, [r7, #4]
 800577a:	681b      	ldr	r3, [r3, #0]
 800577c:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8005780:	609a      	str	r2, [r3, #8]
 8005782:	687b      	ldr	r3, [r7, #4]
 8005784:	681b      	ldr	r3, [r3, #0]
 8005786:	6899      	ldr	r1, [r3, #8]
 8005788:	687b      	ldr	r3, [r7, #4]
 800578a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800578c:	687b      	ldr	r3, [r7, #4]
 800578e:	681b      	ldr	r3, [r3, #0]
 8005790:	430a      	orrs	r2, r1
 8005792:	609a      	str	r2, [r3, #8]
 8005794:	e00f      	b.n	80057b6 <ADC_Init+0xfa>
 8005796:	687b      	ldr	r3, [r7, #4]
 8005798:	681b      	ldr	r3, [r3, #0]
 800579a:	689a      	ldr	r2, [r3, #8]
 800579c:	687b      	ldr	r3, [r7, #4]
 800579e:	681b      	ldr	r3, [r3, #0]
 80057a0:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80057a4:	609a      	str	r2, [r3, #8]
 80057a6:	687b      	ldr	r3, [r7, #4]
 80057a8:	681b      	ldr	r3, [r3, #0]
 80057aa:	689a      	ldr	r2, [r3, #8]
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	681b      	ldr	r3, [r3, #0]
 80057b0:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80057b4:	609a      	str	r2, [r3, #8]
 80057b6:	687b      	ldr	r3, [r7, #4]
 80057b8:	681b      	ldr	r3, [r3, #0]
 80057ba:	689a      	ldr	r2, [r3, #8]
 80057bc:	687b      	ldr	r3, [r7, #4]
 80057be:	681b      	ldr	r3, [r3, #0]
 80057c0:	f022 0202 	bic.w	r2, r2, #2
 80057c4:	609a      	str	r2, [r3, #8]
 80057c6:	687b      	ldr	r3, [r7, #4]
 80057c8:	681b      	ldr	r3, [r3, #0]
 80057ca:	6899      	ldr	r1, [r3, #8]
 80057cc:	687b      	ldr	r3, [r7, #4]
 80057ce:	699b      	ldr	r3, [r3, #24]
 80057d0:	005a      	lsls	r2, r3, #1
 80057d2:	687b      	ldr	r3, [r7, #4]
 80057d4:	681b      	ldr	r3, [r3, #0]
 80057d6:	430a      	orrs	r2, r1
 80057d8:	609a      	str	r2, [r3, #8]
 80057da:	687b      	ldr	r3, [r7, #4]
 80057dc:	f893 3020 	ldrb.w	r3, [r3, #32]
 80057e0:	2b00      	cmp	r3, #0
 80057e2:	d01b      	beq.n	800581c <ADC_Init+0x160>
 80057e4:	687b      	ldr	r3, [r7, #4]
 80057e6:	681b      	ldr	r3, [r3, #0]
 80057e8:	685a      	ldr	r2, [r3, #4]
 80057ea:	687b      	ldr	r3, [r7, #4]
 80057ec:	681b      	ldr	r3, [r3, #0]
 80057ee:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80057f2:	605a      	str	r2, [r3, #4]
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	681b      	ldr	r3, [r3, #0]
 80057f8:	685a      	ldr	r2, [r3, #4]
 80057fa:	687b      	ldr	r3, [r7, #4]
 80057fc:	681b      	ldr	r3, [r3, #0]
 80057fe:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8005802:	605a      	str	r2, [r3, #4]
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	681b      	ldr	r3, [r3, #0]
 8005808:	6859      	ldr	r1, [r3, #4]
 800580a:	687b      	ldr	r3, [r7, #4]
 800580c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800580e:	3b01      	subs	r3, #1
 8005810:	035a      	lsls	r2, r3, #13
 8005812:	687b      	ldr	r3, [r7, #4]
 8005814:	681b      	ldr	r3, [r3, #0]
 8005816:	430a      	orrs	r2, r1
 8005818:	605a      	str	r2, [r3, #4]
 800581a:	e007      	b.n	800582c <ADC_Init+0x170>
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	681b      	ldr	r3, [r3, #0]
 8005820:	685a      	ldr	r2, [r3, #4]
 8005822:	687b      	ldr	r3, [r7, #4]
 8005824:	681b      	ldr	r3, [r3, #0]
 8005826:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800582a:	605a      	str	r2, [r3, #4]
 800582c:	687b      	ldr	r3, [r7, #4]
 800582e:	681b      	ldr	r3, [r3, #0]
 8005830:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005832:	687b      	ldr	r3, [r7, #4]
 8005834:	681b      	ldr	r3, [r3, #0]
 8005836:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800583a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	681b      	ldr	r3, [r3, #0]
 8005840:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8005842:	687b      	ldr	r3, [r7, #4]
 8005844:	69db      	ldr	r3, [r3, #28]
 8005846:	3b01      	subs	r3, #1
 8005848:	051a      	lsls	r2, r3, #20
 800584a:	687b      	ldr	r3, [r7, #4]
 800584c:	681b      	ldr	r3, [r3, #0]
 800584e:	430a      	orrs	r2, r1
 8005850:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	681b      	ldr	r3, [r3, #0]
 8005856:	689a      	ldr	r2, [r3, #8]
 8005858:	687b      	ldr	r3, [r7, #4]
 800585a:	681b      	ldr	r3, [r3, #0]
 800585c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8005860:	609a      	str	r2, [r3, #8]
 8005862:	687b      	ldr	r3, [r7, #4]
 8005864:	681b      	ldr	r3, [r3, #0]
 8005866:	6899      	ldr	r1, [r3, #8]
 8005868:	687b      	ldr	r3, [r7, #4]
 800586a:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 800586e:	025a      	lsls	r2, r3, #9
 8005870:	687b      	ldr	r3, [r7, #4]
 8005872:	681b      	ldr	r3, [r3, #0]
 8005874:	430a      	orrs	r2, r1
 8005876:	609a      	str	r2, [r3, #8]
 8005878:	687b      	ldr	r3, [r7, #4]
 800587a:	681b      	ldr	r3, [r3, #0]
 800587c:	689a      	ldr	r2, [r3, #8]
 800587e:	687b      	ldr	r3, [r7, #4]
 8005880:	681b      	ldr	r3, [r3, #0]
 8005882:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005886:	609a      	str	r2, [r3, #8]
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	681b      	ldr	r3, [r3, #0]
 800588c:	6899      	ldr	r1, [r3, #8]
 800588e:	687b      	ldr	r3, [r7, #4]
 8005890:	695b      	ldr	r3, [r3, #20]
 8005892:	029a      	lsls	r2, r3, #10
 8005894:	687b      	ldr	r3, [r7, #4]
 8005896:	681b      	ldr	r3, [r3, #0]
 8005898:	430a      	orrs	r2, r1
 800589a:	609a      	str	r2, [r3, #8]
 800589c:	bf00      	nop
 800589e:	370c      	adds	r7, #12
 80058a0:	46bd      	mov	sp, r7
 80058a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058a6:	4770      	bx	lr
 80058a8:	40012300 	.word	0x40012300
 80058ac:	0f000001 	.word	0x0f000001

080058b0 <HAL_CAN_Init>:
 80058b0:	b580      	push	{r7, lr}
 80058b2:	b084      	sub	sp, #16
 80058b4:	af00      	add	r7, sp, #0
 80058b6:	6078      	str	r0, [r7, #4]
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	2b00      	cmp	r3, #0
 80058bc:	d101      	bne.n	80058c2 <HAL_CAN_Init+0x12>
 80058be:	2301      	movs	r3, #1
 80058c0:	e0ed      	b.n	8005a9e <HAL_CAN_Init+0x1ee>
 80058c2:	687b      	ldr	r3, [r7, #4]
 80058c4:	f893 3020 	ldrb.w	r3, [r3, #32]
 80058c8:	b2db      	uxtb	r3, r3
 80058ca:	2b00      	cmp	r3, #0
 80058cc:	d102      	bne.n	80058d4 <HAL_CAN_Init+0x24>
 80058ce:	6878      	ldr	r0, [r7, #4]
 80058d0:	f7fd fd92 	bl	80033f8 <HAL_CAN_MspInit>
 80058d4:	687b      	ldr	r3, [r7, #4]
 80058d6:	681b      	ldr	r3, [r3, #0]
 80058d8:	681a      	ldr	r2, [r3, #0]
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	681b      	ldr	r3, [r3, #0]
 80058de:	f042 0201 	orr.w	r2, r2, #1
 80058e2:	601a      	str	r2, [r3, #0]
 80058e4:	f7ff fbba 	bl	800505c <HAL_GetTick>
 80058e8:	60f8      	str	r0, [r7, #12]
 80058ea:	e012      	b.n	8005912 <HAL_CAN_Init+0x62>
 80058ec:	f7ff fbb6 	bl	800505c <HAL_GetTick>
 80058f0:	4602      	mov	r2, r0
 80058f2:	68fb      	ldr	r3, [r7, #12]
 80058f4:	1ad3      	subs	r3, r2, r3
 80058f6:	2b0a      	cmp	r3, #10
 80058f8:	d90b      	bls.n	8005912 <HAL_CAN_Init+0x62>
 80058fa:	687b      	ldr	r3, [r7, #4]
 80058fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80058fe:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8005902:	687b      	ldr	r3, [r7, #4]
 8005904:	625a      	str	r2, [r3, #36]	@ 0x24
 8005906:	687b      	ldr	r3, [r7, #4]
 8005908:	2205      	movs	r2, #5
 800590a:	f883 2020 	strb.w	r2, [r3, #32]
 800590e:	2301      	movs	r3, #1
 8005910:	e0c5      	b.n	8005a9e <HAL_CAN_Init+0x1ee>
 8005912:	687b      	ldr	r3, [r7, #4]
 8005914:	681b      	ldr	r3, [r3, #0]
 8005916:	685b      	ldr	r3, [r3, #4]
 8005918:	f003 0301 	and.w	r3, r3, #1
 800591c:	2b00      	cmp	r3, #0
 800591e:	d0e5      	beq.n	80058ec <HAL_CAN_Init+0x3c>
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	681b      	ldr	r3, [r3, #0]
 8005924:	681a      	ldr	r2, [r3, #0]
 8005926:	687b      	ldr	r3, [r7, #4]
 8005928:	681b      	ldr	r3, [r3, #0]
 800592a:	f022 0202 	bic.w	r2, r2, #2
 800592e:	601a      	str	r2, [r3, #0]
 8005930:	f7ff fb94 	bl	800505c <HAL_GetTick>
 8005934:	60f8      	str	r0, [r7, #12]
 8005936:	e012      	b.n	800595e <HAL_CAN_Init+0xae>
 8005938:	f7ff fb90 	bl	800505c <HAL_GetTick>
 800593c:	4602      	mov	r2, r0
 800593e:	68fb      	ldr	r3, [r7, #12]
 8005940:	1ad3      	subs	r3, r2, r3
 8005942:	2b0a      	cmp	r3, #10
 8005944:	d90b      	bls.n	800595e <HAL_CAN_Init+0xae>
 8005946:	687b      	ldr	r3, [r7, #4]
 8005948:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800594a:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800594e:	687b      	ldr	r3, [r7, #4]
 8005950:	625a      	str	r2, [r3, #36]	@ 0x24
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	2205      	movs	r2, #5
 8005956:	f883 2020 	strb.w	r2, [r3, #32]
 800595a:	2301      	movs	r3, #1
 800595c:	e09f      	b.n	8005a9e <HAL_CAN_Init+0x1ee>
 800595e:	687b      	ldr	r3, [r7, #4]
 8005960:	681b      	ldr	r3, [r3, #0]
 8005962:	685b      	ldr	r3, [r3, #4]
 8005964:	f003 0302 	and.w	r3, r3, #2
 8005968:	2b00      	cmp	r3, #0
 800596a:	d1e5      	bne.n	8005938 <HAL_CAN_Init+0x88>
 800596c:	687b      	ldr	r3, [r7, #4]
 800596e:	7e1b      	ldrb	r3, [r3, #24]
 8005970:	2b01      	cmp	r3, #1
 8005972:	d108      	bne.n	8005986 <HAL_CAN_Init+0xd6>
 8005974:	687b      	ldr	r3, [r7, #4]
 8005976:	681b      	ldr	r3, [r3, #0]
 8005978:	681a      	ldr	r2, [r3, #0]
 800597a:	687b      	ldr	r3, [r7, #4]
 800597c:	681b      	ldr	r3, [r3, #0]
 800597e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8005982:	601a      	str	r2, [r3, #0]
 8005984:	e007      	b.n	8005996 <HAL_CAN_Init+0xe6>
 8005986:	687b      	ldr	r3, [r7, #4]
 8005988:	681b      	ldr	r3, [r3, #0]
 800598a:	681a      	ldr	r2, [r3, #0]
 800598c:	687b      	ldr	r3, [r7, #4]
 800598e:	681b      	ldr	r3, [r3, #0]
 8005990:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8005994:	601a      	str	r2, [r3, #0]
 8005996:	687b      	ldr	r3, [r7, #4]
 8005998:	7e5b      	ldrb	r3, [r3, #25]
 800599a:	2b01      	cmp	r3, #1
 800599c:	d108      	bne.n	80059b0 <HAL_CAN_Init+0x100>
 800599e:	687b      	ldr	r3, [r7, #4]
 80059a0:	681b      	ldr	r3, [r3, #0]
 80059a2:	681a      	ldr	r2, [r3, #0]
 80059a4:	687b      	ldr	r3, [r7, #4]
 80059a6:	681b      	ldr	r3, [r3, #0]
 80059a8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80059ac:	601a      	str	r2, [r3, #0]
 80059ae:	e007      	b.n	80059c0 <HAL_CAN_Init+0x110>
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	681b      	ldr	r3, [r3, #0]
 80059b4:	681a      	ldr	r2, [r3, #0]
 80059b6:	687b      	ldr	r3, [r7, #4]
 80059b8:	681b      	ldr	r3, [r3, #0]
 80059ba:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80059be:	601a      	str	r2, [r3, #0]
 80059c0:	687b      	ldr	r3, [r7, #4]
 80059c2:	7e9b      	ldrb	r3, [r3, #26]
 80059c4:	2b01      	cmp	r3, #1
 80059c6:	d108      	bne.n	80059da <HAL_CAN_Init+0x12a>
 80059c8:	687b      	ldr	r3, [r7, #4]
 80059ca:	681b      	ldr	r3, [r3, #0]
 80059cc:	681a      	ldr	r2, [r3, #0]
 80059ce:	687b      	ldr	r3, [r7, #4]
 80059d0:	681b      	ldr	r3, [r3, #0]
 80059d2:	f042 0220 	orr.w	r2, r2, #32
 80059d6:	601a      	str	r2, [r3, #0]
 80059d8:	e007      	b.n	80059ea <HAL_CAN_Init+0x13a>
 80059da:	687b      	ldr	r3, [r7, #4]
 80059dc:	681b      	ldr	r3, [r3, #0]
 80059de:	681a      	ldr	r2, [r3, #0]
 80059e0:	687b      	ldr	r3, [r7, #4]
 80059e2:	681b      	ldr	r3, [r3, #0]
 80059e4:	f022 0220 	bic.w	r2, r2, #32
 80059e8:	601a      	str	r2, [r3, #0]
 80059ea:	687b      	ldr	r3, [r7, #4]
 80059ec:	7edb      	ldrb	r3, [r3, #27]
 80059ee:	2b01      	cmp	r3, #1
 80059f0:	d108      	bne.n	8005a04 <HAL_CAN_Init+0x154>
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	681a      	ldr	r2, [r3, #0]
 80059f8:	687b      	ldr	r3, [r7, #4]
 80059fa:	681b      	ldr	r3, [r3, #0]
 80059fc:	f022 0210 	bic.w	r2, r2, #16
 8005a00:	601a      	str	r2, [r3, #0]
 8005a02:	e007      	b.n	8005a14 <HAL_CAN_Init+0x164>
 8005a04:	687b      	ldr	r3, [r7, #4]
 8005a06:	681b      	ldr	r3, [r3, #0]
 8005a08:	681a      	ldr	r2, [r3, #0]
 8005a0a:	687b      	ldr	r3, [r7, #4]
 8005a0c:	681b      	ldr	r3, [r3, #0]
 8005a0e:	f042 0210 	orr.w	r2, r2, #16
 8005a12:	601a      	str	r2, [r3, #0]
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	7f1b      	ldrb	r3, [r3, #28]
 8005a18:	2b01      	cmp	r3, #1
 8005a1a:	d108      	bne.n	8005a2e <HAL_CAN_Init+0x17e>
 8005a1c:	687b      	ldr	r3, [r7, #4]
 8005a1e:	681b      	ldr	r3, [r3, #0]
 8005a20:	681a      	ldr	r2, [r3, #0]
 8005a22:	687b      	ldr	r3, [r7, #4]
 8005a24:	681b      	ldr	r3, [r3, #0]
 8005a26:	f042 0208 	orr.w	r2, r2, #8
 8005a2a:	601a      	str	r2, [r3, #0]
 8005a2c:	e007      	b.n	8005a3e <HAL_CAN_Init+0x18e>
 8005a2e:	687b      	ldr	r3, [r7, #4]
 8005a30:	681b      	ldr	r3, [r3, #0]
 8005a32:	681a      	ldr	r2, [r3, #0]
 8005a34:	687b      	ldr	r3, [r7, #4]
 8005a36:	681b      	ldr	r3, [r3, #0]
 8005a38:	f022 0208 	bic.w	r2, r2, #8
 8005a3c:	601a      	str	r2, [r3, #0]
 8005a3e:	687b      	ldr	r3, [r7, #4]
 8005a40:	7f5b      	ldrb	r3, [r3, #29]
 8005a42:	2b01      	cmp	r3, #1
 8005a44:	d108      	bne.n	8005a58 <HAL_CAN_Init+0x1a8>
 8005a46:	687b      	ldr	r3, [r7, #4]
 8005a48:	681b      	ldr	r3, [r3, #0]
 8005a4a:	681a      	ldr	r2, [r3, #0]
 8005a4c:	687b      	ldr	r3, [r7, #4]
 8005a4e:	681b      	ldr	r3, [r3, #0]
 8005a50:	f042 0204 	orr.w	r2, r2, #4
 8005a54:	601a      	str	r2, [r3, #0]
 8005a56:	e007      	b.n	8005a68 <HAL_CAN_Init+0x1b8>
 8005a58:	687b      	ldr	r3, [r7, #4]
 8005a5a:	681b      	ldr	r3, [r3, #0]
 8005a5c:	681a      	ldr	r2, [r3, #0]
 8005a5e:	687b      	ldr	r3, [r7, #4]
 8005a60:	681b      	ldr	r3, [r3, #0]
 8005a62:	f022 0204 	bic.w	r2, r2, #4
 8005a66:	601a      	str	r2, [r3, #0]
 8005a68:	687b      	ldr	r3, [r7, #4]
 8005a6a:	689a      	ldr	r2, [r3, #8]
 8005a6c:	687b      	ldr	r3, [r7, #4]
 8005a6e:	68db      	ldr	r3, [r3, #12]
 8005a70:	431a      	orrs	r2, r3
 8005a72:	687b      	ldr	r3, [r7, #4]
 8005a74:	691b      	ldr	r3, [r3, #16]
 8005a76:	431a      	orrs	r2, r3
 8005a78:	687b      	ldr	r3, [r7, #4]
 8005a7a:	695b      	ldr	r3, [r3, #20]
 8005a7c:	ea42 0103 	orr.w	r1, r2, r3
 8005a80:	687b      	ldr	r3, [r7, #4]
 8005a82:	685b      	ldr	r3, [r3, #4]
 8005a84:	1e5a      	subs	r2, r3, #1
 8005a86:	687b      	ldr	r3, [r7, #4]
 8005a88:	681b      	ldr	r3, [r3, #0]
 8005a8a:	430a      	orrs	r2, r1
 8005a8c:	61da      	str	r2, [r3, #28]
 8005a8e:	687b      	ldr	r3, [r7, #4]
 8005a90:	2200      	movs	r2, #0
 8005a92:	625a      	str	r2, [r3, #36]	@ 0x24
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	2201      	movs	r2, #1
 8005a98:	f883 2020 	strb.w	r2, [r3, #32]
 8005a9c:	2300      	movs	r3, #0
 8005a9e:	4618      	mov	r0, r3
 8005aa0:	3710      	adds	r7, #16
 8005aa2:	46bd      	mov	sp, r7
 8005aa4:	bd80      	pop	{r7, pc}
	...

08005aa8 <HAL_CAN_ConfigFilter>:
 8005aa8:	b480      	push	{r7}
 8005aaa:	b087      	sub	sp, #28
 8005aac:	af00      	add	r7, sp, #0
 8005aae:	6078      	str	r0, [r7, #4]
 8005ab0:	6039      	str	r1, [r7, #0]
 8005ab2:	687b      	ldr	r3, [r7, #4]
 8005ab4:	681b      	ldr	r3, [r3, #0]
 8005ab6:	617b      	str	r3, [r7, #20]
 8005ab8:	687b      	ldr	r3, [r7, #4]
 8005aba:	f893 3020 	ldrb.w	r3, [r3, #32]
 8005abe:	74fb      	strb	r3, [r7, #19]
 8005ac0:	7cfb      	ldrb	r3, [r7, #19]
 8005ac2:	2b01      	cmp	r3, #1
 8005ac4:	d003      	beq.n	8005ace <HAL_CAN_ConfigFilter+0x26>
 8005ac6:	7cfb      	ldrb	r3, [r7, #19]
 8005ac8:	2b02      	cmp	r3, #2
 8005aca:	f040 80be 	bne.w	8005c4a <HAL_CAN_ConfigFilter+0x1a2>
 8005ace:	4b65      	ldr	r3, [pc, #404]	@ (8005c64 <HAL_CAN_ConfigFilter+0x1bc>)
 8005ad0:	617b      	str	r3, [r7, #20]
 8005ad2:	697b      	ldr	r3, [r7, #20]
 8005ad4:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 8005ad8:	f043 0201 	orr.w	r2, r3, #1
 8005adc:	697b      	ldr	r3, [r7, #20]
 8005ade:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 8005ae2:	697b      	ldr	r3, [r7, #20]
 8005ae4:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 8005ae8:	f423 527c 	bic.w	r2, r3, #16128	@ 0x3f00
 8005aec:	697b      	ldr	r3, [r7, #20]
 8005aee:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 8005af2:	697b      	ldr	r3, [r7, #20]
 8005af4:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 8005af8:	683b      	ldr	r3, [r7, #0]
 8005afa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005afc:	021b      	lsls	r3, r3, #8
 8005afe:	431a      	orrs	r2, r3
 8005b00:	697b      	ldr	r3, [r7, #20]
 8005b02:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 8005b06:	683b      	ldr	r3, [r7, #0]
 8005b08:	695b      	ldr	r3, [r3, #20]
 8005b0a:	f003 031f 	and.w	r3, r3, #31
 8005b0e:	2201      	movs	r2, #1
 8005b10:	fa02 f303 	lsl.w	r3, r2, r3
 8005b14:	60fb      	str	r3, [r7, #12]
 8005b16:	697b      	ldr	r3, [r7, #20]
 8005b18:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 8005b1c:	68fb      	ldr	r3, [r7, #12]
 8005b1e:	43db      	mvns	r3, r3
 8005b20:	401a      	ands	r2, r3
 8005b22:	697b      	ldr	r3, [r7, #20]
 8005b24:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 8005b28:	683b      	ldr	r3, [r7, #0]
 8005b2a:	69db      	ldr	r3, [r3, #28]
 8005b2c:	2b00      	cmp	r3, #0
 8005b2e:	d123      	bne.n	8005b78 <HAL_CAN_ConfigFilter+0xd0>
 8005b30:	697b      	ldr	r3, [r7, #20]
 8005b32:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 8005b36:	68fb      	ldr	r3, [r7, #12]
 8005b38:	43db      	mvns	r3, r3
 8005b3a:	401a      	ands	r2, r3
 8005b3c:	697b      	ldr	r3, [r7, #20]
 8005b3e:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 8005b42:	683b      	ldr	r3, [r7, #0]
 8005b44:	68db      	ldr	r3, [r3, #12]
 8005b46:	0419      	lsls	r1, r3, #16
 8005b48:	683b      	ldr	r3, [r7, #0]
 8005b4a:	685b      	ldr	r3, [r3, #4]
 8005b4c:	b29b      	uxth	r3, r3
 8005b4e:	683a      	ldr	r2, [r7, #0]
 8005b50:	6952      	ldr	r2, [r2, #20]
 8005b52:	4319      	orrs	r1, r3
 8005b54:	697b      	ldr	r3, [r7, #20]
 8005b56:	3248      	adds	r2, #72	@ 0x48
 8005b58:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8005b5c:	683b      	ldr	r3, [r7, #0]
 8005b5e:	689b      	ldr	r3, [r3, #8]
 8005b60:	0419      	lsls	r1, r3, #16
 8005b62:	683b      	ldr	r3, [r7, #0]
 8005b64:	681b      	ldr	r3, [r3, #0]
 8005b66:	b29a      	uxth	r2, r3
 8005b68:	683b      	ldr	r3, [r7, #0]
 8005b6a:	695b      	ldr	r3, [r3, #20]
 8005b6c:	430a      	orrs	r2, r1
 8005b6e:	6979      	ldr	r1, [r7, #20]
 8005b70:	3348      	adds	r3, #72	@ 0x48
 8005b72:	00db      	lsls	r3, r3, #3
 8005b74:	440b      	add	r3, r1
 8005b76:	605a      	str	r2, [r3, #4]
 8005b78:	683b      	ldr	r3, [r7, #0]
 8005b7a:	69db      	ldr	r3, [r3, #28]
 8005b7c:	2b01      	cmp	r3, #1
 8005b7e:	d122      	bne.n	8005bc6 <HAL_CAN_ConfigFilter+0x11e>
 8005b80:	697b      	ldr	r3, [r7, #20]
 8005b82:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 8005b86:	68fb      	ldr	r3, [r7, #12]
 8005b88:	431a      	orrs	r2, r3
 8005b8a:	697b      	ldr	r3, [r7, #20]
 8005b8c:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 8005b90:	683b      	ldr	r3, [r7, #0]
 8005b92:	681b      	ldr	r3, [r3, #0]
 8005b94:	0419      	lsls	r1, r3, #16
 8005b96:	683b      	ldr	r3, [r7, #0]
 8005b98:	685b      	ldr	r3, [r3, #4]
 8005b9a:	b29b      	uxth	r3, r3
 8005b9c:	683a      	ldr	r2, [r7, #0]
 8005b9e:	6952      	ldr	r2, [r2, #20]
 8005ba0:	4319      	orrs	r1, r3
 8005ba2:	697b      	ldr	r3, [r7, #20]
 8005ba4:	3248      	adds	r2, #72	@ 0x48
 8005ba6:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8005baa:	683b      	ldr	r3, [r7, #0]
 8005bac:	689b      	ldr	r3, [r3, #8]
 8005bae:	0419      	lsls	r1, r3, #16
 8005bb0:	683b      	ldr	r3, [r7, #0]
 8005bb2:	68db      	ldr	r3, [r3, #12]
 8005bb4:	b29a      	uxth	r2, r3
 8005bb6:	683b      	ldr	r3, [r7, #0]
 8005bb8:	695b      	ldr	r3, [r3, #20]
 8005bba:	430a      	orrs	r2, r1
 8005bbc:	6979      	ldr	r1, [r7, #20]
 8005bbe:	3348      	adds	r3, #72	@ 0x48
 8005bc0:	00db      	lsls	r3, r3, #3
 8005bc2:	440b      	add	r3, r1
 8005bc4:	605a      	str	r2, [r3, #4]
 8005bc6:	683b      	ldr	r3, [r7, #0]
 8005bc8:	699b      	ldr	r3, [r3, #24]
 8005bca:	2b00      	cmp	r3, #0
 8005bcc:	d109      	bne.n	8005be2 <HAL_CAN_ConfigFilter+0x13a>
 8005bce:	697b      	ldr	r3, [r7, #20]
 8005bd0:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8005bd4:	68fb      	ldr	r3, [r7, #12]
 8005bd6:	43db      	mvns	r3, r3
 8005bd8:	401a      	ands	r2, r3
 8005bda:	697b      	ldr	r3, [r7, #20]
 8005bdc:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 8005be0:	e007      	b.n	8005bf2 <HAL_CAN_ConfigFilter+0x14a>
 8005be2:	697b      	ldr	r3, [r7, #20]
 8005be4:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8005be8:	68fb      	ldr	r3, [r7, #12]
 8005bea:	431a      	orrs	r2, r3
 8005bec:	697b      	ldr	r3, [r7, #20]
 8005bee:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 8005bf2:	683b      	ldr	r3, [r7, #0]
 8005bf4:	691b      	ldr	r3, [r3, #16]
 8005bf6:	2b00      	cmp	r3, #0
 8005bf8:	d109      	bne.n	8005c0e <HAL_CAN_ConfigFilter+0x166>
 8005bfa:	697b      	ldr	r3, [r7, #20]
 8005bfc:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 8005c00:	68fb      	ldr	r3, [r7, #12]
 8005c02:	43db      	mvns	r3, r3
 8005c04:	401a      	ands	r2, r3
 8005c06:	697b      	ldr	r3, [r7, #20]
 8005c08:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8005c0c:	e007      	b.n	8005c1e <HAL_CAN_ConfigFilter+0x176>
 8005c0e:	697b      	ldr	r3, [r7, #20]
 8005c10:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 8005c14:	68fb      	ldr	r3, [r7, #12]
 8005c16:	431a      	orrs	r2, r3
 8005c18:	697b      	ldr	r3, [r7, #20]
 8005c1a:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8005c1e:	683b      	ldr	r3, [r7, #0]
 8005c20:	6a1b      	ldr	r3, [r3, #32]
 8005c22:	2b01      	cmp	r3, #1
 8005c24:	d107      	bne.n	8005c36 <HAL_CAN_ConfigFilter+0x18e>
 8005c26:	697b      	ldr	r3, [r7, #20]
 8005c28:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 8005c2c:	68fb      	ldr	r3, [r7, #12]
 8005c2e:	431a      	orrs	r2, r3
 8005c30:	697b      	ldr	r3, [r7, #20]
 8005c32:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 8005c36:	697b      	ldr	r3, [r7, #20]
 8005c38:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 8005c3c:	f023 0201 	bic.w	r2, r3, #1
 8005c40:	697b      	ldr	r3, [r7, #20]
 8005c42:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 8005c46:	2300      	movs	r3, #0
 8005c48:	e006      	b.n	8005c58 <HAL_CAN_ConfigFilter+0x1b0>
 8005c4a:	687b      	ldr	r3, [r7, #4]
 8005c4c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005c4e:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8005c52:	687b      	ldr	r3, [r7, #4]
 8005c54:	625a      	str	r2, [r3, #36]	@ 0x24
 8005c56:	2301      	movs	r3, #1
 8005c58:	4618      	mov	r0, r3
 8005c5a:	371c      	adds	r7, #28
 8005c5c:	46bd      	mov	sp, r7
 8005c5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c62:	4770      	bx	lr
 8005c64:	40006400 	.word	0x40006400

08005c68 <HAL_CAN_Start>:
 8005c68:	b580      	push	{r7, lr}
 8005c6a:	b084      	sub	sp, #16
 8005c6c:	af00      	add	r7, sp, #0
 8005c6e:	6078      	str	r0, [r7, #4]
 8005c70:	687b      	ldr	r3, [r7, #4]
 8005c72:	f893 3020 	ldrb.w	r3, [r3, #32]
 8005c76:	b2db      	uxtb	r3, r3
 8005c78:	2b01      	cmp	r3, #1
 8005c7a:	d12e      	bne.n	8005cda <HAL_CAN_Start+0x72>
 8005c7c:	687b      	ldr	r3, [r7, #4]
 8005c7e:	2202      	movs	r2, #2
 8005c80:	f883 2020 	strb.w	r2, [r3, #32]
 8005c84:	687b      	ldr	r3, [r7, #4]
 8005c86:	681b      	ldr	r3, [r3, #0]
 8005c88:	681a      	ldr	r2, [r3, #0]
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	681b      	ldr	r3, [r3, #0]
 8005c8e:	f022 0201 	bic.w	r2, r2, #1
 8005c92:	601a      	str	r2, [r3, #0]
 8005c94:	f7ff f9e2 	bl	800505c <HAL_GetTick>
 8005c98:	60f8      	str	r0, [r7, #12]
 8005c9a:	e012      	b.n	8005cc2 <HAL_CAN_Start+0x5a>
 8005c9c:	f7ff f9de 	bl	800505c <HAL_GetTick>
 8005ca0:	4602      	mov	r2, r0
 8005ca2:	68fb      	ldr	r3, [r7, #12]
 8005ca4:	1ad3      	subs	r3, r2, r3
 8005ca6:	2b0a      	cmp	r3, #10
 8005ca8:	d90b      	bls.n	8005cc2 <HAL_CAN_Start+0x5a>
 8005caa:	687b      	ldr	r3, [r7, #4]
 8005cac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005cae:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8005cb2:	687b      	ldr	r3, [r7, #4]
 8005cb4:	625a      	str	r2, [r3, #36]	@ 0x24
 8005cb6:	687b      	ldr	r3, [r7, #4]
 8005cb8:	2205      	movs	r2, #5
 8005cba:	f883 2020 	strb.w	r2, [r3, #32]
 8005cbe:	2301      	movs	r3, #1
 8005cc0:	e012      	b.n	8005ce8 <HAL_CAN_Start+0x80>
 8005cc2:	687b      	ldr	r3, [r7, #4]
 8005cc4:	681b      	ldr	r3, [r3, #0]
 8005cc6:	685b      	ldr	r3, [r3, #4]
 8005cc8:	f003 0301 	and.w	r3, r3, #1
 8005ccc:	2b00      	cmp	r3, #0
 8005cce:	d1e5      	bne.n	8005c9c <HAL_CAN_Start+0x34>
 8005cd0:	687b      	ldr	r3, [r7, #4]
 8005cd2:	2200      	movs	r2, #0
 8005cd4:	625a      	str	r2, [r3, #36]	@ 0x24
 8005cd6:	2300      	movs	r3, #0
 8005cd8:	e006      	b.n	8005ce8 <HAL_CAN_Start+0x80>
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005cde:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 8005ce2:	687b      	ldr	r3, [r7, #4]
 8005ce4:	625a      	str	r2, [r3, #36]	@ 0x24
 8005ce6:	2301      	movs	r3, #1
 8005ce8:	4618      	mov	r0, r3
 8005cea:	3710      	adds	r7, #16
 8005cec:	46bd      	mov	sp, r7
 8005cee:	bd80      	pop	{r7, pc}

08005cf0 <HAL_CAN_AddTxMessage>:
 8005cf0:	b480      	push	{r7}
 8005cf2:	b089      	sub	sp, #36	@ 0x24
 8005cf4:	af00      	add	r7, sp, #0
 8005cf6:	60f8      	str	r0, [r7, #12]
 8005cf8:	60b9      	str	r1, [r7, #8]
 8005cfa:	607a      	str	r2, [r7, #4]
 8005cfc:	603b      	str	r3, [r7, #0]
 8005cfe:	68fb      	ldr	r3, [r7, #12]
 8005d00:	f893 3020 	ldrb.w	r3, [r3, #32]
 8005d04:	77fb      	strb	r3, [r7, #31]
 8005d06:	68fb      	ldr	r3, [r7, #12]
 8005d08:	681b      	ldr	r3, [r3, #0]
 8005d0a:	689b      	ldr	r3, [r3, #8]
 8005d0c:	61bb      	str	r3, [r7, #24]
 8005d0e:	7ffb      	ldrb	r3, [r7, #31]
 8005d10:	2b01      	cmp	r3, #1
 8005d12:	d003      	beq.n	8005d1c <HAL_CAN_AddTxMessage+0x2c>
 8005d14:	7ffb      	ldrb	r3, [r7, #31]
 8005d16:	2b02      	cmp	r3, #2
 8005d18:	f040 80ad 	bne.w	8005e76 <HAL_CAN_AddTxMessage+0x186>
 8005d1c:	69bb      	ldr	r3, [r7, #24]
 8005d1e:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8005d22:	2b00      	cmp	r3, #0
 8005d24:	d10a      	bne.n	8005d3c <HAL_CAN_AddTxMessage+0x4c>
 8005d26:	69bb      	ldr	r3, [r7, #24]
 8005d28:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8005d2c:	2b00      	cmp	r3, #0
 8005d2e:	d105      	bne.n	8005d3c <HAL_CAN_AddTxMessage+0x4c>
 8005d30:	69bb      	ldr	r3, [r7, #24]
 8005d32:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005d36:	2b00      	cmp	r3, #0
 8005d38:	f000 8095 	beq.w	8005e66 <HAL_CAN_AddTxMessage+0x176>
 8005d3c:	69bb      	ldr	r3, [r7, #24]
 8005d3e:	0e1b      	lsrs	r3, r3, #24
 8005d40:	f003 0303 	and.w	r3, r3, #3
 8005d44:	617b      	str	r3, [r7, #20]
 8005d46:	2201      	movs	r2, #1
 8005d48:	697b      	ldr	r3, [r7, #20]
 8005d4a:	409a      	lsls	r2, r3
 8005d4c:	683b      	ldr	r3, [r7, #0]
 8005d4e:	601a      	str	r2, [r3, #0]
 8005d50:	68bb      	ldr	r3, [r7, #8]
 8005d52:	689b      	ldr	r3, [r3, #8]
 8005d54:	2b00      	cmp	r3, #0
 8005d56:	d10d      	bne.n	8005d74 <HAL_CAN_AddTxMessage+0x84>
 8005d58:	68bb      	ldr	r3, [r7, #8]
 8005d5a:	681b      	ldr	r3, [r3, #0]
 8005d5c:	055a      	lsls	r2, r3, #21
 8005d5e:	68bb      	ldr	r3, [r7, #8]
 8005d60:	68db      	ldr	r3, [r3, #12]
 8005d62:	68f9      	ldr	r1, [r7, #12]
 8005d64:	6809      	ldr	r1, [r1, #0]
 8005d66:	431a      	orrs	r2, r3
 8005d68:	697b      	ldr	r3, [r7, #20]
 8005d6a:	3318      	adds	r3, #24
 8005d6c:	011b      	lsls	r3, r3, #4
 8005d6e:	440b      	add	r3, r1
 8005d70:	601a      	str	r2, [r3, #0]
 8005d72:	e00f      	b.n	8005d94 <HAL_CAN_AddTxMessage+0xa4>
 8005d74:	68bb      	ldr	r3, [r7, #8]
 8005d76:	685b      	ldr	r3, [r3, #4]
 8005d78:	00da      	lsls	r2, r3, #3
 8005d7a:	68bb      	ldr	r3, [r7, #8]
 8005d7c:	689b      	ldr	r3, [r3, #8]
 8005d7e:	431a      	orrs	r2, r3
 8005d80:	68bb      	ldr	r3, [r7, #8]
 8005d82:	68db      	ldr	r3, [r3, #12]
 8005d84:	68f9      	ldr	r1, [r7, #12]
 8005d86:	6809      	ldr	r1, [r1, #0]
 8005d88:	431a      	orrs	r2, r3
 8005d8a:	697b      	ldr	r3, [r7, #20]
 8005d8c:	3318      	adds	r3, #24
 8005d8e:	011b      	lsls	r3, r3, #4
 8005d90:	440b      	add	r3, r1
 8005d92:	601a      	str	r2, [r3, #0]
 8005d94:	68fb      	ldr	r3, [r7, #12]
 8005d96:	6819      	ldr	r1, [r3, #0]
 8005d98:	68bb      	ldr	r3, [r7, #8]
 8005d9a:	691a      	ldr	r2, [r3, #16]
 8005d9c:	697b      	ldr	r3, [r7, #20]
 8005d9e:	3318      	adds	r3, #24
 8005da0:	011b      	lsls	r3, r3, #4
 8005da2:	440b      	add	r3, r1
 8005da4:	3304      	adds	r3, #4
 8005da6:	601a      	str	r2, [r3, #0]
 8005da8:	68bb      	ldr	r3, [r7, #8]
 8005daa:	7d1b      	ldrb	r3, [r3, #20]
 8005dac:	2b01      	cmp	r3, #1
 8005dae:	d111      	bne.n	8005dd4 <HAL_CAN_AddTxMessage+0xe4>
 8005db0:	68fb      	ldr	r3, [r7, #12]
 8005db2:	681a      	ldr	r2, [r3, #0]
 8005db4:	697b      	ldr	r3, [r7, #20]
 8005db6:	3318      	adds	r3, #24
 8005db8:	011b      	lsls	r3, r3, #4
 8005dba:	4413      	add	r3, r2
 8005dbc:	3304      	adds	r3, #4
 8005dbe:	681b      	ldr	r3, [r3, #0]
 8005dc0:	68fa      	ldr	r2, [r7, #12]
 8005dc2:	6811      	ldr	r1, [r2, #0]
 8005dc4:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8005dc8:	697b      	ldr	r3, [r7, #20]
 8005dca:	3318      	adds	r3, #24
 8005dcc:	011b      	lsls	r3, r3, #4
 8005dce:	440b      	add	r3, r1
 8005dd0:	3304      	adds	r3, #4
 8005dd2:	601a      	str	r2, [r3, #0]
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	3307      	adds	r3, #7
 8005dd8:	781b      	ldrb	r3, [r3, #0]
 8005dda:	061a      	lsls	r2, r3, #24
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	3306      	adds	r3, #6
 8005de0:	781b      	ldrb	r3, [r3, #0]
 8005de2:	041b      	lsls	r3, r3, #16
 8005de4:	431a      	orrs	r2, r3
 8005de6:	687b      	ldr	r3, [r7, #4]
 8005de8:	3305      	adds	r3, #5
 8005dea:	781b      	ldrb	r3, [r3, #0]
 8005dec:	021b      	lsls	r3, r3, #8
 8005dee:	4313      	orrs	r3, r2
 8005df0:	687a      	ldr	r2, [r7, #4]
 8005df2:	3204      	adds	r2, #4
 8005df4:	7812      	ldrb	r2, [r2, #0]
 8005df6:	4610      	mov	r0, r2
 8005df8:	68fa      	ldr	r2, [r7, #12]
 8005dfa:	6811      	ldr	r1, [r2, #0]
 8005dfc:	ea43 0200 	orr.w	r2, r3, r0
 8005e00:	697b      	ldr	r3, [r7, #20]
 8005e02:	011b      	lsls	r3, r3, #4
 8005e04:	440b      	add	r3, r1
 8005e06:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 8005e0a:	601a      	str	r2, [r3, #0]
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	3303      	adds	r3, #3
 8005e10:	781b      	ldrb	r3, [r3, #0]
 8005e12:	061a      	lsls	r2, r3, #24
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	3302      	adds	r3, #2
 8005e18:	781b      	ldrb	r3, [r3, #0]
 8005e1a:	041b      	lsls	r3, r3, #16
 8005e1c:	431a      	orrs	r2, r3
 8005e1e:	687b      	ldr	r3, [r7, #4]
 8005e20:	3301      	adds	r3, #1
 8005e22:	781b      	ldrb	r3, [r3, #0]
 8005e24:	021b      	lsls	r3, r3, #8
 8005e26:	4313      	orrs	r3, r2
 8005e28:	687a      	ldr	r2, [r7, #4]
 8005e2a:	7812      	ldrb	r2, [r2, #0]
 8005e2c:	4610      	mov	r0, r2
 8005e2e:	68fa      	ldr	r2, [r7, #12]
 8005e30:	6811      	ldr	r1, [r2, #0]
 8005e32:	ea43 0200 	orr.w	r2, r3, r0
 8005e36:	697b      	ldr	r3, [r7, #20]
 8005e38:	011b      	lsls	r3, r3, #4
 8005e3a:	440b      	add	r3, r1
 8005e3c:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 8005e40:	601a      	str	r2, [r3, #0]
 8005e42:	68fb      	ldr	r3, [r7, #12]
 8005e44:	681a      	ldr	r2, [r3, #0]
 8005e46:	697b      	ldr	r3, [r7, #20]
 8005e48:	3318      	adds	r3, #24
 8005e4a:	011b      	lsls	r3, r3, #4
 8005e4c:	4413      	add	r3, r2
 8005e4e:	681b      	ldr	r3, [r3, #0]
 8005e50:	68fa      	ldr	r2, [r7, #12]
 8005e52:	6811      	ldr	r1, [r2, #0]
 8005e54:	f043 0201 	orr.w	r2, r3, #1
 8005e58:	697b      	ldr	r3, [r7, #20]
 8005e5a:	3318      	adds	r3, #24
 8005e5c:	011b      	lsls	r3, r3, #4
 8005e5e:	440b      	add	r3, r1
 8005e60:	601a      	str	r2, [r3, #0]
 8005e62:	2300      	movs	r3, #0
 8005e64:	e00e      	b.n	8005e84 <HAL_CAN_AddTxMessage+0x194>
 8005e66:	68fb      	ldr	r3, [r7, #12]
 8005e68:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005e6a:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8005e6e:	68fb      	ldr	r3, [r7, #12]
 8005e70:	625a      	str	r2, [r3, #36]	@ 0x24
 8005e72:	2301      	movs	r3, #1
 8005e74:	e006      	b.n	8005e84 <HAL_CAN_AddTxMessage+0x194>
 8005e76:	68fb      	ldr	r3, [r7, #12]
 8005e78:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005e7a:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8005e7e:	68fb      	ldr	r3, [r7, #12]
 8005e80:	625a      	str	r2, [r3, #36]	@ 0x24
 8005e82:	2301      	movs	r3, #1
 8005e84:	4618      	mov	r0, r3
 8005e86:	3724      	adds	r7, #36	@ 0x24
 8005e88:	46bd      	mov	sp, r7
 8005e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e8e:	4770      	bx	lr

08005e90 <HAL_CAN_GetRxMessage>:
 8005e90:	b480      	push	{r7}
 8005e92:	b087      	sub	sp, #28
 8005e94:	af00      	add	r7, sp, #0
 8005e96:	60f8      	str	r0, [r7, #12]
 8005e98:	60b9      	str	r1, [r7, #8]
 8005e9a:	607a      	str	r2, [r7, #4]
 8005e9c:	603b      	str	r3, [r7, #0]
 8005e9e:	68fb      	ldr	r3, [r7, #12]
 8005ea0:	f893 3020 	ldrb.w	r3, [r3, #32]
 8005ea4:	75fb      	strb	r3, [r7, #23]
 8005ea6:	7dfb      	ldrb	r3, [r7, #23]
 8005ea8:	2b01      	cmp	r3, #1
 8005eaa:	d003      	beq.n	8005eb4 <HAL_CAN_GetRxMessage+0x24>
 8005eac:	7dfb      	ldrb	r3, [r7, #23]
 8005eae:	2b02      	cmp	r3, #2
 8005eb0:	f040 80f3 	bne.w	800609a <HAL_CAN_GetRxMessage+0x20a>
 8005eb4:	68bb      	ldr	r3, [r7, #8]
 8005eb6:	2b00      	cmp	r3, #0
 8005eb8:	d10e      	bne.n	8005ed8 <HAL_CAN_GetRxMessage+0x48>
 8005eba:	68fb      	ldr	r3, [r7, #12]
 8005ebc:	681b      	ldr	r3, [r3, #0]
 8005ebe:	68db      	ldr	r3, [r3, #12]
 8005ec0:	f003 0303 	and.w	r3, r3, #3
 8005ec4:	2b00      	cmp	r3, #0
 8005ec6:	d116      	bne.n	8005ef6 <HAL_CAN_GetRxMessage+0x66>
 8005ec8:	68fb      	ldr	r3, [r7, #12]
 8005eca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005ecc:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8005ed0:	68fb      	ldr	r3, [r7, #12]
 8005ed2:	625a      	str	r2, [r3, #36]	@ 0x24
 8005ed4:	2301      	movs	r3, #1
 8005ed6:	e0e7      	b.n	80060a8 <HAL_CAN_GetRxMessage+0x218>
 8005ed8:	68fb      	ldr	r3, [r7, #12]
 8005eda:	681b      	ldr	r3, [r3, #0]
 8005edc:	691b      	ldr	r3, [r3, #16]
 8005ede:	f003 0303 	and.w	r3, r3, #3
 8005ee2:	2b00      	cmp	r3, #0
 8005ee4:	d107      	bne.n	8005ef6 <HAL_CAN_GetRxMessage+0x66>
 8005ee6:	68fb      	ldr	r3, [r7, #12]
 8005ee8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005eea:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8005eee:	68fb      	ldr	r3, [r7, #12]
 8005ef0:	625a      	str	r2, [r3, #36]	@ 0x24
 8005ef2:	2301      	movs	r3, #1
 8005ef4:	e0d8      	b.n	80060a8 <HAL_CAN_GetRxMessage+0x218>
 8005ef6:	68fb      	ldr	r3, [r7, #12]
 8005ef8:	681a      	ldr	r2, [r3, #0]
 8005efa:	68bb      	ldr	r3, [r7, #8]
 8005efc:	331b      	adds	r3, #27
 8005efe:	011b      	lsls	r3, r3, #4
 8005f00:	4413      	add	r3, r2
 8005f02:	681b      	ldr	r3, [r3, #0]
 8005f04:	f003 0204 	and.w	r2, r3, #4
 8005f08:	687b      	ldr	r3, [r7, #4]
 8005f0a:	609a      	str	r2, [r3, #8]
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	689b      	ldr	r3, [r3, #8]
 8005f10:	2b00      	cmp	r3, #0
 8005f12:	d10c      	bne.n	8005f2e <HAL_CAN_GetRxMessage+0x9e>
 8005f14:	68fb      	ldr	r3, [r7, #12]
 8005f16:	681a      	ldr	r2, [r3, #0]
 8005f18:	68bb      	ldr	r3, [r7, #8]
 8005f1a:	331b      	adds	r3, #27
 8005f1c:	011b      	lsls	r3, r3, #4
 8005f1e:	4413      	add	r3, r2
 8005f20:	681b      	ldr	r3, [r3, #0]
 8005f22:	0d5b      	lsrs	r3, r3, #21
 8005f24:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	601a      	str	r2, [r3, #0]
 8005f2c:	e00b      	b.n	8005f46 <HAL_CAN_GetRxMessage+0xb6>
 8005f2e:	68fb      	ldr	r3, [r7, #12]
 8005f30:	681a      	ldr	r2, [r3, #0]
 8005f32:	68bb      	ldr	r3, [r7, #8]
 8005f34:	331b      	adds	r3, #27
 8005f36:	011b      	lsls	r3, r3, #4
 8005f38:	4413      	add	r3, r2
 8005f3a:	681b      	ldr	r3, [r3, #0]
 8005f3c:	08db      	lsrs	r3, r3, #3
 8005f3e:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 8005f42:	687b      	ldr	r3, [r7, #4]
 8005f44:	605a      	str	r2, [r3, #4]
 8005f46:	68fb      	ldr	r3, [r7, #12]
 8005f48:	681a      	ldr	r2, [r3, #0]
 8005f4a:	68bb      	ldr	r3, [r7, #8]
 8005f4c:	331b      	adds	r3, #27
 8005f4e:	011b      	lsls	r3, r3, #4
 8005f50:	4413      	add	r3, r2
 8005f52:	681b      	ldr	r3, [r3, #0]
 8005f54:	f003 0202 	and.w	r2, r3, #2
 8005f58:	687b      	ldr	r3, [r7, #4]
 8005f5a:	60da      	str	r2, [r3, #12]
 8005f5c:	68fb      	ldr	r3, [r7, #12]
 8005f5e:	681a      	ldr	r2, [r3, #0]
 8005f60:	68bb      	ldr	r3, [r7, #8]
 8005f62:	331b      	adds	r3, #27
 8005f64:	011b      	lsls	r3, r3, #4
 8005f66:	4413      	add	r3, r2
 8005f68:	3304      	adds	r3, #4
 8005f6a:	681b      	ldr	r3, [r3, #0]
 8005f6c:	f003 020f 	and.w	r2, r3, #15
 8005f70:	687b      	ldr	r3, [r7, #4]
 8005f72:	611a      	str	r2, [r3, #16]
 8005f74:	68fb      	ldr	r3, [r7, #12]
 8005f76:	681a      	ldr	r2, [r3, #0]
 8005f78:	68bb      	ldr	r3, [r7, #8]
 8005f7a:	331b      	adds	r3, #27
 8005f7c:	011b      	lsls	r3, r3, #4
 8005f7e:	4413      	add	r3, r2
 8005f80:	3304      	adds	r3, #4
 8005f82:	681b      	ldr	r3, [r3, #0]
 8005f84:	0a1b      	lsrs	r3, r3, #8
 8005f86:	b2da      	uxtb	r2, r3
 8005f88:	687b      	ldr	r3, [r7, #4]
 8005f8a:	619a      	str	r2, [r3, #24]
 8005f8c:	68fb      	ldr	r3, [r7, #12]
 8005f8e:	681a      	ldr	r2, [r3, #0]
 8005f90:	68bb      	ldr	r3, [r7, #8]
 8005f92:	331b      	adds	r3, #27
 8005f94:	011b      	lsls	r3, r3, #4
 8005f96:	4413      	add	r3, r2
 8005f98:	3304      	adds	r3, #4
 8005f9a:	681b      	ldr	r3, [r3, #0]
 8005f9c:	0c1b      	lsrs	r3, r3, #16
 8005f9e:	b29a      	uxth	r2, r3
 8005fa0:	687b      	ldr	r3, [r7, #4]
 8005fa2:	615a      	str	r2, [r3, #20]
 8005fa4:	68fb      	ldr	r3, [r7, #12]
 8005fa6:	681a      	ldr	r2, [r3, #0]
 8005fa8:	68bb      	ldr	r3, [r7, #8]
 8005faa:	011b      	lsls	r3, r3, #4
 8005fac:	4413      	add	r3, r2
 8005fae:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8005fb2:	681b      	ldr	r3, [r3, #0]
 8005fb4:	b2da      	uxtb	r2, r3
 8005fb6:	683b      	ldr	r3, [r7, #0]
 8005fb8:	701a      	strb	r2, [r3, #0]
 8005fba:	68fb      	ldr	r3, [r7, #12]
 8005fbc:	681a      	ldr	r2, [r3, #0]
 8005fbe:	68bb      	ldr	r3, [r7, #8]
 8005fc0:	011b      	lsls	r3, r3, #4
 8005fc2:	4413      	add	r3, r2
 8005fc4:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8005fc8:	681b      	ldr	r3, [r3, #0]
 8005fca:	0a1a      	lsrs	r2, r3, #8
 8005fcc:	683b      	ldr	r3, [r7, #0]
 8005fce:	3301      	adds	r3, #1
 8005fd0:	b2d2      	uxtb	r2, r2
 8005fd2:	701a      	strb	r2, [r3, #0]
 8005fd4:	68fb      	ldr	r3, [r7, #12]
 8005fd6:	681a      	ldr	r2, [r3, #0]
 8005fd8:	68bb      	ldr	r3, [r7, #8]
 8005fda:	011b      	lsls	r3, r3, #4
 8005fdc:	4413      	add	r3, r2
 8005fde:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8005fe2:	681b      	ldr	r3, [r3, #0]
 8005fe4:	0c1a      	lsrs	r2, r3, #16
 8005fe6:	683b      	ldr	r3, [r7, #0]
 8005fe8:	3302      	adds	r3, #2
 8005fea:	b2d2      	uxtb	r2, r2
 8005fec:	701a      	strb	r2, [r3, #0]
 8005fee:	68fb      	ldr	r3, [r7, #12]
 8005ff0:	681a      	ldr	r2, [r3, #0]
 8005ff2:	68bb      	ldr	r3, [r7, #8]
 8005ff4:	011b      	lsls	r3, r3, #4
 8005ff6:	4413      	add	r3, r2
 8005ff8:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8005ffc:	681b      	ldr	r3, [r3, #0]
 8005ffe:	0e1a      	lsrs	r2, r3, #24
 8006000:	683b      	ldr	r3, [r7, #0]
 8006002:	3303      	adds	r3, #3
 8006004:	b2d2      	uxtb	r2, r2
 8006006:	701a      	strb	r2, [r3, #0]
 8006008:	68fb      	ldr	r3, [r7, #12]
 800600a:	681a      	ldr	r2, [r3, #0]
 800600c:	68bb      	ldr	r3, [r7, #8]
 800600e:	011b      	lsls	r3, r3, #4
 8006010:	4413      	add	r3, r2
 8006012:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8006016:	681a      	ldr	r2, [r3, #0]
 8006018:	683b      	ldr	r3, [r7, #0]
 800601a:	3304      	adds	r3, #4
 800601c:	b2d2      	uxtb	r2, r2
 800601e:	701a      	strb	r2, [r3, #0]
 8006020:	68fb      	ldr	r3, [r7, #12]
 8006022:	681a      	ldr	r2, [r3, #0]
 8006024:	68bb      	ldr	r3, [r7, #8]
 8006026:	011b      	lsls	r3, r3, #4
 8006028:	4413      	add	r3, r2
 800602a:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800602e:	681b      	ldr	r3, [r3, #0]
 8006030:	0a1a      	lsrs	r2, r3, #8
 8006032:	683b      	ldr	r3, [r7, #0]
 8006034:	3305      	adds	r3, #5
 8006036:	b2d2      	uxtb	r2, r2
 8006038:	701a      	strb	r2, [r3, #0]
 800603a:	68fb      	ldr	r3, [r7, #12]
 800603c:	681a      	ldr	r2, [r3, #0]
 800603e:	68bb      	ldr	r3, [r7, #8]
 8006040:	011b      	lsls	r3, r3, #4
 8006042:	4413      	add	r3, r2
 8006044:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8006048:	681b      	ldr	r3, [r3, #0]
 800604a:	0c1a      	lsrs	r2, r3, #16
 800604c:	683b      	ldr	r3, [r7, #0]
 800604e:	3306      	adds	r3, #6
 8006050:	b2d2      	uxtb	r2, r2
 8006052:	701a      	strb	r2, [r3, #0]
 8006054:	68fb      	ldr	r3, [r7, #12]
 8006056:	681a      	ldr	r2, [r3, #0]
 8006058:	68bb      	ldr	r3, [r7, #8]
 800605a:	011b      	lsls	r3, r3, #4
 800605c:	4413      	add	r3, r2
 800605e:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8006062:	681b      	ldr	r3, [r3, #0]
 8006064:	0e1a      	lsrs	r2, r3, #24
 8006066:	683b      	ldr	r3, [r7, #0]
 8006068:	3307      	adds	r3, #7
 800606a:	b2d2      	uxtb	r2, r2
 800606c:	701a      	strb	r2, [r3, #0]
 800606e:	68bb      	ldr	r3, [r7, #8]
 8006070:	2b00      	cmp	r3, #0
 8006072:	d108      	bne.n	8006086 <HAL_CAN_GetRxMessage+0x1f6>
 8006074:	68fb      	ldr	r3, [r7, #12]
 8006076:	681b      	ldr	r3, [r3, #0]
 8006078:	68da      	ldr	r2, [r3, #12]
 800607a:	68fb      	ldr	r3, [r7, #12]
 800607c:	681b      	ldr	r3, [r3, #0]
 800607e:	f042 0220 	orr.w	r2, r2, #32
 8006082:	60da      	str	r2, [r3, #12]
 8006084:	e007      	b.n	8006096 <HAL_CAN_GetRxMessage+0x206>
 8006086:	68fb      	ldr	r3, [r7, #12]
 8006088:	681b      	ldr	r3, [r3, #0]
 800608a:	691a      	ldr	r2, [r3, #16]
 800608c:	68fb      	ldr	r3, [r7, #12]
 800608e:	681b      	ldr	r3, [r3, #0]
 8006090:	f042 0220 	orr.w	r2, r2, #32
 8006094:	611a      	str	r2, [r3, #16]
 8006096:	2300      	movs	r3, #0
 8006098:	e006      	b.n	80060a8 <HAL_CAN_GetRxMessage+0x218>
 800609a:	68fb      	ldr	r3, [r7, #12]
 800609c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800609e:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 80060a2:	68fb      	ldr	r3, [r7, #12]
 80060a4:	625a      	str	r2, [r3, #36]	@ 0x24
 80060a6:	2301      	movs	r3, #1
 80060a8:	4618      	mov	r0, r3
 80060aa:	371c      	adds	r7, #28
 80060ac:	46bd      	mov	sp, r7
 80060ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060b2:	4770      	bx	lr

080060b4 <HAL_CAN_ActivateNotification>:
 80060b4:	b480      	push	{r7}
 80060b6:	b085      	sub	sp, #20
 80060b8:	af00      	add	r7, sp, #0
 80060ba:	6078      	str	r0, [r7, #4]
 80060bc:	6039      	str	r1, [r7, #0]
 80060be:	687b      	ldr	r3, [r7, #4]
 80060c0:	f893 3020 	ldrb.w	r3, [r3, #32]
 80060c4:	73fb      	strb	r3, [r7, #15]
 80060c6:	7bfb      	ldrb	r3, [r7, #15]
 80060c8:	2b01      	cmp	r3, #1
 80060ca:	d002      	beq.n	80060d2 <HAL_CAN_ActivateNotification+0x1e>
 80060cc:	7bfb      	ldrb	r3, [r7, #15]
 80060ce:	2b02      	cmp	r3, #2
 80060d0:	d109      	bne.n	80060e6 <HAL_CAN_ActivateNotification+0x32>
 80060d2:	687b      	ldr	r3, [r7, #4]
 80060d4:	681b      	ldr	r3, [r3, #0]
 80060d6:	6959      	ldr	r1, [r3, #20]
 80060d8:	687b      	ldr	r3, [r7, #4]
 80060da:	681b      	ldr	r3, [r3, #0]
 80060dc:	683a      	ldr	r2, [r7, #0]
 80060de:	430a      	orrs	r2, r1
 80060e0:	615a      	str	r2, [r3, #20]
 80060e2:	2300      	movs	r3, #0
 80060e4:	e006      	b.n	80060f4 <HAL_CAN_ActivateNotification+0x40>
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80060ea:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 80060ee:	687b      	ldr	r3, [r7, #4]
 80060f0:	625a      	str	r2, [r3, #36]	@ 0x24
 80060f2:	2301      	movs	r3, #1
 80060f4:	4618      	mov	r0, r3
 80060f6:	3714      	adds	r7, #20
 80060f8:	46bd      	mov	sp, r7
 80060fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060fe:	4770      	bx	lr

08006100 <HAL_CAN_IRQHandler>:
 8006100:	b580      	push	{r7, lr}
 8006102:	b08a      	sub	sp, #40	@ 0x28
 8006104:	af00      	add	r7, sp, #0
 8006106:	6078      	str	r0, [r7, #4]
 8006108:	2300      	movs	r3, #0
 800610a:	627b      	str	r3, [r7, #36]	@ 0x24
 800610c:	687b      	ldr	r3, [r7, #4]
 800610e:	681b      	ldr	r3, [r3, #0]
 8006110:	695b      	ldr	r3, [r3, #20]
 8006112:	623b      	str	r3, [r7, #32]
 8006114:	687b      	ldr	r3, [r7, #4]
 8006116:	681b      	ldr	r3, [r3, #0]
 8006118:	685b      	ldr	r3, [r3, #4]
 800611a:	61fb      	str	r3, [r7, #28]
 800611c:	687b      	ldr	r3, [r7, #4]
 800611e:	681b      	ldr	r3, [r3, #0]
 8006120:	689b      	ldr	r3, [r3, #8]
 8006122:	61bb      	str	r3, [r7, #24]
 8006124:	687b      	ldr	r3, [r7, #4]
 8006126:	681b      	ldr	r3, [r3, #0]
 8006128:	68db      	ldr	r3, [r3, #12]
 800612a:	617b      	str	r3, [r7, #20]
 800612c:	687b      	ldr	r3, [r7, #4]
 800612e:	681b      	ldr	r3, [r3, #0]
 8006130:	691b      	ldr	r3, [r3, #16]
 8006132:	613b      	str	r3, [r7, #16]
 8006134:	687b      	ldr	r3, [r7, #4]
 8006136:	681b      	ldr	r3, [r3, #0]
 8006138:	699b      	ldr	r3, [r3, #24]
 800613a:	60fb      	str	r3, [r7, #12]
 800613c:	6a3b      	ldr	r3, [r7, #32]
 800613e:	f003 0301 	and.w	r3, r3, #1
 8006142:	2b00      	cmp	r3, #0
 8006144:	d07c      	beq.n	8006240 <HAL_CAN_IRQHandler+0x140>
 8006146:	69bb      	ldr	r3, [r7, #24]
 8006148:	f003 0301 	and.w	r3, r3, #1
 800614c:	2b00      	cmp	r3, #0
 800614e:	d023      	beq.n	8006198 <HAL_CAN_IRQHandler+0x98>
 8006150:	687b      	ldr	r3, [r7, #4]
 8006152:	681b      	ldr	r3, [r3, #0]
 8006154:	2201      	movs	r2, #1
 8006156:	609a      	str	r2, [r3, #8]
 8006158:	69bb      	ldr	r3, [r7, #24]
 800615a:	f003 0302 	and.w	r3, r3, #2
 800615e:	2b00      	cmp	r3, #0
 8006160:	d003      	beq.n	800616a <HAL_CAN_IRQHandler+0x6a>
 8006162:	6878      	ldr	r0, [r7, #4]
 8006164:	f000 f983 	bl	800646e <HAL_CAN_TxMailbox0CompleteCallback>
 8006168:	e016      	b.n	8006198 <HAL_CAN_IRQHandler+0x98>
 800616a:	69bb      	ldr	r3, [r7, #24]
 800616c:	f003 0304 	and.w	r3, r3, #4
 8006170:	2b00      	cmp	r3, #0
 8006172:	d004      	beq.n	800617e <HAL_CAN_IRQHandler+0x7e>
 8006174:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006176:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800617a:	627b      	str	r3, [r7, #36]	@ 0x24
 800617c:	e00c      	b.n	8006198 <HAL_CAN_IRQHandler+0x98>
 800617e:	69bb      	ldr	r3, [r7, #24]
 8006180:	f003 0308 	and.w	r3, r3, #8
 8006184:	2b00      	cmp	r3, #0
 8006186:	d004      	beq.n	8006192 <HAL_CAN_IRQHandler+0x92>
 8006188:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800618a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800618e:	627b      	str	r3, [r7, #36]	@ 0x24
 8006190:	e002      	b.n	8006198 <HAL_CAN_IRQHandler+0x98>
 8006192:	6878      	ldr	r0, [r7, #4]
 8006194:	f000 f989 	bl	80064aa <HAL_CAN_TxMailbox0AbortCallback>
 8006198:	69bb      	ldr	r3, [r7, #24]
 800619a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800619e:	2b00      	cmp	r3, #0
 80061a0:	d024      	beq.n	80061ec <HAL_CAN_IRQHandler+0xec>
 80061a2:	687b      	ldr	r3, [r7, #4]
 80061a4:	681b      	ldr	r3, [r3, #0]
 80061a6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80061aa:	609a      	str	r2, [r3, #8]
 80061ac:	69bb      	ldr	r3, [r7, #24]
 80061ae:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80061b2:	2b00      	cmp	r3, #0
 80061b4:	d003      	beq.n	80061be <HAL_CAN_IRQHandler+0xbe>
 80061b6:	6878      	ldr	r0, [r7, #4]
 80061b8:	f000 f963 	bl	8006482 <HAL_CAN_TxMailbox1CompleteCallback>
 80061bc:	e016      	b.n	80061ec <HAL_CAN_IRQHandler+0xec>
 80061be:	69bb      	ldr	r3, [r7, #24]
 80061c0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80061c4:	2b00      	cmp	r3, #0
 80061c6:	d004      	beq.n	80061d2 <HAL_CAN_IRQHandler+0xd2>
 80061c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80061ca:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80061ce:	627b      	str	r3, [r7, #36]	@ 0x24
 80061d0:	e00c      	b.n	80061ec <HAL_CAN_IRQHandler+0xec>
 80061d2:	69bb      	ldr	r3, [r7, #24]
 80061d4:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80061d8:	2b00      	cmp	r3, #0
 80061da:	d004      	beq.n	80061e6 <HAL_CAN_IRQHandler+0xe6>
 80061dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80061de:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80061e2:	627b      	str	r3, [r7, #36]	@ 0x24
 80061e4:	e002      	b.n	80061ec <HAL_CAN_IRQHandler+0xec>
 80061e6:	6878      	ldr	r0, [r7, #4]
 80061e8:	f000 f969 	bl	80064be <HAL_CAN_TxMailbox1AbortCallback>
 80061ec:	69bb      	ldr	r3, [r7, #24]
 80061ee:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80061f2:	2b00      	cmp	r3, #0
 80061f4:	d024      	beq.n	8006240 <HAL_CAN_IRQHandler+0x140>
 80061f6:	687b      	ldr	r3, [r7, #4]
 80061f8:	681b      	ldr	r3, [r3, #0]
 80061fa:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80061fe:	609a      	str	r2, [r3, #8]
 8006200:	69bb      	ldr	r3, [r7, #24]
 8006202:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006206:	2b00      	cmp	r3, #0
 8006208:	d003      	beq.n	8006212 <HAL_CAN_IRQHandler+0x112>
 800620a:	6878      	ldr	r0, [r7, #4]
 800620c:	f000 f943 	bl	8006496 <HAL_CAN_TxMailbox2CompleteCallback>
 8006210:	e016      	b.n	8006240 <HAL_CAN_IRQHandler+0x140>
 8006212:	69bb      	ldr	r3, [r7, #24]
 8006214:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8006218:	2b00      	cmp	r3, #0
 800621a:	d004      	beq.n	8006226 <HAL_CAN_IRQHandler+0x126>
 800621c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800621e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8006222:	627b      	str	r3, [r7, #36]	@ 0x24
 8006224:	e00c      	b.n	8006240 <HAL_CAN_IRQHandler+0x140>
 8006226:	69bb      	ldr	r3, [r7, #24]
 8006228:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800622c:	2b00      	cmp	r3, #0
 800622e:	d004      	beq.n	800623a <HAL_CAN_IRQHandler+0x13a>
 8006230:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006232:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006236:	627b      	str	r3, [r7, #36]	@ 0x24
 8006238:	e002      	b.n	8006240 <HAL_CAN_IRQHandler+0x140>
 800623a:	6878      	ldr	r0, [r7, #4]
 800623c:	f000 f949 	bl	80064d2 <HAL_CAN_TxMailbox2AbortCallback>
 8006240:	6a3b      	ldr	r3, [r7, #32]
 8006242:	f003 0308 	and.w	r3, r3, #8
 8006246:	2b00      	cmp	r3, #0
 8006248:	d00c      	beq.n	8006264 <HAL_CAN_IRQHandler+0x164>
 800624a:	697b      	ldr	r3, [r7, #20]
 800624c:	f003 0310 	and.w	r3, r3, #16
 8006250:	2b00      	cmp	r3, #0
 8006252:	d007      	beq.n	8006264 <HAL_CAN_IRQHandler+0x164>
 8006254:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006256:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800625a:	627b      	str	r3, [r7, #36]	@ 0x24
 800625c:	687b      	ldr	r3, [r7, #4]
 800625e:	681b      	ldr	r3, [r3, #0]
 8006260:	2210      	movs	r2, #16
 8006262:	60da      	str	r2, [r3, #12]
 8006264:	6a3b      	ldr	r3, [r7, #32]
 8006266:	f003 0304 	and.w	r3, r3, #4
 800626a:	2b00      	cmp	r3, #0
 800626c:	d00b      	beq.n	8006286 <HAL_CAN_IRQHandler+0x186>
 800626e:	697b      	ldr	r3, [r7, #20]
 8006270:	f003 0308 	and.w	r3, r3, #8
 8006274:	2b00      	cmp	r3, #0
 8006276:	d006      	beq.n	8006286 <HAL_CAN_IRQHandler+0x186>
 8006278:	687b      	ldr	r3, [r7, #4]
 800627a:	681b      	ldr	r3, [r3, #0]
 800627c:	2208      	movs	r2, #8
 800627e:	60da      	str	r2, [r3, #12]
 8006280:	6878      	ldr	r0, [r7, #4]
 8006282:	f000 f930 	bl	80064e6 <HAL_CAN_RxFifo0FullCallback>
 8006286:	6a3b      	ldr	r3, [r7, #32]
 8006288:	f003 0302 	and.w	r3, r3, #2
 800628c:	2b00      	cmp	r3, #0
 800628e:	d009      	beq.n	80062a4 <HAL_CAN_IRQHandler+0x1a4>
 8006290:	687b      	ldr	r3, [r7, #4]
 8006292:	681b      	ldr	r3, [r3, #0]
 8006294:	68db      	ldr	r3, [r3, #12]
 8006296:	f003 0303 	and.w	r3, r3, #3
 800629a:	2b00      	cmp	r3, #0
 800629c:	d002      	beq.n	80062a4 <HAL_CAN_IRQHandler+0x1a4>
 800629e:	6878      	ldr	r0, [r7, #4]
 80062a0:	f7fa fda4 	bl	8000dec <HAL_CAN_RxFifo0MsgPendingCallback>
 80062a4:	6a3b      	ldr	r3, [r7, #32]
 80062a6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80062aa:	2b00      	cmp	r3, #0
 80062ac:	d00c      	beq.n	80062c8 <HAL_CAN_IRQHandler+0x1c8>
 80062ae:	693b      	ldr	r3, [r7, #16]
 80062b0:	f003 0310 	and.w	r3, r3, #16
 80062b4:	2b00      	cmp	r3, #0
 80062b6:	d007      	beq.n	80062c8 <HAL_CAN_IRQHandler+0x1c8>
 80062b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80062ba:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80062be:	627b      	str	r3, [r7, #36]	@ 0x24
 80062c0:	687b      	ldr	r3, [r7, #4]
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	2210      	movs	r2, #16
 80062c6:	611a      	str	r2, [r3, #16]
 80062c8:	6a3b      	ldr	r3, [r7, #32]
 80062ca:	f003 0320 	and.w	r3, r3, #32
 80062ce:	2b00      	cmp	r3, #0
 80062d0:	d00b      	beq.n	80062ea <HAL_CAN_IRQHandler+0x1ea>
 80062d2:	693b      	ldr	r3, [r7, #16]
 80062d4:	f003 0308 	and.w	r3, r3, #8
 80062d8:	2b00      	cmp	r3, #0
 80062da:	d006      	beq.n	80062ea <HAL_CAN_IRQHandler+0x1ea>
 80062dc:	687b      	ldr	r3, [r7, #4]
 80062de:	681b      	ldr	r3, [r3, #0]
 80062e0:	2208      	movs	r2, #8
 80062e2:	611a      	str	r2, [r3, #16]
 80062e4:	6878      	ldr	r0, [r7, #4]
 80062e6:	f000 f912 	bl	800650e <HAL_CAN_RxFifo1FullCallback>
 80062ea:	6a3b      	ldr	r3, [r7, #32]
 80062ec:	f003 0310 	and.w	r3, r3, #16
 80062f0:	2b00      	cmp	r3, #0
 80062f2:	d009      	beq.n	8006308 <HAL_CAN_IRQHandler+0x208>
 80062f4:	687b      	ldr	r3, [r7, #4]
 80062f6:	681b      	ldr	r3, [r3, #0]
 80062f8:	691b      	ldr	r3, [r3, #16]
 80062fa:	f003 0303 	and.w	r3, r3, #3
 80062fe:	2b00      	cmp	r3, #0
 8006300:	d002      	beq.n	8006308 <HAL_CAN_IRQHandler+0x208>
 8006302:	6878      	ldr	r0, [r7, #4]
 8006304:	f000 f8f9 	bl	80064fa <HAL_CAN_RxFifo1MsgPendingCallback>
 8006308:	6a3b      	ldr	r3, [r7, #32]
 800630a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800630e:	2b00      	cmp	r3, #0
 8006310:	d00b      	beq.n	800632a <HAL_CAN_IRQHandler+0x22a>
 8006312:	69fb      	ldr	r3, [r7, #28]
 8006314:	f003 0310 	and.w	r3, r3, #16
 8006318:	2b00      	cmp	r3, #0
 800631a:	d006      	beq.n	800632a <HAL_CAN_IRQHandler+0x22a>
 800631c:	687b      	ldr	r3, [r7, #4]
 800631e:	681b      	ldr	r3, [r3, #0]
 8006320:	2210      	movs	r2, #16
 8006322:	605a      	str	r2, [r3, #4]
 8006324:	6878      	ldr	r0, [r7, #4]
 8006326:	f000 f8fc 	bl	8006522 <HAL_CAN_SleepCallback>
 800632a:	6a3b      	ldr	r3, [r7, #32]
 800632c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8006330:	2b00      	cmp	r3, #0
 8006332:	d00b      	beq.n	800634c <HAL_CAN_IRQHandler+0x24c>
 8006334:	69fb      	ldr	r3, [r7, #28]
 8006336:	f003 0308 	and.w	r3, r3, #8
 800633a:	2b00      	cmp	r3, #0
 800633c:	d006      	beq.n	800634c <HAL_CAN_IRQHandler+0x24c>
 800633e:	687b      	ldr	r3, [r7, #4]
 8006340:	681b      	ldr	r3, [r3, #0]
 8006342:	2208      	movs	r2, #8
 8006344:	605a      	str	r2, [r3, #4]
 8006346:	6878      	ldr	r0, [r7, #4]
 8006348:	f000 f8f5 	bl	8006536 <HAL_CAN_WakeUpFromRxMsgCallback>
 800634c:	6a3b      	ldr	r3, [r7, #32]
 800634e:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8006352:	2b00      	cmp	r3, #0
 8006354:	d07b      	beq.n	800644e <HAL_CAN_IRQHandler+0x34e>
 8006356:	69fb      	ldr	r3, [r7, #28]
 8006358:	f003 0304 	and.w	r3, r3, #4
 800635c:	2b00      	cmp	r3, #0
 800635e:	d072      	beq.n	8006446 <HAL_CAN_IRQHandler+0x346>
 8006360:	6a3b      	ldr	r3, [r7, #32]
 8006362:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006366:	2b00      	cmp	r3, #0
 8006368:	d008      	beq.n	800637c <HAL_CAN_IRQHandler+0x27c>
 800636a:	68fb      	ldr	r3, [r7, #12]
 800636c:	f003 0301 	and.w	r3, r3, #1
 8006370:	2b00      	cmp	r3, #0
 8006372:	d003      	beq.n	800637c <HAL_CAN_IRQHandler+0x27c>
 8006374:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006376:	f043 0301 	orr.w	r3, r3, #1
 800637a:	627b      	str	r3, [r7, #36]	@ 0x24
 800637c:	6a3b      	ldr	r3, [r7, #32]
 800637e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006382:	2b00      	cmp	r3, #0
 8006384:	d008      	beq.n	8006398 <HAL_CAN_IRQHandler+0x298>
 8006386:	68fb      	ldr	r3, [r7, #12]
 8006388:	f003 0302 	and.w	r3, r3, #2
 800638c:	2b00      	cmp	r3, #0
 800638e:	d003      	beq.n	8006398 <HAL_CAN_IRQHandler+0x298>
 8006390:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006392:	f043 0302 	orr.w	r3, r3, #2
 8006396:	627b      	str	r3, [r7, #36]	@ 0x24
 8006398:	6a3b      	ldr	r3, [r7, #32]
 800639a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800639e:	2b00      	cmp	r3, #0
 80063a0:	d008      	beq.n	80063b4 <HAL_CAN_IRQHandler+0x2b4>
 80063a2:	68fb      	ldr	r3, [r7, #12]
 80063a4:	f003 0304 	and.w	r3, r3, #4
 80063a8:	2b00      	cmp	r3, #0
 80063aa:	d003      	beq.n	80063b4 <HAL_CAN_IRQHandler+0x2b4>
 80063ac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80063ae:	f043 0304 	orr.w	r3, r3, #4
 80063b2:	627b      	str	r3, [r7, #36]	@ 0x24
 80063b4:	6a3b      	ldr	r3, [r7, #32]
 80063b6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80063ba:	2b00      	cmp	r3, #0
 80063bc:	d043      	beq.n	8006446 <HAL_CAN_IRQHandler+0x346>
 80063be:	68fb      	ldr	r3, [r7, #12]
 80063c0:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80063c4:	2b00      	cmp	r3, #0
 80063c6:	d03e      	beq.n	8006446 <HAL_CAN_IRQHandler+0x346>
 80063c8:	68fb      	ldr	r3, [r7, #12]
 80063ca:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80063ce:	2b60      	cmp	r3, #96	@ 0x60
 80063d0:	d02b      	beq.n	800642a <HAL_CAN_IRQHandler+0x32a>
 80063d2:	2b60      	cmp	r3, #96	@ 0x60
 80063d4:	d82e      	bhi.n	8006434 <HAL_CAN_IRQHandler+0x334>
 80063d6:	2b50      	cmp	r3, #80	@ 0x50
 80063d8:	d022      	beq.n	8006420 <HAL_CAN_IRQHandler+0x320>
 80063da:	2b50      	cmp	r3, #80	@ 0x50
 80063dc:	d82a      	bhi.n	8006434 <HAL_CAN_IRQHandler+0x334>
 80063de:	2b40      	cmp	r3, #64	@ 0x40
 80063e0:	d019      	beq.n	8006416 <HAL_CAN_IRQHandler+0x316>
 80063e2:	2b40      	cmp	r3, #64	@ 0x40
 80063e4:	d826      	bhi.n	8006434 <HAL_CAN_IRQHandler+0x334>
 80063e6:	2b30      	cmp	r3, #48	@ 0x30
 80063e8:	d010      	beq.n	800640c <HAL_CAN_IRQHandler+0x30c>
 80063ea:	2b30      	cmp	r3, #48	@ 0x30
 80063ec:	d822      	bhi.n	8006434 <HAL_CAN_IRQHandler+0x334>
 80063ee:	2b10      	cmp	r3, #16
 80063f0:	d002      	beq.n	80063f8 <HAL_CAN_IRQHandler+0x2f8>
 80063f2:	2b20      	cmp	r3, #32
 80063f4:	d005      	beq.n	8006402 <HAL_CAN_IRQHandler+0x302>
 80063f6:	e01d      	b.n	8006434 <HAL_CAN_IRQHandler+0x334>
 80063f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80063fa:	f043 0308 	orr.w	r3, r3, #8
 80063fe:	627b      	str	r3, [r7, #36]	@ 0x24
 8006400:	e019      	b.n	8006436 <HAL_CAN_IRQHandler+0x336>
 8006402:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006404:	f043 0310 	orr.w	r3, r3, #16
 8006408:	627b      	str	r3, [r7, #36]	@ 0x24
 800640a:	e014      	b.n	8006436 <HAL_CAN_IRQHandler+0x336>
 800640c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800640e:	f043 0320 	orr.w	r3, r3, #32
 8006412:	627b      	str	r3, [r7, #36]	@ 0x24
 8006414:	e00f      	b.n	8006436 <HAL_CAN_IRQHandler+0x336>
 8006416:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006418:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800641c:	627b      	str	r3, [r7, #36]	@ 0x24
 800641e:	e00a      	b.n	8006436 <HAL_CAN_IRQHandler+0x336>
 8006420:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006422:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006426:	627b      	str	r3, [r7, #36]	@ 0x24
 8006428:	e005      	b.n	8006436 <HAL_CAN_IRQHandler+0x336>
 800642a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800642c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006430:	627b      	str	r3, [r7, #36]	@ 0x24
 8006432:	e000      	b.n	8006436 <HAL_CAN_IRQHandler+0x336>
 8006434:	bf00      	nop
 8006436:	687b      	ldr	r3, [r7, #4]
 8006438:	681b      	ldr	r3, [r3, #0]
 800643a:	699a      	ldr	r2, [r3, #24]
 800643c:	687b      	ldr	r3, [r7, #4]
 800643e:	681b      	ldr	r3, [r3, #0]
 8006440:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8006444:	619a      	str	r2, [r3, #24]
 8006446:	687b      	ldr	r3, [r7, #4]
 8006448:	681b      	ldr	r3, [r3, #0]
 800644a:	2204      	movs	r2, #4
 800644c:	605a      	str	r2, [r3, #4]
 800644e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006450:	2b00      	cmp	r3, #0
 8006452:	d008      	beq.n	8006466 <HAL_CAN_IRQHandler+0x366>
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8006458:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800645a:	431a      	orrs	r2, r3
 800645c:	687b      	ldr	r3, [r7, #4]
 800645e:	625a      	str	r2, [r3, #36]	@ 0x24
 8006460:	6878      	ldr	r0, [r7, #4]
 8006462:	f000 f872 	bl	800654a <HAL_CAN_ErrorCallback>
 8006466:	bf00      	nop
 8006468:	3728      	adds	r7, #40	@ 0x28
 800646a:	46bd      	mov	sp, r7
 800646c:	bd80      	pop	{r7, pc}

0800646e <HAL_CAN_TxMailbox0CompleteCallback>:
 800646e:	b480      	push	{r7}
 8006470:	b083      	sub	sp, #12
 8006472:	af00      	add	r7, sp, #0
 8006474:	6078      	str	r0, [r7, #4]
 8006476:	bf00      	nop
 8006478:	370c      	adds	r7, #12
 800647a:	46bd      	mov	sp, r7
 800647c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006480:	4770      	bx	lr

08006482 <HAL_CAN_TxMailbox1CompleteCallback>:
 8006482:	b480      	push	{r7}
 8006484:	b083      	sub	sp, #12
 8006486:	af00      	add	r7, sp, #0
 8006488:	6078      	str	r0, [r7, #4]
 800648a:	bf00      	nop
 800648c:	370c      	adds	r7, #12
 800648e:	46bd      	mov	sp, r7
 8006490:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006494:	4770      	bx	lr

08006496 <HAL_CAN_TxMailbox2CompleteCallback>:
 8006496:	b480      	push	{r7}
 8006498:	b083      	sub	sp, #12
 800649a:	af00      	add	r7, sp, #0
 800649c:	6078      	str	r0, [r7, #4]
 800649e:	bf00      	nop
 80064a0:	370c      	adds	r7, #12
 80064a2:	46bd      	mov	sp, r7
 80064a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064a8:	4770      	bx	lr

080064aa <HAL_CAN_TxMailbox0AbortCallback>:
 80064aa:	b480      	push	{r7}
 80064ac:	b083      	sub	sp, #12
 80064ae:	af00      	add	r7, sp, #0
 80064b0:	6078      	str	r0, [r7, #4]
 80064b2:	bf00      	nop
 80064b4:	370c      	adds	r7, #12
 80064b6:	46bd      	mov	sp, r7
 80064b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064bc:	4770      	bx	lr

080064be <HAL_CAN_TxMailbox1AbortCallback>:
 80064be:	b480      	push	{r7}
 80064c0:	b083      	sub	sp, #12
 80064c2:	af00      	add	r7, sp, #0
 80064c4:	6078      	str	r0, [r7, #4]
 80064c6:	bf00      	nop
 80064c8:	370c      	adds	r7, #12
 80064ca:	46bd      	mov	sp, r7
 80064cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064d0:	4770      	bx	lr

080064d2 <HAL_CAN_TxMailbox2AbortCallback>:
 80064d2:	b480      	push	{r7}
 80064d4:	b083      	sub	sp, #12
 80064d6:	af00      	add	r7, sp, #0
 80064d8:	6078      	str	r0, [r7, #4]
 80064da:	bf00      	nop
 80064dc:	370c      	adds	r7, #12
 80064de:	46bd      	mov	sp, r7
 80064e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064e4:	4770      	bx	lr

080064e6 <HAL_CAN_RxFifo0FullCallback>:
 80064e6:	b480      	push	{r7}
 80064e8:	b083      	sub	sp, #12
 80064ea:	af00      	add	r7, sp, #0
 80064ec:	6078      	str	r0, [r7, #4]
 80064ee:	bf00      	nop
 80064f0:	370c      	adds	r7, #12
 80064f2:	46bd      	mov	sp, r7
 80064f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064f8:	4770      	bx	lr

080064fa <HAL_CAN_RxFifo1MsgPendingCallback>:
 80064fa:	b480      	push	{r7}
 80064fc:	b083      	sub	sp, #12
 80064fe:	af00      	add	r7, sp, #0
 8006500:	6078      	str	r0, [r7, #4]
 8006502:	bf00      	nop
 8006504:	370c      	adds	r7, #12
 8006506:	46bd      	mov	sp, r7
 8006508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800650c:	4770      	bx	lr

0800650e <HAL_CAN_RxFifo1FullCallback>:
 800650e:	b480      	push	{r7}
 8006510:	b083      	sub	sp, #12
 8006512:	af00      	add	r7, sp, #0
 8006514:	6078      	str	r0, [r7, #4]
 8006516:	bf00      	nop
 8006518:	370c      	adds	r7, #12
 800651a:	46bd      	mov	sp, r7
 800651c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006520:	4770      	bx	lr

08006522 <HAL_CAN_SleepCallback>:
 8006522:	b480      	push	{r7}
 8006524:	b083      	sub	sp, #12
 8006526:	af00      	add	r7, sp, #0
 8006528:	6078      	str	r0, [r7, #4]
 800652a:	bf00      	nop
 800652c:	370c      	adds	r7, #12
 800652e:	46bd      	mov	sp, r7
 8006530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006534:	4770      	bx	lr

08006536 <HAL_CAN_WakeUpFromRxMsgCallback>:
 8006536:	b480      	push	{r7}
 8006538:	b083      	sub	sp, #12
 800653a:	af00      	add	r7, sp, #0
 800653c:	6078      	str	r0, [r7, #4]
 800653e:	bf00      	nop
 8006540:	370c      	adds	r7, #12
 8006542:	46bd      	mov	sp, r7
 8006544:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006548:	4770      	bx	lr

0800654a <HAL_CAN_ErrorCallback>:
 800654a:	b480      	push	{r7}
 800654c:	b083      	sub	sp, #12
 800654e:	af00      	add	r7, sp, #0
 8006550:	6078      	str	r0, [r7, #4]
 8006552:	bf00      	nop
 8006554:	370c      	adds	r7, #12
 8006556:	46bd      	mov	sp, r7
 8006558:	f85d 7b04 	ldr.w	r7, [sp], #4
 800655c:	4770      	bx	lr
	...

08006560 <__NVIC_SetPriorityGrouping>:
 8006560:	b480      	push	{r7}
 8006562:	b085      	sub	sp, #20
 8006564:	af00      	add	r7, sp, #0
 8006566:	6078      	str	r0, [r7, #4]
 8006568:	687b      	ldr	r3, [r7, #4]
 800656a:	f003 0307 	and.w	r3, r3, #7
 800656e:	60fb      	str	r3, [r7, #12]
 8006570:	4b0b      	ldr	r3, [pc, #44]	@ (80065a0 <__NVIC_SetPriorityGrouping+0x40>)
 8006572:	68db      	ldr	r3, [r3, #12]
 8006574:	60bb      	str	r3, [r7, #8]
 8006576:	68ba      	ldr	r2, [r7, #8]
 8006578:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800657c:	4013      	ands	r3, r2
 800657e:	60bb      	str	r3, [r7, #8]
 8006580:	68fb      	ldr	r3, [r7, #12]
 8006582:	021a      	lsls	r2, r3, #8
 8006584:	68bb      	ldr	r3, [r7, #8]
 8006586:	431a      	orrs	r2, r3
 8006588:	4b06      	ldr	r3, [pc, #24]	@ (80065a4 <__NVIC_SetPriorityGrouping+0x44>)
 800658a:	4313      	orrs	r3, r2
 800658c:	60bb      	str	r3, [r7, #8]
 800658e:	4a04      	ldr	r2, [pc, #16]	@ (80065a0 <__NVIC_SetPriorityGrouping+0x40>)
 8006590:	68bb      	ldr	r3, [r7, #8]
 8006592:	60d3      	str	r3, [r2, #12]
 8006594:	bf00      	nop
 8006596:	3714      	adds	r7, #20
 8006598:	46bd      	mov	sp, r7
 800659a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800659e:	4770      	bx	lr
 80065a0:	e000ed00 	.word	0xe000ed00
 80065a4:	05fa0000 	.word	0x05fa0000

080065a8 <__NVIC_GetPriorityGrouping>:
 80065a8:	b480      	push	{r7}
 80065aa:	af00      	add	r7, sp, #0
 80065ac:	4b04      	ldr	r3, [pc, #16]	@ (80065c0 <__NVIC_GetPriorityGrouping+0x18>)
 80065ae:	68db      	ldr	r3, [r3, #12]
 80065b0:	0a1b      	lsrs	r3, r3, #8
 80065b2:	f003 0307 	and.w	r3, r3, #7
 80065b6:	4618      	mov	r0, r3
 80065b8:	46bd      	mov	sp, r7
 80065ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065be:	4770      	bx	lr
 80065c0:	e000ed00 	.word	0xe000ed00

080065c4 <__NVIC_EnableIRQ>:
 80065c4:	b480      	push	{r7}
 80065c6:	b083      	sub	sp, #12
 80065c8:	af00      	add	r7, sp, #0
 80065ca:	4603      	mov	r3, r0
 80065cc:	71fb      	strb	r3, [r7, #7]
 80065ce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80065d2:	2b00      	cmp	r3, #0
 80065d4:	db0b      	blt.n	80065ee <__NVIC_EnableIRQ+0x2a>
 80065d6:	79fb      	ldrb	r3, [r7, #7]
 80065d8:	f003 021f 	and.w	r2, r3, #31
 80065dc:	4907      	ldr	r1, [pc, #28]	@ (80065fc <__NVIC_EnableIRQ+0x38>)
 80065de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80065e2:	095b      	lsrs	r3, r3, #5
 80065e4:	2001      	movs	r0, #1
 80065e6:	fa00 f202 	lsl.w	r2, r0, r2
 80065ea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80065ee:	bf00      	nop
 80065f0:	370c      	adds	r7, #12
 80065f2:	46bd      	mov	sp, r7
 80065f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065f8:	4770      	bx	lr
 80065fa:	bf00      	nop
 80065fc:	e000e100 	.word	0xe000e100

08006600 <__NVIC_SetPriority>:
 8006600:	b480      	push	{r7}
 8006602:	b083      	sub	sp, #12
 8006604:	af00      	add	r7, sp, #0
 8006606:	4603      	mov	r3, r0
 8006608:	6039      	str	r1, [r7, #0]
 800660a:	71fb      	strb	r3, [r7, #7]
 800660c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006610:	2b00      	cmp	r3, #0
 8006612:	db0a      	blt.n	800662a <__NVIC_SetPriority+0x2a>
 8006614:	683b      	ldr	r3, [r7, #0]
 8006616:	b2da      	uxtb	r2, r3
 8006618:	490c      	ldr	r1, [pc, #48]	@ (800664c <__NVIC_SetPriority+0x4c>)
 800661a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800661e:	0112      	lsls	r2, r2, #4
 8006620:	b2d2      	uxtb	r2, r2
 8006622:	440b      	add	r3, r1
 8006624:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8006628:	e00a      	b.n	8006640 <__NVIC_SetPriority+0x40>
 800662a:	683b      	ldr	r3, [r7, #0]
 800662c:	b2da      	uxtb	r2, r3
 800662e:	4908      	ldr	r1, [pc, #32]	@ (8006650 <__NVIC_SetPriority+0x50>)
 8006630:	79fb      	ldrb	r3, [r7, #7]
 8006632:	f003 030f 	and.w	r3, r3, #15
 8006636:	3b04      	subs	r3, #4
 8006638:	0112      	lsls	r2, r2, #4
 800663a:	b2d2      	uxtb	r2, r2
 800663c:	440b      	add	r3, r1
 800663e:	761a      	strb	r2, [r3, #24]
 8006640:	bf00      	nop
 8006642:	370c      	adds	r7, #12
 8006644:	46bd      	mov	sp, r7
 8006646:	f85d 7b04 	ldr.w	r7, [sp], #4
 800664a:	4770      	bx	lr
 800664c:	e000e100 	.word	0xe000e100
 8006650:	e000ed00 	.word	0xe000ed00

08006654 <NVIC_EncodePriority>:
 8006654:	b480      	push	{r7}
 8006656:	b089      	sub	sp, #36	@ 0x24
 8006658:	af00      	add	r7, sp, #0
 800665a:	60f8      	str	r0, [r7, #12]
 800665c:	60b9      	str	r1, [r7, #8]
 800665e:	607a      	str	r2, [r7, #4]
 8006660:	68fb      	ldr	r3, [r7, #12]
 8006662:	f003 0307 	and.w	r3, r3, #7
 8006666:	61fb      	str	r3, [r7, #28]
 8006668:	69fb      	ldr	r3, [r7, #28]
 800666a:	f1c3 0307 	rsb	r3, r3, #7
 800666e:	2b04      	cmp	r3, #4
 8006670:	bf28      	it	cs
 8006672:	2304      	movcs	r3, #4
 8006674:	61bb      	str	r3, [r7, #24]
 8006676:	69fb      	ldr	r3, [r7, #28]
 8006678:	3304      	adds	r3, #4
 800667a:	2b06      	cmp	r3, #6
 800667c:	d902      	bls.n	8006684 <NVIC_EncodePriority+0x30>
 800667e:	69fb      	ldr	r3, [r7, #28]
 8006680:	3b03      	subs	r3, #3
 8006682:	e000      	b.n	8006686 <NVIC_EncodePriority+0x32>
 8006684:	2300      	movs	r3, #0
 8006686:	617b      	str	r3, [r7, #20]
 8006688:	f04f 32ff 	mov.w	r2, #4294967295
 800668c:	69bb      	ldr	r3, [r7, #24]
 800668e:	fa02 f303 	lsl.w	r3, r2, r3
 8006692:	43da      	mvns	r2, r3
 8006694:	68bb      	ldr	r3, [r7, #8]
 8006696:	401a      	ands	r2, r3
 8006698:	697b      	ldr	r3, [r7, #20]
 800669a:	409a      	lsls	r2, r3
 800669c:	f04f 31ff 	mov.w	r1, #4294967295
 80066a0:	697b      	ldr	r3, [r7, #20]
 80066a2:	fa01 f303 	lsl.w	r3, r1, r3
 80066a6:	43d9      	mvns	r1, r3
 80066a8:	687b      	ldr	r3, [r7, #4]
 80066aa:	400b      	ands	r3, r1
 80066ac:	4313      	orrs	r3, r2
 80066ae:	4618      	mov	r0, r3
 80066b0:	3724      	adds	r7, #36	@ 0x24
 80066b2:	46bd      	mov	sp, r7
 80066b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066b8:	4770      	bx	lr
	...

080066bc <SysTick_Config>:
 80066bc:	b580      	push	{r7, lr}
 80066be:	b082      	sub	sp, #8
 80066c0:	af00      	add	r7, sp, #0
 80066c2:	6078      	str	r0, [r7, #4]
 80066c4:	687b      	ldr	r3, [r7, #4]
 80066c6:	3b01      	subs	r3, #1
 80066c8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80066cc:	d301      	bcc.n	80066d2 <SysTick_Config+0x16>
 80066ce:	2301      	movs	r3, #1
 80066d0:	e00f      	b.n	80066f2 <SysTick_Config+0x36>
 80066d2:	4a0a      	ldr	r2, [pc, #40]	@ (80066fc <SysTick_Config+0x40>)
 80066d4:	687b      	ldr	r3, [r7, #4]
 80066d6:	3b01      	subs	r3, #1
 80066d8:	6053      	str	r3, [r2, #4]
 80066da:	210f      	movs	r1, #15
 80066dc:	f04f 30ff 	mov.w	r0, #4294967295
 80066e0:	f7ff ff8e 	bl	8006600 <__NVIC_SetPriority>
 80066e4:	4b05      	ldr	r3, [pc, #20]	@ (80066fc <SysTick_Config+0x40>)
 80066e6:	2200      	movs	r2, #0
 80066e8:	609a      	str	r2, [r3, #8]
 80066ea:	4b04      	ldr	r3, [pc, #16]	@ (80066fc <SysTick_Config+0x40>)
 80066ec:	2207      	movs	r2, #7
 80066ee:	601a      	str	r2, [r3, #0]
 80066f0:	2300      	movs	r3, #0
 80066f2:	4618      	mov	r0, r3
 80066f4:	3708      	adds	r7, #8
 80066f6:	46bd      	mov	sp, r7
 80066f8:	bd80      	pop	{r7, pc}
 80066fa:	bf00      	nop
 80066fc:	e000e010 	.word	0xe000e010

08006700 <HAL_NVIC_SetPriorityGrouping>:
 8006700:	b580      	push	{r7, lr}
 8006702:	b082      	sub	sp, #8
 8006704:	af00      	add	r7, sp, #0
 8006706:	6078      	str	r0, [r7, #4]
 8006708:	6878      	ldr	r0, [r7, #4]
 800670a:	f7ff ff29 	bl	8006560 <__NVIC_SetPriorityGrouping>
 800670e:	bf00      	nop
 8006710:	3708      	adds	r7, #8
 8006712:	46bd      	mov	sp, r7
 8006714:	bd80      	pop	{r7, pc}

08006716 <HAL_NVIC_SetPriority>:
 8006716:	b580      	push	{r7, lr}
 8006718:	b086      	sub	sp, #24
 800671a:	af00      	add	r7, sp, #0
 800671c:	4603      	mov	r3, r0
 800671e:	60b9      	str	r1, [r7, #8]
 8006720:	607a      	str	r2, [r7, #4]
 8006722:	73fb      	strb	r3, [r7, #15]
 8006724:	2300      	movs	r3, #0
 8006726:	617b      	str	r3, [r7, #20]
 8006728:	f7ff ff3e 	bl	80065a8 <__NVIC_GetPriorityGrouping>
 800672c:	6178      	str	r0, [r7, #20]
 800672e:	687a      	ldr	r2, [r7, #4]
 8006730:	68b9      	ldr	r1, [r7, #8]
 8006732:	6978      	ldr	r0, [r7, #20]
 8006734:	f7ff ff8e 	bl	8006654 <NVIC_EncodePriority>
 8006738:	4602      	mov	r2, r0
 800673a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800673e:	4611      	mov	r1, r2
 8006740:	4618      	mov	r0, r3
 8006742:	f7ff ff5d 	bl	8006600 <__NVIC_SetPriority>
 8006746:	bf00      	nop
 8006748:	3718      	adds	r7, #24
 800674a:	46bd      	mov	sp, r7
 800674c:	bd80      	pop	{r7, pc}

0800674e <HAL_NVIC_EnableIRQ>:
 800674e:	b580      	push	{r7, lr}
 8006750:	b082      	sub	sp, #8
 8006752:	af00      	add	r7, sp, #0
 8006754:	4603      	mov	r3, r0
 8006756:	71fb      	strb	r3, [r7, #7]
 8006758:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800675c:	4618      	mov	r0, r3
 800675e:	f7ff ff31 	bl	80065c4 <__NVIC_EnableIRQ>
 8006762:	bf00      	nop
 8006764:	3708      	adds	r7, #8
 8006766:	46bd      	mov	sp, r7
 8006768:	bd80      	pop	{r7, pc}

0800676a <HAL_SYSTICK_Config>:
 800676a:	b580      	push	{r7, lr}
 800676c:	b082      	sub	sp, #8
 800676e:	af00      	add	r7, sp, #0
 8006770:	6078      	str	r0, [r7, #4]
 8006772:	6878      	ldr	r0, [r7, #4]
 8006774:	f7ff ffa2 	bl	80066bc <SysTick_Config>
 8006778:	4603      	mov	r3, r0
 800677a:	4618      	mov	r0, r3
 800677c:	3708      	adds	r7, #8
 800677e:	46bd      	mov	sp, r7
 8006780:	bd80      	pop	{r7, pc}
	...

08006784 <HAL_DMA_Init>:
 8006784:	b580      	push	{r7, lr}
 8006786:	b086      	sub	sp, #24
 8006788:	af00      	add	r7, sp, #0
 800678a:	6078      	str	r0, [r7, #4]
 800678c:	2300      	movs	r3, #0
 800678e:	617b      	str	r3, [r7, #20]
 8006790:	f7fe fc64 	bl	800505c <HAL_GetTick>
 8006794:	6138      	str	r0, [r7, #16]
 8006796:	687b      	ldr	r3, [r7, #4]
 8006798:	2b00      	cmp	r3, #0
 800679a:	d101      	bne.n	80067a0 <HAL_DMA_Init+0x1c>
 800679c:	2301      	movs	r3, #1
 800679e:	e099      	b.n	80068d4 <HAL_DMA_Init+0x150>
 80067a0:	687b      	ldr	r3, [r7, #4]
 80067a2:	2202      	movs	r2, #2
 80067a4:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80067a8:	687b      	ldr	r3, [r7, #4]
 80067aa:	2200      	movs	r2, #0
 80067ac:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80067b0:	687b      	ldr	r3, [r7, #4]
 80067b2:	681b      	ldr	r3, [r3, #0]
 80067b4:	681a      	ldr	r2, [r3, #0]
 80067b6:	687b      	ldr	r3, [r7, #4]
 80067b8:	681b      	ldr	r3, [r3, #0]
 80067ba:	f022 0201 	bic.w	r2, r2, #1
 80067be:	601a      	str	r2, [r3, #0]
 80067c0:	e00f      	b.n	80067e2 <HAL_DMA_Init+0x5e>
 80067c2:	f7fe fc4b 	bl	800505c <HAL_GetTick>
 80067c6:	4602      	mov	r2, r0
 80067c8:	693b      	ldr	r3, [r7, #16]
 80067ca:	1ad3      	subs	r3, r2, r3
 80067cc:	2b05      	cmp	r3, #5
 80067ce:	d908      	bls.n	80067e2 <HAL_DMA_Init+0x5e>
 80067d0:	687b      	ldr	r3, [r7, #4]
 80067d2:	2220      	movs	r2, #32
 80067d4:	655a      	str	r2, [r3, #84]	@ 0x54
 80067d6:	687b      	ldr	r3, [r7, #4]
 80067d8:	2203      	movs	r2, #3
 80067da:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80067de:	2303      	movs	r3, #3
 80067e0:	e078      	b.n	80068d4 <HAL_DMA_Init+0x150>
 80067e2:	687b      	ldr	r3, [r7, #4]
 80067e4:	681b      	ldr	r3, [r3, #0]
 80067e6:	681b      	ldr	r3, [r3, #0]
 80067e8:	f003 0301 	and.w	r3, r3, #1
 80067ec:	2b00      	cmp	r3, #0
 80067ee:	d1e8      	bne.n	80067c2 <HAL_DMA_Init+0x3e>
 80067f0:	687b      	ldr	r3, [r7, #4]
 80067f2:	681b      	ldr	r3, [r3, #0]
 80067f4:	681b      	ldr	r3, [r3, #0]
 80067f6:	617b      	str	r3, [r7, #20]
 80067f8:	697a      	ldr	r2, [r7, #20]
 80067fa:	4b38      	ldr	r3, [pc, #224]	@ (80068dc <HAL_DMA_Init+0x158>)
 80067fc:	4013      	ands	r3, r2
 80067fe:	617b      	str	r3, [r7, #20]
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	685a      	ldr	r2, [r3, #4]
 8006804:	687b      	ldr	r3, [r7, #4]
 8006806:	689b      	ldr	r3, [r3, #8]
 8006808:	431a      	orrs	r2, r3
 800680a:	687b      	ldr	r3, [r7, #4]
 800680c:	68db      	ldr	r3, [r3, #12]
 800680e:	431a      	orrs	r2, r3
 8006810:	687b      	ldr	r3, [r7, #4]
 8006812:	691b      	ldr	r3, [r3, #16]
 8006814:	431a      	orrs	r2, r3
 8006816:	687b      	ldr	r3, [r7, #4]
 8006818:	695b      	ldr	r3, [r3, #20]
 800681a:	431a      	orrs	r2, r3
 800681c:	687b      	ldr	r3, [r7, #4]
 800681e:	699b      	ldr	r3, [r3, #24]
 8006820:	431a      	orrs	r2, r3
 8006822:	687b      	ldr	r3, [r7, #4]
 8006824:	69db      	ldr	r3, [r3, #28]
 8006826:	431a      	orrs	r2, r3
 8006828:	687b      	ldr	r3, [r7, #4]
 800682a:	6a1b      	ldr	r3, [r3, #32]
 800682c:	4313      	orrs	r3, r2
 800682e:	697a      	ldr	r2, [r7, #20]
 8006830:	4313      	orrs	r3, r2
 8006832:	617b      	str	r3, [r7, #20]
 8006834:	687b      	ldr	r3, [r7, #4]
 8006836:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006838:	2b04      	cmp	r3, #4
 800683a:	d107      	bne.n	800684c <HAL_DMA_Init+0xc8>
 800683c:	687b      	ldr	r3, [r7, #4]
 800683e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8006840:	687b      	ldr	r3, [r7, #4]
 8006842:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006844:	4313      	orrs	r3, r2
 8006846:	697a      	ldr	r2, [r7, #20]
 8006848:	4313      	orrs	r3, r2
 800684a:	617b      	str	r3, [r7, #20]
 800684c:	687b      	ldr	r3, [r7, #4]
 800684e:	681b      	ldr	r3, [r3, #0]
 8006850:	697a      	ldr	r2, [r7, #20]
 8006852:	601a      	str	r2, [r3, #0]
 8006854:	687b      	ldr	r3, [r7, #4]
 8006856:	681b      	ldr	r3, [r3, #0]
 8006858:	695b      	ldr	r3, [r3, #20]
 800685a:	617b      	str	r3, [r7, #20]
 800685c:	697b      	ldr	r3, [r7, #20]
 800685e:	f023 0307 	bic.w	r3, r3, #7
 8006862:	617b      	str	r3, [r7, #20]
 8006864:	687b      	ldr	r3, [r7, #4]
 8006866:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006868:	697a      	ldr	r2, [r7, #20]
 800686a:	4313      	orrs	r3, r2
 800686c:	617b      	str	r3, [r7, #20]
 800686e:	687b      	ldr	r3, [r7, #4]
 8006870:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006872:	2b04      	cmp	r3, #4
 8006874:	d117      	bne.n	80068a6 <HAL_DMA_Init+0x122>
 8006876:	687b      	ldr	r3, [r7, #4]
 8006878:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800687a:	697a      	ldr	r2, [r7, #20]
 800687c:	4313      	orrs	r3, r2
 800687e:	617b      	str	r3, [r7, #20]
 8006880:	687b      	ldr	r3, [r7, #4]
 8006882:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006884:	2b00      	cmp	r3, #0
 8006886:	d00e      	beq.n	80068a6 <HAL_DMA_Init+0x122>
 8006888:	6878      	ldr	r0, [r7, #4]
 800688a:	f000 faa5 	bl	8006dd8 <DMA_CheckFifoParam>
 800688e:	4603      	mov	r3, r0
 8006890:	2b00      	cmp	r3, #0
 8006892:	d008      	beq.n	80068a6 <HAL_DMA_Init+0x122>
 8006894:	687b      	ldr	r3, [r7, #4]
 8006896:	2240      	movs	r2, #64	@ 0x40
 8006898:	655a      	str	r2, [r3, #84]	@ 0x54
 800689a:	687b      	ldr	r3, [r7, #4]
 800689c:	2201      	movs	r2, #1
 800689e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80068a2:	2301      	movs	r3, #1
 80068a4:	e016      	b.n	80068d4 <HAL_DMA_Init+0x150>
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	681b      	ldr	r3, [r3, #0]
 80068aa:	697a      	ldr	r2, [r7, #20]
 80068ac:	615a      	str	r2, [r3, #20]
 80068ae:	6878      	ldr	r0, [r7, #4]
 80068b0:	f000 fa5c 	bl	8006d6c <DMA_CalcBaseAndBitshift>
 80068b4:	4603      	mov	r3, r0
 80068b6:	60fb      	str	r3, [r7, #12]
 80068b8:	687b      	ldr	r3, [r7, #4]
 80068ba:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80068bc:	223f      	movs	r2, #63	@ 0x3f
 80068be:	409a      	lsls	r2, r3
 80068c0:	68fb      	ldr	r3, [r7, #12]
 80068c2:	609a      	str	r2, [r3, #8]
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	2200      	movs	r2, #0
 80068c8:	655a      	str	r2, [r3, #84]	@ 0x54
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	2201      	movs	r2, #1
 80068ce:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80068d2:	2300      	movs	r3, #0
 80068d4:	4618      	mov	r0, r3
 80068d6:	3718      	adds	r7, #24
 80068d8:	46bd      	mov	sp, r7
 80068da:	bd80      	pop	{r7, pc}
 80068dc:	f010803f 	.word	0xf010803f

080068e0 <HAL_DMA_Start_IT>:
 80068e0:	b580      	push	{r7, lr}
 80068e2:	b086      	sub	sp, #24
 80068e4:	af00      	add	r7, sp, #0
 80068e6:	60f8      	str	r0, [r7, #12]
 80068e8:	60b9      	str	r1, [r7, #8]
 80068ea:	607a      	str	r2, [r7, #4]
 80068ec:	603b      	str	r3, [r7, #0]
 80068ee:	2300      	movs	r3, #0
 80068f0:	75fb      	strb	r3, [r7, #23]
 80068f2:	68fb      	ldr	r3, [r7, #12]
 80068f4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80068f6:	613b      	str	r3, [r7, #16]
 80068f8:	68fb      	ldr	r3, [r7, #12]
 80068fa:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 80068fe:	2b01      	cmp	r3, #1
 8006900:	d101      	bne.n	8006906 <HAL_DMA_Start_IT+0x26>
 8006902:	2302      	movs	r3, #2
 8006904:	e048      	b.n	8006998 <HAL_DMA_Start_IT+0xb8>
 8006906:	68fb      	ldr	r3, [r7, #12]
 8006908:	2201      	movs	r2, #1
 800690a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800690e:	68fb      	ldr	r3, [r7, #12]
 8006910:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8006914:	b2db      	uxtb	r3, r3
 8006916:	2b01      	cmp	r3, #1
 8006918:	d137      	bne.n	800698a <HAL_DMA_Start_IT+0xaa>
 800691a:	68fb      	ldr	r3, [r7, #12]
 800691c:	2202      	movs	r2, #2
 800691e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8006922:	68fb      	ldr	r3, [r7, #12]
 8006924:	2200      	movs	r2, #0
 8006926:	655a      	str	r2, [r3, #84]	@ 0x54
 8006928:	683b      	ldr	r3, [r7, #0]
 800692a:	687a      	ldr	r2, [r7, #4]
 800692c:	68b9      	ldr	r1, [r7, #8]
 800692e:	68f8      	ldr	r0, [r7, #12]
 8006930:	f000 f9ee 	bl	8006d10 <DMA_SetConfig>
 8006934:	68fb      	ldr	r3, [r7, #12]
 8006936:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8006938:	223f      	movs	r2, #63	@ 0x3f
 800693a:	409a      	lsls	r2, r3
 800693c:	693b      	ldr	r3, [r7, #16]
 800693e:	609a      	str	r2, [r3, #8]
 8006940:	68fb      	ldr	r3, [r7, #12]
 8006942:	681b      	ldr	r3, [r3, #0]
 8006944:	681a      	ldr	r2, [r3, #0]
 8006946:	68fb      	ldr	r3, [r7, #12]
 8006948:	681b      	ldr	r3, [r3, #0]
 800694a:	f042 0216 	orr.w	r2, r2, #22
 800694e:	601a      	str	r2, [r3, #0]
 8006950:	68fb      	ldr	r3, [r7, #12]
 8006952:	681b      	ldr	r3, [r3, #0]
 8006954:	695a      	ldr	r2, [r3, #20]
 8006956:	68fb      	ldr	r3, [r7, #12]
 8006958:	681b      	ldr	r3, [r3, #0]
 800695a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800695e:	615a      	str	r2, [r3, #20]
 8006960:	68fb      	ldr	r3, [r7, #12]
 8006962:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006964:	2b00      	cmp	r3, #0
 8006966:	d007      	beq.n	8006978 <HAL_DMA_Start_IT+0x98>
 8006968:	68fb      	ldr	r3, [r7, #12]
 800696a:	681b      	ldr	r3, [r3, #0]
 800696c:	681a      	ldr	r2, [r3, #0]
 800696e:	68fb      	ldr	r3, [r7, #12]
 8006970:	681b      	ldr	r3, [r3, #0]
 8006972:	f042 0208 	orr.w	r2, r2, #8
 8006976:	601a      	str	r2, [r3, #0]
 8006978:	68fb      	ldr	r3, [r7, #12]
 800697a:	681b      	ldr	r3, [r3, #0]
 800697c:	681a      	ldr	r2, [r3, #0]
 800697e:	68fb      	ldr	r3, [r7, #12]
 8006980:	681b      	ldr	r3, [r3, #0]
 8006982:	f042 0201 	orr.w	r2, r2, #1
 8006986:	601a      	str	r2, [r3, #0]
 8006988:	e005      	b.n	8006996 <HAL_DMA_Start_IT+0xb6>
 800698a:	68fb      	ldr	r3, [r7, #12]
 800698c:	2200      	movs	r2, #0
 800698e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8006992:	2302      	movs	r3, #2
 8006994:	75fb      	strb	r3, [r7, #23]
 8006996:	7dfb      	ldrb	r3, [r7, #23]
 8006998:	4618      	mov	r0, r3
 800699a:	3718      	adds	r7, #24
 800699c:	46bd      	mov	sp, r7
 800699e:	bd80      	pop	{r7, pc}

080069a0 <HAL_DMA_Abort_IT>:
 80069a0:	b480      	push	{r7}
 80069a2:	b083      	sub	sp, #12
 80069a4:	af00      	add	r7, sp, #0
 80069a6:	6078      	str	r0, [r7, #4]
 80069a8:	687b      	ldr	r3, [r7, #4]
 80069aa:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80069ae:	b2db      	uxtb	r3, r3
 80069b0:	2b02      	cmp	r3, #2
 80069b2:	d004      	beq.n	80069be <HAL_DMA_Abort_IT+0x1e>
 80069b4:	687b      	ldr	r3, [r7, #4]
 80069b6:	2280      	movs	r2, #128	@ 0x80
 80069b8:	655a      	str	r2, [r3, #84]	@ 0x54
 80069ba:	2301      	movs	r3, #1
 80069bc:	e00c      	b.n	80069d8 <HAL_DMA_Abort_IT+0x38>
 80069be:	687b      	ldr	r3, [r7, #4]
 80069c0:	2205      	movs	r2, #5
 80069c2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80069c6:	687b      	ldr	r3, [r7, #4]
 80069c8:	681b      	ldr	r3, [r3, #0]
 80069ca:	681a      	ldr	r2, [r3, #0]
 80069cc:	687b      	ldr	r3, [r7, #4]
 80069ce:	681b      	ldr	r3, [r3, #0]
 80069d0:	f022 0201 	bic.w	r2, r2, #1
 80069d4:	601a      	str	r2, [r3, #0]
 80069d6:	2300      	movs	r3, #0
 80069d8:	4618      	mov	r0, r3
 80069da:	370c      	adds	r7, #12
 80069dc:	46bd      	mov	sp, r7
 80069de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069e2:	4770      	bx	lr

080069e4 <HAL_DMA_IRQHandler>:
 80069e4:	b580      	push	{r7, lr}
 80069e6:	b086      	sub	sp, #24
 80069e8:	af00      	add	r7, sp, #0
 80069ea:	6078      	str	r0, [r7, #4]
 80069ec:	2300      	movs	r3, #0
 80069ee:	60bb      	str	r3, [r7, #8]
 80069f0:	4b8e      	ldr	r3, [pc, #568]	@ (8006c2c <HAL_DMA_IRQHandler+0x248>)
 80069f2:	681b      	ldr	r3, [r3, #0]
 80069f4:	4a8e      	ldr	r2, [pc, #568]	@ (8006c30 <HAL_DMA_IRQHandler+0x24c>)
 80069f6:	fba2 2303 	umull	r2, r3, r2, r3
 80069fa:	0a9b      	lsrs	r3, r3, #10
 80069fc:	617b      	str	r3, [r7, #20]
 80069fe:	687b      	ldr	r3, [r7, #4]
 8006a00:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006a02:	613b      	str	r3, [r7, #16]
 8006a04:	693b      	ldr	r3, [r7, #16]
 8006a06:	681b      	ldr	r3, [r3, #0]
 8006a08:	60fb      	str	r3, [r7, #12]
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8006a0e:	2208      	movs	r2, #8
 8006a10:	409a      	lsls	r2, r3
 8006a12:	68fb      	ldr	r3, [r7, #12]
 8006a14:	4013      	ands	r3, r2
 8006a16:	2b00      	cmp	r3, #0
 8006a18:	d01a      	beq.n	8006a50 <HAL_DMA_IRQHandler+0x6c>
 8006a1a:	687b      	ldr	r3, [r7, #4]
 8006a1c:	681b      	ldr	r3, [r3, #0]
 8006a1e:	681b      	ldr	r3, [r3, #0]
 8006a20:	f003 0304 	and.w	r3, r3, #4
 8006a24:	2b00      	cmp	r3, #0
 8006a26:	d013      	beq.n	8006a50 <HAL_DMA_IRQHandler+0x6c>
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	681b      	ldr	r3, [r3, #0]
 8006a2c:	681a      	ldr	r2, [r3, #0]
 8006a2e:	687b      	ldr	r3, [r7, #4]
 8006a30:	681b      	ldr	r3, [r3, #0]
 8006a32:	f022 0204 	bic.w	r2, r2, #4
 8006a36:	601a      	str	r2, [r3, #0]
 8006a38:	687b      	ldr	r3, [r7, #4]
 8006a3a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8006a3c:	2208      	movs	r2, #8
 8006a3e:	409a      	lsls	r2, r3
 8006a40:	693b      	ldr	r3, [r7, #16]
 8006a42:	609a      	str	r2, [r3, #8]
 8006a44:	687b      	ldr	r3, [r7, #4]
 8006a46:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006a48:	f043 0201 	orr.w	r2, r3, #1
 8006a4c:	687b      	ldr	r3, [r7, #4]
 8006a4e:	655a      	str	r2, [r3, #84]	@ 0x54
 8006a50:	687b      	ldr	r3, [r7, #4]
 8006a52:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8006a54:	2201      	movs	r2, #1
 8006a56:	409a      	lsls	r2, r3
 8006a58:	68fb      	ldr	r3, [r7, #12]
 8006a5a:	4013      	ands	r3, r2
 8006a5c:	2b00      	cmp	r3, #0
 8006a5e:	d012      	beq.n	8006a86 <HAL_DMA_IRQHandler+0xa2>
 8006a60:	687b      	ldr	r3, [r7, #4]
 8006a62:	681b      	ldr	r3, [r3, #0]
 8006a64:	695b      	ldr	r3, [r3, #20]
 8006a66:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006a6a:	2b00      	cmp	r3, #0
 8006a6c:	d00b      	beq.n	8006a86 <HAL_DMA_IRQHandler+0xa2>
 8006a6e:	687b      	ldr	r3, [r7, #4]
 8006a70:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8006a72:	2201      	movs	r2, #1
 8006a74:	409a      	lsls	r2, r3
 8006a76:	693b      	ldr	r3, [r7, #16]
 8006a78:	609a      	str	r2, [r3, #8]
 8006a7a:	687b      	ldr	r3, [r7, #4]
 8006a7c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006a7e:	f043 0202 	orr.w	r2, r3, #2
 8006a82:	687b      	ldr	r3, [r7, #4]
 8006a84:	655a      	str	r2, [r3, #84]	@ 0x54
 8006a86:	687b      	ldr	r3, [r7, #4]
 8006a88:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8006a8a:	2204      	movs	r2, #4
 8006a8c:	409a      	lsls	r2, r3
 8006a8e:	68fb      	ldr	r3, [r7, #12]
 8006a90:	4013      	ands	r3, r2
 8006a92:	2b00      	cmp	r3, #0
 8006a94:	d012      	beq.n	8006abc <HAL_DMA_IRQHandler+0xd8>
 8006a96:	687b      	ldr	r3, [r7, #4]
 8006a98:	681b      	ldr	r3, [r3, #0]
 8006a9a:	681b      	ldr	r3, [r3, #0]
 8006a9c:	f003 0302 	and.w	r3, r3, #2
 8006aa0:	2b00      	cmp	r3, #0
 8006aa2:	d00b      	beq.n	8006abc <HAL_DMA_IRQHandler+0xd8>
 8006aa4:	687b      	ldr	r3, [r7, #4]
 8006aa6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8006aa8:	2204      	movs	r2, #4
 8006aaa:	409a      	lsls	r2, r3
 8006aac:	693b      	ldr	r3, [r7, #16]
 8006aae:	609a      	str	r2, [r3, #8]
 8006ab0:	687b      	ldr	r3, [r7, #4]
 8006ab2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006ab4:	f043 0204 	orr.w	r2, r3, #4
 8006ab8:	687b      	ldr	r3, [r7, #4]
 8006aba:	655a      	str	r2, [r3, #84]	@ 0x54
 8006abc:	687b      	ldr	r3, [r7, #4]
 8006abe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8006ac0:	2210      	movs	r2, #16
 8006ac2:	409a      	lsls	r2, r3
 8006ac4:	68fb      	ldr	r3, [r7, #12]
 8006ac6:	4013      	ands	r3, r2
 8006ac8:	2b00      	cmp	r3, #0
 8006aca:	d043      	beq.n	8006b54 <HAL_DMA_IRQHandler+0x170>
 8006acc:	687b      	ldr	r3, [r7, #4]
 8006ace:	681b      	ldr	r3, [r3, #0]
 8006ad0:	681b      	ldr	r3, [r3, #0]
 8006ad2:	f003 0308 	and.w	r3, r3, #8
 8006ad6:	2b00      	cmp	r3, #0
 8006ad8:	d03c      	beq.n	8006b54 <HAL_DMA_IRQHandler+0x170>
 8006ada:	687b      	ldr	r3, [r7, #4]
 8006adc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8006ade:	2210      	movs	r2, #16
 8006ae0:	409a      	lsls	r2, r3
 8006ae2:	693b      	ldr	r3, [r7, #16]
 8006ae4:	609a      	str	r2, [r3, #8]
 8006ae6:	687b      	ldr	r3, [r7, #4]
 8006ae8:	681b      	ldr	r3, [r3, #0]
 8006aea:	681b      	ldr	r3, [r3, #0]
 8006aec:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8006af0:	2b00      	cmp	r3, #0
 8006af2:	d018      	beq.n	8006b26 <HAL_DMA_IRQHandler+0x142>
 8006af4:	687b      	ldr	r3, [r7, #4]
 8006af6:	681b      	ldr	r3, [r3, #0]
 8006af8:	681b      	ldr	r3, [r3, #0]
 8006afa:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8006afe:	2b00      	cmp	r3, #0
 8006b00:	d108      	bne.n	8006b14 <HAL_DMA_IRQHandler+0x130>
 8006b02:	687b      	ldr	r3, [r7, #4]
 8006b04:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006b06:	2b00      	cmp	r3, #0
 8006b08:	d024      	beq.n	8006b54 <HAL_DMA_IRQHandler+0x170>
 8006b0a:	687b      	ldr	r3, [r7, #4]
 8006b0c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006b0e:	6878      	ldr	r0, [r7, #4]
 8006b10:	4798      	blx	r3
 8006b12:	e01f      	b.n	8006b54 <HAL_DMA_IRQHandler+0x170>
 8006b14:	687b      	ldr	r3, [r7, #4]
 8006b16:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006b18:	2b00      	cmp	r3, #0
 8006b1a:	d01b      	beq.n	8006b54 <HAL_DMA_IRQHandler+0x170>
 8006b1c:	687b      	ldr	r3, [r7, #4]
 8006b1e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006b20:	6878      	ldr	r0, [r7, #4]
 8006b22:	4798      	blx	r3
 8006b24:	e016      	b.n	8006b54 <HAL_DMA_IRQHandler+0x170>
 8006b26:	687b      	ldr	r3, [r7, #4]
 8006b28:	681b      	ldr	r3, [r3, #0]
 8006b2a:	681b      	ldr	r3, [r3, #0]
 8006b2c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006b30:	2b00      	cmp	r3, #0
 8006b32:	d107      	bne.n	8006b44 <HAL_DMA_IRQHandler+0x160>
 8006b34:	687b      	ldr	r3, [r7, #4]
 8006b36:	681b      	ldr	r3, [r3, #0]
 8006b38:	681a      	ldr	r2, [r3, #0]
 8006b3a:	687b      	ldr	r3, [r7, #4]
 8006b3c:	681b      	ldr	r3, [r3, #0]
 8006b3e:	f022 0208 	bic.w	r2, r2, #8
 8006b42:	601a      	str	r2, [r3, #0]
 8006b44:	687b      	ldr	r3, [r7, #4]
 8006b46:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006b48:	2b00      	cmp	r3, #0
 8006b4a:	d003      	beq.n	8006b54 <HAL_DMA_IRQHandler+0x170>
 8006b4c:	687b      	ldr	r3, [r7, #4]
 8006b4e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006b50:	6878      	ldr	r0, [r7, #4]
 8006b52:	4798      	blx	r3
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8006b58:	2220      	movs	r2, #32
 8006b5a:	409a      	lsls	r2, r3
 8006b5c:	68fb      	ldr	r3, [r7, #12]
 8006b5e:	4013      	ands	r3, r2
 8006b60:	2b00      	cmp	r3, #0
 8006b62:	f000 808f 	beq.w	8006c84 <HAL_DMA_IRQHandler+0x2a0>
 8006b66:	687b      	ldr	r3, [r7, #4]
 8006b68:	681b      	ldr	r3, [r3, #0]
 8006b6a:	681b      	ldr	r3, [r3, #0]
 8006b6c:	f003 0310 	and.w	r3, r3, #16
 8006b70:	2b00      	cmp	r3, #0
 8006b72:	f000 8087 	beq.w	8006c84 <HAL_DMA_IRQHandler+0x2a0>
 8006b76:	687b      	ldr	r3, [r7, #4]
 8006b78:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8006b7a:	2220      	movs	r2, #32
 8006b7c:	409a      	lsls	r2, r3
 8006b7e:	693b      	ldr	r3, [r7, #16]
 8006b80:	609a      	str	r2, [r3, #8]
 8006b82:	687b      	ldr	r3, [r7, #4]
 8006b84:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8006b88:	b2db      	uxtb	r3, r3
 8006b8a:	2b05      	cmp	r3, #5
 8006b8c:	d136      	bne.n	8006bfc <HAL_DMA_IRQHandler+0x218>
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	681b      	ldr	r3, [r3, #0]
 8006b92:	681a      	ldr	r2, [r3, #0]
 8006b94:	687b      	ldr	r3, [r7, #4]
 8006b96:	681b      	ldr	r3, [r3, #0]
 8006b98:	f022 0216 	bic.w	r2, r2, #22
 8006b9c:	601a      	str	r2, [r3, #0]
 8006b9e:	687b      	ldr	r3, [r7, #4]
 8006ba0:	681b      	ldr	r3, [r3, #0]
 8006ba2:	695a      	ldr	r2, [r3, #20]
 8006ba4:	687b      	ldr	r3, [r7, #4]
 8006ba6:	681b      	ldr	r3, [r3, #0]
 8006ba8:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8006bac:	615a      	str	r2, [r3, #20]
 8006bae:	687b      	ldr	r3, [r7, #4]
 8006bb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006bb2:	2b00      	cmp	r3, #0
 8006bb4:	d103      	bne.n	8006bbe <HAL_DMA_IRQHandler+0x1da>
 8006bb6:	687b      	ldr	r3, [r7, #4]
 8006bb8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006bba:	2b00      	cmp	r3, #0
 8006bbc:	d007      	beq.n	8006bce <HAL_DMA_IRQHandler+0x1ea>
 8006bbe:	687b      	ldr	r3, [r7, #4]
 8006bc0:	681b      	ldr	r3, [r3, #0]
 8006bc2:	681a      	ldr	r2, [r3, #0]
 8006bc4:	687b      	ldr	r3, [r7, #4]
 8006bc6:	681b      	ldr	r3, [r3, #0]
 8006bc8:	f022 0208 	bic.w	r2, r2, #8
 8006bcc:	601a      	str	r2, [r3, #0]
 8006bce:	687b      	ldr	r3, [r7, #4]
 8006bd0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8006bd2:	223f      	movs	r2, #63	@ 0x3f
 8006bd4:	409a      	lsls	r2, r3
 8006bd6:	693b      	ldr	r3, [r7, #16]
 8006bd8:	609a      	str	r2, [r3, #8]
 8006bda:	687b      	ldr	r3, [r7, #4]
 8006bdc:	2201      	movs	r2, #1
 8006bde:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8006be2:	687b      	ldr	r3, [r7, #4]
 8006be4:	2200      	movs	r2, #0
 8006be6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8006bea:	687b      	ldr	r3, [r7, #4]
 8006bec:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006bee:	2b00      	cmp	r3, #0
 8006bf0:	d07e      	beq.n	8006cf0 <HAL_DMA_IRQHandler+0x30c>
 8006bf2:	687b      	ldr	r3, [r7, #4]
 8006bf4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006bf6:	6878      	ldr	r0, [r7, #4]
 8006bf8:	4798      	blx	r3
 8006bfa:	e079      	b.n	8006cf0 <HAL_DMA_IRQHandler+0x30c>
 8006bfc:	687b      	ldr	r3, [r7, #4]
 8006bfe:	681b      	ldr	r3, [r3, #0]
 8006c00:	681b      	ldr	r3, [r3, #0]
 8006c02:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8006c06:	2b00      	cmp	r3, #0
 8006c08:	d01d      	beq.n	8006c46 <HAL_DMA_IRQHandler+0x262>
 8006c0a:	687b      	ldr	r3, [r7, #4]
 8006c0c:	681b      	ldr	r3, [r3, #0]
 8006c0e:	681b      	ldr	r3, [r3, #0]
 8006c10:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8006c14:	2b00      	cmp	r3, #0
 8006c16:	d10d      	bne.n	8006c34 <HAL_DMA_IRQHandler+0x250>
 8006c18:	687b      	ldr	r3, [r7, #4]
 8006c1a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006c1c:	2b00      	cmp	r3, #0
 8006c1e:	d031      	beq.n	8006c84 <HAL_DMA_IRQHandler+0x2a0>
 8006c20:	687b      	ldr	r3, [r7, #4]
 8006c22:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006c24:	6878      	ldr	r0, [r7, #4]
 8006c26:	4798      	blx	r3
 8006c28:	e02c      	b.n	8006c84 <HAL_DMA_IRQHandler+0x2a0>
 8006c2a:	bf00      	nop
 8006c2c:	2000009c 	.word	0x2000009c
 8006c30:	1b4e81b5 	.word	0x1b4e81b5
 8006c34:	687b      	ldr	r3, [r7, #4]
 8006c36:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006c38:	2b00      	cmp	r3, #0
 8006c3a:	d023      	beq.n	8006c84 <HAL_DMA_IRQHandler+0x2a0>
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006c40:	6878      	ldr	r0, [r7, #4]
 8006c42:	4798      	blx	r3
 8006c44:	e01e      	b.n	8006c84 <HAL_DMA_IRQHandler+0x2a0>
 8006c46:	687b      	ldr	r3, [r7, #4]
 8006c48:	681b      	ldr	r3, [r3, #0]
 8006c4a:	681b      	ldr	r3, [r3, #0]
 8006c4c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006c50:	2b00      	cmp	r3, #0
 8006c52:	d10f      	bne.n	8006c74 <HAL_DMA_IRQHandler+0x290>
 8006c54:	687b      	ldr	r3, [r7, #4]
 8006c56:	681b      	ldr	r3, [r3, #0]
 8006c58:	681a      	ldr	r2, [r3, #0]
 8006c5a:	687b      	ldr	r3, [r7, #4]
 8006c5c:	681b      	ldr	r3, [r3, #0]
 8006c5e:	f022 0210 	bic.w	r2, r2, #16
 8006c62:	601a      	str	r2, [r3, #0]
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	2201      	movs	r2, #1
 8006c68:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	2200      	movs	r2, #0
 8006c70:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8006c74:	687b      	ldr	r3, [r7, #4]
 8006c76:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006c78:	2b00      	cmp	r3, #0
 8006c7a:	d003      	beq.n	8006c84 <HAL_DMA_IRQHandler+0x2a0>
 8006c7c:	687b      	ldr	r3, [r7, #4]
 8006c7e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006c80:	6878      	ldr	r0, [r7, #4]
 8006c82:	4798      	blx	r3
 8006c84:	687b      	ldr	r3, [r7, #4]
 8006c86:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006c88:	2b00      	cmp	r3, #0
 8006c8a:	d032      	beq.n	8006cf2 <HAL_DMA_IRQHandler+0x30e>
 8006c8c:	687b      	ldr	r3, [r7, #4]
 8006c8e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006c90:	f003 0301 	and.w	r3, r3, #1
 8006c94:	2b00      	cmp	r3, #0
 8006c96:	d022      	beq.n	8006cde <HAL_DMA_IRQHandler+0x2fa>
 8006c98:	687b      	ldr	r3, [r7, #4]
 8006c9a:	2205      	movs	r2, #5
 8006c9c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	681b      	ldr	r3, [r3, #0]
 8006ca4:	681a      	ldr	r2, [r3, #0]
 8006ca6:	687b      	ldr	r3, [r7, #4]
 8006ca8:	681b      	ldr	r3, [r3, #0]
 8006caa:	f022 0201 	bic.w	r2, r2, #1
 8006cae:	601a      	str	r2, [r3, #0]
 8006cb0:	68bb      	ldr	r3, [r7, #8]
 8006cb2:	3301      	adds	r3, #1
 8006cb4:	60bb      	str	r3, [r7, #8]
 8006cb6:	697a      	ldr	r2, [r7, #20]
 8006cb8:	429a      	cmp	r2, r3
 8006cba:	d307      	bcc.n	8006ccc <HAL_DMA_IRQHandler+0x2e8>
 8006cbc:	687b      	ldr	r3, [r7, #4]
 8006cbe:	681b      	ldr	r3, [r3, #0]
 8006cc0:	681b      	ldr	r3, [r3, #0]
 8006cc2:	f003 0301 	and.w	r3, r3, #1
 8006cc6:	2b00      	cmp	r3, #0
 8006cc8:	d1f2      	bne.n	8006cb0 <HAL_DMA_IRQHandler+0x2cc>
 8006cca:	e000      	b.n	8006cce <HAL_DMA_IRQHandler+0x2ea>
 8006ccc:	bf00      	nop
 8006cce:	687b      	ldr	r3, [r7, #4]
 8006cd0:	2201      	movs	r2, #1
 8006cd2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8006cd6:	687b      	ldr	r3, [r7, #4]
 8006cd8:	2200      	movs	r2, #0
 8006cda:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8006cde:	687b      	ldr	r3, [r7, #4]
 8006ce0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006ce2:	2b00      	cmp	r3, #0
 8006ce4:	d005      	beq.n	8006cf2 <HAL_DMA_IRQHandler+0x30e>
 8006ce6:	687b      	ldr	r3, [r7, #4]
 8006ce8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006cea:	6878      	ldr	r0, [r7, #4]
 8006cec:	4798      	blx	r3
 8006cee:	e000      	b.n	8006cf2 <HAL_DMA_IRQHandler+0x30e>
 8006cf0:	bf00      	nop
 8006cf2:	3718      	adds	r7, #24
 8006cf4:	46bd      	mov	sp, r7
 8006cf6:	bd80      	pop	{r7, pc}

08006cf8 <HAL_DMA_GetError>:
 8006cf8:	b480      	push	{r7}
 8006cfa:	b083      	sub	sp, #12
 8006cfc:	af00      	add	r7, sp, #0
 8006cfe:	6078      	str	r0, [r7, #4]
 8006d00:	687b      	ldr	r3, [r7, #4]
 8006d02:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006d04:	4618      	mov	r0, r3
 8006d06:	370c      	adds	r7, #12
 8006d08:	46bd      	mov	sp, r7
 8006d0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d0e:	4770      	bx	lr

08006d10 <DMA_SetConfig>:
 8006d10:	b480      	push	{r7}
 8006d12:	b085      	sub	sp, #20
 8006d14:	af00      	add	r7, sp, #0
 8006d16:	60f8      	str	r0, [r7, #12]
 8006d18:	60b9      	str	r1, [r7, #8]
 8006d1a:	607a      	str	r2, [r7, #4]
 8006d1c:	603b      	str	r3, [r7, #0]
 8006d1e:	68fb      	ldr	r3, [r7, #12]
 8006d20:	681b      	ldr	r3, [r3, #0]
 8006d22:	681a      	ldr	r2, [r3, #0]
 8006d24:	68fb      	ldr	r3, [r7, #12]
 8006d26:	681b      	ldr	r3, [r3, #0]
 8006d28:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8006d2c:	601a      	str	r2, [r3, #0]
 8006d2e:	68fb      	ldr	r3, [r7, #12]
 8006d30:	681b      	ldr	r3, [r3, #0]
 8006d32:	683a      	ldr	r2, [r7, #0]
 8006d34:	605a      	str	r2, [r3, #4]
 8006d36:	68fb      	ldr	r3, [r7, #12]
 8006d38:	689b      	ldr	r3, [r3, #8]
 8006d3a:	2b40      	cmp	r3, #64	@ 0x40
 8006d3c:	d108      	bne.n	8006d50 <DMA_SetConfig+0x40>
 8006d3e:	68fb      	ldr	r3, [r7, #12]
 8006d40:	681b      	ldr	r3, [r3, #0]
 8006d42:	687a      	ldr	r2, [r7, #4]
 8006d44:	609a      	str	r2, [r3, #8]
 8006d46:	68fb      	ldr	r3, [r7, #12]
 8006d48:	681b      	ldr	r3, [r3, #0]
 8006d4a:	68ba      	ldr	r2, [r7, #8]
 8006d4c:	60da      	str	r2, [r3, #12]
 8006d4e:	e007      	b.n	8006d60 <DMA_SetConfig+0x50>
 8006d50:	68fb      	ldr	r3, [r7, #12]
 8006d52:	681b      	ldr	r3, [r3, #0]
 8006d54:	68ba      	ldr	r2, [r7, #8]
 8006d56:	609a      	str	r2, [r3, #8]
 8006d58:	68fb      	ldr	r3, [r7, #12]
 8006d5a:	681b      	ldr	r3, [r3, #0]
 8006d5c:	687a      	ldr	r2, [r7, #4]
 8006d5e:	60da      	str	r2, [r3, #12]
 8006d60:	bf00      	nop
 8006d62:	3714      	adds	r7, #20
 8006d64:	46bd      	mov	sp, r7
 8006d66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d6a:	4770      	bx	lr

08006d6c <DMA_CalcBaseAndBitshift>:
 8006d6c:	b480      	push	{r7}
 8006d6e:	b085      	sub	sp, #20
 8006d70:	af00      	add	r7, sp, #0
 8006d72:	6078      	str	r0, [r7, #4]
 8006d74:	687b      	ldr	r3, [r7, #4]
 8006d76:	681b      	ldr	r3, [r3, #0]
 8006d78:	b2db      	uxtb	r3, r3
 8006d7a:	3b10      	subs	r3, #16
 8006d7c:	4a13      	ldr	r2, [pc, #76]	@ (8006dcc <DMA_CalcBaseAndBitshift+0x60>)
 8006d7e:	fba2 2303 	umull	r2, r3, r2, r3
 8006d82:	091b      	lsrs	r3, r3, #4
 8006d84:	60fb      	str	r3, [r7, #12]
 8006d86:	4a12      	ldr	r2, [pc, #72]	@ (8006dd0 <DMA_CalcBaseAndBitshift+0x64>)
 8006d88:	68fb      	ldr	r3, [r7, #12]
 8006d8a:	4413      	add	r3, r2
 8006d8c:	781b      	ldrb	r3, [r3, #0]
 8006d8e:	461a      	mov	r2, r3
 8006d90:	687b      	ldr	r3, [r7, #4]
 8006d92:	65da      	str	r2, [r3, #92]	@ 0x5c
 8006d94:	68fb      	ldr	r3, [r7, #12]
 8006d96:	2b03      	cmp	r3, #3
 8006d98:	d908      	bls.n	8006dac <DMA_CalcBaseAndBitshift+0x40>
 8006d9a:	687b      	ldr	r3, [r7, #4]
 8006d9c:	681b      	ldr	r3, [r3, #0]
 8006d9e:	461a      	mov	r2, r3
 8006da0:	4b0c      	ldr	r3, [pc, #48]	@ (8006dd4 <DMA_CalcBaseAndBitshift+0x68>)
 8006da2:	4013      	ands	r3, r2
 8006da4:	1d1a      	adds	r2, r3, #4
 8006da6:	687b      	ldr	r3, [r7, #4]
 8006da8:	659a      	str	r2, [r3, #88]	@ 0x58
 8006daa:	e006      	b.n	8006dba <DMA_CalcBaseAndBitshift+0x4e>
 8006dac:	687b      	ldr	r3, [r7, #4]
 8006dae:	681b      	ldr	r3, [r3, #0]
 8006db0:	461a      	mov	r2, r3
 8006db2:	4b08      	ldr	r3, [pc, #32]	@ (8006dd4 <DMA_CalcBaseAndBitshift+0x68>)
 8006db4:	4013      	ands	r3, r2
 8006db6:	687a      	ldr	r2, [r7, #4]
 8006db8:	6593      	str	r3, [r2, #88]	@ 0x58
 8006dba:	687b      	ldr	r3, [r7, #4]
 8006dbc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006dbe:	4618      	mov	r0, r3
 8006dc0:	3714      	adds	r7, #20
 8006dc2:	46bd      	mov	sp, r7
 8006dc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dc8:	4770      	bx	lr
 8006dca:	bf00      	nop
 8006dcc:	aaaaaaab 	.word	0xaaaaaaab
 8006dd0:	0801e0dc 	.word	0x0801e0dc
 8006dd4:	fffffc00 	.word	0xfffffc00

08006dd8 <DMA_CheckFifoParam>:
 8006dd8:	b480      	push	{r7}
 8006dda:	b085      	sub	sp, #20
 8006ddc:	af00      	add	r7, sp, #0
 8006dde:	6078      	str	r0, [r7, #4]
 8006de0:	2300      	movs	r3, #0
 8006de2:	73fb      	strb	r3, [r7, #15]
 8006de4:	687b      	ldr	r3, [r7, #4]
 8006de6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006de8:	60bb      	str	r3, [r7, #8]
 8006dea:	687b      	ldr	r3, [r7, #4]
 8006dec:	699b      	ldr	r3, [r3, #24]
 8006dee:	2b00      	cmp	r3, #0
 8006df0:	d11f      	bne.n	8006e32 <DMA_CheckFifoParam+0x5a>
 8006df2:	68bb      	ldr	r3, [r7, #8]
 8006df4:	2b03      	cmp	r3, #3
 8006df6:	d856      	bhi.n	8006ea6 <DMA_CheckFifoParam+0xce>
 8006df8:	a201      	add	r2, pc, #4	@ (adr r2, 8006e00 <DMA_CheckFifoParam+0x28>)
 8006dfa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006dfe:	bf00      	nop
 8006e00:	08006e11 	.word	0x08006e11
 8006e04:	08006e23 	.word	0x08006e23
 8006e08:	08006e11 	.word	0x08006e11
 8006e0c:	08006ea7 	.word	0x08006ea7
 8006e10:	687b      	ldr	r3, [r7, #4]
 8006e12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006e14:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8006e18:	2b00      	cmp	r3, #0
 8006e1a:	d046      	beq.n	8006eaa <DMA_CheckFifoParam+0xd2>
 8006e1c:	2301      	movs	r3, #1
 8006e1e:	73fb      	strb	r3, [r7, #15]
 8006e20:	e043      	b.n	8006eaa <DMA_CheckFifoParam+0xd2>
 8006e22:	687b      	ldr	r3, [r7, #4]
 8006e24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006e26:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8006e2a:	d140      	bne.n	8006eae <DMA_CheckFifoParam+0xd6>
 8006e2c:	2301      	movs	r3, #1
 8006e2e:	73fb      	strb	r3, [r7, #15]
 8006e30:	e03d      	b.n	8006eae <DMA_CheckFifoParam+0xd6>
 8006e32:	687b      	ldr	r3, [r7, #4]
 8006e34:	699b      	ldr	r3, [r3, #24]
 8006e36:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006e3a:	d121      	bne.n	8006e80 <DMA_CheckFifoParam+0xa8>
 8006e3c:	68bb      	ldr	r3, [r7, #8]
 8006e3e:	2b03      	cmp	r3, #3
 8006e40:	d837      	bhi.n	8006eb2 <DMA_CheckFifoParam+0xda>
 8006e42:	a201      	add	r2, pc, #4	@ (adr r2, 8006e48 <DMA_CheckFifoParam+0x70>)
 8006e44:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006e48:	08006e59 	.word	0x08006e59
 8006e4c:	08006e5f 	.word	0x08006e5f
 8006e50:	08006e59 	.word	0x08006e59
 8006e54:	08006e71 	.word	0x08006e71
 8006e58:	2301      	movs	r3, #1
 8006e5a:	73fb      	strb	r3, [r7, #15]
 8006e5c:	e030      	b.n	8006ec0 <DMA_CheckFifoParam+0xe8>
 8006e5e:	687b      	ldr	r3, [r7, #4]
 8006e60:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006e62:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8006e66:	2b00      	cmp	r3, #0
 8006e68:	d025      	beq.n	8006eb6 <DMA_CheckFifoParam+0xde>
 8006e6a:	2301      	movs	r3, #1
 8006e6c:	73fb      	strb	r3, [r7, #15]
 8006e6e:	e022      	b.n	8006eb6 <DMA_CheckFifoParam+0xde>
 8006e70:	687b      	ldr	r3, [r7, #4]
 8006e72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006e74:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8006e78:	d11f      	bne.n	8006eba <DMA_CheckFifoParam+0xe2>
 8006e7a:	2301      	movs	r3, #1
 8006e7c:	73fb      	strb	r3, [r7, #15]
 8006e7e:	e01c      	b.n	8006eba <DMA_CheckFifoParam+0xe2>
 8006e80:	68bb      	ldr	r3, [r7, #8]
 8006e82:	2b02      	cmp	r3, #2
 8006e84:	d903      	bls.n	8006e8e <DMA_CheckFifoParam+0xb6>
 8006e86:	68bb      	ldr	r3, [r7, #8]
 8006e88:	2b03      	cmp	r3, #3
 8006e8a:	d003      	beq.n	8006e94 <DMA_CheckFifoParam+0xbc>
 8006e8c:	e018      	b.n	8006ec0 <DMA_CheckFifoParam+0xe8>
 8006e8e:	2301      	movs	r3, #1
 8006e90:	73fb      	strb	r3, [r7, #15]
 8006e92:	e015      	b.n	8006ec0 <DMA_CheckFifoParam+0xe8>
 8006e94:	687b      	ldr	r3, [r7, #4]
 8006e96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006e98:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8006e9c:	2b00      	cmp	r3, #0
 8006e9e:	d00e      	beq.n	8006ebe <DMA_CheckFifoParam+0xe6>
 8006ea0:	2301      	movs	r3, #1
 8006ea2:	73fb      	strb	r3, [r7, #15]
 8006ea4:	e00b      	b.n	8006ebe <DMA_CheckFifoParam+0xe6>
 8006ea6:	bf00      	nop
 8006ea8:	e00a      	b.n	8006ec0 <DMA_CheckFifoParam+0xe8>
 8006eaa:	bf00      	nop
 8006eac:	e008      	b.n	8006ec0 <DMA_CheckFifoParam+0xe8>
 8006eae:	bf00      	nop
 8006eb0:	e006      	b.n	8006ec0 <DMA_CheckFifoParam+0xe8>
 8006eb2:	bf00      	nop
 8006eb4:	e004      	b.n	8006ec0 <DMA_CheckFifoParam+0xe8>
 8006eb6:	bf00      	nop
 8006eb8:	e002      	b.n	8006ec0 <DMA_CheckFifoParam+0xe8>
 8006eba:	bf00      	nop
 8006ebc:	e000      	b.n	8006ec0 <DMA_CheckFifoParam+0xe8>
 8006ebe:	bf00      	nop
 8006ec0:	7bfb      	ldrb	r3, [r7, #15]
 8006ec2:	4618      	mov	r0, r3
 8006ec4:	3714      	adds	r7, #20
 8006ec6:	46bd      	mov	sp, r7
 8006ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ecc:	4770      	bx	lr
 8006ece:	bf00      	nop

08006ed0 <HAL_GPIO_Init>:
 8006ed0:	b480      	push	{r7}
 8006ed2:	b089      	sub	sp, #36	@ 0x24
 8006ed4:	af00      	add	r7, sp, #0
 8006ed6:	6078      	str	r0, [r7, #4]
 8006ed8:	6039      	str	r1, [r7, #0]
 8006eda:	2300      	movs	r3, #0
 8006edc:	61fb      	str	r3, [r7, #28]
 8006ede:	2300      	movs	r3, #0
 8006ee0:	617b      	str	r3, [r7, #20]
 8006ee2:	2300      	movs	r3, #0
 8006ee4:	613b      	str	r3, [r7, #16]
 8006ee6:	2300      	movs	r3, #0
 8006ee8:	61bb      	str	r3, [r7, #24]
 8006eea:	2300      	movs	r3, #0
 8006eec:	61fb      	str	r3, [r7, #28]
 8006eee:	e175      	b.n	80071dc <HAL_GPIO_Init+0x30c>
 8006ef0:	2201      	movs	r2, #1
 8006ef2:	69fb      	ldr	r3, [r7, #28]
 8006ef4:	fa02 f303 	lsl.w	r3, r2, r3
 8006ef8:	617b      	str	r3, [r7, #20]
 8006efa:	683b      	ldr	r3, [r7, #0]
 8006efc:	681b      	ldr	r3, [r3, #0]
 8006efe:	697a      	ldr	r2, [r7, #20]
 8006f00:	4013      	ands	r3, r2
 8006f02:	613b      	str	r3, [r7, #16]
 8006f04:	693a      	ldr	r2, [r7, #16]
 8006f06:	697b      	ldr	r3, [r7, #20]
 8006f08:	429a      	cmp	r2, r3
 8006f0a:	f040 8164 	bne.w	80071d6 <HAL_GPIO_Init+0x306>
 8006f0e:	683b      	ldr	r3, [r7, #0]
 8006f10:	685b      	ldr	r3, [r3, #4]
 8006f12:	f003 0303 	and.w	r3, r3, #3
 8006f16:	2b01      	cmp	r3, #1
 8006f18:	d005      	beq.n	8006f26 <HAL_GPIO_Init+0x56>
 8006f1a:	683b      	ldr	r3, [r7, #0]
 8006f1c:	685b      	ldr	r3, [r3, #4]
 8006f1e:	f003 0303 	and.w	r3, r3, #3
 8006f22:	2b02      	cmp	r3, #2
 8006f24:	d130      	bne.n	8006f88 <HAL_GPIO_Init+0xb8>
 8006f26:	687b      	ldr	r3, [r7, #4]
 8006f28:	689b      	ldr	r3, [r3, #8]
 8006f2a:	61bb      	str	r3, [r7, #24]
 8006f2c:	69fb      	ldr	r3, [r7, #28]
 8006f2e:	005b      	lsls	r3, r3, #1
 8006f30:	2203      	movs	r2, #3
 8006f32:	fa02 f303 	lsl.w	r3, r2, r3
 8006f36:	43db      	mvns	r3, r3
 8006f38:	69ba      	ldr	r2, [r7, #24]
 8006f3a:	4013      	ands	r3, r2
 8006f3c:	61bb      	str	r3, [r7, #24]
 8006f3e:	683b      	ldr	r3, [r7, #0]
 8006f40:	68da      	ldr	r2, [r3, #12]
 8006f42:	69fb      	ldr	r3, [r7, #28]
 8006f44:	005b      	lsls	r3, r3, #1
 8006f46:	fa02 f303 	lsl.w	r3, r2, r3
 8006f4a:	69ba      	ldr	r2, [r7, #24]
 8006f4c:	4313      	orrs	r3, r2
 8006f4e:	61bb      	str	r3, [r7, #24]
 8006f50:	687b      	ldr	r3, [r7, #4]
 8006f52:	69ba      	ldr	r2, [r7, #24]
 8006f54:	609a      	str	r2, [r3, #8]
 8006f56:	687b      	ldr	r3, [r7, #4]
 8006f58:	685b      	ldr	r3, [r3, #4]
 8006f5a:	61bb      	str	r3, [r7, #24]
 8006f5c:	2201      	movs	r2, #1
 8006f5e:	69fb      	ldr	r3, [r7, #28]
 8006f60:	fa02 f303 	lsl.w	r3, r2, r3
 8006f64:	43db      	mvns	r3, r3
 8006f66:	69ba      	ldr	r2, [r7, #24]
 8006f68:	4013      	ands	r3, r2
 8006f6a:	61bb      	str	r3, [r7, #24]
 8006f6c:	683b      	ldr	r3, [r7, #0]
 8006f6e:	685b      	ldr	r3, [r3, #4]
 8006f70:	091b      	lsrs	r3, r3, #4
 8006f72:	f003 0201 	and.w	r2, r3, #1
 8006f76:	69fb      	ldr	r3, [r7, #28]
 8006f78:	fa02 f303 	lsl.w	r3, r2, r3
 8006f7c:	69ba      	ldr	r2, [r7, #24]
 8006f7e:	4313      	orrs	r3, r2
 8006f80:	61bb      	str	r3, [r7, #24]
 8006f82:	687b      	ldr	r3, [r7, #4]
 8006f84:	69ba      	ldr	r2, [r7, #24]
 8006f86:	605a      	str	r2, [r3, #4]
 8006f88:	683b      	ldr	r3, [r7, #0]
 8006f8a:	685b      	ldr	r3, [r3, #4]
 8006f8c:	f003 0303 	and.w	r3, r3, #3
 8006f90:	2b03      	cmp	r3, #3
 8006f92:	d017      	beq.n	8006fc4 <HAL_GPIO_Init+0xf4>
 8006f94:	687b      	ldr	r3, [r7, #4]
 8006f96:	68db      	ldr	r3, [r3, #12]
 8006f98:	61bb      	str	r3, [r7, #24]
 8006f9a:	69fb      	ldr	r3, [r7, #28]
 8006f9c:	005b      	lsls	r3, r3, #1
 8006f9e:	2203      	movs	r2, #3
 8006fa0:	fa02 f303 	lsl.w	r3, r2, r3
 8006fa4:	43db      	mvns	r3, r3
 8006fa6:	69ba      	ldr	r2, [r7, #24]
 8006fa8:	4013      	ands	r3, r2
 8006faa:	61bb      	str	r3, [r7, #24]
 8006fac:	683b      	ldr	r3, [r7, #0]
 8006fae:	689a      	ldr	r2, [r3, #8]
 8006fb0:	69fb      	ldr	r3, [r7, #28]
 8006fb2:	005b      	lsls	r3, r3, #1
 8006fb4:	fa02 f303 	lsl.w	r3, r2, r3
 8006fb8:	69ba      	ldr	r2, [r7, #24]
 8006fba:	4313      	orrs	r3, r2
 8006fbc:	61bb      	str	r3, [r7, #24]
 8006fbe:	687b      	ldr	r3, [r7, #4]
 8006fc0:	69ba      	ldr	r2, [r7, #24]
 8006fc2:	60da      	str	r2, [r3, #12]
 8006fc4:	683b      	ldr	r3, [r7, #0]
 8006fc6:	685b      	ldr	r3, [r3, #4]
 8006fc8:	f003 0303 	and.w	r3, r3, #3
 8006fcc:	2b02      	cmp	r3, #2
 8006fce:	d123      	bne.n	8007018 <HAL_GPIO_Init+0x148>
 8006fd0:	69fb      	ldr	r3, [r7, #28]
 8006fd2:	08da      	lsrs	r2, r3, #3
 8006fd4:	687b      	ldr	r3, [r7, #4]
 8006fd6:	3208      	adds	r2, #8
 8006fd8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006fdc:	61bb      	str	r3, [r7, #24]
 8006fde:	69fb      	ldr	r3, [r7, #28]
 8006fe0:	f003 0307 	and.w	r3, r3, #7
 8006fe4:	009b      	lsls	r3, r3, #2
 8006fe6:	220f      	movs	r2, #15
 8006fe8:	fa02 f303 	lsl.w	r3, r2, r3
 8006fec:	43db      	mvns	r3, r3
 8006fee:	69ba      	ldr	r2, [r7, #24]
 8006ff0:	4013      	ands	r3, r2
 8006ff2:	61bb      	str	r3, [r7, #24]
 8006ff4:	683b      	ldr	r3, [r7, #0]
 8006ff6:	691a      	ldr	r2, [r3, #16]
 8006ff8:	69fb      	ldr	r3, [r7, #28]
 8006ffa:	f003 0307 	and.w	r3, r3, #7
 8006ffe:	009b      	lsls	r3, r3, #2
 8007000:	fa02 f303 	lsl.w	r3, r2, r3
 8007004:	69ba      	ldr	r2, [r7, #24]
 8007006:	4313      	orrs	r3, r2
 8007008:	61bb      	str	r3, [r7, #24]
 800700a:	69fb      	ldr	r3, [r7, #28]
 800700c:	08da      	lsrs	r2, r3, #3
 800700e:	687b      	ldr	r3, [r7, #4]
 8007010:	3208      	adds	r2, #8
 8007012:	69b9      	ldr	r1, [r7, #24]
 8007014:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	681b      	ldr	r3, [r3, #0]
 800701c:	61bb      	str	r3, [r7, #24]
 800701e:	69fb      	ldr	r3, [r7, #28]
 8007020:	005b      	lsls	r3, r3, #1
 8007022:	2203      	movs	r2, #3
 8007024:	fa02 f303 	lsl.w	r3, r2, r3
 8007028:	43db      	mvns	r3, r3
 800702a:	69ba      	ldr	r2, [r7, #24]
 800702c:	4013      	ands	r3, r2
 800702e:	61bb      	str	r3, [r7, #24]
 8007030:	683b      	ldr	r3, [r7, #0]
 8007032:	685b      	ldr	r3, [r3, #4]
 8007034:	f003 0203 	and.w	r2, r3, #3
 8007038:	69fb      	ldr	r3, [r7, #28]
 800703a:	005b      	lsls	r3, r3, #1
 800703c:	fa02 f303 	lsl.w	r3, r2, r3
 8007040:	69ba      	ldr	r2, [r7, #24]
 8007042:	4313      	orrs	r3, r2
 8007044:	61bb      	str	r3, [r7, #24]
 8007046:	687b      	ldr	r3, [r7, #4]
 8007048:	69ba      	ldr	r2, [r7, #24]
 800704a:	601a      	str	r2, [r3, #0]
 800704c:	683b      	ldr	r3, [r7, #0]
 800704e:	685b      	ldr	r3, [r3, #4]
 8007050:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8007054:	2b00      	cmp	r3, #0
 8007056:	f000 80be 	beq.w	80071d6 <HAL_GPIO_Init+0x306>
 800705a:	4b66      	ldr	r3, [pc, #408]	@ (80071f4 <HAL_GPIO_Init+0x324>)
 800705c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800705e:	4a65      	ldr	r2, [pc, #404]	@ (80071f4 <HAL_GPIO_Init+0x324>)
 8007060:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8007064:	6453      	str	r3, [r2, #68]	@ 0x44
 8007066:	4b63      	ldr	r3, [pc, #396]	@ (80071f4 <HAL_GPIO_Init+0x324>)
 8007068:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800706a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800706e:	60fb      	str	r3, [r7, #12]
 8007070:	68fb      	ldr	r3, [r7, #12]
 8007072:	4a61      	ldr	r2, [pc, #388]	@ (80071f8 <HAL_GPIO_Init+0x328>)
 8007074:	69fb      	ldr	r3, [r7, #28]
 8007076:	089b      	lsrs	r3, r3, #2
 8007078:	3302      	adds	r3, #2
 800707a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800707e:	61bb      	str	r3, [r7, #24]
 8007080:	69fb      	ldr	r3, [r7, #28]
 8007082:	f003 0303 	and.w	r3, r3, #3
 8007086:	009b      	lsls	r3, r3, #2
 8007088:	220f      	movs	r2, #15
 800708a:	fa02 f303 	lsl.w	r3, r2, r3
 800708e:	43db      	mvns	r3, r3
 8007090:	69ba      	ldr	r2, [r7, #24]
 8007092:	4013      	ands	r3, r2
 8007094:	61bb      	str	r3, [r7, #24]
 8007096:	687b      	ldr	r3, [r7, #4]
 8007098:	4a58      	ldr	r2, [pc, #352]	@ (80071fc <HAL_GPIO_Init+0x32c>)
 800709a:	4293      	cmp	r3, r2
 800709c:	d037      	beq.n	800710e <HAL_GPIO_Init+0x23e>
 800709e:	687b      	ldr	r3, [r7, #4]
 80070a0:	4a57      	ldr	r2, [pc, #348]	@ (8007200 <HAL_GPIO_Init+0x330>)
 80070a2:	4293      	cmp	r3, r2
 80070a4:	d031      	beq.n	800710a <HAL_GPIO_Init+0x23a>
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	4a56      	ldr	r2, [pc, #344]	@ (8007204 <HAL_GPIO_Init+0x334>)
 80070aa:	4293      	cmp	r3, r2
 80070ac:	d02b      	beq.n	8007106 <HAL_GPIO_Init+0x236>
 80070ae:	687b      	ldr	r3, [r7, #4]
 80070b0:	4a55      	ldr	r2, [pc, #340]	@ (8007208 <HAL_GPIO_Init+0x338>)
 80070b2:	4293      	cmp	r3, r2
 80070b4:	d025      	beq.n	8007102 <HAL_GPIO_Init+0x232>
 80070b6:	687b      	ldr	r3, [r7, #4]
 80070b8:	4a54      	ldr	r2, [pc, #336]	@ (800720c <HAL_GPIO_Init+0x33c>)
 80070ba:	4293      	cmp	r3, r2
 80070bc:	d01f      	beq.n	80070fe <HAL_GPIO_Init+0x22e>
 80070be:	687b      	ldr	r3, [r7, #4]
 80070c0:	4a53      	ldr	r2, [pc, #332]	@ (8007210 <HAL_GPIO_Init+0x340>)
 80070c2:	4293      	cmp	r3, r2
 80070c4:	d019      	beq.n	80070fa <HAL_GPIO_Init+0x22a>
 80070c6:	687b      	ldr	r3, [r7, #4]
 80070c8:	4a52      	ldr	r2, [pc, #328]	@ (8007214 <HAL_GPIO_Init+0x344>)
 80070ca:	4293      	cmp	r3, r2
 80070cc:	d013      	beq.n	80070f6 <HAL_GPIO_Init+0x226>
 80070ce:	687b      	ldr	r3, [r7, #4]
 80070d0:	4a51      	ldr	r2, [pc, #324]	@ (8007218 <HAL_GPIO_Init+0x348>)
 80070d2:	4293      	cmp	r3, r2
 80070d4:	d00d      	beq.n	80070f2 <HAL_GPIO_Init+0x222>
 80070d6:	687b      	ldr	r3, [r7, #4]
 80070d8:	4a50      	ldr	r2, [pc, #320]	@ (800721c <HAL_GPIO_Init+0x34c>)
 80070da:	4293      	cmp	r3, r2
 80070dc:	d007      	beq.n	80070ee <HAL_GPIO_Init+0x21e>
 80070de:	687b      	ldr	r3, [r7, #4]
 80070e0:	4a4f      	ldr	r2, [pc, #316]	@ (8007220 <HAL_GPIO_Init+0x350>)
 80070e2:	4293      	cmp	r3, r2
 80070e4:	d101      	bne.n	80070ea <HAL_GPIO_Init+0x21a>
 80070e6:	2309      	movs	r3, #9
 80070e8:	e012      	b.n	8007110 <HAL_GPIO_Init+0x240>
 80070ea:	230a      	movs	r3, #10
 80070ec:	e010      	b.n	8007110 <HAL_GPIO_Init+0x240>
 80070ee:	2308      	movs	r3, #8
 80070f0:	e00e      	b.n	8007110 <HAL_GPIO_Init+0x240>
 80070f2:	2307      	movs	r3, #7
 80070f4:	e00c      	b.n	8007110 <HAL_GPIO_Init+0x240>
 80070f6:	2306      	movs	r3, #6
 80070f8:	e00a      	b.n	8007110 <HAL_GPIO_Init+0x240>
 80070fa:	2305      	movs	r3, #5
 80070fc:	e008      	b.n	8007110 <HAL_GPIO_Init+0x240>
 80070fe:	2304      	movs	r3, #4
 8007100:	e006      	b.n	8007110 <HAL_GPIO_Init+0x240>
 8007102:	2303      	movs	r3, #3
 8007104:	e004      	b.n	8007110 <HAL_GPIO_Init+0x240>
 8007106:	2302      	movs	r3, #2
 8007108:	e002      	b.n	8007110 <HAL_GPIO_Init+0x240>
 800710a:	2301      	movs	r3, #1
 800710c:	e000      	b.n	8007110 <HAL_GPIO_Init+0x240>
 800710e:	2300      	movs	r3, #0
 8007110:	69fa      	ldr	r2, [r7, #28]
 8007112:	f002 0203 	and.w	r2, r2, #3
 8007116:	0092      	lsls	r2, r2, #2
 8007118:	4093      	lsls	r3, r2
 800711a:	69ba      	ldr	r2, [r7, #24]
 800711c:	4313      	orrs	r3, r2
 800711e:	61bb      	str	r3, [r7, #24]
 8007120:	4935      	ldr	r1, [pc, #212]	@ (80071f8 <HAL_GPIO_Init+0x328>)
 8007122:	69fb      	ldr	r3, [r7, #28]
 8007124:	089b      	lsrs	r3, r3, #2
 8007126:	3302      	adds	r3, #2
 8007128:	69ba      	ldr	r2, [r7, #24]
 800712a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800712e:	4b3d      	ldr	r3, [pc, #244]	@ (8007224 <HAL_GPIO_Init+0x354>)
 8007130:	689b      	ldr	r3, [r3, #8]
 8007132:	61bb      	str	r3, [r7, #24]
 8007134:	693b      	ldr	r3, [r7, #16]
 8007136:	43db      	mvns	r3, r3
 8007138:	69ba      	ldr	r2, [r7, #24]
 800713a:	4013      	ands	r3, r2
 800713c:	61bb      	str	r3, [r7, #24]
 800713e:	683b      	ldr	r3, [r7, #0]
 8007140:	685b      	ldr	r3, [r3, #4]
 8007142:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8007146:	2b00      	cmp	r3, #0
 8007148:	d003      	beq.n	8007152 <HAL_GPIO_Init+0x282>
 800714a:	69ba      	ldr	r2, [r7, #24]
 800714c:	693b      	ldr	r3, [r7, #16]
 800714e:	4313      	orrs	r3, r2
 8007150:	61bb      	str	r3, [r7, #24]
 8007152:	4a34      	ldr	r2, [pc, #208]	@ (8007224 <HAL_GPIO_Init+0x354>)
 8007154:	69bb      	ldr	r3, [r7, #24]
 8007156:	6093      	str	r3, [r2, #8]
 8007158:	4b32      	ldr	r3, [pc, #200]	@ (8007224 <HAL_GPIO_Init+0x354>)
 800715a:	68db      	ldr	r3, [r3, #12]
 800715c:	61bb      	str	r3, [r7, #24]
 800715e:	693b      	ldr	r3, [r7, #16]
 8007160:	43db      	mvns	r3, r3
 8007162:	69ba      	ldr	r2, [r7, #24]
 8007164:	4013      	ands	r3, r2
 8007166:	61bb      	str	r3, [r7, #24]
 8007168:	683b      	ldr	r3, [r7, #0]
 800716a:	685b      	ldr	r3, [r3, #4]
 800716c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8007170:	2b00      	cmp	r3, #0
 8007172:	d003      	beq.n	800717c <HAL_GPIO_Init+0x2ac>
 8007174:	69ba      	ldr	r2, [r7, #24]
 8007176:	693b      	ldr	r3, [r7, #16]
 8007178:	4313      	orrs	r3, r2
 800717a:	61bb      	str	r3, [r7, #24]
 800717c:	4a29      	ldr	r2, [pc, #164]	@ (8007224 <HAL_GPIO_Init+0x354>)
 800717e:	69bb      	ldr	r3, [r7, #24]
 8007180:	60d3      	str	r3, [r2, #12]
 8007182:	4b28      	ldr	r3, [pc, #160]	@ (8007224 <HAL_GPIO_Init+0x354>)
 8007184:	685b      	ldr	r3, [r3, #4]
 8007186:	61bb      	str	r3, [r7, #24]
 8007188:	693b      	ldr	r3, [r7, #16]
 800718a:	43db      	mvns	r3, r3
 800718c:	69ba      	ldr	r2, [r7, #24]
 800718e:	4013      	ands	r3, r2
 8007190:	61bb      	str	r3, [r7, #24]
 8007192:	683b      	ldr	r3, [r7, #0]
 8007194:	685b      	ldr	r3, [r3, #4]
 8007196:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800719a:	2b00      	cmp	r3, #0
 800719c:	d003      	beq.n	80071a6 <HAL_GPIO_Init+0x2d6>
 800719e:	69ba      	ldr	r2, [r7, #24]
 80071a0:	693b      	ldr	r3, [r7, #16]
 80071a2:	4313      	orrs	r3, r2
 80071a4:	61bb      	str	r3, [r7, #24]
 80071a6:	4a1f      	ldr	r2, [pc, #124]	@ (8007224 <HAL_GPIO_Init+0x354>)
 80071a8:	69bb      	ldr	r3, [r7, #24]
 80071aa:	6053      	str	r3, [r2, #4]
 80071ac:	4b1d      	ldr	r3, [pc, #116]	@ (8007224 <HAL_GPIO_Init+0x354>)
 80071ae:	681b      	ldr	r3, [r3, #0]
 80071b0:	61bb      	str	r3, [r7, #24]
 80071b2:	693b      	ldr	r3, [r7, #16]
 80071b4:	43db      	mvns	r3, r3
 80071b6:	69ba      	ldr	r2, [r7, #24]
 80071b8:	4013      	ands	r3, r2
 80071ba:	61bb      	str	r3, [r7, #24]
 80071bc:	683b      	ldr	r3, [r7, #0]
 80071be:	685b      	ldr	r3, [r3, #4]
 80071c0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80071c4:	2b00      	cmp	r3, #0
 80071c6:	d003      	beq.n	80071d0 <HAL_GPIO_Init+0x300>
 80071c8:	69ba      	ldr	r2, [r7, #24]
 80071ca:	693b      	ldr	r3, [r7, #16]
 80071cc:	4313      	orrs	r3, r2
 80071ce:	61bb      	str	r3, [r7, #24]
 80071d0:	4a14      	ldr	r2, [pc, #80]	@ (8007224 <HAL_GPIO_Init+0x354>)
 80071d2:	69bb      	ldr	r3, [r7, #24]
 80071d4:	6013      	str	r3, [r2, #0]
 80071d6:	69fb      	ldr	r3, [r7, #28]
 80071d8:	3301      	adds	r3, #1
 80071da:	61fb      	str	r3, [r7, #28]
 80071dc:	69fb      	ldr	r3, [r7, #28]
 80071de:	2b0f      	cmp	r3, #15
 80071e0:	f67f ae86 	bls.w	8006ef0 <HAL_GPIO_Init+0x20>
 80071e4:	bf00      	nop
 80071e6:	bf00      	nop
 80071e8:	3724      	adds	r7, #36	@ 0x24
 80071ea:	46bd      	mov	sp, r7
 80071ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071f0:	4770      	bx	lr
 80071f2:	bf00      	nop
 80071f4:	40023800 	.word	0x40023800
 80071f8:	40013800 	.word	0x40013800
 80071fc:	40020000 	.word	0x40020000
 8007200:	40020400 	.word	0x40020400
 8007204:	40020800 	.word	0x40020800
 8007208:	40020c00 	.word	0x40020c00
 800720c:	40021000 	.word	0x40021000
 8007210:	40021400 	.word	0x40021400
 8007214:	40021800 	.word	0x40021800
 8007218:	40021c00 	.word	0x40021c00
 800721c:	40022000 	.word	0x40022000
 8007220:	40022400 	.word	0x40022400
 8007224:	40013c00 	.word	0x40013c00

08007228 <HAL_GPIO_ReadPin>:
 8007228:	b480      	push	{r7}
 800722a:	b085      	sub	sp, #20
 800722c:	af00      	add	r7, sp, #0
 800722e:	6078      	str	r0, [r7, #4]
 8007230:	460b      	mov	r3, r1
 8007232:	807b      	strh	r3, [r7, #2]
 8007234:	687b      	ldr	r3, [r7, #4]
 8007236:	691a      	ldr	r2, [r3, #16]
 8007238:	887b      	ldrh	r3, [r7, #2]
 800723a:	4013      	ands	r3, r2
 800723c:	2b00      	cmp	r3, #0
 800723e:	d002      	beq.n	8007246 <HAL_GPIO_ReadPin+0x1e>
 8007240:	2301      	movs	r3, #1
 8007242:	73fb      	strb	r3, [r7, #15]
 8007244:	e001      	b.n	800724a <HAL_GPIO_ReadPin+0x22>
 8007246:	2300      	movs	r3, #0
 8007248:	73fb      	strb	r3, [r7, #15]
 800724a:	7bfb      	ldrb	r3, [r7, #15]
 800724c:	4618      	mov	r0, r3
 800724e:	3714      	adds	r7, #20
 8007250:	46bd      	mov	sp, r7
 8007252:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007256:	4770      	bx	lr

08007258 <HAL_GPIO_WritePin>:
 8007258:	b480      	push	{r7}
 800725a:	b083      	sub	sp, #12
 800725c:	af00      	add	r7, sp, #0
 800725e:	6078      	str	r0, [r7, #4]
 8007260:	460b      	mov	r3, r1
 8007262:	807b      	strh	r3, [r7, #2]
 8007264:	4613      	mov	r3, r2
 8007266:	707b      	strb	r3, [r7, #1]
 8007268:	787b      	ldrb	r3, [r7, #1]
 800726a:	2b00      	cmp	r3, #0
 800726c:	d003      	beq.n	8007276 <HAL_GPIO_WritePin+0x1e>
 800726e:	887a      	ldrh	r2, [r7, #2]
 8007270:	687b      	ldr	r3, [r7, #4]
 8007272:	619a      	str	r2, [r3, #24]
 8007274:	e003      	b.n	800727e <HAL_GPIO_WritePin+0x26>
 8007276:	887b      	ldrh	r3, [r7, #2]
 8007278:	041a      	lsls	r2, r3, #16
 800727a:	687b      	ldr	r3, [r7, #4]
 800727c:	619a      	str	r2, [r3, #24]
 800727e:	bf00      	nop
 8007280:	370c      	adds	r7, #12
 8007282:	46bd      	mov	sp, r7
 8007284:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007288:	4770      	bx	lr
	...

0800728c <HAL_PWREx_EnableOverDrive>:
 800728c:	b580      	push	{r7, lr}
 800728e:	b082      	sub	sp, #8
 8007290:	af00      	add	r7, sp, #0
 8007292:	2300      	movs	r3, #0
 8007294:	607b      	str	r3, [r7, #4]
 8007296:	4b23      	ldr	r3, [pc, #140]	@ (8007324 <HAL_PWREx_EnableOverDrive+0x98>)
 8007298:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800729a:	4a22      	ldr	r2, [pc, #136]	@ (8007324 <HAL_PWREx_EnableOverDrive+0x98>)
 800729c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80072a0:	6413      	str	r3, [r2, #64]	@ 0x40
 80072a2:	4b20      	ldr	r3, [pc, #128]	@ (8007324 <HAL_PWREx_EnableOverDrive+0x98>)
 80072a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80072a6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80072aa:	603b      	str	r3, [r7, #0]
 80072ac:	683b      	ldr	r3, [r7, #0]
 80072ae:	4b1e      	ldr	r3, [pc, #120]	@ (8007328 <HAL_PWREx_EnableOverDrive+0x9c>)
 80072b0:	681b      	ldr	r3, [r3, #0]
 80072b2:	4a1d      	ldr	r2, [pc, #116]	@ (8007328 <HAL_PWREx_EnableOverDrive+0x9c>)
 80072b4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80072b8:	6013      	str	r3, [r2, #0]
 80072ba:	f7fd fecf 	bl	800505c <HAL_GetTick>
 80072be:	6078      	str	r0, [r7, #4]
 80072c0:	e009      	b.n	80072d6 <HAL_PWREx_EnableOverDrive+0x4a>
 80072c2:	f7fd fecb 	bl	800505c <HAL_GetTick>
 80072c6:	4602      	mov	r2, r0
 80072c8:	687b      	ldr	r3, [r7, #4]
 80072ca:	1ad3      	subs	r3, r2, r3
 80072cc:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80072d0:	d901      	bls.n	80072d6 <HAL_PWREx_EnableOverDrive+0x4a>
 80072d2:	2303      	movs	r3, #3
 80072d4:	e022      	b.n	800731c <HAL_PWREx_EnableOverDrive+0x90>
 80072d6:	4b14      	ldr	r3, [pc, #80]	@ (8007328 <HAL_PWREx_EnableOverDrive+0x9c>)
 80072d8:	685b      	ldr	r3, [r3, #4]
 80072da:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80072de:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80072e2:	d1ee      	bne.n	80072c2 <HAL_PWREx_EnableOverDrive+0x36>
 80072e4:	4b10      	ldr	r3, [pc, #64]	@ (8007328 <HAL_PWREx_EnableOverDrive+0x9c>)
 80072e6:	681b      	ldr	r3, [r3, #0]
 80072e8:	4a0f      	ldr	r2, [pc, #60]	@ (8007328 <HAL_PWREx_EnableOverDrive+0x9c>)
 80072ea:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80072ee:	6013      	str	r3, [r2, #0]
 80072f0:	f7fd feb4 	bl	800505c <HAL_GetTick>
 80072f4:	6078      	str	r0, [r7, #4]
 80072f6:	e009      	b.n	800730c <HAL_PWREx_EnableOverDrive+0x80>
 80072f8:	f7fd feb0 	bl	800505c <HAL_GetTick>
 80072fc:	4602      	mov	r2, r0
 80072fe:	687b      	ldr	r3, [r7, #4]
 8007300:	1ad3      	subs	r3, r2, r3
 8007302:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8007306:	d901      	bls.n	800730c <HAL_PWREx_EnableOverDrive+0x80>
 8007308:	2303      	movs	r3, #3
 800730a:	e007      	b.n	800731c <HAL_PWREx_EnableOverDrive+0x90>
 800730c:	4b06      	ldr	r3, [pc, #24]	@ (8007328 <HAL_PWREx_EnableOverDrive+0x9c>)
 800730e:	685b      	ldr	r3, [r3, #4]
 8007310:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007314:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8007318:	d1ee      	bne.n	80072f8 <HAL_PWREx_EnableOverDrive+0x6c>
 800731a:	2300      	movs	r3, #0
 800731c:	4618      	mov	r0, r3
 800731e:	3708      	adds	r7, #8
 8007320:	46bd      	mov	sp, r7
 8007322:	bd80      	pop	{r7, pc}
 8007324:	40023800 	.word	0x40023800
 8007328:	40007000 	.word	0x40007000

0800732c <HAL_RCC_OscConfig>:
 800732c:	b580      	push	{r7, lr}
 800732e:	b086      	sub	sp, #24
 8007330:	af00      	add	r7, sp, #0
 8007332:	6078      	str	r0, [r7, #4]
 8007334:	2300      	movs	r3, #0
 8007336:	75fb      	strb	r3, [r7, #23]
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	2b00      	cmp	r3, #0
 800733c:	d101      	bne.n	8007342 <HAL_RCC_OscConfig+0x16>
 800733e:	2301      	movs	r3, #1
 8007340:	e291      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 8007342:	687b      	ldr	r3, [r7, #4]
 8007344:	681b      	ldr	r3, [r3, #0]
 8007346:	f003 0301 	and.w	r3, r3, #1
 800734a:	2b00      	cmp	r3, #0
 800734c:	f000 8087 	beq.w	800745e <HAL_RCC_OscConfig+0x132>
 8007350:	4b96      	ldr	r3, [pc, #600]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 8007352:	689b      	ldr	r3, [r3, #8]
 8007354:	f003 030c 	and.w	r3, r3, #12
 8007358:	2b04      	cmp	r3, #4
 800735a:	d00c      	beq.n	8007376 <HAL_RCC_OscConfig+0x4a>
 800735c:	4b93      	ldr	r3, [pc, #588]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 800735e:	689b      	ldr	r3, [r3, #8]
 8007360:	f003 030c 	and.w	r3, r3, #12
 8007364:	2b08      	cmp	r3, #8
 8007366:	d112      	bne.n	800738e <HAL_RCC_OscConfig+0x62>
 8007368:	4b90      	ldr	r3, [pc, #576]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 800736a:	685b      	ldr	r3, [r3, #4]
 800736c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8007370:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007374:	d10b      	bne.n	800738e <HAL_RCC_OscConfig+0x62>
 8007376:	4b8d      	ldr	r3, [pc, #564]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 8007378:	681b      	ldr	r3, [r3, #0]
 800737a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800737e:	2b00      	cmp	r3, #0
 8007380:	d06c      	beq.n	800745c <HAL_RCC_OscConfig+0x130>
 8007382:	687b      	ldr	r3, [r7, #4]
 8007384:	685b      	ldr	r3, [r3, #4]
 8007386:	2b00      	cmp	r3, #0
 8007388:	d168      	bne.n	800745c <HAL_RCC_OscConfig+0x130>
 800738a:	2301      	movs	r3, #1
 800738c:	e26b      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 800738e:	687b      	ldr	r3, [r7, #4]
 8007390:	685b      	ldr	r3, [r3, #4]
 8007392:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007396:	d106      	bne.n	80073a6 <HAL_RCC_OscConfig+0x7a>
 8007398:	4b84      	ldr	r3, [pc, #528]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 800739a:	681b      	ldr	r3, [r3, #0]
 800739c:	4a83      	ldr	r2, [pc, #524]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 800739e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80073a2:	6013      	str	r3, [r2, #0]
 80073a4:	e02e      	b.n	8007404 <HAL_RCC_OscConfig+0xd8>
 80073a6:	687b      	ldr	r3, [r7, #4]
 80073a8:	685b      	ldr	r3, [r3, #4]
 80073aa:	2b00      	cmp	r3, #0
 80073ac:	d10c      	bne.n	80073c8 <HAL_RCC_OscConfig+0x9c>
 80073ae:	4b7f      	ldr	r3, [pc, #508]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80073b0:	681b      	ldr	r3, [r3, #0]
 80073b2:	4a7e      	ldr	r2, [pc, #504]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80073b4:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80073b8:	6013      	str	r3, [r2, #0]
 80073ba:	4b7c      	ldr	r3, [pc, #496]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80073bc:	681b      	ldr	r3, [r3, #0]
 80073be:	4a7b      	ldr	r2, [pc, #492]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80073c0:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80073c4:	6013      	str	r3, [r2, #0]
 80073c6:	e01d      	b.n	8007404 <HAL_RCC_OscConfig+0xd8>
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	685b      	ldr	r3, [r3, #4]
 80073cc:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80073d0:	d10c      	bne.n	80073ec <HAL_RCC_OscConfig+0xc0>
 80073d2:	4b76      	ldr	r3, [pc, #472]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80073d4:	681b      	ldr	r3, [r3, #0]
 80073d6:	4a75      	ldr	r2, [pc, #468]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80073d8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80073dc:	6013      	str	r3, [r2, #0]
 80073de:	4b73      	ldr	r3, [pc, #460]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80073e0:	681b      	ldr	r3, [r3, #0]
 80073e2:	4a72      	ldr	r2, [pc, #456]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80073e4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80073e8:	6013      	str	r3, [r2, #0]
 80073ea:	e00b      	b.n	8007404 <HAL_RCC_OscConfig+0xd8>
 80073ec:	4b6f      	ldr	r3, [pc, #444]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80073ee:	681b      	ldr	r3, [r3, #0]
 80073f0:	4a6e      	ldr	r2, [pc, #440]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80073f2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80073f6:	6013      	str	r3, [r2, #0]
 80073f8:	4b6c      	ldr	r3, [pc, #432]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80073fa:	681b      	ldr	r3, [r3, #0]
 80073fc:	4a6b      	ldr	r2, [pc, #428]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80073fe:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8007402:	6013      	str	r3, [r2, #0]
 8007404:	687b      	ldr	r3, [r7, #4]
 8007406:	685b      	ldr	r3, [r3, #4]
 8007408:	2b00      	cmp	r3, #0
 800740a:	d013      	beq.n	8007434 <HAL_RCC_OscConfig+0x108>
 800740c:	f7fd fe26 	bl	800505c <HAL_GetTick>
 8007410:	6138      	str	r0, [r7, #16]
 8007412:	e008      	b.n	8007426 <HAL_RCC_OscConfig+0xfa>
 8007414:	f7fd fe22 	bl	800505c <HAL_GetTick>
 8007418:	4602      	mov	r2, r0
 800741a:	693b      	ldr	r3, [r7, #16]
 800741c:	1ad3      	subs	r3, r2, r3
 800741e:	2b64      	cmp	r3, #100	@ 0x64
 8007420:	d901      	bls.n	8007426 <HAL_RCC_OscConfig+0xfa>
 8007422:	2303      	movs	r3, #3
 8007424:	e21f      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 8007426:	4b61      	ldr	r3, [pc, #388]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 8007428:	681b      	ldr	r3, [r3, #0]
 800742a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800742e:	2b00      	cmp	r3, #0
 8007430:	d0f0      	beq.n	8007414 <HAL_RCC_OscConfig+0xe8>
 8007432:	e014      	b.n	800745e <HAL_RCC_OscConfig+0x132>
 8007434:	f7fd fe12 	bl	800505c <HAL_GetTick>
 8007438:	6138      	str	r0, [r7, #16]
 800743a:	e008      	b.n	800744e <HAL_RCC_OscConfig+0x122>
 800743c:	f7fd fe0e 	bl	800505c <HAL_GetTick>
 8007440:	4602      	mov	r2, r0
 8007442:	693b      	ldr	r3, [r7, #16]
 8007444:	1ad3      	subs	r3, r2, r3
 8007446:	2b64      	cmp	r3, #100	@ 0x64
 8007448:	d901      	bls.n	800744e <HAL_RCC_OscConfig+0x122>
 800744a:	2303      	movs	r3, #3
 800744c:	e20b      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 800744e:	4b57      	ldr	r3, [pc, #348]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 8007450:	681b      	ldr	r3, [r3, #0]
 8007452:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007456:	2b00      	cmp	r3, #0
 8007458:	d1f0      	bne.n	800743c <HAL_RCC_OscConfig+0x110>
 800745a:	e000      	b.n	800745e <HAL_RCC_OscConfig+0x132>
 800745c:	bf00      	nop
 800745e:	687b      	ldr	r3, [r7, #4]
 8007460:	681b      	ldr	r3, [r3, #0]
 8007462:	f003 0302 	and.w	r3, r3, #2
 8007466:	2b00      	cmp	r3, #0
 8007468:	d069      	beq.n	800753e <HAL_RCC_OscConfig+0x212>
 800746a:	4b50      	ldr	r3, [pc, #320]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 800746c:	689b      	ldr	r3, [r3, #8]
 800746e:	f003 030c 	and.w	r3, r3, #12
 8007472:	2b00      	cmp	r3, #0
 8007474:	d00b      	beq.n	800748e <HAL_RCC_OscConfig+0x162>
 8007476:	4b4d      	ldr	r3, [pc, #308]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 8007478:	689b      	ldr	r3, [r3, #8]
 800747a:	f003 030c 	and.w	r3, r3, #12
 800747e:	2b08      	cmp	r3, #8
 8007480:	d11c      	bne.n	80074bc <HAL_RCC_OscConfig+0x190>
 8007482:	4b4a      	ldr	r3, [pc, #296]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 8007484:	685b      	ldr	r3, [r3, #4]
 8007486:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800748a:	2b00      	cmp	r3, #0
 800748c:	d116      	bne.n	80074bc <HAL_RCC_OscConfig+0x190>
 800748e:	4b47      	ldr	r3, [pc, #284]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 8007490:	681b      	ldr	r3, [r3, #0]
 8007492:	f003 0302 	and.w	r3, r3, #2
 8007496:	2b00      	cmp	r3, #0
 8007498:	d005      	beq.n	80074a6 <HAL_RCC_OscConfig+0x17a>
 800749a:	687b      	ldr	r3, [r7, #4]
 800749c:	68db      	ldr	r3, [r3, #12]
 800749e:	2b01      	cmp	r3, #1
 80074a0:	d001      	beq.n	80074a6 <HAL_RCC_OscConfig+0x17a>
 80074a2:	2301      	movs	r3, #1
 80074a4:	e1df      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 80074a6:	4b41      	ldr	r3, [pc, #260]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80074a8:	681b      	ldr	r3, [r3, #0]
 80074aa:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80074ae:	687b      	ldr	r3, [r7, #4]
 80074b0:	691b      	ldr	r3, [r3, #16]
 80074b2:	00db      	lsls	r3, r3, #3
 80074b4:	493d      	ldr	r1, [pc, #244]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80074b6:	4313      	orrs	r3, r2
 80074b8:	600b      	str	r3, [r1, #0]
 80074ba:	e040      	b.n	800753e <HAL_RCC_OscConfig+0x212>
 80074bc:	687b      	ldr	r3, [r7, #4]
 80074be:	68db      	ldr	r3, [r3, #12]
 80074c0:	2b00      	cmp	r3, #0
 80074c2:	d023      	beq.n	800750c <HAL_RCC_OscConfig+0x1e0>
 80074c4:	4b39      	ldr	r3, [pc, #228]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80074c6:	681b      	ldr	r3, [r3, #0]
 80074c8:	4a38      	ldr	r2, [pc, #224]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80074ca:	f043 0301 	orr.w	r3, r3, #1
 80074ce:	6013      	str	r3, [r2, #0]
 80074d0:	f7fd fdc4 	bl	800505c <HAL_GetTick>
 80074d4:	6138      	str	r0, [r7, #16]
 80074d6:	e008      	b.n	80074ea <HAL_RCC_OscConfig+0x1be>
 80074d8:	f7fd fdc0 	bl	800505c <HAL_GetTick>
 80074dc:	4602      	mov	r2, r0
 80074de:	693b      	ldr	r3, [r7, #16]
 80074e0:	1ad3      	subs	r3, r2, r3
 80074e2:	2b02      	cmp	r3, #2
 80074e4:	d901      	bls.n	80074ea <HAL_RCC_OscConfig+0x1be>
 80074e6:	2303      	movs	r3, #3
 80074e8:	e1bd      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 80074ea:	4b30      	ldr	r3, [pc, #192]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80074ec:	681b      	ldr	r3, [r3, #0]
 80074ee:	f003 0302 	and.w	r3, r3, #2
 80074f2:	2b00      	cmp	r3, #0
 80074f4:	d0f0      	beq.n	80074d8 <HAL_RCC_OscConfig+0x1ac>
 80074f6:	4b2d      	ldr	r3, [pc, #180]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 80074f8:	681b      	ldr	r3, [r3, #0]
 80074fa:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80074fe:	687b      	ldr	r3, [r7, #4]
 8007500:	691b      	ldr	r3, [r3, #16]
 8007502:	00db      	lsls	r3, r3, #3
 8007504:	4929      	ldr	r1, [pc, #164]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 8007506:	4313      	orrs	r3, r2
 8007508:	600b      	str	r3, [r1, #0]
 800750a:	e018      	b.n	800753e <HAL_RCC_OscConfig+0x212>
 800750c:	4b27      	ldr	r3, [pc, #156]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 800750e:	681b      	ldr	r3, [r3, #0]
 8007510:	4a26      	ldr	r2, [pc, #152]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 8007512:	f023 0301 	bic.w	r3, r3, #1
 8007516:	6013      	str	r3, [r2, #0]
 8007518:	f7fd fda0 	bl	800505c <HAL_GetTick>
 800751c:	6138      	str	r0, [r7, #16]
 800751e:	e008      	b.n	8007532 <HAL_RCC_OscConfig+0x206>
 8007520:	f7fd fd9c 	bl	800505c <HAL_GetTick>
 8007524:	4602      	mov	r2, r0
 8007526:	693b      	ldr	r3, [r7, #16]
 8007528:	1ad3      	subs	r3, r2, r3
 800752a:	2b02      	cmp	r3, #2
 800752c:	d901      	bls.n	8007532 <HAL_RCC_OscConfig+0x206>
 800752e:	2303      	movs	r3, #3
 8007530:	e199      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 8007532:	4b1e      	ldr	r3, [pc, #120]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 8007534:	681b      	ldr	r3, [r3, #0]
 8007536:	f003 0302 	and.w	r3, r3, #2
 800753a:	2b00      	cmp	r3, #0
 800753c:	d1f0      	bne.n	8007520 <HAL_RCC_OscConfig+0x1f4>
 800753e:	687b      	ldr	r3, [r7, #4]
 8007540:	681b      	ldr	r3, [r3, #0]
 8007542:	f003 0308 	and.w	r3, r3, #8
 8007546:	2b00      	cmp	r3, #0
 8007548:	d038      	beq.n	80075bc <HAL_RCC_OscConfig+0x290>
 800754a:	687b      	ldr	r3, [r7, #4]
 800754c:	695b      	ldr	r3, [r3, #20]
 800754e:	2b00      	cmp	r3, #0
 8007550:	d019      	beq.n	8007586 <HAL_RCC_OscConfig+0x25a>
 8007552:	4b16      	ldr	r3, [pc, #88]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 8007554:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8007556:	4a15      	ldr	r2, [pc, #84]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 8007558:	f043 0301 	orr.w	r3, r3, #1
 800755c:	6753      	str	r3, [r2, #116]	@ 0x74
 800755e:	f7fd fd7d 	bl	800505c <HAL_GetTick>
 8007562:	6138      	str	r0, [r7, #16]
 8007564:	e008      	b.n	8007578 <HAL_RCC_OscConfig+0x24c>
 8007566:	f7fd fd79 	bl	800505c <HAL_GetTick>
 800756a:	4602      	mov	r2, r0
 800756c:	693b      	ldr	r3, [r7, #16]
 800756e:	1ad3      	subs	r3, r2, r3
 8007570:	2b02      	cmp	r3, #2
 8007572:	d901      	bls.n	8007578 <HAL_RCC_OscConfig+0x24c>
 8007574:	2303      	movs	r3, #3
 8007576:	e176      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 8007578:	4b0c      	ldr	r3, [pc, #48]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 800757a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800757c:	f003 0302 	and.w	r3, r3, #2
 8007580:	2b00      	cmp	r3, #0
 8007582:	d0f0      	beq.n	8007566 <HAL_RCC_OscConfig+0x23a>
 8007584:	e01a      	b.n	80075bc <HAL_RCC_OscConfig+0x290>
 8007586:	4b09      	ldr	r3, [pc, #36]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 8007588:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800758a:	4a08      	ldr	r2, [pc, #32]	@ (80075ac <HAL_RCC_OscConfig+0x280>)
 800758c:	f023 0301 	bic.w	r3, r3, #1
 8007590:	6753      	str	r3, [r2, #116]	@ 0x74
 8007592:	f7fd fd63 	bl	800505c <HAL_GetTick>
 8007596:	6138      	str	r0, [r7, #16]
 8007598:	e00a      	b.n	80075b0 <HAL_RCC_OscConfig+0x284>
 800759a:	f7fd fd5f 	bl	800505c <HAL_GetTick>
 800759e:	4602      	mov	r2, r0
 80075a0:	693b      	ldr	r3, [r7, #16]
 80075a2:	1ad3      	subs	r3, r2, r3
 80075a4:	2b02      	cmp	r3, #2
 80075a6:	d903      	bls.n	80075b0 <HAL_RCC_OscConfig+0x284>
 80075a8:	2303      	movs	r3, #3
 80075aa:	e15c      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 80075ac:	40023800 	.word	0x40023800
 80075b0:	4b91      	ldr	r3, [pc, #580]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 80075b2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80075b4:	f003 0302 	and.w	r3, r3, #2
 80075b8:	2b00      	cmp	r3, #0
 80075ba:	d1ee      	bne.n	800759a <HAL_RCC_OscConfig+0x26e>
 80075bc:	687b      	ldr	r3, [r7, #4]
 80075be:	681b      	ldr	r3, [r3, #0]
 80075c0:	f003 0304 	and.w	r3, r3, #4
 80075c4:	2b00      	cmp	r3, #0
 80075c6:	f000 80a4 	beq.w	8007712 <HAL_RCC_OscConfig+0x3e6>
 80075ca:	4b8b      	ldr	r3, [pc, #556]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 80075cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80075ce:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80075d2:	2b00      	cmp	r3, #0
 80075d4:	d10d      	bne.n	80075f2 <HAL_RCC_OscConfig+0x2c6>
 80075d6:	4b88      	ldr	r3, [pc, #544]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 80075d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80075da:	4a87      	ldr	r2, [pc, #540]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 80075dc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80075e0:	6413      	str	r3, [r2, #64]	@ 0x40
 80075e2:	4b85      	ldr	r3, [pc, #532]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 80075e4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80075e6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80075ea:	60bb      	str	r3, [r7, #8]
 80075ec:	68bb      	ldr	r3, [r7, #8]
 80075ee:	2301      	movs	r3, #1
 80075f0:	75fb      	strb	r3, [r7, #23]
 80075f2:	4b82      	ldr	r3, [pc, #520]	@ (80077fc <HAL_RCC_OscConfig+0x4d0>)
 80075f4:	681b      	ldr	r3, [r3, #0]
 80075f6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80075fa:	2b00      	cmp	r3, #0
 80075fc:	d118      	bne.n	8007630 <HAL_RCC_OscConfig+0x304>
 80075fe:	4b7f      	ldr	r3, [pc, #508]	@ (80077fc <HAL_RCC_OscConfig+0x4d0>)
 8007600:	681b      	ldr	r3, [r3, #0]
 8007602:	4a7e      	ldr	r2, [pc, #504]	@ (80077fc <HAL_RCC_OscConfig+0x4d0>)
 8007604:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007608:	6013      	str	r3, [r2, #0]
 800760a:	f7fd fd27 	bl	800505c <HAL_GetTick>
 800760e:	6138      	str	r0, [r7, #16]
 8007610:	e008      	b.n	8007624 <HAL_RCC_OscConfig+0x2f8>
 8007612:	f7fd fd23 	bl	800505c <HAL_GetTick>
 8007616:	4602      	mov	r2, r0
 8007618:	693b      	ldr	r3, [r7, #16]
 800761a:	1ad3      	subs	r3, r2, r3
 800761c:	2b64      	cmp	r3, #100	@ 0x64
 800761e:	d901      	bls.n	8007624 <HAL_RCC_OscConfig+0x2f8>
 8007620:	2303      	movs	r3, #3
 8007622:	e120      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 8007624:	4b75      	ldr	r3, [pc, #468]	@ (80077fc <HAL_RCC_OscConfig+0x4d0>)
 8007626:	681b      	ldr	r3, [r3, #0]
 8007628:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800762c:	2b00      	cmp	r3, #0
 800762e:	d0f0      	beq.n	8007612 <HAL_RCC_OscConfig+0x2e6>
 8007630:	687b      	ldr	r3, [r7, #4]
 8007632:	689b      	ldr	r3, [r3, #8]
 8007634:	2b01      	cmp	r3, #1
 8007636:	d106      	bne.n	8007646 <HAL_RCC_OscConfig+0x31a>
 8007638:	4b6f      	ldr	r3, [pc, #444]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 800763a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800763c:	4a6e      	ldr	r2, [pc, #440]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 800763e:	f043 0301 	orr.w	r3, r3, #1
 8007642:	6713      	str	r3, [r2, #112]	@ 0x70
 8007644:	e02d      	b.n	80076a2 <HAL_RCC_OscConfig+0x376>
 8007646:	687b      	ldr	r3, [r7, #4]
 8007648:	689b      	ldr	r3, [r3, #8]
 800764a:	2b00      	cmp	r3, #0
 800764c:	d10c      	bne.n	8007668 <HAL_RCC_OscConfig+0x33c>
 800764e:	4b6a      	ldr	r3, [pc, #424]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 8007650:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007652:	4a69      	ldr	r2, [pc, #420]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 8007654:	f023 0301 	bic.w	r3, r3, #1
 8007658:	6713      	str	r3, [r2, #112]	@ 0x70
 800765a:	4b67      	ldr	r3, [pc, #412]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 800765c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800765e:	4a66      	ldr	r2, [pc, #408]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 8007660:	f023 0304 	bic.w	r3, r3, #4
 8007664:	6713      	str	r3, [r2, #112]	@ 0x70
 8007666:	e01c      	b.n	80076a2 <HAL_RCC_OscConfig+0x376>
 8007668:	687b      	ldr	r3, [r7, #4]
 800766a:	689b      	ldr	r3, [r3, #8]
 800766c:	2b05      	cmp	r3, #5
 800766e:	d10c      	bne.n	800768a <HAL_RCC_OscConfig+0x35e>
 8007670:	4b61      	ldr	r3, [pc, #388]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 8007672:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007674:	4a60      	ldr	r2, [pc, #384]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 8007676:	f043 0304 	orr.w	r3, r3, #4
 800767a:	6713      	str	r3, [r2, #112]	@ 0x70
 800767c:	4b5e      	ldr	r3, [pc, #376]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 800767e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007680:	4a5d      	ldr	r2, [pc, #372]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 8007682:	f043 0301 	orr.w	r3, r3, #1
 8007686:	6713      	str	r3, [r2, #112]	@ 0x70
 8007688:	e00b      	b.n	80076a2 <HAL_RCC_OscConfig+0x376>
 800768a:	4b5b      	ldr	r3, [pc, #364]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 800768c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800768e:	4a5a      	ldr	r2, [pc, #360]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 8007690:	f023 0301 	bic.w	r3, r3, #1
 8007694:	6713      	str	r3, [r2, #112]	@ 0x70
 8007696:	4b58      	ldr	r3, [pc, #352]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 8007698:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800769a:	4a57      	ldr	r2, [pc, #348]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 800769c:	f023 0304 	bic.w	r3, r3, #4
 80076a0:	6713      	str	r3, [r2, #112]	@ 0x70
 80076a2:	687b      	ldr	r3, [r7, #4]
 80076a4:	689b      	ldr	r3, [r3, #8]
 80076a6:	2b00      	cmp	r3, #0
 80076a8:	d015      	beq.n	80076d6 <HAL_RCC_OscConfig+0x3aa>
 80076aa:	f7fd fcd7 	bl	800505c <HAL_GetTick>
 80076ae:	6138      	str	r0, [r7, #16]
 80076b0:	e00a      	b.n	80076c8 <HAL_RCC_OscConfig+0x39c>
 80076b2:	f7fd fcd3 	bl	800505c <HAL_GetTick>
 80076b6:	4602      	mov	r2, r0
 80076b8:	693b      	ldr	r3, [r7, #16]
 80076ba:	1ad3      	subs	r3, r2, r3
 80076bc:	f241 3288 	movw	r2, #5000	@ 0x1388
 80076c0:	4293      	cmp	r3, r2
 80076c2:	d901      	bls.n	80076c8 <HAL_RCC_OscConfig+0x39c>
 80076c4:	2303      	movs	r3, #3
 80076c6:	e0ce      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 80076c8:	4b4b      	ldr	r3, [pc, #300]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 80076ca:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80076cc:	f003 0302 	and.w	r3, r3, #2
 80076d0:	2b00      	cmp	r3, #0
 80076d2:	d0ee      	beq.n	80076b2 <HAL_RCC_OscConfig+0x386>
 80076d4:	e014      	b.n	8007700 <HAL_RCC_OscConfig+0x3d4>
 80076d6:	f7fd fcc1 	bl	800505c <HAL_GetTick>
 80076da:	6138      	str	r0, [r7, #16]
 80076dc:	e00a      	b.n	80076f4 <HAL_RCC_OscConfig+0x3c8>
 80076de:	f7fd fcbd 	bl	800505c <HAL_GetTick>
 80076e2:	4602      	mov	r2, r0
 80076e4:	693b      	ldr	r3, [r7, #16]
 80076e6:	1ad3      	subs	r3, r2, r3
 80076e8:	f241 3288 	movw	r2, #5000	@ 0x1388
 80076ec:	4293      	cmp	r3, r2
 80076ee:	d901      	bls.n	80076f4 <HAL_RCC_OscConfig+0x3c8>
 80076f0:	2303      	movs	r3, #3
 80076f2:	e0b8      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 80076f4:	4b40      	ldr	r3, [pc, #256]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 80076f6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80076f8:	f003 0302 	and.w	r3, r3, #2
 80076fc:	2b00      	cmp	r3, #0
 80076fe:	d1ee      	bne.n	80076de <HAL_RCC_OscConfig+0x3b2>
 8007700:	7dfb      	ldrb	r3, [r7, #23]
 8007702:	2b01      	cmp	r3, #1
 8007704:	d105      	bne.n	8007712 <HAL_RCC_OscConfig+0x3e6>
 8007706:	4b3c      	ldr	r3, [pc, #240]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 8007708:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800770a:	4a3b      	ldr	r2, [pc, #236]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 800770c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007710:	6413      	str	r3, [r2, #64]	@ 0x40
 8007712:	687b      	ldr	r3, [r7, #4]
 8007714:	699b      	ldr	r3, [r3, #24]
 8007716:	2b00      	cmp	r3, #0
 8007718:	f000 80a4 	beq.w	8007864 <HAL_RCC_OscConfig+0x538>
 800771c:	4b36      	ldr	r3, [pc, #216]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 800771e:	689b      	ldr	r3, [r3, #8]
 8007720:	f003 030c 	and.w	r3, r3, #12
 8007724:	2b08      	cmp	r3, #8
 8007726:	d06b      	beq.n	8007800 <HAL_RCC_OscConfig+0x4d4>
 8007728:	687b      	ldr	r3, [r7, #4]
 800772a:	699b      	ldr	r3, [r3, #24]
 800772c:	2b02      	cmp	r3, #2
 800772e:	d149      	bne.n	80077c4 <HAL_RCC_OscConfig+0x498>
 8007730:	4b31      	ldr	r3, [pc, #196]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 8007732:	681b      	ldr	r3, [r3, #0]
 8007734:	4a30      	ldr	r2, [pc, #192]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 8007736:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800773a:	6013      	str	r3, [r2, #0]
 800773c:	f7fd fc8e 	bl	800505c <HAL_GetTick>
 8007740:	6138      	str	r0, [r7, #16]
 8007742:	e008      	b.n	8007756 <HAL_RCC_OscConfig+0x42a>
 8007744:	f7fd fc8a 	bl	800505c <HAL_GetTick>
 8007748:	4602      	mov	r2, r0
 800774a:	693b      	ldr	r3, [r7, #16]
 800774c:	1ad3      	subs	r3, r2, r3
 800774e:	2b02      	cmp	r3, #2
 8007750:	d901      	bls.n	8007756 <HAL_RCC_OscConfig+0x42a>
 8007752:	2303      	movs	r3, #3
 8007754:	e087      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 8007756:	4b28      	ldr	r3, [pc, #160]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 8007758:	681b      	ldr	r3, [r3, #0]
 800775a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800775e:	2b00      	cmp	r3, #0
 8007760:	d1f0      	bne.n	8007744 <HAL_RCC_OscConfig+0x418>
 8007762:	687b      	ldr	r3, [r7, #4]
 8007764:	69da      	ldr	r2, [r3, #28]
 8007766:	687b      	ldr	r3, [r7, #4]
 8007768:	6a1b      	ldr	r3, [r3, #32]
 800776a:	431a      	orrs	r2, r3
 800776c:	687b      	ldr	r3, [r7, #4]
 800776e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007770:	019b      	lsls	r3, r3, #6
 8007772:	431a      	orrs	r2, r3
 8007774:	687b      	ldr	r3, [r7, #4]
 8007776:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007778:	085b      	lsrs	r3, r3, #1
 800777a:	3b01      	subs	r3, #1
 800777c:	041b      	lsls	r3, r3, #16
 800777e:	431a      	orrs	r2, r3
 8007780:	687b      	ldr	r3, [r7, #4]
 8007782:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007784:	061b      	lsls	r3, r3, #24
 8007786:	4313      	orrs	r3, r2
 8007788:	4a1b      	ldr	r2, [pc, #108]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 800778a:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 800778e:	6053      	str	r3, [r2, #4]
 8007790:	4b19      	ldr	r3, [pc, #100]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 8007792:	681b      	ldr	r3, [r3, #0]
 8007794:	4a18      	ldr	r2, [pc, #96]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 8007796:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800779a:	6013      	str	r3, [r2, #0]
 800779c:	f7fd fc5e 	bl	800505c <HAL_GetTick>
 80077a0:	6138      	str	r0, [r7, #16]
 80077a2:	e008      	b.n	80077b6 <HAL_RCC_OscConfig+0x48a>
 80077a4:	f7fd fc5a 	bl	800505c <HAL_GetTick>
 80077a8:	4602      	mov	r2, r0
 80077aa:	693b      	ldr	r3, [r7, #16]
 80077ac:	1ad3      	subs	r3, r2, r3
 80077ae:	2b02      	cmp	r3, #2
 80077b0:	d901      	bls.n	80077b6 <HAL_RCC_OscConfig+0x48a>
 80077b2:	2303      	movs	r3, #3
 80077b4:	e057      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 80077b6:	4b10      	ldr	r3, [pc, #64]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 80077b8:	681b      	ldr	r3, [r3, #0]
 80077ba:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80077be:	2b00      	cmp	r3, #0
 80077c0:	d0f0      	beq.n	80077a4 <HAL_RCC_OscConfig+0x478>
 80077c2:	e04f      	b.n	8007864 <HAL_RCC_OscConfig+0x538>
 80077c4:	4b0c      	ldr	r3, [pc, #48]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 80077c6:	681b      	ldr	r3, [r3, #0]
 80077c8:	4a0b      	ldr	r2, [pc, #44]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 80077ca:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80077ce:	6013      	str	r3, [r2, #0]
 80077d0:	f7fd fc44 	bl	800505c <HAL_GetTick>
 80077d4:	6138      	str	r0, [r7, #16]
 80077d6:	e008      	b.n	80077ea <HAL_RCC_OscConfig+0x4be>
 80077d8:	f7fd fc40 	bl	800505c <HAL_GetTick>
 80077dc:	4602      	mov	r2, r0
 80077de:	693b      	ldr	r3, [r7, #16]
 80077e0:	1ad3      	subs	r3, r2, r3
 80077e2:	2b02      	cmp	r3, #2
 80077e4:	d901      	bls.n	80077ea <HAL_RCC_OscConfig+0x4be>
 80077e6:	2303      	movs	r3, #3
 80077e8:	e03d      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 80077ea:	4b03      	ldr	r3, [pc, #12]	@ (80077f8 <HAL_RCC_OscConfig+0x4cc>)
 80077ec:	681b      	ldr	r3, [r3, #0]
 80077ee:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80077f2:	2b00      	cmp	r3, #0
 80077f4:	d1f0      	bne.n	80077d8 <HAL_RCC_OscConfig+0x4ac>
 80077f6:	e035      	b.n	8007864 <HAL_RCC_OscConfig+0x538>
 80077f8:	40023800 	.word	0x40023800
 80077fc:	40007000 	.word	0x40007000
 8007800:	4b1b      	ldr	r3, [pc, #108]	@ (8007870 <HAL_RCC_OscConfig+0x544>)
 8007802:	685b      	ldr	r3, [r3, #4]
 8007804:	60fb      	str	r3, [r7, #12]
 8007806:	687b      	ldr	r3, [r7, #4]
 8007808:	699b      	ldr	r3, [r3, #24]
 800780a:	2b01      	cmp	r3, #1
 800780c:	d028      	beq.n	8007860 <HAL_RCC_OscConfig+0x534>
 800780e:	68fb      	ldr	r3, [r7, #12]
 8007810:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8007814:	687b      	ldr	r3, [r7, #4]
 8007816:	69db      	ldr	r3, [r3, #28]
 8007818:	429a      	cmp	r2, r3
 800781a:	d121      	bne.n	8007860 <HAL_RCC_OscConfig+0x534>
 800781c:	68fb      	ldr	r3, [r7, #12]
 800781e:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8007822:	687b      	ldr	r3, [r7, #4]
 8007824:	6a1b      	ldr	r3, [r3, #32]
 8007826:	429a      	cmp	r2, r3
 8007828:	d11a      	bne.n	8007860 <HAL_RCC_OscConfig+0x534>
 800782a:	68fa      	ldr	r2, [r7, #12]
 800782c:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8007830:	4013      	ands	r3, r2
 8007832:	687a      	ldr	r2, [r7, #4]
 8007834:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8007836:	0192      	lsls	r2, r2, #6
 8007838:	4293      	cmp	r3, r2
 800783a:	d111      	bne.n	8007860 <HAL_RCC_OscConfig+0x534>
 800783c:	68fb      	ldr	r3, [r7, #12]
 800783e:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8007842:	687b      	ldr	r3, [r7, #4]
 8007844:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007846:	085b      	lsrs	r3, r3, #1
 8007848:	3b01      	subs	r3, #1
 800784a:	041b      	lsls	r3, r3, #16
 800784c:	429a      	cmp	r2, r3
 800784e:	d107      	bne.n	8007860 <HAL_RCC_OscConfig+0x534>
 8007850:	68fb      	ldr	r3, [r7, #12]
 8007852:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8007856:	687b      	ldr	r3, [r7, #4]
 8007858:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800785a:	061b      	lsls	r3, r3, #24
 800785c:	429a      	cmp	r2, r3
 800785e:	d001      	beq.n	8007864 <HAL_RCC_OscConfig+0x538>
 8007860:	2301      	movs	r3, #1
 8007862:	e000      	b.n	8007866 <HAL_RCC_OscConfig+0x53a>
 8007864:	2300      	movs	r3, #0
 8007866:	4618      	mov	r0, r3
 8007868:	3718      	adds	r7, #24
 800786a:	46bd      	mov	sp, r7
 800786c:	bd80      	pop	{r7, pc}
 800786e:	bf00      	nop
 8007870:	40023800 	.word	0x40023800

08007874 <HAL_RCC_ClockConfig>:
 8007874:	b580      	push	{r7, lr}
 8007876:	b084      	sub	sp, #16
 8007878:	af00      	add	r7, sp, #0
 800787a:	6078      	str	r0, [r7, #4]
 800787c:	6039      	str	r1, [r7, #0]
 800787e:	2300      	movs	r3, #0
 8007880:	60fb      	str	r3, [r7, #12]
 8007882:	687b      	ldr	r3, [r7, #4]
 8007884:	2b00      	cmp	r3, #0
 8007886:	d101      	bne.n	800788c <HAL_RCC_ClockConfig+0x18>
 8007888:	2301      	movs	r3, #1
 800788a:	e0d0      	b.n	8007a2e <HAL_RCC_ClockConfig+0x1ba>
 800788c:	4b6a      	ldr	r3, [pc, #424]	@ (8007a38 <HAL_RCC_ClockConfig+0x1c4>)
 800788e:	681b      	ldr	r3, [r3, #0]
 8007890:	f003 030f 	and.w	r3, r3, #15
 8007894:	683a      	ldr	r2, [r7, #0]
 8007896:	429a      	cmp	r2, r3
 8007898:	d910      	bls.n	80078bc <HAL_RCC_ClockConfig+0x48>
 800789a:	4b67      	ldr	r3, [pc, #412]	@ (8007a38 <HAL_RCC_ClockConfig+0x1c4>)
 800789c:	681b      	ldr	r3, [r3, #0]
 800789e:	f023 020f 	bic.w	r2, r3, #15
 80078a2:	4965      	ldr	r1, [pc, #404]	@ (8007a38 <HAL_RCC_ClockConfig+0x1c4>)
 80078a4:	683b      	ldr	r3, [r7, #0]
 80078a6:	4313      	orrs	r3, r2
 80078a8:	600b      	str	r3, [r1, #0]
 80078aa:	4b63      	ldr	r3, [pc, #396]	@ (8007a38 <HAL_RCC_ClockConfig+0x1c4>)
 80078ac:	681b      	ldr	r3, [r3, #0]
 80078ae:	f003 030f 	and.w	r3, r3, #15
 80078b2:	683a      	ldr	r2, [r7, #0]
 80078b4:	429a      	cmp	r2, r3
 80078b6:	d001      	beq.n	80078bc <HAL_RCC_ClockConfig+0x48>
 80078b8:	2301      	movs	r3, #1
 80078ba:	e0b8      	b.n	8007a2e <HAL_RCC_ClockConfig+0x1ba>
 80078bc:	687b      	ldr	r3, [r7, #4]
 80078be:	681b      	ldr	r3, [r3, #0]
 80078c0:	f003 0302 	and.w	r3, r3, #2
 80078c4:	2b00      	cmp	r3, #0
 80078c6:	d020      	beq.n	800790a <HAL_RCC_ClockConfig+0x96>
 80078c8:	687b      	ldr	r3, [r7, #4]
 80078ca:	681b      	ldr	r3, [r3, #0]
 80078cc:	f003 0304 	and.w	r3, r3, #4
 80078d0:	2b00      	cmp	r3, #0
 80078d2:	d005      	beq.n	80078e0 <HAL_RCC_ClockConfig+0x6c>
 80078d4:	4b59      	ldr	r3, [pc, #356]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 80078d6:	689b      	ldr	r3, [r3, #8]
 80078d8:	4a58      	ldr	r2, [pc, #352]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 80078da:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80078de:	6093      	str	r3, [r2, #8]
 80078e0:	687b      	ldr	r3, [r7, #4]
 80078e2:	681b      	ldr	r3, [r3, #0]
 80078e4:	f003 0308 	and.w	r3, r3, #8
 80078e8:	2b00      	cmp	r3, #0
 80078ea:	d005      	beq.n	80078f8 <HAL_RCC_ClockConfig+0x84>
 80078ec:	4b53      	ldr	r3, [pc, #332]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 80078ee:	689b      	ldr	r3, [r3, #8]
 80078f0:	4a52      	ldr	r2, [pc, #328]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 80078f2:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80078f6:	6093      	str	r3, [r2, #8]
 80078f8:	4b50      	ldr	r3, [pc, #320]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 80078fa:	689b      	ldr	r3, [r3, #8]
 80078fc:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8007900:	687b      	ldr	r3, [r7, #4]
 8007902:	689b      	ldr	r3, [r3, #8]
 8007904:	494d      	ldr	r1, [pc, #308]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 8007906:	4313      	orrs	r3, r2
 8007908:	608b      	str	r3, [r1, #8]
 800790a:	687b      	ldr	r3, [r7, #4]
 800790c:	681b      	ldr	r3, [r3, #0]
 800790e:	f003 0301 	and.w	r3, r3, #1
 8007912:	2b00      	cmp	r3, #0
 8007914:	d040      	beq.n	8007998 <HAL_RCC_ClockConfig+0x124>
 8007916:	687b      	ldr	r3, [r7, #4]
 8007918:	685b      	ldr	r3, [r3, #4]
 800791a:	2b01      	cmp	r3, #1
 800791c:	d107      	bne.n	800792e <HAL_RCC_ClockConfig+0xba>
 800791e:	4b47      	ldr	r3, [pc, #284]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 8007920:	681b      	ldr	r3, [r3, #0]
 8007922:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007926:	2b00      	cmp	r3, #0
 8007928:	d115      	bne.n	8007956 <HAL_RCC_ClockConfig+0xe2>
 800792a:	2301      	movs	r3, #1
 800792c:	e07f      	b.n	8007a2e <HAL_RCC_ClockConfig+0x1ba>
 800792e:	687b      	ldr	r3, [r7, #4]
 8007930:	685b      	ldr	r3, [r3, #4]
 8007932:	2b02      	cmp	r3, #2
 8007934:	d107      	bne.n	8007946 <HAL_RCC_ClockConfig+0xd2>
 8007936:	4b41      	ldr	r3, [pc, #260]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 8007938:	681b      	ldr	r3, [r3, #0]
 800793a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800793e:	2b00      	cmp	r3, #0
 8007940:	d109      	bne.n	8007956 <HAL_RCC_ClockConfig+0xe2>
 8007942:	2301      	movs	r3, #1
 8007944:	e073      	b.n	8007a2e <HAL_RCC_ClockConfig+0x1ba>
 8007946:	4b3d      	ldr	r3, [pc, #244]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 8007948:	681b      	ldr	r3, [r3, #0]
 800794a:	f003 0302 	and.w	r3, r3, #2
 800794e:	2b00      	cmp	r3, #0
 8007950:	d101      	bne.n	8007956 <HAL_RCC_ClockConfig+0xe2>
 8007952:	2301      	movs	r3, #1
 8007954:	e06b      	b.n	8007a2e <HAL_RCC_ClockConfig+0x1ba>
 8007956:	4b39      	ldr	r3, [pc, #228]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 8007958:	689b      	ldr	r3, [r3, #8]
 800795a:	f023 0203 	bic.w	r2, r3, #3
 800795e:	687b      	ldr	r3, [r7, #4]
 8007960:	685b      	ldr	r3, [r3, #4]
 8007962:	4936      	ldr	r1, [pc, #216]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 8007964:	4313      	orrs	r3, r2
 8007966:	608b      	str	r3, [r1, #8]
 8007968:	f7fd fb78 	bl	800505c <HAL_GetTick>
 800796c:	60f8      	str	r0, [r7, #12]
 800796e:	e00a      	b.n	8007986 <HAL_RCC_ClockConfig+0x112>
 8007970:	f7fd fb74 	bl	800505c <HAL_GetTick>
 8007974:	4602      	mov	r2, r0
 8007976:	68fb      	ldr	r3, [r7, #12]
 8007978:	1ad3      	subs	r3, r2, r3
 800797a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800797e:	4293      	cmp	r3, r2
 8007980:	d901      	bls.n	8007986 <HAL_RCC_ClockConfig+0x112>
 8007982:	2303      	movs	r3, #3
 8007984:	e053      	b.n	8007a2e <HAL_RCC_ClockConfig+0x1ba>
 8007986:	4b2d      	ldr	r3, [pc, #180]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 8007988:	689b      	ldr	r3, [r3, #8]
 800798a:	f003 020c 	and.w	r2, r3, #12
 800798e:	687b      	ldr	r3, [r7, #4]
 8007990:	685b      	ldr	r3, [r3, #4]
 8007992:	009b      	lsls	r3, r3, #2
 8007994:	429a      	cmp	r2, r3
 8007996:	d1eb      	bne.n	8007970 <HAL_RCC_ClockConfig+0xfc>
 8007998:	4b27      	ldr	r3, [pc, #156]	@ (8007a38 <HAL_RCC_ClockConfig+0x1c4>)
 800799a:	681b      	ldr	r3, [r3, #0]
 800799c:	f003 030f 	and.w	r3, r3, #15
 80079a0:	683a      	ldr	r2, [r7, #0]
 80079a2:	429a      	cmp	r2, r3
 80079a4:	d210      	bcs.n	80079c8 <HAL_RCC_ClockConfig+0x154>
 80079a6:	4b24      	ldr	r3, [pc, #144]	@ (8007a38 <HAL_RCC_ClockConfig+0x1c4>)
 80079a8:	681b      	ldr	r3, [r3, #0]
 80079aa:	f023 020f 	bic.w	r2, r3, #15
 80079ae:	4922      	ldr	r1, [pc, #136]	@ (8007a38 <HAL_RCC_ClockConfig+0x1c4>)
 80079b0:	683b      	ldr	r3, [r7, #0]
 80079b2:	4313      	orrs	r3, r2
 80079b4:	600b      	str	r3, [r1, #0]
 80079b6:	4b20      	ldr	r3, [pc, #128]	@ (8007a38 <HAL_RCC_ClockConfig+0x1c4>)
 80079b8:	681b      	ldr	r3, [r3, #0]
 80079ba:	f003 030f 	and.w	r3, r3, #15
 80079be:	683a      	ldr	r2, [r7, #0]
 80079c0:	429a      	cmp	r2, r3
 80079c2:	d001      	beq.n	80079c8 <HAL_RCC_ClockConfig+0x154>
 80079c4:	2301      	movs	r3, #1
 80079c6:	e032      	b.n	8007a2e <HAL_RCC_ClockConfig+0x1ba>
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	681b      	ldr	r3, [r3, #0]
 80079cc:	f003 0304 	and.w	r3, r3, #4
 80079d0:	2b00      	cmp	r3, #0
 80079d2:	d008      	beq.n	80079e6 <HAL_RCC_ClockConfig+0x172>
 80079d4:	4b19      	ldr	r3, [pc, #100]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 80079d6:	689b      	ldr	r3, [r3, #8]
 80079d8:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80079dc:	687b      	ldr	r3, [r7, #4]
 80079de:	68db      	ldr	r3, [r3, #12]
 80079e0:	4916      	ldr	r1, [pc, #88]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 80079e2:	4313      	orrs	r3, r2
 80079e4:	608b      	str	r3, [r1, #8]
 80079e6:	687b      	ldr	r3, [r7, #4]
 80079e8:	681b      	ldr	r3, [r3, #0]
 80079ea:	f003 0308 	and.w	r3, r3, #8
 80079ee:	2b00      	cmp	r3, #0
 80079f0:	d009      	beq.n	8007a06 <HAL_RCC_ClockConfig+0x192>
 80079f2:	4b12      	ldr	r3, [pc, #72]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 80079f4:	689b      	ldr	r3, [r3, #8]
 80079f6:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80079fa:	687b      	ldr	r3, [r7, #4]
 80079fc:	691b      	ldr	r3, [r3, #16]
 80079fe:	00db      	lsls	r3, r3, #3
 8007a00:	490e      	ldr	r1, [pc, #56]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 8007a02:	4313      	orrs	r3, r2
 8007a04:	608b      	str	r3, [r1, #8]
 8007a06:	f000 f821 	bl	8007a4c <HAL_RCC_GetSysClockFreq>
 8007a0a:	4602      	mov	r2, r0
 8007a0c:	4b0b      	ldr	r3, [pc, #44]	@ (8007a3c <HAL_RCC_ClockConfig+0x1c8>)
 8007a0e:	689b      	ldr	r3, [r3, #8]
 8007a10:	091b      	lsrs	r3, r3, #4
 8007a12:	f003 030f 	and.w	r3, r3, #15
 8007a16:	490a      	ldr	r1, [pc, #40]	@ (8007a40 <HAL_RCC_ClockConfig+0x1cc>)
 8007a18:	5ccb      	ldrb	r3, [r1, r3]
 8007a1a:	fa22 f303 	lsr.w	r3, r2, r3
 8007a1e:	4a09      	ldr	r2, [pc, #36]	@ (8007a44 <HAL_RCC_ClockConfig+0x1d0>)
 8007a20:	6013      	str	r3, [r2, #0]
 8007a22:	4b09      	ldr	r3, [pc, #36]	@ (8007a48 <HAL_RCC_ClockConfig+0x1d4>)
 8007a24:	681b      	ldr	r3, [r3, #0]
 8007a26:	4618      	mov	r0, r3
 8007a28:	f7fd fad4 	bl	8004fd4 <HAL_InitTick>
 8007a2c:	2300      	movs	r3, #0
 8007a2e:	4618      	mov	r0, r3
 8007a30:	3710      	adds	r7, #16
 8007a32:	46bd      	mov	sp, r7
 8007a34:	bd80      	pop	{r7, pc}
 8007a36:	bf00      	nop
 8007a38:	40023c00 	.word	0x40023c00
 8007a3c:	40023800 	.word	0x40023800
 8007a40:	0800ec9c 	.word	0x0800ec9c
 8007a44:	2000009c 	.word	0x2000009c
 8007a48:	200000a0 	.word	0x200000a0

08007a4c <HAL_RCC_GetSysClockFreq>:
 8007a4c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007a50:	b094      	sub	sp, #80	@ 0x50
 8007a52:	af00      	add	r7, sp, #0
 8007a54:	2300      	movs	r3, #0
 8007a56:	647b      	str	r3, [r7, #68]	@ 0x44
 8007a58:	2300      	movs	r3, #0
 8007a5a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007a5c:	2300      	movs	r3, #0
 8007a5e:	643b      	str	r3, [r7, #64]	@ 0x40
 8007a60:	2300      	movs	r3, #0
 8007a62:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007a64:	4b79      	ldr	r3, [pc, #484]	@ (8007c4c <HAL_RCC_GetSysClockFreq+0x200>)
 8007a66:	689b      	ldr	r3, [r3, #8]
 8007a68:	f003 030c 	and.w	r3, r3, #12
 8007a6c:	2b08      	cmp	r3, #8
 8007a6e:	d00d      	beq.n	8007a8c <HAL_RCC_GetSysClockFreq+0x40>
 8007a70:	2b08      	cmp	r3, #8
 8007a72:	f200 80e1 	bhi.w	8007c38 <HAL_RCC_GetSysClockFreq+0x1ec>
 8007a76:	2b00      	cmp	r3, #0
 8007a78:	d002      	beq.n	8007a80 <HAL_RCC_GetSysClockFreq+0x34>
 8007a7a:	2b04      	cmp	r3, #4
 8007a7c:	d003      	beq.n	8007a86 <HAL_RCC_GetSysClockFreq+0x3a>
 8007a7e:	e0db      	b.n	8007c38 <HAL_RCC_GetSysClockFreq+0x1ec>
 8007a80:	4b73      	ldr	r3, [pc, #460]	@ (8007c50 <HAL_RCC_GetSysClockFreq+0x204>)
 8007a82:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007a84:	e0db      	b.n	8007c3e <HAL_RCC_GetSysClockFreq+0x1f2>
 8007a86:	4b72      	ldr	r3, [pc, #456]	@ (8007c50 <HAL_RCC_GetSysClockFreq+0x204>)
 8007a88:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007a8a:	e0d8      	b.n	8007c3e <HAL_RCC_GetSysClockFreq+0x1f2>
 8007a8c:	4b6f      	ldr	r3, [pc, #444]	@ (8007c4c <HAL_RCC_GetSysClockFreq+0x200>)
 8007a8e:	685b      	ldr	r3, [r3, #4]
 8007a90:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8007a94:	647b      	str	r3, [r7, #68]	@ 0x44
 8007a96:	4b6d      	ldr	r3, [pc, #436]	@ (8007c4c <HAL_RCC_GetSysClockFreq+0x200>)
 8007a98:	685b      	ldr	r3, [r3, #4]
 8007a9a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8007a9e:	2b00      	cmp	r3, #0
 8007aa0:	d063      	beq.n	8007b6a <HAL_RCC_GetSysClockFreq+0x11e>
 8007aa2:	4b6a      	ldr	r3, [pc, #424]	@ (8007c4c <HAL_RCC_GetSysClockFreq+0x200>)
 8007aa4:	685b      	ldr	r3, [r3, #4]
 8007aa6:	099b      	lsrs	r3, r3, #6
 8007aa8:	2200      	movs	r2, #0
 8007aaa:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007aac:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8007aae:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007ab0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007ab4:	633b      	str	r3, [r7, #48]	@ 0x30
 8007ab6:	2300      	movs	r3, #0
 8007ab8:	637b      	str	r3, [r7, #52]	@ 0x34
 8007aba:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8007abe:	4622      	mov	r2, r4
 8007ac0:	462b      	mov	r3, r5
 8007ac2:	f04f 0000 	mov.w	r0, #0
 8007ac6:	f04f 0100 	mov.w	r1, #0
 8007aca:	0159      	lsls	r1, r3, #5
 8007acc:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8007ad0:	0150      	lsls	r0, r2, #5
 8007ad2:	4602      	mov	r2, r0
 8007ad4:	460b      	mov	r3, r1
 8007ad6:	4621      	mov	r1, r4
 8007ad8:	1a51      	subs	r1, r2, r1
 8007ada:	6139      	str	r1, [r7, #16]
 8007adc:	4629      	mov	r1, r5
 8007ade:	eb63 0301 	sbc.w	r3, r3, r1
 8007ae2:	617b      	str	r3, [r7, #20]
 8007ae4:	f04f 0200 	mov.w	r2, #0
 8007ae8:	f04f 0300 	mov.w	r3, #0
 8007aec:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8007af0:	4659      	mov	r1, fp
 8007af2:	018b      	lsls	r3, r1, #6
 8007af4:	4651      	mov	r1, sl
 8007af6:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8007afa:	4651      	mov	r1, sl
 8007afc:	018a      	lsls	r2, r1, #6
 8007afe:	4651      	mov	r1, sl
 8007b00:	ebb2 0801 	subs.w	r8, r2, r1
 8007b04:	4659      	mov	r1, fp
 8007b06:	eb63 0901 	sbc.w	r9, r3, r1
 8007b0a:	f04f 0200 	mov.w	r2, #0
 8007b0e:	f04f 0300 	mov.w	r3, #0
 8007b12:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8007b16:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8007b1a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8007b1e:	4690      	mov	r8, r2
 8007b20:	4699      	mov	r9, r3
 8007b22:	4623      	mov	r3, r4
 8007b24:	eb18 0303 	adds.w	r3, r8, r3
 8007b28:	60bb      	str	r3, [r7, #8]
 8007b2a:	462b      	mov	r3, r5
 8007b2c:	eb49 0303 	adc.w	r3, r9, r3
 8007b30:	60fb      	str	r3, [r7, #12]
 8007b32:	f04f 0200 	mov.w	r2, #0
 8007b36:	f04f 0300 	mov.w	r3, #0
 8007b3a:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8007b3e:	4629      	mov	r1, r5
 8007b40:	028b      	lsls	r3, r1, #10
 8007b42:	4621      	mov	r1, r4
 8007b44:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8007b48:	4621      	mov	r1, r4
 8007b4a:	028a      	lsls	r2, r1, #10
 8007b4c:	4610      	mov	r0, r2
 8007b4e:	4619      	mov	r1, r3
 8007b50:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8007b52:	2200      	movs	r2, #0
 8007b54:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007b56:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8007b58:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8007b5c:	f7f8 ffce 	bl	8000afc <__aeabi_uldivmod>
 8007b60:	4602      	mov	r2, r0
 8007b62:	460b      	mov	r3, r1
 8007b64:	4613      	mov	r3, r2
 8007b66:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007b68:	e058      	b.n	8007c1c <HAL_RCC_GetSysClockFreq+0x1d0>
 8007b6a:	4b38      	ldr	r3, [pc, #224]	@ (8007c4c <HAL_RCC_GetSysClockFreq+0x200>)
 8007b6c:	685b      	ldr	r3, [r3, #4]
 8007b6e:	099b      	lsrs	r3, r3, #6
 8007b70:	2200      	movs	r2, #0
 8007b72:	4618      	mov	r0, r3
 8007b74:	4611      	mov	r1, r2
 8007b76:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8007b7a:	623b      	str	r3, [r7, #32]
 8007b7c:	2300      	movs	r3, #0
 8007b7e:	627b      	str	r3, [r7, #36]	@ 0x24
 8007b80:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8007b84:	4642      	mov	r2, r8
 8007b86:	464b      	mov	r3, r9
 8007b88:	f04f 0000 	mov.w	r0, #0
 8007b8c:	f04f 0100 	mov.w	r1, #0
 8007b90:	0159      	lsls	r1, r3, #5
 8007b92:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8007b96:	0150      	lsls	r0, r2, #5
 8007b98:	4602      	mov	r2, r0
 8007b9a:	460b      	mov	r3, r1
 8007b9c:	4641      	mov	r1, r8
 8007b9e:	ebb2 0a01 	subs.w	sl, r2, r1
 8007ba2:	4649      	mov	r1, r9
 8007ba4:	eb63 0b01 	sbc.w	fp, r3, r1
 8007ba8:	f04f 0200 	mov.w	r2, #0
 8007bac:	f04f 0300 	mov.w	r3, #0
 8007bb0:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8007bb4:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8007bb8:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8007bbc:	ebb2 040a 	subs.w	r4, r2, sl
 8007bc0:	eb63 050b 	sbc.w	r5, r3, fp
 8007bc4:	f04f 0200 	mov.w	r2, #0
 8007bc8:	f04f 0300 	mov.w	r3, #0
 8007bcc:	00eb      	lsls	r3, r5, #3
 8007bce:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8007bd2:	00e2      	lsls	r2, r4, #3
 8007bd4:	4614      	mov	r4, r2
 8007bd6:	461d      	mov	r5, r3
 8007bd8:	4643      	mov	r3, r8
 8007bda:	18e3      	adds	r3, r4, r3
 8007bdc:	603b      	str	r3, [r7, #0]
 8007bde:	464b      	mov	r3, r9
 8007be0:	eb45 0303 	adc.w	r3, r5, r3
 8007be4:	607b      	str	r3, [r7, #4]
 8007be6:	f04f 0200 	mov.w	r2, #0
 8007bea:	f04f 0300 	mov.w	r3, #0
 8007bee:	e9d7 4500 	ldrd	r4, r5, [r7]
 8007bf2:	4629      	mov	r1, r5
 8007bf4:	028b      	lsls	r3, r1, #10
 8007bf6:	4621      	mov	r1, r4
 8007bf8:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8007bfc:	4621      	mov	r1, r4
 8007bfe:	028a      	lsls	r2, r1, #10
 8007c00:	4610      	mov	r0, r2
 8007c02:	4619      	mov	r1, r3
 8007c04:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8007c06:	2200      	movs	r2, #0
 8007c08:	61bb      	str	r3, [r7, #24]
 8007c0a:	61fa      	str	r2, [r7, #28]
 8007c0c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8007c10:	f7f8 ff74 	bl	8000afc <__aeabi_uldivmod>
 8007c14:	4602      	mov	r2, r0
 8007c16:	460b      	mov	r3, r1
 8007c18:	4613      	mov	r3, r2
 8007c1a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007c1c:	4b0b      	ldr	r3, [pc, #44]	@ (8007c4c <HAL_RCC_GetSysClockFreq+0x200>)
 8007c1e:	685b      	ldr	r3, [r3, #4]
 8007c20:	0c1b      	lsrs	r3, r3, #16
 8007c22:	f003 0303 	and.w	r3, r3, #3
 8007c26:	3301      	adds	r3, #1
 8007c28:	005b      	lsls	r3, r3, #1
 8007c2a:	643b      	str	r3, [r7, #64]	@ 0x40
 8007c2c:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8007c2e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8007c30:	fbb2 f3f3 	udiv	r3, r2, r3
 8007c34:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007c36:	e002      	b.n	8007c3e <HAL_RCC_GetSysClockFreq+0x1f2>
 8007c38:	4b05      	ldr	r3, [pc, #20]	@ (8007c50 <HAL_RCC_GetSysClockFreq+0x204>)
 8007c3a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007c3c:	bf00      	nop
 8007c3e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007c40:	4618      	mov	r0, r3
 8007c42:	3750      	adds	r7, #80	@ 0x50
 8007c44:	46bd      	mov	sp, r7
 8007c46:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8007c4a:	bf00      	nop
 8007c4c:	40023800 	.word	0x40023800
 8007c50:	00f42400 	.word	0x00f42400

08007c54 <HAL_RCC_GetHCLKFreq>:
 8007c54:	b480      	push	{r7}
 8007c56:	af00      	add	r7, sp, #0
 8007c58:	4b03      	ldr	r3, [pc, #12]	@ (8007c68 <HAL_RCC_GetHCLKFreq+0x14>)
 8007c5a:	681b      	ldr	r3, [r3, #0]
 8007c5c:	4618      	mov	r0, r3
 8007c5e:	46bd      	mov	sp, r7
 8007c60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c64:	4770      	bx	lr
 8007c66:	bf00      	nop
 8007c68:	2000009c 	.word	0x2000009c

08007c6c <HAL_RCC_GetPCLK1Freq>:
 8007c6c:	b580      	push	{r7, lr}
 8007c6e:	af00      	add	r7, sp, #0
 8007c70:	f7ff fff0 	bl	8007c54 <HAL_RCC_GetHCLKFreq>
 8007c74:	4602      	mov	r2, r0
 8007c76:	4b05      	ldr	r3, [pc, #20]	@ (8007c8c <HAL_RCC_GetPCLK1Freq+0x20>)
 8007c78:	689b      	ldr	r3, [r3, #8]
 8007c7a:	0a9b      	lsrs	r3, r3, #10
 8007c7c:	f003 0307 	and.w	r3, r3, #7
 8007c80:	4903      	ldr	r1, [pc, #12]	@ (8007c90 <HAL_RCC_GetPCLK1Freq+0x24>)
 8007c82:	5ccb      	ldrb	r3, [r1, r3]
 8007c84:	fa22 f303 	lsr.w	r3, r2, r3
 8007c88:	4618      	mov	r0, r3
 8007c8a:	bd80      	pop	{r7, pc}
 8007c8c:	40023800 	.word	0x40023800
 8007c90:	0800ecac 	.word	0x0800ecac

08007c94 <HAL_RCC_GetPCLK2Freq>:
 8007c94:	b580      	push	{r7, lr}
 8007c96:	af00      	add	r7, sp, #0
 8007c98:	f7ff ffdc 	bl	8007c54 <HAL_RCC_GetHCLKFreq>
 8007c9c:	4602      	mov	r2, r0
 8007c9e:	4b05      	ldr	r3, [pc, #20]	@ (8007cb4 <HAL_RCC_GetPCLK2Freq+0x20>)
 8007ca0:	689b      	ldr	r3, [r3, #8]
 8007ca2:	0b5b      	lsrs	r3, r3, #13
 8007ca4:	f003 0307 	and.w	r3, r3, #7
 8007ca8:	4903      	ldr	r1, [pc, #12]	@ (8007cb8 <HAL_RCC_GetPCLK2Freq+0x24>)
 8007caa:	5ccb      	ldrb	r3, [r1, r3]
 8007cac:	fa22 f303 	lsr.w	r3, r2, r3
 8007cb0:	4618      	mov	r0, r3
 8007cb2:	bd80      	pop	{r7, pc}
 8007cb4:	40023800 	.word	0x40023800
 8007cb8:	0800ecac 	.word	0x0800ecac

08007cbc <HAL_RCCEx_PeriphCLKConfig>:
 8007cbc:	b580      	push	{r7, lr}
 8007cbe:	b088      	sub	sp, #32
 8007cc0:	af00      	add	r7, sp, #0
 8007cc2:	6078      	str	r0, [r7, #4]
 8007cc4:	2300      	movs	r3, #0
 8007cc6:	617b      	str	r3, [r7, #20]
 8007cc8:	2300      	movs	r3, #0
 8007cca:	613b      	str	r3, [r7, #16]
 8007ccc:	2300      	movs	r3, #0
 8007cce:	60fb      	str	r3, [r7, #12]
 8007cd0:	2300      	movs	r3, #0
 8007cd2:	61fb      	str	r3, [r7, #28]
 8007cd4:	2300      	movs	r3, #0
 8007cd6:	61bb      	str	r3, [r7, #24]
 8007cd8:	687b      	ldr	r3, [r7, #4]
 8007cda:	681b      	ldr	r3, [r3, #0]
 8007cdc:	f003 0301 	and.w	r3, r3, #1
 8007ce0:	2b00      	cmp	r3, #0
 8007ce2:	d012      	beq.n	8007d0a <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8007ce4:	4b69      	ldr	r3, [pc, #420]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007ce6:	689b      	ldr	r3, [r3, #8]
 8007ce8:	4a68      	ldr	r2, [pc, #416]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007cea:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8007cee:	6093      	str	r3, [r2, #8]
 8007cf0:	4b66      	ldr	r3, [pc, #408]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007cf2:	689a      	ldr	r2, [r3, #8]
 8007cf4:	687b      	ldr	r3, [r7, #4]
 8007cf6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8007cf8:	4964      	ldr	r1, [pc, #400]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007cfa:	4313      	orrs	r3, r2
 8007cfc:	608b      	str	r3, [r1, #8]
 8007cfe:	687b      	ldr	r3, [r7, #4]
 8007d00:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8007d02:	2b00      	cmp	r3, #0
 8007d04:	d101      	bne.n	8007d0a <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8007d06:	2301      	movs	r3, #1
 8007d08:	61fb      	str	r3, [r7, #28]
 8007d0a:	687b      	ldr	r3, [r7, #4]
 8007d0c:	681b      	ldr	r3, [r3, #0]
 8007d0e:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8007d12:	2b00      	cmp	r3, #0
 8007d14:	d017      	beq.n	8007d46 <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8007d16:	4b5d      	ldr	r3, [pc, #372]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007d18:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8007d1c:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8007d20:	687b      	ldr	r3, [r7, #4]
 8007d22:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007d24:	4959      	ldr	r1, [pc, #356]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007d26:	4313      	orrs	r3, r2
 8007d28:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
 8007d2c:	687b      	ldr	r3, [r7, #4]
 8007d2e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007d30:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8007d34:	d101      	bne.n	8007d3a <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8007d36:	2301      	movs	r3, #1
 8007d38:	61fb      	str	r3, [r7, #28]
 8007d3a:	687b      	ldr	r3, [r7, #4]
 8007d3c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007d3e:	2b00      	cmp	r3, #0
 8007d40:	d101      	bne.n	8007d46 <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8007d42:	2301      	movs	r3, #1
 8007d44:	61bb      	str	r3, [r7, #24]
 8007d46:	687b      	ldr	r3, [r7, #4]
 8007d48:	681b      	ldr	r3, [r3, #0]
 8007d4a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8007d4e:	2b00      	cmp	r3, #0
 8007d50:	d017      	beq.n	8007d82 <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8007d52:	4b4e      	ldr	r3, [pc, #312]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007d54:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8007d58:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 8007d5c:	687b      	ldr	r3, [r7, #4]
 8007d5e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007d60:	494a      	ldr	r1, [pc, #296]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007d62:	4313      	orrs	r3, r2
 8007d64:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
 8007d68:	687b      	ldr	r3, [r7, #4]
 8007d6a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007d6c:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007d70:	d101      	bne.n	8007d76 <HAL_RCCEx_PeriphCLKConfig+0xba>
 8007d72:	2301      	movs	r3, #1
 8007d74:	61fb      	str	r3, [r7, #28]
 8007d76:	687b      	ldr	r3, [r7, #4]
 8007d78:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007d7a:	2b00      	cmp	r3, #0
 8007d7c:	d101      	bne.n	8007d82 <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8007d7e:	2301      	movs	r3, #1
 8007d80:	61bb      	str	r3, [r7, #24]
 8007d82:	687b      	ldr	r3, [r7, #4]
 8007d84:	681b      	ldr	r3, [r3, #0]
 8007d86:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8007d8a:	2b00      	cmp	r3, #0
 8007d8c:	d001      	beq.n	8007d92 <HAL_RCCEx_PeriphCLKConfig+0xd6>
 8007d8e:	2301      	movs	r3, #1
 8007d90:	61fb      	str	r3, [r7, #28]
 8007d92:	687b      	ldr	r3, [r7, #4]
 8007d94:	681b      	ldr	r3, [r3, #0]
 8007d96:	f003 0320 	and.w	r3, r3, #32
 8007d9a:	2b00      	cmp	r3, #0
 8007d9c:	f000 808b 	beq.w	8007eb6 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007da0:	4b3a      	ldr	r3, [pc, #232]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007da2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007da4:	4a39      	ldr	r2, [pc, #228]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007da6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007daa:	6413      	str	r3, [r2, #64]	@ 0x40
 8007dac:	4b37      	ldr	r3, [pc, #220]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007dae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007db0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007db4:	60bb      	str	r3, [r7, #8]
 8007db6:	68bb      	ldr	r3, [r7, #8]
 8007db8:	4b35      	ldr	r3, [pc, #212]	@ (8007e90 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8007dba:	681b      	ldr	r3, [r3, #0]
 8007dbc:	4a34      	ldr	r2, [pc, #208]	@ (8007e90 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8007dbe:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007dc2:	6013      	str	r3, [r2, #0]
 8007dc4:	f7fd f94a 	bl	800505c <HAL_GetTick>
 8007dc8:	6178      	str	r0, [r7, #20]
 8007dca:	e008      	b.n	8007dde <HAL_RCCEx_PeriphCLKConfig+0x122>
 8007dcc:	f7fd f946 	bl	800505c <HAL_GetTick>
 8007dd0:	4602      	mov	r2, r0
 8007dd2:	697b      	ldr	r3, [r7, #20]
 8007dd4:	1ad3      	subs	r3, r2, r3
 8007dd6:	2b64      	cmp	r3, #100	@ 0x64
 8007dd8:	d901      	bls.n	8007dde <HAL_RCCEx_PeriphCLKConfig+0x122>
 8007dda:	2303      	movs	r3, #3
 8007ddc:	e357      	b.n	800848e <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8007dde:	4b2c      	ldr	r3, [pc, #176]	@ (8007e90 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8007de0:	681b      	ldr	r3, [r3, #0]
 8007de2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007de6:	2b00      	cmp	r3, #0
 8007de8:	d0f0      	beq.n	8007dcc <HAL_RCCEx_PeriphCLKConfig+0x110>
 8007dea:	4b28      	ldr	r3, [pc, #160]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007dec:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007dee:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007df2:	613b      	str	r3, [r7, #16]
 8007df4:	693b      	ldr	r3, [r7, #16]
 8007df6:	2b00      	cmp	r3, #0
 8007df8:	d035      	beq.n	8007e66 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8007dfa:	687b      	ldr	r3, [r7, #4]
 8007dfc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007dfe:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007e02:	693a      	ldr	r2, [r7, #16]
 8007e04:	429a      	cmp	r2, r3
 8007e06:	d02e      	beq.n	8007e66 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8007e08:	4b20      	ldr	r3, [pc, #128]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007e0a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007e0c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007e10:	613b      	str	r3, [r7, #16]
 8007e12:	4b1e      	ldr	r3, [pc, #120]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007e14:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007e16:	4a1d      	ldr	r2, [pc, #116]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007e18:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007e1c:	6713      	str	r3, [r2, #112]	@ 0x70
 8007e1e:	4b1b      	ldr	r3, [pc, #108]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007e20:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007e22:	4a1a      	ldr	r2, [pc, #104]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007e24:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007e28:	6713      	str	r3, [r2, #112]	@ 0x70
 8007e2a:	4a18      	ldr	r2, [pc, #96]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007e2c:	693b      	ldr	r3, [r7, #16]
 8007e2e:	6713      	str	r3, [r2, #112]	@ 0x70
 8007e30:	4b16      	ldr	r3, [pc, #88]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007e32:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007e34:	f003 0301 	and.w	r3, r3, #1
 8007e38:	2b01      	cmp	r3, #1
 8007e3a:	d114      	bne.n	8007e66 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8007e3c:	f7fd f90e 	bl	800505c <HAL_GetTick>
 8007e40:	6178      	str	r0, [r7, #20]
 8007e42:	e00a      	b.n	8007e5a <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8007e44:	f7fd f90a 	bl	800505c <HAL_GetTick>
 8007e48:	4602      	mov	r2, r0
 8007e4a:	697b      	ldr	r3, [r7, #20]
 8007e4c:	1ad3      	subs	r3, r2, r3
 8007e4e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007e52:	4293      	cmp	r3, r2
 8007e54:	d901      	bls.n	8007e5a <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8007e56:	2303      	movs	r3, #3
 8007e58:	e319      	b.n	800848e <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8007e5a:	4b0c      	ldr	r3, [pc, #48]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007e5c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007e5e:	f003 0302 	and.w	r3, r3, #2
 8007e62:	2b00      	cmp	r3, #0
 8007e64:	d0ee      	beq.n	8007e44 <HAL_RCCEx_PeriphCLKConfig+0x188>
 8007e66:	687b      	ldr	r3, [r7, #4]
 8007e68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007e6a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007e6e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8007e72:	d111      	bne.n	8007e98 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8007e74:	4b05      	ldr	r3, [pc, #20]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007e76:	689b      	ldr	r3, [r3, #8]
 8007e78:	f423 12f8 	bic.w	r2, r3, #2031616	@ 0x1f0000
 8007e7c:	687b      	ldr	r3, [r7, #4]
 8007e7e:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8007e80:	4b04      	ldr	r3, [pc, #16]	@ (8007e94 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8007e82:	400b      	ands	r3, r1
 8007e84:	4901      	ldr	r1, [pc, #4]	@ (8007e8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007e86:	4313      	orrs	r3, r2
 8007e88:	608b      	str	r3, [r1, #8]
 8007e8a:	e00b      	b.n	8007ea4 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8007e8c:	40023800 	.word	0x40023800
 8007e90:	40007000 	.word	0x40007000
 8007e94:	0ffffcff 	.word	0x0ffffcff
 8007e98:	4baa      	ldr	r3, [pc, #680]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007e9a:	689b      	ldr	r3, [r3, #8]
 8007e9c:	4aa9      	ldr	r2, [pc, #676]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007e9e:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8007ea2:	6093      	str	r3, [r2, #8]
 8007ea4:	4ba7      	ldr	r3, [pc, #668]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007ea6:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 8007ea8:	687b      	ldr	r3, [r7, #4]
 8007eaa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007eac:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007eb0:	49a4      	ldr	r1, [pc, #656]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007eb2:	4313      	orrs	r3, r2
 8007eb4:	670b      	str	r3, [r1, #112]	@ 0x70
 8007eb6:	687b      	ldr	r3, [r7, #4]
 8007eb8:	681b      	ldr	r3, [r3, #0]
 8007eba:	f003 0310 	and.w	r3, r3, #16
 8007ebe:	2b00      	cmp	r3, #0
 8007ec0:	d010      	beq.n	8007ee4 <HAL_RCCEx_PeriphCLKConfig+0x228>
 8007ec2:	4ba0      	ldr	r3, [pc, #640]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007ec4:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8007ec8:	4a9e      	ldr	r2, [pc, #632]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007eca:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8007ece:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8007ed2:	4b9c      	ldr	r3, [pc, #624]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007ed4:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8007ed8:	687b      	ldr	r3, [r7, #4]
 8007eda:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007edc:	4999      	ldr	r1, [pc, #612]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007ede:	4313      	orrs	r3, r2
 8007ee0:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
 8007ee4:	687b      	ldr	r3, [r7, #4]
 8007ee6:	681b      	ldr	r3, [r3, #0]
 8007ee8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8007eec:	2b00      	cmp	r3, #0
 8007eee:	d00a      	beq.n	8007f06 <HAL_RCCEx_PeriphCLKConfig+0x24a>
 8007ef0:	4b94      	ldr	r3, [pc, #592]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007ef2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007ef6:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8007efa:	687b      	ldr	r3, [r7, #4]
 8007efc:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8007efe:	4991      	ldr	r1, [pc, #580]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007f00:	4313      	orrs	r3, r2
 8007f02:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8007f06:	687b      	ldr	r3, [r7, #4]
 8007f08:	681b      	ldr	r3, [r3, #0]
 8007f0a:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8007f0e:	2b00      	cmp	r3, #0
 8007f10:	d00a      	beq.n	8007f28 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8007f12:	4b8c      	ldr	r3, [pc, #560]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007f14:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007f18:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8007f1c:	687b      	ldr	r3, [r7, #4]
 8007f1e:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8007f20:	4988      	ldr	r1, [pc, #544]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007f22:	4313      	orrs	r3, r2
 8007f24:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8007f28:	687b      	ldr	r3, [r7, #4]
 8007f2a:	681b      	ldr	r3, [r3, #0]
 8007f2c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8007f30:	2b00      	cmp	r3, #0
 8007f32:	d00a      	beq.n	8007f4a <HAL_RCCEx_PeriphCLKConfig+0x28e>
 8007f34:	4b83      	ldr	r3, [pc, #524]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007f36:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007f3a:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8007f3e:	687b      	ldr	r3, [r7, #4]
 8007f40:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8007f42:	4980      	ldr	r1, [pc, #512]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007f44:	4313      	orrs	r3, r2
 8007f46:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8007f4a:	687b      	ldr	r3, [r7, #4]
 8007f4c:	681b      	ldr	r3, [r3, #0]
 8007f4e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007f52:	2b00      	cmp	r3, #0
 8007f54:	d00a      	beq.n	8007f6c <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8007f56:	4b7b      	ldr	r3, [pc, #492]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007f58:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007f5c:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 8007f60:	687b      	ldr	r3, [r7, #4]
 8007f62:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007f64:	4977      	ldr	r1, [pc, #476]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007f66:	4313      	orrs	r3, r2
 8007f68:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8007f6c:	687b      	ldr	r3, [r7, #4]
 8007f6e:	681b      	ldr	r3, [r3, #0]
 8007f70:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007f74:	2b00      	cmp	r3, #0
 8007f76:	d00a      	beq.n	8007f8e <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8007f78:	4b72      	ldr	r3, [pc, #456]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007f7a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007f7e:	f023 0203 	bic.w	r2, r3, #3
 8007f82:	687b      	ldr	r3, [r7, #4]
 8007f84:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007f86:	496f      	ldr	r1, [pc, #444]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007f88:	4313      	orrs	r3, r2
 8007f8a:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8007f8e:	687b      	ldr	r3, [r7, #4]
 8007f90:	681b      	ldr	r3, [r3, #0]
 8007f92:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007f96:	2b00      	cmp	r3, #0
 8007f98:	d00a      	beq.n	8007fb0 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 8007f9a:	4b6a      	ldr	r3, [pc, #424]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007f9c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007fa0:	f023 020c 	bic.w	r2, r3, #12
 8007fa4:	687b      	ldr	r3, [r7, #4]
 8007fa6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8007fa8:	4966      	ldr	r1, [pc, #408]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007faa:	4313      	orrs	r3, r2
 8007fac:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8007fb0:	687b      	ldr	r3, [r7, #4]
 8007fb2:	681b      	ldr	r3, [r3, #0]
 8007fb4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007fb8:	2b00      	cmp	r3, #0
 8007fba:	d00a      	beq.n	8007fd2 <HAL_RCCEx_PeriphCLKConfig+0x316>
 8007fbc:	4b61      	ldr	r3, [pc, #388]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007fbe:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007fc2:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 8007fc6:	687b      	ldr	r3, [r7, #4]
 8007fc8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8007fca:	495e      	ldr	r1, [pc, #376]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007fcc:	4313      	orrs	r3, r2
 8007fce:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8007fd2:	687b      	ldr	r3, [r7, #4]
 8007fd4:	681b      	ldr	r3, [r3, #0]
 8007fd6:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8007fda:	2b00      	cmp	r3, #0
 8007fdc:	d00a      	beq.n	8007ff4 <HAL_RCCEx_PeriphCLKConfig+0x338>
 8007fde:	4b59      	ldr	r3, [pc, #356]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007fe0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007fe4:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 8007fe8:	687b      	ldr	r3, [r7, #4]
 8007fea:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8007fec:	4955      	ldr	r1, [pc, #340]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007fee:	4313      	orrs	r3, r2
 8007ff0:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8007ff4:	687b      	ldr	r3, [r7, #4]
 8007ff6:	681b      	ldr	r3, [r3, #0]
 8007ff8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007ffc:	2b00      	cmp	r3, #0
 8007ffe:	d00a      	beq.n	8008016 <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8008000:	4b50      	ldr	r3, [pc, #320]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8008002:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008006:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 800800a:	687b      	ldr	r3, [r7, #4]
 800800c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800800e:	494d      	ldr	r1, [pc, #308]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8008010:	4313      	orrs	r3, r2
 8008012:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8008016:	687b      	ldr	r3, [r7, #4]
 8008018:	681b      	ldr	r3, [r3, #0]
 800801a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800801e:	2b00      	cmp	r3, #0
 8008020:	d00a      	beq.n	8008038 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8008022:	4b48      	ldr	r3, [pc, #288]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8008024:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008028:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 800802c:	687b      	ldr	r3, [r7, #4]
 800802e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008030:	4944      	ldr	r1, [pc, #272]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8008032:	4313      	orrs	r3, r2
 8008034:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8008038:	687b      	ldr	r3, [r7, #4]
 800803a:	681b      	ldr	r3, [r3, #0]
 800803c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8008040:	2b00      	cmp	r3, #0
 8008042:	d00a      	beq.n	800805a <HAL_RCCEx_PeriphCLKConfig+0x39e>
 8008044:	4b3f      	ldr	r3, [pc, #252]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8008046:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800804a:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 800804e:	687b      	ldr	r3, [r7, #4]
 8008050:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008052:	493c      	ldr	r1, [pc, #240]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8008054:	4313      	orrs	r3, r2
 8008056:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 800805a:	687b      	ldr	r3, [r7, #4]
 800805c:	681b      	ldr	r3, [r3, #0]
 800805e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8008062:	2b00      	cmp	r3, #0
 8008064:	d00a      	beq.n	800807c <HAL_RCCEx_PeriphCLKConfig+0x3c0>
 8008066:	4b37      	ldr	r3, [pc, #220]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8008068:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800806c:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8008070:	687b      	ldr	r3, [r7, #4]
 8008072:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8008074:	4933      	ldr	r1, [pc, #204]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8008076:	4313      	orrs	r3, r2
 8008078:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 800807c:	687b      	ldr	r3, [r7, #4]
 800807e:	681b      	ldr	r3, [r3, #0]
 8008080:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8008084:	2b00      	cmp	r3, #0
 8008086:	d00a      	beq.n	800809e <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 8008088:	4b2e      	ldr	r3, [pc, #184]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800808a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800808e:	f023 6280 	bic.w	r2, r3, #67108864	@ 0x4000000
 8008092:	687b      	ldr	r3, [r7, #4]
 8008094:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8008096:	492b      	ldr	r1, [pc, #172]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8008098:	4313      	orrs	r3, r2
 800809a:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 800809e:	687b      	ldr	r3, [r7, #4]
 80080a0:	681b      	ldr	r3, [r3, #0]
 80080a2:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80080a6:	2b00      	cmp	r3, #0
 80080a8:	d011      	beq.n	80080ce <HAL_RCCEx_PeriphCLKConfig+0x412>
 80080aa:	4b26      	ldr	r3, [pc, #152]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80080ac:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80080b0:	f023 6200 	bic.w	r2, r3, #134217728	@ 0x8000000
 80080b4:	687b      	ldr	r3, [r7, #4]
 80080b6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80080b8:	4922      	ldr	r1, [pc, #136]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80080ba:	4313      	orrs	r3, r2
 80080bc:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 80080c0:	687b      	ldr	r3, [r7, #4]
 80080c2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80080c4:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80080c8:	d101      	bne.n	80080ce <HAL_RCCEx_PeriphCLKConfig+0x412>
 80080ca:	2301      	movs	r3, #1
 80080cc:	61bb      	str	r3, [r7, #24]
 80080ce:	687b      	ldr	r3, [r7, #4]
 80080d0:	681b      	ldr	r3, [r3, #0]
 80080d2:	f003 0308 	and.w	r3, r3, #8
 80080d6:	2b00      	cmp	r3, #0
 80080d8:	d001      	beq.n	80080de <HAL_RCCEx_PeriphCLKConfig+0x422>
 80080da:	2301      	movs	r3, #1
 80080dc:	61bb      	str	r3, [r7, #24]
 80080de:	687b      	ldr	r3, [r7, #4]
 80080e0:	681b      	ldr	r3, [r3, #0]
 80080e2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80080e6:	2b00      	cmp	r3, #0
 80080e8:	d00a      	beq.n	8008100 <HAL_RCCEx_PeriphCLKConfig+0x444>
 80080ea:	4b16      	ldr	r3, [pc, #88]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80080ec:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80080f0:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 80080f4:	687b      	ldr	r3, [r7, #4]
 80080f6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80080f8:	4912      	ldr	r1, [pc, #72]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80080fa:	4313      	orrs	r3, r2
 80080fc:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8008100:	687b      	ldr	r3, [r7, #4]
 8008102:	681b      	ldr	r3, [r3, #0]
 8008104:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8008108:	2b00      	cmp	r3, #0
 800810a:	d00b      	beq.n	8008124 <HAL_RCCEx_PeriphCLKConfig+0x468>
 800810c:	4b0d      	ldr	r3, [pc, #52]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800810e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008112:	f023 5280 	bic.w	r2, r3, #268435456	@ 0x10000000
 8008116:	687b      	ldr	r3, [r7, #4]
 8008118:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800811c:	4909      	ldr	r1, [pc, #36]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800811e:	4313      	orrs	r3, r2
 8008120:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8008124:	69fb      	ldr	r3, [r7, #28]
 8008126:	2b01      	cmp	r3, #1
 8008128:	d006      	beq.n	8008138 <HAL_RCCEx_PeriphCLKConfig+0x47c>
 800812a:	687b      	ldr	r3, [r7, #4]
 800812c:	681b      	ldr	r3, [r3, #0]
 800812e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8008132:	2b00      	cmp	r3, #0
 8008134:	f000 80d9 	beq.w	80082ea <HAL_RCCEx_PeriphCLKConfig+0x62e>
 8008138:	4b02      	ldr	r3, [pc, #8]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800813a:	681b      	ldr	r3, [r3, #0]
 800813c:	4a01      	ldr	r2, [pc, #4]	@ (8008144 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800813e:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8008142:	e001      	b.n	8008148 <HAL_RCCEx_PeriphCLKConfig+0x48c>
 8008144:	40023800 	.word	0x40023800
 8008148:	6013      	str	r3, [r2, #0]
 800814a:	f7fc ff87 	bl	800505c <HAL_GetTick>
 800814e:	6178      	str	r0, [r7, #20]
 8008150:	e008      	b.n	8008164 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8008152:	f7fc ff83 	bl	800505c <HAL_GetTick>
 8008156:	4602      	mov	r2, r0
 8008158:	697b      	ldr	r3, [r7, #20]
 800815a:	1ad3      	subs	r3, r2, r3
 800815c:	2b64      	cmp	r3, #100	@ 0x64
 800815e:	d901      	bls.n	8008164 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8008160:	2303      	movs	r3, #3
 8008162:	e194      	b.n	800848e <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8008164:	4b6c      	ldr	r3, [pc, #432]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008166:	681b      	ldr	r3, [r3, #0]
 8008168:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800816c:	2b00      	cmp	r3, #0
 800816e:	d1f0      	bne.n	8008152 <HAL_RCCEx_PeriphCLKConfig+0x496>
 8008170:	687b      	ldr	r3, [r7, #4]
 8008172:	681b      	ldr	r3, [r3, #0]
 8008174:	f003 0301 	and.w	r3, r3, #1
 8008178:	2b00      	cmp	r3, #0
 800817a:	d021      	beq.n	80081c0 <HAL_RCCEx_PeriphCLKConfig+0x504>
 800817c:	687b      	ldr	r3, [r7, #4]
 800817e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8008180:	2b00      	cmp	r3, #0
 8008182:	d11d      	bne.n	80081c0 <HAL_RCCEx_PeriphCLKConfig+0x504>
 8008184:	4b64      	ldr	r3, [pc, #400]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008186:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800818a:	0c1b      	lsrs	r3, r3, #16
 800818c:	f003 0303 	and.w	r3, r3, #3
 8008190:	613b      	str	r3, [r7, #16]
 8008192:	4b61      	ldr	r3, [pc, #388]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008194:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8008198:	0e1b      	lsrs	r3, r3, #24
 800819a:	f003 030f 	and.w	r3, r3, #15
 800819e:	60fb      	str	r3, [r7, #12]
 80081a0:	687b      	ldr	r3, [r7, #4]
 80081a2:	685b      	ldr	r3, [r3, #4]
 80081a4:	019a      	lsls	r2, r3, #6
 80081a6:	693b      	ldr	r3, [r7, #16]
 80081a8:	041b      	lsls	r3, r3, #16
 80081aa:	431a      	orrs	r2, r3
 80081ac:	68fb      	ldr	r3, [r7, #12]
 80081ae:	061b      	lsls	r3, r3, #24
 80081b0:	431a      	orrs	r2, r3
 80081b2:	687b      	ldr	r3, [r7, #4]
 80081b4:	689b      	ldr	r3, [r3, #8]
 80081b6:	071b      	lsls	r3, r3, #28
 80081b8:	4957      	ldr	r1, [pc, #348]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80081ba:	4313      	orrs	r3, r2
 80081bc:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
 80081c0:	687b      	ldr	r3, [r7, #4]
 80081c2:	681b      	ldr	r3, [r3, #0]
 80081c4:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80081c8:	2b00      	cmp	r3, #0
 80081ca:	d004      	beq.n	80081d6 <HAL_RCCEx_PeriphCLKConfig+0x51a>
 80081cc:	687b      	ldr	r3, [r7, #4]
 80081ce:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80081d0:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80081d4:	d00a      	beq.n	80081ec <HAL_RCCEx_PeriphCLKConfig+0x530>
 80081d6:	687b      	ldr	r3, [r7, #4]
 80081d8:	681b      	ldr	r3, [r3, #0]
 80081da:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80081de:	2b00      	cmp	r3, #0
 80081e0:	d02e      	beq.n	8008240 <HAL_RCCEx_PeriphCLKConfig+0x584>
 80081e2:	687b      	ldr	r3, [r7, #4]
 80081e4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80081e6:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80081ea:	d129      	bne.n	8008240 <HAL_RCCEx_PeriphCLKConfig+0x584>
 80081ec:	4b4a      	ldr	r3, [pc, #296]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80081ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80081f2:	0c1b      	lsrs	r3, r3, #16
 80081f4:	f003 0303 	and.w	r3, r3, #3
 80081f8:	613b      	str	r3, [r7, #16]
 80081fa:	4b47      	ldr	r3, [pc, #284]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80081fc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8008200:	0f1b      	lsrs	r3, r3, #28
 8008202:	f003 0307 	and.w	r3, r3, #7
 8008206:	60fb      	str	r3, [r7, #12]
 8008208:	687b      	ldr	r3, [r7, #4]
 800820a:	685b      	ldr	r3, [r3, #4]
 800820c:	019a      	lsls	r2, r3, #6
 800820e:	693b      	ldr	r3, [r7, #16]
 8008210:	041b      	lsls	r3, r3, #16
 8008212:	431a      	orrs	r2, r3
 8008214:	687b      	ldr	r3, [r7, #4]
 8008216:	68db      	ldr	r3, [r3, #12]
 8008218:	061b      	lsls	r3, r3, #24
 800821a:	431a      	orrs	r2, r3
 800821c:	68fb      	ldr	r3, [r7, #12]
 800821e:	071b      	lsls	r3, r3, #28
 8008220:	493d      	ldr	r1, [pc, #244]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008222:	4313      	orrs	r3, r2
 8008224:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
 8008228:	4b3b      	ldr	r3, [pc, #236]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 800822a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800822e:	f023 021f 	bic.w	r2, r3, #31
 8008232:	687b      	ldr	r3, [r7, #4]
 8008234:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008236:	3b01      	subs	r3, #1
 8008238:	4937      	ldr	r1, [pc, #220]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 800823a:	4313      	orrs	r3, r2
 800823c:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
 8008240:	687b      	ldr	r3, [r7, #4]
 8008242:	681b      	ldr	r3, [r3, #0]
 8008244:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8008248:	2b00      	cmp	r3, #0
 800824a:	d01d      	beq.n	8008288 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 800824c:	4b32      	ldr	r3, [pc, #200]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 800824e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8008252:	0e1b      	lsrs	r3, r3, #24
 8008254:	f003 030f 	and.w	r3, r3, #15
 8008258:	613b      	str	r3, [r7, #16]
 800825a:	4b2f      	ldr	r3, [pc, #188]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 800825c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8008260:	0f1b      	lsrs	r3, r3, #28
 8008262:	f003 0307 	and.w	r3, r3, #7
 8008266:	60fb      	str	r3, [r7, #12]
 8008268:	687b      	ldr	r3, [r7, #4]
 800826a:	685b      	ldr	r3, [r3, #4]
 800826c:	019a      	lsls	r2, r3, #6
 800826e:	687b      	ldr	r3, [r7, #4]
 8008270:	691b      	ldr	r3, [r3, #16]
 8008272:	041b      	lsls	r3, r3, #16
 8008274:	431a      	orrs	r2, r3
 8008276:	693b      	ldr	r3, [r7, #16]
 8008278:	061b      	lsls	r3, r3, #24
 800827a:	431a      	orrs	r2, r3
 800827c:	68fb      	ldr	r3, [r7, #12]
 800827e:	071b      	lsls	r3, r3, #28
 8008280:	4925      	ldr	r1, [pc, #148]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008282:	4313      	orrs	r3, r2
 8008284:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
 8008288:	687b      	ldr	r3, [r7, #4]
 800828a:	681b      	ldr	r3, [r3, #0]
 800828c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8008290:	2b00      	cmp	r3, #0
 8008292:	d011      	beq.n	80082b8 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
 8008294:	687b      	ldr	r3, [r7, #4]
 8008296:	685b      	ldr	r3, [r3, #4]
 8008298:	019a      	lsls	r2, r3, #6
 800829a:	687b      	ldr	r3, [r7, #4]
 800829c:	691b      	ldr	r3, [r3, #16]
 800829e:	041b      	lsls	r3, r3, #16
 80082a0:	431a      	orrs	r2, r3
 80082a2:	687b      	ldr	r3, [r7, #4]
 80082a4:	68db      	ldr	r3, [r3, #12]
 80082a6:	061b      	lsls	r3, r3, #24
 80082a8:	431a      	orrs	r2, r3
 80082aa:	687b      	ldr	r3, [r7, #4]
 80082ac:	689b      	ldr	r3, [r3, #8]
 80082ae:	071b      	lsls	r3, r3, #28
 80082b0:	4919      	ldr	r1, [pc, #100]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80082b2:	4313      	orrs	r3, r2
 80082b4:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
 80082b8:	4b17      	ldr	r3, [pc, #92]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80082ba:	681b      	ldr	r3, [r3, #0]
 80082bc:	4a16      	ldr	r2, [pc, #88]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80082be:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80082c2:	6013      	str	r3, [r2, #0]
 80082c4:	f7fc feca 	bl	800505c <HAL_GetTick>
 80082c8:	6178      	str	r0, [r7, #20]
 80082ca:	e008      	b.n	80082de <HAL_RCCEx_PeriphCLKConfig+0x622>
 80082cc:	f7fc fec6 	bl	800505c <HAL_GetTick>
 80082d0:	4602      	mov	r2, r0
 80082d2:	697b      	ldr	r3, [r7, #20]
 80082d4:	1ad3      	subs	r3, r2, r3
 80082d6:	2b64      	cmp	r3, #100	@ 0x64
 80082d8:	d901      	bls.n	80082de <HAL_RCCEx_PeriphCLKConfig+0x622>
 80082da:	2303      	movs	r3, #3
 80082dc:	e0d7      	b.n	800848e <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 80082de:	4b0e      	ldr	r3, [pc, #56]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80082e0:	681b      	ldr	r3, [r3, #0]
 80082e2:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80082e6:	2b00      	cmp	r3, #0
 80082e8:	d0f0      	beq.n	80082cc <HAL_RCCEx_PeriphCLKConfig+0x610>
 80082ea:	69bb      	ldr	r3, [r7, #24]
 80082ec:	2b01      	cmp	r3, #1
 80082ee:	f040 80cd 	bne.w	800848c <HAL_RCCEx_PeriphCLKConfig+0x7d0>
 80082f2:	4b09      	ldr	r3, [pc, #36]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80082f4:	681b      	ldr	r3, [r3, #0]
 80082f6:	4a08      	ldr	r2, [pc, #32]	@ (8008318 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80082f8:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80082fc:	6013      	str	r3, [r2, #0]
 80082fe:	f7fc fead 	bl	800505c <HAL_GetTick>
 8008302:	6178      	str	r0, [r7, #20]
 8008304:	e00a      	b.n	800831c <HAL_RCCEx_PeriphCLKConfig+0x660>
 8008306:	f7fc fea9 	bl	800505c <HAL_GetTick>
 800830a:	4602      	mov	r2, r0
 800830c:	697b      	ldr	r3, [r7, #20]
 800830e:	1ad3      	subs	r3, r2, r3
 8008310:	2b64      	cmp	r3, #100	@ 0x64
 8008312:	d903      	bls.n	800831c <HAL_RCCEx_PeriphCLKConfig+0x660>
 8008314:	2303      	movs	r3, #3
 8008316:	e0ba      	b.n	800848e <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8008318:	40023800 	.word	0x40023800
 800831c:	4b5e      	ldr	r3, [pc, #376]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800831e:	681b      	ldr	r3, [r3, #0]
 8008320:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8008324:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8008328:	d0ed      	beq.n	8008306 <HAL_RCCEx_PeriphCLKConfig+0x64a>
 800832a:	687b      	ldr	r3, [r7, #4]
 800832c:	681b      	ldr	r3, [r3, #0]
 800832e:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8008332:	2b00      	cmp	r3, #0
 8008334:	d003      	beq.n	800833e <HAL_RCCEx_PeriphCLKConfig+0x682>
 8008336:	687b      	ldr	r3, [r7, #4]
 8008338:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800833a:	2b00      	cmp	r3, #0
 800833c:	d009      	beq.n	8008352 <HAL_RCCEx_PeriphCLKConfig+0x696>
 800833e:	687b      	ldr	r3, [r7, #4]
 8008340:	681b      	ldr	r3, [r3, #0]
 8008342:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8008346:	2b00      	cmp	r3, #0
 8008348:	d02e      	beq.n	80083a8 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
 800834a:	687b      	ldr	r3, [r7, #4]
 800834c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800834e:	2b00      	cmp	r3, #0
 8008350:	d12a      	bne.n	80083a8 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
 8008352:	4b51      	ldr	r3, [pc, #324]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008354:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008358:	0c1b      	lsrs	r3, r3, #16
 800835a:	f003 0303 	and.w	r3, r3, #3
 800835e:	613b      	str	r3, [r7, #16]
 8008360:	4b4d      	ldr	r3, [pc, #308]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008362:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008366:	0f1b      	lsrs	r3, r3, #28
 8008368:	f003 0307 	and.w	r3, r3, #7
 800836c:	60fb      	str	r3, [r7, #12]
 800836e:	687b      	ldr	r3, [r7, #4]
 8008370:	695b      	ldr	r3, [r3, #20]
 8008372:	019a      	lsls	r2, r3, #6
 8008374:	693b      	ldr	r3, [r7, #16]
 8008376:	041b      	lsls	r3, r3, #16
 8008378:	431a      	orrs	r2, r3
 800837a:	687b      	ldr	r3, [r7, #4]
 800837c:	699b      	ldr	r3, [r3, #24]
 800837e:	061b      	lsls	r3, r3, #24
 8008380:	431a      	orrs	r2, r3
 8008382:	68fb      	ldr	r3, [r7, #12]
 8008384:	071b      	lsls	r3, r3, #28
 8008386:	4944      	ldr	r1, [pc, #272]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008388:	4313      	orrs	r3, r2
 800838a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800838e:	4b42      	ldr	r3, [pc, #264]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008390:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8008394:	f423 52f8 	bic.w	r2, r3, #7936	@ 0x1f00
 8008398:	687b      	ldr	r3, [r7, #4]
 800839a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800839c:	3b01      	subs	r3, #1
 800839e:	021b      	lsls	r3, r3, #8
 80083a0:	493d      	ldr	r1, [pc, #244]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80083a2:	4313      	orrs	r3, r2
 80083a4:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
 80083a8:	687b      	ldr	r3, [r7, #4]
 80083aa:	681b      	ldr	r3, [r3, #0]
 80083ac:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80083b0:	2b00      	cmp	r3, #0
 80083b2:	d022      	beq.n	80083fa <HAL_RCCEx_PeriphCLKConfig+0x73e>
 80083b4:	687b      	ldr	r3, [r7, #4]
 80083b6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80083b8:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80083bc:	d11d      	bne.n	80083fa <HAL_RCCEx_PeriphCLKConfig+0x73e>
 80083be:	4b36      	ldr	r3, [pc, #216]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80083c0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80083c4:	0e1b      	lsrs	r3, r3, #24
 80083c6:	f003 030f 	and.w	r3, r3, #15
 80083ca:	613b      	str	r3, [r7, #16]
 80083cc:	4b32      	ldr	r3, [pc, #200]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80083ce:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80083d2:	0f1b      	lsrs	r3, r3, #28
 80083d4:	f003 0307 	and.w	r3, r3, #7
 80083d8:	60fb      	str	r3, [r7, #12]
 80083da:	687b      	ldr	r3, [r7, #4]
 80083dc:	695b      	ldr	r3, [r3, #20]
 80083de:	019a      	lsls	r2, r3, #6
 80083e0:	687b      	ldr	r3, [r7, #4]
 80083e2:	6a1b      	ldr	r3, [r3, #32]
 80083e4:	041b      	lsls	r3, r3, #16
 80083e6:	431a      	orrs	r2, r3
 80083e8:	693b      	ldr	r3, [r7, #16]
 80083ea:	061b      	lsls	r3, r3, #24
 80083ec:	431a      	orrs	r2, r3
 80083ee:	68fb      	ldr	r3, [r7, #12]
 80083f0:	071b      	lsls	r3, r3, #28
 80083f2:	4929      	ldr	r1, [pc, #164]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80083f4:	4313      	orrs	r3, r2
 80083f6:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80083fa:	687b      	ldr	r3, [r7, #4]
 80083fc:	681b      	ldr	r3, [r3, #0]
 80083fe:	f003 0308 	and.w	r3, r3, #8
 8008402:	2b00      	cmp	r3, #0
 8008404:	d028      	beq.n	8008458 <HAL_RCCEx_PeriphCLKConfig+0x79c>
 8008406:	4b24      	ldr	r3, [pc, #144]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008408:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800840c:	0e1b      	lsrs	r3, r3, #24
 800840e:	f003 030f 	and.w	r3, r3, #15
 8008412:	613b      	str	r3, [r7, #16]
 8008414:	4b20      	ldr	r3, [pc, #128]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008416:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800841a:	0c1b      	lsrs	r3, r3, #16
 800841c:	f003 0303 	and.w	r3, r3, #3
 8008420:	60fb      	str	r3, [r7, #12]
 8008422:	687b      	ldr	r3, [r7, #4]
 8008424:	695b      	ldr	r3, [r3, #20]
 8008426:	019a      	lsls	r2, r3, #6
 8008428:	68fb      	ldr	r3, [r7, #12]
 800842a:	041b      	lsls	r3, r3, #16
 800842c:	431a      	orrs	r2, r3
 800842e:	693b      	ldr	r3, [r7, #16]
 8008430:	061b      	lsls	r3, r3, #24
 8008432:	431a      	orrs	r2, r3
 8008434:	687b      	ldr	r3, [r7, #4]
 8008436:	69db      	ldr	r3, [r3, #28]
 8008438:	071b      	lsls	r3, r3, #28
 800843a:	4917      	ldr	r1, [pc, #92]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800843c:	4313      	orrs	r3, r2
 800843e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8008442:	4b15      	ldr	r3, [pc, #84]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008444:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8008448:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 800844c:	687b      	ldr	r3, [r7, #4]
 800844e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008450:	4911      	ldr	r1, [pc, #68]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008452:	4313      	orrs	r3, r2
 8008454:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
 8008458:	4b0f      	ldr	r3, [pc, #60]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800845a:	681b      	ldr	r3, [r3, #0]
 800845c:	4a0e      	ldr	r2, [pc, #56]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800845e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8008462:	6013      	str	r3, [r2, #0]
 8008464:	f7fc fdfa 	bl	800505c <HAL_GetTick>
 8008468:	6178      	str	r0, [r7, #20]
 800846a:	e008      	b.n	800847e <HAL_RCCEx_PeriphCLKConfig+0x7c2>
 800846c:	f7fc fdf6 	bl	800505c <HAL_GetTick>
 8008470:	4602      	mov	r2, r0
 8008472:	697b      	ldr	r3, [r7, #20]
 8008474:	1ad3      	subs	r3, r2, r3
 8008476:	2b64      	cmp	r3, #100	@ 0x64
 8008478:	d901      	bls.n	800847e <HAL_RCCEx_PeriphCLKConfig+0x7c2>
 800847a:	2303      	movs	r3, #3
 800847c:	e007      	b.n	800848e <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 800847e:	4b06      	ldr	r3, [pc, #24]	@ (8008498 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008480:	681b      	ldr	r3, [r3, #0]
 8008482:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8008486:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800848a:	d1ef      	bne.n	800846c <HAL_RCCEx_PeriphCLKConfig+0x7b0>
 800848c:	2300      	movs	r3, #0
 800848e:	4618      	mov	r0, r3
 8008490:	3720      	adds	r7, #32
 8008492:	46bd      	mov	sp, r7
 8008494:	bd80      	pop	{r7, pc}
 8008496:	bf00      	nop
 8008498:	40023800 	.word	0x40023800

0800849c <HAL_SD_Init>:
 800849c:	b580      	push	{r7, lr}
 800849e:	b082      	sub	sp, #8
 80084a0:	af00      	add	r7, sp, #0
 80084a2:	6078      	str	r0, [r7, #4]
 80084a4:	687b      	ldr	r3, [r7, #4]
 80084a6:	2b00      	cmp	r3, #0
 80084a8:	d101      	bne.n	80084ae <HAL_SD_Init+0x12>
 80084aa:	2301      	movs	r3, #1
 80084ac:	e022      	b.n	80084f4 <HAL_SD_Init+0x58>
 80084ae:	687b      	ldr	r3, [r7, #4]
 80084b0:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 80084b4:	b2db      	uxtb	r3, r3
 80084b6:	2b00      	cmp	r3, #0
 80084b8:	d105      	bne.n	80084c6 <HAL_SD_Init+0x2a>
 80084ba:	687b      	ldr	r3, [r7, #4]
 80084bc:	2200      	movs	r2, #0
 80084be:	771a      	strb	r2, [r3, #28]
 80084c0:	6878      	ldr	r0, [r7, #4]
 80084c2:	f7fb f839 	bl	8003538 <HAL_SD_MspInit>
 80084c6:	687b      	ldr	r3, [r7, #4]
 80084c8:	2203      	movs	r2, #3
 80084ca:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80084ce:	6878      	ldr	r0, [r7, #4]
 80084d0:	f000 f814 	bl	80084fc <HAL_SD_InitCard>
 80084d4:	4603      	mov	r3, r0
 80084d6:	2b00      	cmp	r3, #0
 80084d8:	d001      	beq.n	80084de <HAL_SD_Init+0x42>
 80084da:	2301      	movs	r3, #1
 80084dc:	e00a      	b.n	80084f4 <HAL_SD_Init+0x58>
 80084de:	687b      	ldr	r3, [r7, #4]
 80084e0:	2200      	movs	r2, #0
 80084e2:	639a      	str	r2, [r3, #56]	@ 0x38
 80084e4:	687b      	ldr	r3, [r7, #4]
 80084e6:	2200      	movs	r2, #0
 80084e8:	631a      	str	r2, [r3, #48]	@ 0x30
 80084ea:	687b      	ldr	r3, [r7, #4]
 80084ec:	2201      	movs	r2, #1
 80084ee:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80084f2:	2300      	movs	r3, #0
 80084f4:	4618      	mov	r0, r3
 80084f6:	3708      	adds	r7, #8
 80084f8:	46bd      	mov	sp, r7
 80084fa:	bd80      	pop	{r7, pc}

080084fc <HAL_SD_InitCard>:
 80084fc:	b5b0      	push	{r4, r5, r7, lr}
 80084fe:	b08e      	sub	sp, #56	@ 0x38
 8008500:	af04      	add	r7, sp, #16
 8008502:	6078      	str	r0, [r7, #4]
 8008504:	2300      	movs	r3, #0
 8008506:	60bb      	str	r3, [r7, #8]
 8008508:	2300      	movs	r3, #0
 800850a:	60fb      	str	r3, [r7, #12]
 800850c:	2300      	movs	r3, #0
 800850e:	613b      	str	r3, [r7, #16]
 8008510:	2300      	movs	r3, #0
 8008512:	617b      	str	r3, [r7, #20]
 8008514:	2300      	movs	r3, #0
 8008516:	61bb      	str	r3, [r7, #24]
 8008518:	2376      	movs	r3, #118	@ 0x76
 800851a:	61fb      	str	r3, [r7, #28]
 800851c:	687b      	ldr	r3, [r7, #4]
 800851e:	681d      	ldr	r5, [r3, #0]
 8008520:	466c      	mov	r4, sp
 8008522:	f107 0314 	add.w	r3, r7, #20
 8008526:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800852a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800852e:	f107 0308 	add.w	r3, r7, #8
 8008532:	cb0e      	ldmia	r3, {r1, r2, r3}
 8008534:	4628      	mov	r0, r5
 8008536:	f002 fbc9 	bl	800accc <SDMMC_Init>
 800853a:	4603      	mov	r3, r0
 800853c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8008540:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8008544:	2b00      	cmp	r3, #0
 8008546:	d001      	beq.n	800854c <HAL_SD_InitCard+0x50>
 8008548:	2301      	movs	r3, #1
 800854a:	e059      	b.n	8008600 <HAL_SD_InitCard+0x104>
 800854c:	687b      	ldr	r3, [r7, #4]
 800854e:	681b      	ldr	r3, [r3, #0]
 8008550:	685a      	ldr	r2, [r3, #4]
 8008552:	687b      	ldr	r3, [r7, #4]
 8008554:	681b      	ldr	r3, [r3, #0]
 8008556:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800855a:	605a      	str	r2, [r3, #4]
 800855c:	687b      	ldr	r3, [r7, #4]
 800855e:	681b      	ldr	r3, [r3, #0]
 8008560:	4618      	mov	r0, r3
 8008562:	f002 fbfd 	bl	800ad60 <SDMMC_PowerState_ON>
 8008566:	687b      	ldr	r3, [r7, #4]
 8008568:	681b      	ldr	r3, [r3, #0]
 800856a:	685a      	ldr	r2, [r3, #4]
 800856c:	687b      	ldr	r3, [r7, #4]
 800856e:	681b      	ldr	r3, [r3, #0]
 8008570:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8008574:	605a      	str	r2, [r3, #4]
 8008576:	2002      	movs	r0, #2
 8008578:	f7fc fd7c 	bl	8005074 <HAL_Delay>
 800857c:	6878      	ldr	r0, [r7, #4]
 800857e:	f000 ff59 	bl	8009434 <SD_PowerON>
 8008582:	6238      	str	r0, [r7, #32]
 8008584:	6a3b      	ldr	r3, [r7, #32]
 8008586:	2b00      	cmp	r3, #0
 8008588:	d00b      	beq.n	80085a2 <HAL_SD_InitCard+0xa6>
 800858a:	687b      	ldr	r3, [r7, #4]
 800858c:	2201      	movs	r2, #1
 800858e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8008592:	687b      	ldr	r3, [r7, #4]
 8008594:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8008596:	6a3b      	ldr	r3, [r7, #32]
 8008598:	431a      	orrs	r2, r3
 800859a:	687b      	ldr	r3, [r7, #4]
 800859c:	639a      	str	r2, [r3, #56]	@ 0x38
 800859e:	2301      	movs	r3, #1
 80085a0:	e02e      	b.n	8008600 <HAL_SD_InitCard+0x104>
 80085a2:	6878      	ldr	r0, [r7, #4]
 80085a4:	f000 fe78 	bl	8009298 <SD_InitCard>
 80085a8:	6238      	str	r0, [r7, #32]
 80085aa:	6a3b      	ldr	r3, [r7, #32]
 80085ac:	2b00      	cmp	r3, #0
 80085ae:	d00b      	beq.n	80085c8 <HAL_SD_InitCard+0xcc>
 80085b0:	687b      	ldr	r3, [r7, #4]
 80085b2:	2201      	movs	r2, #1
 80085b4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80085b8:	687b      	ldr	r3, [r7, #4]
 80085ba:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80085bc:	6a3b      	ldr	r3, [r7, #32]
 80085be:	431a      	orrs	r2, r3
 80085c0:	687b      	ldr	r3, [r7, #4]
 80085c2:	639a      	str	r2, [r3, #56]	@ 0x38
 80085c4:	2301      	movs	r3, #1
 80085c6:	e01b      	b.n	8008600 <HAL_SD_InitCard+0x104>
 80085c8:	687b      	ldr	r3, [r7, #4]
 80085ca:	681b      	ldr	r3, [r3, #0]
 80085cc:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80085d0:	4618      	mov	r0, r3
 80085d2:	f002 fc57 	bl	800ae84 <SDMMC_CmdBlockLength>
 80085d6:	6238      	str	r0, [r7, #32]
 80085d8:	6a3b      	ldr	r3, [r7, #32]
 80085da:	2b00      	cmp	r3, #0
 80085dc:	d00f      	beq.n	80085fe <HAL_SD_InitCard+0x102>
 80085de:	687b      	ldr	r3, [r7, #4]
 80085e0:	681b      	ldr	r3, [r3, #0]
 80085e2:	4a09      	ldr	r2, [pc, #36]	@ (8008608 <HAL_SD_InitCard+0x10c>)
 80085e4:	639a      	str	r2, [r3, #56]	@ 0x38
 80085e6:	687b      	ldr	r3, [r7, #4]
 80085e8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80085ea:	6a3b      	ldr	r3, [r7, #32]
 80085ec:	431a      	orrs	r2, r3
 80085ee:	687b      	ldr	r3, [r7, #4]
 80085f0:	639a      	str	r2, [r3, #56]	@ 0x38
 80085f2:	687b      	ldr	r3, [r7, #4]
 80085f4:	2201      	movs	r2, #1
 80085f6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80085fa:	2301      	movs	r3, #1
 80085fc:	e000      	b.n	8008600 <HAL_SD_InitCard+0x104>
 80085fe:	2300      	movs	r3, #0
 8008600:	4618      	mov	r0, r3
 8008602:	3728      	adds	r7, #40	@ 0x28
 8008604:	46bd      	mov	sp, r7
 8008606:	bdb0      	pop	{r4, r5, r7, pc}
 8008608:	004005ff 	.word	0x004005ff

0800860c <HAL_SD_ReadBlocks_DMA>:
 800860c:	b580      	push	{r7, lr}
 800860e:	b08c      	sub	sp, #48	@ 0x30
 8008610:	af00      	add	r7, sp, #0
 8008612:	60f8      	str	r0, [r7, #12]
 8008614:	60b9      	str	r1, [r7, #8]
 8008616:	607a      	str	r2, [r7, #4]
 8008618:	603b      	str	r3, [r7, #0]
 800861a:	687b      	ldr	r3, [r7, #4]
 800861c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800861e:	68bb      	ldr	r3, [r7, #8]
 8008620:	2b00      	cmp	r3, #0
 8008622:	d107      	bne.n	8008634 <HAL_SD_ReadBlocks_DMA+0x28>
 8008624:	68fb      	ldr	r3, [r7, #12]
 8008626:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008628:	f043 6200 	orr.w	r2, r3, #134217728	@ 0x8000000
 800862c:	68fb      	ldr	r3, [r7, #12]
 800862e:	639a      	str	r2, [r3, #56]	@ 0x38
 8008630:	2301      	movs	r3, #1
 8008632:	e0c3      	b.n	80087bc <HAL_SD_ReadBlocks_DMA+0x1b0>
 8008634:	68fb      	ldr	r3, [r7, #12]
 8008636:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800863a:	b2db      	uxtb	r3, r3
 800863c:	2b01      	cmp	r3, #1
 800863e:	f040 80bc 	bne.w	80087ba <HAL_SD_ReadBlocks_DMA+0x1ae>
 8008642:	68fb      	ldr	r3, [r7, #12]
 8008644:	2200      	movs	r2, #0
 8008646:	639a      	str	r2, [r3, #56]	@ 0x38
 8008648:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800864a:	683b      	ldr	r3, [r7, #0]
 800864c:	441a      	add	r2, r3
 800864e:	68fb      	ldr	r3, [r7, #12]
 8008650:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008652:	429a      	cmp	r2, r3
 8008654:	d907      	bls.n	8008666 <HAL_SD_ReadBlocks_DMA+0x5a>
 8008656:	68fb      	ldr	r3, [r7, #12]
 8008658:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800865a:	f043 7200 	orr.w	r2, r3, #33554432	@ 0x2000000
 800865e:	68fb      	ldr	r3, [r7, #12]
 8008660:	639a      	str	r2, [r3, #56]	@ 0x38
 8008662:	2301      	movs	r3, #1
 8008664:	e0aa      	b.n	80087bc <HAL_SD_ReadBlocks_DMA+0x1b0>
 8008666:	68fb      	ldr	r3, [r7, #12]
 8008668:	2203      	movs	r2, #3
 800866a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800866e:	68fb      	ldr	r3, [r7, #12]
 8008670:	681b      	ldr	r3, [r3, #0]
 8008672:	2200      	movs	r2, #0
 8008674:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008676:	68fb      	ldr	r3, [r7, #12]
 8008678:	681b      	ldr	r3, [r3, #0]
 800867a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800867c:	68fb      	ldr	r3, [r7, #12]
 800867e:	681b      	ldr	r3, [r3, #0]
 8008680:	f442 7295 	orr.w	r2, r2, #298	@ 0x12a
 8008684:	63da      	str	r2, [r3, #60]	@ 0x3c
 8008686:	68fb      	ldr	r3, [r7, #12]
 8008688:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800868a:	4a4e      	ldr	r2, [pc, #312]	@ (80087c4 <HAL_SD_ReadBlocks_DMA+0x1b8>)
 800868c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800868e:	68fb      	ldr	r3, [r7, #12]
 8008690:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008692:	4a4d      	ldr	r2, [pc, #308]	@ (80087c8 <HAL_SD_ReadBlocks_DMA+0x1bc>)
 8008694:	64da      	str	r2, [r3, #76]	@ 0x4c
 8008696:	68fb      	ldr	r3, [r7, #12]
 8008698:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800869a:	2200      	movs	r2, #0
 800869c:	651a      	str	r2, [r3, #80]	@ 0x50
 800869e:	68fb      	ldr	r3, [r7, #12]
 80086a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80086a2:	2200      	movs	r2, #0
 80086a4:	609a      	str	r2, [r3, #8]
 80086a6:	68fb      	ldr	r3, [r7, #12]
 80086a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80086aa:	681b      	ldr	r3, [r3, #0]
 80086ac:	681b      	ldr	r3, [r3, #0]
 80086ae:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 80086b2:	68fb      	ldr	r3, [r7, #12]
 80086b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80086b6:	689a      	ldr	r2, [r3, #8]
 80086b8:	68fb      	ldr	r3, [r7, #12]
 80086ba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80086bc:	681b      	ldr	r3, [r3, #0]
 80086be:	430a      	orrs	r2, r1
 80086c0:	601a      	str	r2, [r3, #0]
 80086c2:	68fb      	ldr	r3, [r7, #12]
 80086c4:	6c18      	ldr	r0, [r3, #64]	@ 0x40
 80086c6:	68fb      	ldr	r3, [r7, #12]
 80086c8:	681b      	ldr	r3, [r3, #0]
 80086ca:	3380      	adds	r3, #128	@ 0x80
 80086cc:	4619      	mov	r1, r3
 80086ce:	68ba      	ldr	r2, [r7, #8]
 80086d0:	683b      	ldr	r3, [r7, #0]
 80086d2:	025b      	lsls	r3, r3, #9
 80086d4:	089b      	lsrs	r3, r3, #2
 80086d6:	f7fe f903 	bl	80068e0 <HAL_DMA_Start_IT>
 80086da:	4603      	mov	r3, r0
 80086dc:	2b00      	cmp	r3, #0
 80086de:	d017      	beq.n	8008710 <HAL_SD_ReadBlocks_DMA+0x104>
 80086e0:	68fb      	ldr	r3, [r7, #12]
 80086e2:	681b      	ldr	r3, [r3, #0]
 80086e4:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80086e6:	68fb      	ldr	r3, [r7, #12]
 80086e8:	681b      	ldr	r3, [r3, #0]
 80086ea:	f422 7295 	bic.w	r2, r2, #298	@ 0x12a
 80086ee:	63da      	str	r2, [r3, #60]	@ 0x3c
 80086f0:	68fb      	ldr	r3, [r7, #12]
 80086f2:	681b      	ldr	r3, [r3, #0]
 80086f4:	4a35      	ldr	r2, [pc, #212]	@ (80087cc <HAL_SD_ReadBlocks_DMA+0x1c0>)
 80086f6:	639a      	str	r2, [r3, #56]	@ 0x38
 80086f8:	68fb      	ldr	r3, [r7, #12]
 80086fa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80086fc:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 8008700:	68fb      	ldr	r3, [r7, #12]
 8008702:	639a      	str	r2, [r3, #56]	@ 0x38
 8008704:	68fb      	ldr	r3, [r7, #12]
 8008706:	2201      	movs	r2, #1
 8008708:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800870c:	2301      	movs	r3, #1
 800870e:	e055      	b.n	80087bc <HAL_SD_ReadBlocks_DMA+0x1b0>
 8008710:	68fb      	ldr	r3, [r7, #12]
 8008712:	681b      	ldr	r3, [r3, #0]
 8008714:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008716:	68fb      	ldr	r3, [r7, #12]
 8008718:	681b      	ldr	r3, [r3, #0]
 800871a:	f042 0208 	orr.w	r2, r2, #8
 800871e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008720:	68fb      	ldr	r3, [r7, #12]
 8008722:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8008724:	2b01      	cmp	r3, #1
 8008726:	d002      	beq.n	800872e <HAL_SD_ReadBlocks_DMA+0x122>
 8008728:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800872a:	025b      	lsls	r3, r3, #9
 800872c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800872e:	f04f 33ff 	mov.w	r3, #4294967295
 8008732:	613b      	str	r3, [r7, #16]
 8008734:	683b      	ldr	r3, [r7, #0]
 8008736:	025b      	lsls	r3, r3, #9
 8008738:	617b      	str	r3, [r7, #20]
 800873a:	2390      	movs	r3, #144	@ 0x90
 800873c:	61bb      	str	r3, [r7, #24]
 800873e:	2302      	movs	r3, #2
 8008740:	61fb      	str	r3, [r7, #28]
 8008742:	2300      	movs	r3, #0
 8008744:	623b      	str	r3, [r7, #32]
 8008746:	2301      	movs	r3, #1
 8008748:	627b      	str	r3, [r7, #36]	@ 0x24
 800874a:	68fb      	ldr	r3, [r7, #12]
 800874c:	681b      	ldr	r3, [r3, #0]
 800874e:	f107 0210 	add.w	r2, r7, #16
 8008752:	4611      	mov	r1, r2
 8008754:	4618      	mov	r0, r3
 8008756:	f002 fb69 	bl	800ae2c <SDMMC_ConfigData>
 800875a:	683b      	ldr	r3, [r7, #0]
 800875c:	2b01      	cmp	r3, #1
 800875e:	d90a      	bls.n	8008776 <HAL_SD_ReadBlocks_DMA+0x16a>
 8008760:	68fb      	ldr	r3, [r7, #12]
 8008762:	2282      	movs	r2, #130	@ 0x82
 8008764:	631a      	str	r2, [r3, #48]	@ 0x30
 8008766:	68fb      	ldr	r3, [r7, #12]
 8008768:	681b      	ldr	r3, [r3, #0]
 800876a:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800876c:	4618      	mov	r0, r3
 800876e:	f002 fbcd 	bl	800af0c <SDMMC_CmdReadMultiBlock>
 8008772:	62f8      	str	r0, [r7, #44]	@ 0x2c
 8008774:	e009      	b.n	800878a <HAL_SD_ReadBlocks_DMA+0x17e>
 8008776:	68fb      	ldr	r3, [r7, #12]
 8008778:	2281      	movs	r2, #129	@ 0x81
 800877a:	631a      	str	r2, [r3, #48]	@ 0x30
 800877c:	68fb      	ldr	r3, [r7, #12]
 800877e:	681b      	ldr	r3, [r3, #0]
 8008780:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8008782:	4618      	mov	r0, r3
 8008784:	f002 fba0 	bl	800aec8 <SDMMC_CmdReadSingleBlock>
 8008788:	62f8      	str	r0, [r7, #44]	@ 0x2c
 800878a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800878c:	2b00      	cmp	r3, #0
 800878e:	d012      	beq.n	80087b6 <HAL_SD_ReadBlocks_DMA+0x1aa>
 8008790:	68fb      	ldr	r3, [r7, #12]
 8008792:	681b      	ldr	r3, [r3, #0]
 8008794:	4a0d      	ldr	r2, [pc, #52]	@ (80087cc <HAL_SD_ReadBlocks_DMA+0x1c0>)
 8008796:	639a      	str	r2, [r3, #56]	@ 0x38
 8008798:	68fb      	ldr	r3, [r7, #12]
 800879a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800879c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800879e:	431a      	orrs	r2, r3
 80087a0:	68fb      	ldr	r3, [r7, #12]
 80087a2:	639a      	str	r2, [r3, #56]	@ 0x38
 80087a4:	68fb      	ldr	r3, [r7, #12]
 80087a6:	2201      	movs	r2, #1
 80087a8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80087ac:	68fb      	ldr	r3, [r7, #12]
 80087ae:	2200      	movs	r2, #0
 80087b0:	631a      	str	r2, [r3, #48]	@ 0x30
 80087b2:	2301      	movs	r3, #1
 80087b4:	e002      	b.n	80087bc <HAL_SD_ReadBlocks_DMA+0x1b0>
 80087b6:	2300      	movs	r3, #0
 80087b8:	e000      	b.n	80087bc <HAL_SD_ReadBlocks_DMA+0x1b0>
 80087ba:	2302      	movs	r3, #2
 80087bc:	4618      	mov	r0, r3
 80087be:	3730      	adds	r7, #48	@ 0x30
 80087c0:	46bd      	mov	sp, r7
 80087c2:	bd80      	pop	{r7, pc}
 80087c4:	080090a7 	.word	0x080090a7
 80087c8:	08009119 	.word	0x08009119
 80087cc:	004005ff 	.word	0x004005ff

080087d0 <HAL_SD_WriteBlocks_DMA>:
 80087d0:	b580      	push	{r7, lr}
 80087d2:	b08c      	sub	sp, #48	@ 0x30
 80087d4:	af00      	add	r7, sp, #0
 80087d6:	60f8      	str	r0, [r7, #12]
 80087d8:	60b9      	str	r1, [r7, #8]
 80087da:	607a      	str	r2, [r7, #4]
 80087dc:	603b      	str	r3, [r7, #0]
 80087de:	687b      	ldr	r3, [r7, #4]
 80087e0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80087e2:	68bb      	ldr	r3, [r7, #8]
 80087e4:	2b00      	cmp	r3, #0
 80087e6:	d107      	bne.n	80087f8 <HAL_SD_WriteBlocks_DMA+0x28>
 80087e8:	68fb      	ldr	r3, [r7, #12]
 80087ea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80087ec:	f043 6200 	orr.w	r2, r3, #134217728	@ 0x8000000
 80087f0:	68fb      	ldr	r3, [r7, #12]
 80087f2:	639a      	str	r2, [r3, #56]	@ 0x38
 80087f4:	2301      	movs	r3, #1
 80087f6:	e0c6      	b.n	8008986 <HAL_SD_WriteBlocks_DMA+0x1b6>
 80087f8:	68fb      	ldr	r3, [r7, #12]
 80087fa:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 80087fe:	b2db      	uxtb	r3, r3
 8008800:	2b01      	cmp	r3, #1
 8008802:	f040 80bf 	bne.w	8008984 <HAL_SD_WriteBlocks_DMA+0x1b4>
 8008806:	68fb      	ldr	r3, [r7, #12]
 8008808:	2200      	movs	r2, #0
 800880a:	639a      	str	r2, [r3, #56]	@ 0x38
 800880c:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800880e:	683b      	ldr	r3, [r7, #0]
 8008810:	441a      	add	r2, r3
 8008812:	68fb      	ldr	r3, [r7, #12]
 8008814:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008816:	429a      	cmp	r2, r3
 8008818:	d907      	bls.n	800882a <HAL_SD_WriteBlocks_DMA+0x5a>
 800881a:	68fb      	ldr	r3, [r7, #12]
 800881c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800881e:	f043 7200 	orr.w	r2, r3, #33554432	@ 0x2000000
 8008822:	68fb      	ldr	r3, [r7, #12]
 8008824:	639a      	str	r2, [r3, #56]	@ 0x38
 8008826:	2301      	movs	r3, #1
 8008828:	e0ad      	b.n	8008986 <HAL_SD_WriteBlocks_DMA+0x1b6>
 800882a:	68fb      	ldr	r3, [r7, #12]
 800882c:	2203      	movs	r2, #3
 800882e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8008832:	68fb      	ldr	r3, [r7, #12]
 8008834:	681b      	ldr	r3, [r3, #0]
 8008836:	2200      	movs	r2, #0
 8008838:	62da      	str	r2, [r3, #44]	@ 0x2c
 800883a:	68fb      	ldr	r3, [r7, #12]
 800883c:	681b      	ldr	r3, [r3, #0]
 800883e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8008840:	68fb      	ldr	r3, [r7, #12]
 8008842:	681b      	ldr	r3, [r3, #0]
 8008844:	f042 021a 	orr.w	r2, r2, #26
 8008848:	63da      	str	r2, [r3, #60]	@ 0x3c
 800884a:	68fb      	ldr	r3, [r7, #12]
 800884c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800884e:	4a50      	ldr	r2, [pc, #320]	@ (8008990 <HAL_SD_WriteBlocks_DMA+0x1c0>)
 8008850:	63da      	str	r2, [r3, #60]	@ 0x3c
 8008852:	68fb      	ldr	r3, [r7, #12]
 8008854:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008856:	4a4f      	ldr	r2, [pc, #316]	@ (8008994 <HAL_SD_WriteBlocks_DMA+0x1c4>)
 8008858:	64da      	str	r2, [r3, #76]	@ 0x4c
 800885a:	68fb      	ldr	r3, [r7, #12]
 800885c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800885e:	2200      	movs	r2, #0
 8008860:	651a      	str	r2, [r3, #80]	@ 0x50
 8008862:	68fb      	ldr	r3, [r7, #12]
 8008864:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8008866:	2b01      	cmp	r3, #1
 8008868:	d002      	beq.n	8008870 <HAL_SD_WriteBlocks_DMA+0xa0>
 800886a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800886c:	025b      	lsls	r3, r3, #9
 800886e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008870:	683b      	ldr	r3, [r7, #0]
 8008872:	2b01      	cmp	r3, #1
 8008874:	d90a      	bls.n	800888c <HAL_SD_WriteBlocks_DMA+0xbc>
 8008876:	68fb      	ldr	r3, [r7, #12]
 8008878:	22a0      	movs	r2, #160	@ 0xa0
 800887a:	631a      	str	r2, [r3, #48]	@ 0x30
 800887c:	68fb      	ldr	r3, [r7, #12]
 800887e:	681b      	ldr	r3, [r3, #0]
 8008880:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8008882:	4618      	mov	r0, r3
 8008884:	f002 fb86 	bl	800af94 <SDMMC_CmdWriteMultiBlock>
 8008888:	62f8      	str	r0, [r7, #44]	@ 0x2c
 800888a:	e009      	b.n	80088a0 <HAL_SD_WriteBlocks_DMA+0xd0>
 800888c:	68fb      	ldr	r3, [r7, #12]
 800888e:	2290      	movs	r2, #144	@ 0x90
 8008890:	631a      	str	r2, [r3, #48]	@ 0x30
 8008892:	68fb      	ldr	r3, [r7, #12]
 8008894:	681b      	ldr	r3, [r3, #0]
 8008896:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8008898:	4618      	mov	r0, r3
 800889a:	f002 fb59 	bl	800af50 <SDMMC_CmdWriteSingleBlock>
 800889e:	62f8      	str	r0, [r7, #44]	@ 0x2c
 80088a0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80088a2:	2b00      	cmp	r3, #0
 80088a4:	d012      	beq.n	80088cc <HAL_SD_WriteBlocks_DMA+0xfc>
 80088a6:	68fb      	ldr	r3, [r7, #12]
 80088a8:	681b      	ldr	r3, [r3, #0]
 80088aa:	4a3b      	ldr	r2, [pc, #236]	@ (8008998 <HAL_SD_WriteBlocks_DMA+0x1c8>)
 80088ac:	639a      	str	r2, [r3, #56]	@ 0x38
 80088ae:	68fb      	ldr	r3, [r7, #12]
 80088b0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80088b2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80088b4:	431a      	orrs	r2, r3
 80088b6:	68fb      	ldr	r3, [r7, #12]
 80088b8:	639a      	str	r2, [r3, #56]	@ 0x38
 80088ba:	68fb      	ldr	r3, [r7, #12]
 80088bc:	2201      	movs	r2, #1
 80088be:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80088c2:	68fb      	ldr	r3, [r7, #12]
 80088c4:	2200      	movs	r2, #0
 80088c6:	631a      	str	r2, [r3, #48]	@ 0x30
 80088c8:	2301      	movs	r3, #1
 80088ca:	e05c      	b.n	8008986 <HAL_SD_WriteBlocks_DMA+0x1b6>
 80088cc:	68fb      	ldr	r3, [r7, #12]
 80088ce:	681b      	ldr	r3, [r3, #0]
 80088d0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80088d2:	68fb      	ldr	r3, [r7, #12]
 80088d4:	681b      	ldr	r3, [r3, #0]
 80088d6:	f042 0208 	orr.w	r2, r2, #8
 80088da:	62da      	str	r2, [r3, #44]	@ 0x2c
 80088dc:	68fb      	ldr	r3, [r7, #12]
 80088de:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80088e0:	2240      	movs	r2, #64	@ 0x40
 80088e2:	609a      	str	r2, [r3, #8]
 80088e4:	68fb      	ldr	r3, [r7, #12]
 80088e6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80088e8:	681b      	ldr	r3, [r3, #0]
 80088ea:	681b      	ldr	r3, [r3, #0]
 80088ec:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 80088f0:	68fb      	ldr	r3, [r7, #12]
 80088f2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80088f4:	689a      	ldr	r2, [r3, #8]
 80088f6:	68fb      	ldr	r3, [r7, #12]
 80088f8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80088fa:	681b      	ldr	r3, [r3, #0]
 80088fc:	430a      	orrs	r2, r1
 80088fe:	601a      	str	r2, [r3, #0]
 8008900:	68fb      	ldr	r3, [r7, #12]
 8008902:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
 8008904:	68b9      	ldr	r1, [r7, #8]
 8008906:	68fb      	ldr	r3, [r7, #12]
 8008908:	681b      	ldr	r3, [r3, #0]
 800890a:	3380      	adds	r3, #128	@ 0x80
 800890c:	461a      	mov	r2, r3
 800890e:	683b      	ldr	r3, [r7, #0]
 8008910:	025b      	lsls	r3, r3, #9
 8008912:	089b      	lsrs	r3, r3, #2
 8008914:	f7fd ffe4 	bl	80068e0 <HAL_DMA_Start_IT>
 8008918:	4603      	mov	r3, r0
 800891a:	2b00      	cmp	r3, #0
 800891c:	d01a      	beq.n	8008954 <HAL_SD_WriteBlocks_DMA+0x184>
 800891e:	68fb      	ldr	r3, [r7, #12]
 8008920:	681b      	ldr	r3, [r3, #0]
 8008922:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8008924:	68fb      	ldr	r3, [r7, #12]
 8008926:	681b      	ldr	r3, [r3, #0]
 8008928:	f022 021a 	bic.w	r2, r2, #26
 800892c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800892e:	68fb      	ldr	r3, [r7, #12]
 8008930:	681b      	ldr	r3, [r3, #0]
 8008932:	4a19      	ldr	r2, [pc, #100]	@ (8008998 <HAL_SD_WriteBlocks_DMA+0x1c8>)
 8008934:	639a      	str	r2, [r3, #56]	@ 0x38
 8008936:	68fb      	ldr	r3, [r7, #12]
 8008938:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800893a:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 800893e:	68fb      	ldr	r3, [r7, #12]
 8008940:	639a      	str	r2, [r3, #56]	@ 0x38
 8008942:	68fb      	ldr	r3, [r7, #12]
 8008944:	2201      	movs	r2, #1
 8008946:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800894a:	68fb      	ldr	r3, [r7, #12]
 800894c:	2200      	movs	r2, #0
 800894e:	631a      	str	r2, [r3, #48]	@ 0x30
 8008950:	2301      	movs	r3, #1
 8008952:	e018      	b.n	8008986 <HAL_SD_WriteBlocks_DMA+0x1b6>
 8008954:	f04f 33ff 	mov.w	r3, #4294967295
 8008958:	613b      	str	r3, [r7, #16]
 800895a:	683b      	ldr	r3, [r7, #0]
 800895c:	025b      	lsls	r3, r3, #9
 800895e:	617b      	str	r3, [r7, #20]
 8008960:	2390      	movs	r3, #144	@ 0x90
 8008962:	61bb      	str	r3, [r7, #24]
 8008964:	2300      	movs	r3, #0
 8008966:	61fb      	str	r3, [r7, #28]
 8008968:	2300      	movs	r3, #0
 800896a:	623b      	str	r3, [r7, #32]
 800896c:	2301      	movs	r3, #1
 800896e:	627b      	str	r3, [r7, #36]	@ 0x24
 8008970:	68fb      	ldr	r3, [r7, #12]
 8008972:	681b      	ldr	r3, [r3, #0]
 8008974:	f107 0210 	add.w	r2, r7, #16
 8008978:	4611      	mov	r1, r2
 800897a:	4618      	mov	r0, r3
 800897c:	f002 fa56 	bl	800ae2c <SDMMC_ConfigData>
 8008980:	2300      	movs	r3, #0
 8008982:	e000      	b.n	8008986 <HAL_SD_WriteBlocks_DMA+0x1b6>
 8008984:	2302      	movs	r3, #2
 8008986:	4618      	mov	r0, r3
 8008988:	3730      	adds	r7, #48	@ 0x30
 800898a:	46bd      	mov	sp, r7
 800898c:	bd80      	pop	{r7, pc}
 800898e:	bf00      	nop
 8008990:	0800907d 	.word	0x0800907d
 8008994:	08009119 	.word	0x08009119
 8008998:	004005ff 	.word	0x004005ff

0800899c <HAL_SD_IRQHandler>:
 800899c:	b580      	push	{r7, lr}
 800899e:	b084      	sub	sp, #16
 80089a0:	af00      	add	r7, sp, #0
 80089a2:	6078      	str	r0, [r7, #4]
 80089a4:	687b      	ldr	r3, [r7, #4]
 80089a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80089a8:	60fb      	str	r3, [r7, #12]
 80089aa:	687b      	ldr	r3, [r7, #4]
 80089ac:	681b      	ldr	r3, [r3, #0]
 80089ae:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80089b0:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80089b4:	2b00      	cmp	r3, #0
 80089b6:	d008      	beq.n	80089ca <HAL_SD_IRQHandler+0x2e>
 80089b8:	68fb      	ldr	r3, [r7, #12]
 80089ba:	f003 0308 	and.w	r3, r3, #8
 80089be:	2b00      	cmp	r3, #0
 80089c0:	d003      	beq.n	80089ca <HAL_SD_IRQHandler+0x2e>
 80089c2:	6878      	ldr	r0, [r7, #4]
 80089c4:	f000 fdec 	bl	80095a0 <SD_Read_IT>
 80089c8:	e15a      	b.n	8008c80 <HAL_SD_IRQHandler+0x2e4>
 80089ca:	687b      	ldr	r3, [r7, #4]
 80089cc:	681b      	ldr	r3, [r3, #0]
 80089ce:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80089d0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80089d4:	2b00      	cmp	r3, #0
 80089d6:	f000 808d 	beq.w	8008af4 <HAL_SD_IRQHandler+0x158>
 80089da:	687b      	ldr	r3, [r7, #4]
 80089dc:	681b      	ldr	r3, [r3, #0]
 80089de:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80089e2:	639a      	str	r2, [r3, #56]	@ 0x38
 80089e4:	687b      	ldr	r3, [r7, #4]
 80089e6:	681b      	ldr	r3, [r3, #0]
 80089e8:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
 80089ea:	687b      	ldr	r3, [r7, #4]
 80089ec:	681a      	ldr	r2, [r3, #0]
 80089ee:	4b9a      	ldr	r3, [pc, #616]	@ (8008c58 <HAL_SD_IRQHandler+0x2bc>)
 80089f0:	400b      	ands	r3, r1
 80089f2:	63d3      	str	r3, [r2, #60]	@ 0x3c
 80089f4:	687b      	ldr	r3, [r7, #4]
 80089f6:	681b      	ldr	r3, [r3, #0]
 80089f8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80089fa:	687b      	ldr	r3, [r7, #4]
 80089fc:	681b      	ldr	r3, [r3, #0]
 80089fe:	f022 0201 	bic.w	r2, r2, #1
 8008a02:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008a04:	68fb      	ldr	r3, [r7, #12]
 8008a06:	f003 0308 	and.w	r3, r3, #8
 8008a0a:	2b00      	cmp	r3, #0
 8008a0c:	d039      	beq.n	8008a82 <HAL_SD_IRQHandler+0xe6>
 8008a0e:	68fb      	ldr	r3, [r7, #12]
 8008a10:	f003 0302 	and.w	r3, r3, #2
 8008a14:	2b00      	cmp	r3, #0
 8008a16:	d104      	bne.n	8008a22 <HAL_SD_IRQHandler+0x86>
 8008a18:	68fb      	ldr	r3, [r7, #12]
 8008a1a:	f003 0320 	and.w	r3, r3, #32
 8008a1e:	2b00      	cmp	r3, #0
 8008a20:	d011      	beq.n	8008a46 <HAL_SD_IRQHandler+0xaa>
 8008a22:	687b      	ldr	r3, [r7, #4]
 8008a24:	681b      	ldr	r3, [r3, #0]
 8008a26:	4618      	mov	r0, r3
 8008a28:	f002 fad6 	bl	800afd8 <SDMMC_CmdStopTransfer>
 8008a2c:	60b8      	str	r0, [r7, #8]
 8008a2e:	68bb      	ldr	r3, [r7, #8]
 8008a30:	2b00      	cmp	r3, #0
 8008a32:	d008      	beq.n	8008a46 <HAL_SD_IRQHandler+0xaa>
 8008a34:	687b      	ldr	r3, [r7, #4]
 8008a36:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8008a38:	68bb      	ldr	r3, [r7, #8]
 8008a3a:	431a      	orrs	r2, r3
 8008a3c:	687b      	ldr	r3, [r7, #4]
 8008a3e:	639a      	str	r2, [r3, #56]	@ 0x38
 8008a40:	6878      	ldr	r0, [r7, #4]
 8008a42:	f000 f921 	bl	8008c88 <HAL_SD_ErrorCallback>
 8008a46:	687b      	ldr	r3, [r7, #4]
 8008a48:	681b      	ldr	r3, [r3, #0]
 8008a4a:	f240 523a 	movw	r2, #1338	@ 0x53a
 8008a4e:	639a      	str	r2, [r3, #56]	@ 0x38
 8008a50:	687b      	ldr	r3, [r7, #4]
 8008a52:	2201      	movs	r2, #1
 8008a54:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8008a58:	687b      	ldr	r3, [r7, #4]
 8008a5a:	2200      	movs	r2, #0
 8008a5c:	631a      	str	r2, [r3, #48]	@ 0x30
 8008a5e:	68fb      	ldr	r3, [r7, #12]
 8008a60:	f003 0301 	and.w	r3, r3, #1
 8008a64:	2b00      	cmp	r3, #0
 8008a66:	d104      	bne.n	8008a72 <HAL_SD_IRQHandler+0xd6>
 8008a68:	68fb      	ldr	r3, [r7, #12]
 8008a6a:	f003 0302 	and.w	r3, r3, #2
 8008a6e:	2b00      	cmp	r3, #0
 8008a70:	d003      	beq.n	8008a7a <HAL_SD_IRQHandler+0xde>
 8008a72:	6878      	ldr	r0, [r7, #4]
 8008a74:	f002 fef4 	bl	800b860 <HAL_SD_RxCpltCallback>
 8008a78:	e102      	b.n	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008a7a:	6878      	ldr	r0, [r7, #4]
 8008a7c:	f002 fee6 	bl	800b84c <HAL_SD_TxCpltCallback>
 8008a80:	e0fe      	b.n	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008a82:	68fb      	ldr	r3, [r7, #12]
 8008a84:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008a88:	2b00      	cmp	r3, #0
 8008a8a:	f000 80f9 	beq.w	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008a8e:	68fb      	ldr	r3, [r7, #12]
 8008a90:	f003 0320 	and.w	r3, r3, #32
 8008a94:	2b00      	cmp	r3, #0
 8008a96:	d011      	beq.n	8008abc <HAL_SD_IRQHandler+0x120>
 8008a98:	687b      	ldr	r3, [r7, #4]
 8008a9a:	681b      	ldr	r3, [r3, #0]
 8008a9c:	4618      	mov	r0, r3
 8008a9e:	f002 fa9b 	bl	800afd8 <SDMMC_CmdStopTransfer>
 8008aa2:	60b8      	str	r0, [r7, #8]
 8008aa4:	68bb      	ldr	r3, [r7, #8]
 8008aa6:	2b00      	cmp	r3, #0
 8008aa8:	d008      	beq.n	8008abc <HAL_SD_IRQHandler+0x120>
 8008aaa:	687b      	ldr	r3, [r7, #4]
 8008aac:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8008aae:	68bb      	ldr	r3, [r7, #8]
 8008ab0:	431a      	orrs	r2, r3
 8008ab2:	687b      	ldr	r3, [r7, #4]
 8008ab4:	639a      	str	r2, [r3, #56]	@ 0x38
 8008ab6:	6878      	ldr	r0, [r7, #4]
 8008ab8:	f000 f8e6 	bl	8008c88 <HAL_SD_ErrorCallback>
 8008abc:	68fb      	ldr	r3, [r7, #12]
 8008abe:	f003 0301 	and.w	r3, r3, #1
 8008ac2:	2b00      	cmp	r3, #0
 8008ac4:	f040 80dc 	bne.w	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008ac8:	68fb      	ldr	r3, [r7, #12]
 8008aca:	f003 0302 	and.w	r3, r3, #2
 8008ace:	2b00      	cmp	r3, #0
 8008ad0:	f040 80d6 	bne.w	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008ad4:	687b      	ldr	r3, [r7, #4]
 8008ad6:	681b      	ldr	r3, [r3, #0]
 8008ad8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008ada:	687b      	ldr	r3, [r7, #4]
 8008adc:	681b      	ldr	r3, [r3, #0]
 8008ade:	f022 0208 	bic.w	r2, r2, #8
 8008ae2:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008ae4:	687b      	ldr	r3, [r7, #4]
 8008ae6:	2201      	movs	r2, #1
 8008ae8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8008aec:	6878      	ldr	r0, [r7, #4]
 8008aee:	f002 fead 	bl	800b84c <HAL_SD_TxCpltCallback>
 8008af2:	e0c5      	b.n	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008af4:	687b      	ldr	r3, [r7, #4]
 8008af6:	681b      	ldr	r3, [r3, #0]
 8008af8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8008afa:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8008afe:	2b00      	cmp	r3, #0
 8008b00:	d008      	beq.n	8008b14 <HAL_SD_IRQHandler+0x178>
 8008b02:	68fb      	ldr	r3, [r7, #12]
 8008b04:	f003 0308 	and.w	r3, r3, #8
 8008b08:	2b00      	cmp	r3, #0
 8008b0a:	d003      	beq.n	8008b14 <HAL_SD_IRQHandler+0x178>
 8008b0c:	6878      	ldr	r0, [r7, #4]
 8008b0e:	f000 fd98 	bl	8009642 <SD_Write_IT>
 8008b12:	e0b5      	b.n	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008b14:	687b      	ldr	r3, [r7, #4]
 8008b16:	681b      	ldr	r3, [r3, #0]
 8008b18:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8008b1a:	f003 033a 	and.w	r3, r3, #58	@ 0x3a
 8008b1e:	2b00      	cmp	r3, #0
 8008b20:	f000 80ae 	beq.w	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008b24:	687b      	ldr	r3, [r7, #4]
 8008b26:	681b      	ldr	r3, [r3, #0]
 8008b28:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8008b2a:	f003 0302 	and.w	r3, r3, #2
 8008b2e:	2b00      	cmp	r3, #0
 8008b30:	d005      	beq.n	8008b3e <HAL_SD_IRQHandler+0x1a2>
 8008b32:	687b      	ldr	r3, [r7, #4]
 8008b34:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008b36:	f043 0202 	orr.w	r2, r3, #2
 8008b3a:	687b      	ldr	r3, [r7, #4]
 8008b3c:	639a      	str	r2, [r3, #56]	@ 0x38
 8008b3e:	687b      	ldr	r3, [r7, #4]
 8008b40:	681b      	ldr	r3, [r3, #0]
 8008b42:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8008b44:	f003 0308 	and.w	r3, r3, #8
 8008b48:	2b00      	cmp	r3, #0
 8008b4a:	d005      	beq.n	8008b58 <HAL_SD_IRQHandler+0x1bc>
 8008b4c:	687b      	ldr	r3, [r7, #4]
 8008b4e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008b50:	f043 0208 	orr.w	r2, r3, #8
 8008b54:	687b      	ldr	r3, [r7, #4]
 8008b56:	639a      	str	r2, [r3, #56]	@ 0x38
 8008b58:	687b      	ldr	r3, [r7, #4]
 8008b5a:	681b      	ldr	r3, [r3, #0]
 8008b5c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8008b5e:	f003 0320 	and.w	r3, r3, #32
 8008b62:	2b00      	cmp	r3, #0
 8008b64:	d005      	beq.n	8008b72 <HAL_SD_IRQHandler+0x1d6>
 8008b66:	687b      	ldr	r3, [r7, #4]
 8008b68:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008b6a:	f043 0220 	orr.w	r2, r3, #32
 8008b6e:	687b      	ldr	r3, [r7, #4]
 8008b70:	639a      	str	r2, [r3, #56]	@ 0x38
 8008b72:	687b      	ldr	r3, [r7, #4]
 8008b74:	681b      	ldr	r3, [r3, #0]
 8008b76:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8008b78:	f003 0310 	and.w	r3, r3, #16
 8008b7c:	2b00      	cmp	r3, #0
 8008b7e:	d005      	beq.n	8008b8c <HAL_SD_IRQHandler+0x1f0>
 8008b80:	687b      	ldr	r3, [r7, #4]
 8008b82:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008b84:	f043 0210 	orr.w	r2, r3, #16
 8008b88:	687b      	ldr	r3, [r7, #4]
 8008b8a:	639a      	str	r2, [r3, #56]	@ 0x38
 8008b8c:	687b      	ldr	r3, [r7, #4]
 8008b8e:	681b      	ldr	r3, [r3, #0]
 8008b90:	f240 523a 	movw	r2, #1338	@ 0x53a
 8008b94:	639a      	str	r2, [r3, #56]	@ 0x38
 8008b96:	687b      	ldr	r3, [r7, #4]
 8008b98:	681b      	ldr	r3, [r3, #0]
 8008b9a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8008b9c:	687b      	ldr	r3, [r7, #4]
 8008b9e:	681b      	ldr	r3, [r3, #0]
 8008ba0:	f422 729d 	bic.w	r2, r2, #314	@ 0x13a
 8008ba4:	63da      	str	r2, [r3, #60]	@ 0x3c
 8008ba6:	687b      	ldr	r3, [r7, #4]
 8008ba8:	681b      	ldr	r3, [r3, #0]
 8008baa:	4618      	mov	r0, r3
 8008bac:	f002 fa14 	bl	800afd8 <SDMMC_CmdStopTransfer>
 8008bb0:	4602      	mov	r2, r0
 8008bb2:	687b      	ldr	r3, [r7, #4]
 8008bb4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008bb6:	431a      	orrs	r2, r3
 8008bb8:	687b      	ldr	r3, [r7, #4]
 8008bba:	639a      	str	r2, [r3, #56]	@ 0x38
 8008bbc:	68fb      	ldr	r3, [r7, #12]
 8008bbe:	f003 0308 	and.w	r3, r3, #8
 8008bc2:	2b00      	cmp	r3, #0
 8008bc4:	d00a      	beq.n	8008bdc <HAL_SD_IRQHandler+0x240>
 8008bc6:	687b      	ldr	r3, [r7, #4]
 8008bc8:	2201      	movs	r2, #1
 8008bca:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8008bce:	687b      	ldr	r3, [r7, #4]
 8008bd0:	2200      	movs	r2, #0
 8008bd2:	631a      	str	r2, [r3, #48]	@ 0x30
 8008bd4:	6878      	ldr	r0, [r7, #4]
 8008bd6:	f000 f857 	bl	8008c88 <HAL_SD_ErrorCallback>
 8008bda:	e051      	b.n	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008bdc:	68fb      	ldr	r3, [r7, #12]
 8008bde:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008be2:	2b00      	cmp	r3, #0
 8008be4:	d04c      	beq.n	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008be6:	68fb      	ldr	r3, [r7, #12]
 8008be8:	f003 0310 	and.w	r3, r3, #16
 8008bec:	2b00      	cmp	r3, #0
 8008bee:	d104      	bne.n	8008bfa <HAL_SD_IRQHandler+0x25e>
 8008bf0:	68fb      	ldr	r3, [r7, #12]
 8008bf2:	f003 0320 	and.w	r3, r3, #32
 8008bf6:	2b00      	cmp	r3, #0
 8008bf8:	d011      	beq.n	8008c1e <HAL_SD_IRQHandler+0x282>
 8008bfa:	687b      	ldr	r3, [r7, #4]
 8008bfc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008bfe:	4a17      	ldr	r2, [pc, #92]	@ (8008c5c <HAL_SD_IRQHandler+0x2c0>)
 8008c00:	651a      	str	r2, [r3, #80]	@ 0x50
 8008c02:	687b      	ldr	r3, [r7, #4]
 8008c04:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008c06:	4618      	mov	r0, r3
 8008c08:	f7fd feca 	bl	80069a0 <HAL_DMA_Abort_IT>
 8008c0c:	4603      	mov	r3, r0
 8008c0e:	2b00      	cmp	r3, #0
 8008c10:	d036      	beq.n	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008c12:	687b      	ldr	r3, [r7, #4]
 8008c14:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008c16:	4618      	mov	r0, r3
 8008c18:	f000 fad0 	bl	80091bc <SD_DMATxAbort>
 8008c1c:	e030      	b.n	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008c1e:	68fb      	ldr	r3, [r7, #12]
 8008c20:	f003 0301 	and.w	r3, r3, #1
 8008c24:	2b00      	cmp	r3, #0
 8008c26:	d104      	bne.n	8008c32 <HAL_SD_IRQHandler+0x296>
 8008c28:	68fb      	ldr	r3, [r7, #12]
 8008c2a:	f003 0302 	and.w	r3, r3, #2
 8008c2e:	2b00      	cmp	r3, #0
 8008c30:	d018      	beq.n	8008c64 <HAL_SD_IRQHandler+0x2c8>
 8008c32:	687b      	ldr	r3, [r7, #4]
 8008c34:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008c36:	4a0a      	ldr	r2, [pc, #40]	@ (8008c60 <HAL_SD_IRQHandler+0x2c4>)
 8008c38:	651a      	str	r2, [r3, #80]	@ 0x50
 8008c3a:	687b      	ldr	r3, [r7, #4]
 8008c3c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008c3e:	4618      	mov	r0, r3
 8008c40:	f7fd feae 	bl	80069a0 <HAL_DMA_Abort_IT>
 8008c44:	4603      	mov	r3, r0
 8008c46:	2b00      	cmp	r3, #0
 8008c48:	d01a      	beq.n	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008c4a:	687b      	ldr	r3, [r7, #4]
 8008c4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008c4e:	4618      	mov	r0, r3
 8008c50:	f000 faeb 	bl	800922a <SD_DMARxAbort>
 8008c54:	e014      	b.n	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008c56:	bf00      	nop
 8008c58:	ffff3ec5 	.word	0xffff3ec5
 8008c5c:	080091bd 	.word	0x080091bd
 8008c60:	0800922b 	.word	0x0800922b
 8008c64:	687b      	ldr	r3, [r7, #4]
 8008c66:	2200      	movs	r2, #0
 8008c68:	639a      	str	r2, [r3, #56]	@ 0x38
 8008c6a:	687b      	ldr	r3, [r7, #4]
 8008c6c:	2201      	movs	r2, #1
 8008c6e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8008c72:	687b      	ldr	r3, [r7, #4]
 8008c74:	2200      	movs	r2, #0
 8008c76:	631a      	str	r2, [r3, #48]	@ 0x30
 8008c78:	6878      	ldr	r0, [r7, #4]
 8008c7a:	f002 fddd 	bl	800b838 <HAL_SD_AbortCallback>
 8008c7e:	e7ff      	b.n	8008c80 <HAL_SD_IRQHandler+0x2e4>
 8008c80:	bf00      	nop
 8008c82:	3710      	adds	r7, #16
 8008c84:	46bd      	mov	sp, r7
 8008c86:	bd80      	pop	{r7, pc}

08008c88 <HAL_SD_ErrorCallback>:
 8008c88:	b480      	push	{r7}
 8008c8a:	b083      	sub	sp, #12
 8008c8c:	af00      	add	r7, sp, #0
 8008c8e:	6078      	str	r0, [r7, #4]
 8008c90:	bf00      	nop
 8008c92:	370c      	adds	r7, #12
 8008c94:	46bd      	mov	sp, r7
 8008c96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c9a:	4770      	bx	lr

08008c9c <HAL_SD_GetCardCSD>:
 8008c9c:	b480      	push	{r7}
 8008c9e:	b083      	sub	sp, #12
 8008ca0:	af00      	add	r7, sp, #0
 8008ca2:	6078      	str	r0, [r7, #4]
 8008ca4:	6039      	str	r1, [r7, #0]
 8008ca6:	687b      	ldr	r3, [r7, #4]
 8008ca8:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008caa:	0f9b      	lsrs	r3, r3, #30
 8008cac:	b2da      	uxtb	r2, r3
 8008cae:	683b      	ldr	r3, [r7, #0]
 8008cb0:	701a      	strb	r2, [r3, #0]
 8008cb2:	687b      	ldr	r3, [r7, #4]
 8008cb4:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008cb6:	0e9b      	lsrs	r3, r3, #26
 8008cb8:	b2db      	uxtb	r3, r3
 8008cba:	f003 030f 	and.w	r3, r3, #15
 8008cbe:	b2da      	uxtb	r2, r3
 8008cc0:	683b      	ldr	r3, [r7, #0]
 8008cc2:	705a      	strb	r2, [r3, #1]
 8008cc4:	687b      	ldr	r3, [r7, #4]
 8008cc6:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008cc8:	0e1b      	lsrs	r3, r3, #24
 8008cca:	b2db      	uxtb	r3, r3
 8008ccc:	f003 0303 	and.w	r3, r3, #3
 8008cd0:	b2da      	uxtb	r2, r3
 8008cd2:	683b      	ldr	r3, [r7, #0]
 8008cd4:	709a      	strb	r2, [r3, #2]
 8008cd6:	687b      	ldr	r3, [r7, #4]
 8008cd8:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008cda:	0c1b      	lsrs	r3, r3, #16
 8008cdc:	b2da      	uxtb	r2, r3
 8008cde:	683b      	ldr	r3, [r7, #0]
 8008ce0:	70da      	strb	r2, [r3, #3]
 8008ce2:	687b      	ldr	r3, [r7, #4]
 8008ce4:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008ce6:	0a1b      	lsrs	r3, r3, #8
 8008ce8:	b2da      	uxtb	r2, r3
 8008cea:	683b      	ldr	r3, [r7, #0]
 8008cec:	711a      	strb	r2, [r3, #4]
 8008cee:	687b      	ldr	r3, [r7, #4]
 8008cf0:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008cf2:	b2da      	uxtb	r2, r3
 8008cf4:	683b      	ldr	r3, [r7, #0]
 8008cf6:	715a      	strb	r2, [r3, #5]
 8008cf8:	687b      	ldr	r3, [r7, #4]
 8008cfa:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8008cfc:	0d1b      	lsrs	r3, r3, #20
 8008cfe:	b29a      	uxth	r2, r3
 8008d00:	683b      	ldr	r3, [r7, #0]
 8008d02:	80da      	strh	r2, [r3, #6]
 8008d04:	687b      	ldr	r3, [r7, #4]
 8008d06:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8008d08:	0c1b      	lsrs	r3, r3, #16
 8008d0a:	b2db      	uxtb	r3, r3
 8008d0c:	f003 030f 	and.w	r3, r3, #15
 8008d10:	b2da      	uxtb	r2, r3
 8008d12:	683b      	ldr	r3, [r7, #0]
 8008d14:	721a      	strb	r2, [r3, #8]
 8008d16:	687b      	ldr	r3, [r7, #4]
 8008d18:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8008d1a:	0bdb      	lsrs	r3, r3, #15
 8008d1c:	b2db      	uxtb	r3, r3
 8008d1e:	f003 0301 	and.w	r3, r3, #1
 8008d22:	b2da      	uxtb	r2, r3
 8008d24:	683b      	ldr	r3, [r7, #0]
 8008d26:	725a      	strb	r2, [r3, #9]
 8008d28:	687b      	ldr	r3, [r7, #4]
 8008d2a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8008d2c:	0b9b      	lsrs	r3, r3, #14
 8008d2e:	b2db      	uxtb	r3, r3
 8008d30:	f003 0301 	and.w	r3, r3, #1
 8008d34:	b2da      	uxtb	r2, r3
 8008d36:	683b      	ldr	r3, [r7, #0]
 8008d38:	729a      	strb	r2, [r3, #10]
 8008d3a:	687b      	ldr	r3, [r7, #4]
 8008d3c:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8008d3e:	0b5b      	lsrs	r3, r3, #13
 8008d40:	b2db      	uxtb	r3, r3
 8008d42:	f003 0301 	and.w	r3, r3, #1
 8008d46:	b2da      	uxtb	r2, r3
 8008d48:	683b      	ldr	r3, [r7, #0]
 8008d4a:	72da      	strb	r2, [r3, #11]
 8008d4c:	687b      	ldr	r3, [r7, #4]
 8008d4e:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8008d50:	0b1b      	lsrs	r3, r3, #12
 8008d52:	b2db      	uxtb	r3, r3
 8008d54:	f003 0301 	and.w	r3, r3, #1
 8008d58:	b2da      	uxtb	r2, r3
 8008d5a:	683b      	ldr	r3, [r7, #0]
 8008d5c:	731a      	strb	r2, [r3, #12]
 8008d5e:	683b      	ldr	r3, [r7, #0]
 8008d60:	2200      	movs	r2, #0
 8008d62:	735a      	strb	r2, [r3, #13]
 8008d64:	687b      	ldr	r3, [r7, #4]
 8008d66:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8008d68:	2b00      	cmp	r3, #0
 8008d6a:	d163      	bne.n	8008e34 <HAL_SD_GetCardCSD+0x198>
 8008d6c:	687b      	ldr	r3, [r7, #4]
 8008d6e:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8008d70:	009a      	lsls	r2, r3, #2
 8008d72:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8008d76:	4013      	ands	r3, r2
 8008d78:	687a      	ldr	r2, [r7, #4]
 8008d7a:	6ed2      	ldr	r2, [r2, #108]	@ 0x6c
 8008d7c:	0f92      	lsrs	r2, r2, #30
 8008d7e:	431a      	orrs	r2, r3
 8008d80:	683b      	ldr	r3, [r7, #0]
 8008d82:	611a      	str	r2, [r3, #16]
 8008d84:	687b      	ldr	r3, [r7, #4]
 8008d86:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008d88:	0edb      	lsrs	r3, r3, #27
 8008d8a:	b2db      	uxtb	r3, r3
 8008d8c:	f003 0307 	and.w	r3, r3, #7
 8008d90:	b2da      	uxtb	r2, r3
 8008d92:	683b      	ldr	r3, [r7, #0]
 8008d94:	751a      	strb	r2, [r3, #20]
 8008d96:	687b      	ldr	r3, [r7, #4]
 8008d98:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008d9a:	0e1b      	lsrs	r3, r3, #24
 8008d9c:	b2db      	uxtb	r3, r3
 8008d9e:	f003 0307 	and.w	r3, r3, #7
 8008da2:	b2da      	uxtb	r2, r3
 8008da4:	683b      	ldr	r3, [r7, #0]
 8008da6:	755a      	strb	r2, [r3, #21]
 8008da8:	687b      	ldr	r3, [r7, #4]
 8008daa:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008dac:	0d5b      	lsrs	r3, r3, #21
 8008dae:	b2db      	uxtb	r3, r3
 8008db0:	f003 0307 	and.w	r3, r3, #7
 8008db4:	b2da      	uxtb	r2, r3
 8008db6:	683b      	ldr	r3, [r7, #0]
 8008db8:	759a      	strb	r2, [r3, #22]
 8008dba:	687b      	ldr	r3, [r7, #4]
 8008dbc:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008dbe:	0c9b      	lsrs	r3, r3, #18
 8008dc0:	b2db      	uxtb	r3, r3
 8008dc2:	f003 0307 	and.w	r3, r3, #7
 8008dc6:	b2da      	uxtb	r2, r3
 8008dc8:	683b      	ldr	r3, [r7, #0]
 8008dca:	75da      	strb	r2, [r3, #23]
 8008dcc:	687b      	ldr	r3, [r7, #4]
 8008dce:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008dd0:	0bdb      	lsrs	r3, r3, #15
 8008dd2:	b2db      	uxtb	r3, r3
 8008dd4:	f003 0307 	and.w	r3, r3, #7
 8008dd8:	b2da      	uxtb	r2, r3
 8008dda:	683b      	ldr	r3, [r7, #0]
 8008ddc:	761a      	strb	r2, [r3, #24]
 8008dde:	683b      	ldr	r3, [r7, #0]
 8008de0:	691b      	ldr	r3, [r3, #16]
 8008de2:	1c5a      	adds	r2, r3, #1
 8008de4:	687b      	ldr	r3, [r7, #4]
 8008de6:	655a      	str	r2, [r3, #84]	@ 0x54
 8008de8:	683b      	ldr	r3, [r7, #0]
 8008dea:	7e1b      	ldrb	r3, [r3, #24]
 8008dec:	b2db      	uxtb	r3, r3
 8008dee:	f003 0307 	and.w	r3, r3, #7
 8008df2:	3302      	adds	r3, #2
 8008df4:	2201      	movs	r2, #1
 8008df6:	fa02 f303 	lsl.w	r3, r2, r3
 8008dfa:	687a      	ldr	r2, [r7, #4]
 8008dfc:	6d52      	ldr	r2, [r2, #84]	@ 0x54
 8008dfe:	fb03 f202 	mul.w	r2, r3, r2
 8008e02:	687b      	ldr	r3, [r7, #4]
 8008e04:	655a      	str	r2, [r3, #84]	@ 0x54
 8008e06:	683b      	ldr	r3, [r7, #0]
 8008e08:	7a1b      	ldrb	r3, [r3, #8]
 8008e0a:	b2db      	uxtb	r3, r3
 8008e0c:	f003 030f 	and.w	r3, r3, #15
 8008e10:	2201      	movs	r2, #1
 8008e12:	409a      	lsls	r2, r3
 8008e14:	687b      	ldr	r3, [r7, #4]
 8008e16:	659a      	str	r2, [r3, #88]	@ 0x58
 8008e18:	687b      	ldr	r3, [r7, #4]
 8008e1a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008e1c:	687a      	ldr	r2, [r7, #4]
 8008e1e:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 8008e20:	0a52      	lsrs	r2, r2, #9
 8008e22:	fb03 f202 	mul.w	r2, r3, r2
 8008e26:	687b      	ldr	r3, [r7, #4]
 8008e28:	65da      	str	r2, [r3, #92]	@ 0x5c
 8008e2a:	687b      	ldr	r3, [r7, #4]
 8008e2c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8008e30:	661a      	str	r2, [r3, #96]	@ 0x60
 8008e32:	e031      	b.n	8008e98 <HAL_SD_GetCardCSD+0x1fc>
 8008e34:	687b      	ldr	r3, [r7, #4]
 8008e36:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8008e38:	2b01      	cmp	r3, #1
 8008e3a:	d11d      	bne.n	8008e78 <HAL_SD_GetCardCSD+0x1dc>
 8008e3c:	687b      	ldr	r3, [r7, #4]
 8008e3e:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8008e40:	041b      	lsls	r3, r3, #16
 8008e42:	f403 127c 	and.w	r2, r3, #4128768	@ 0x3f0000
 8008e46:	687b      	ldr	r3, [r7, #4]
 8008e48:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008e4a:	0c1b      	lsrs	r3, r3, #16
 8008e4c:	431a      	orrs	r2, r3
 8008e4e:	683b      	ldr	r3, [r7, #0]
 8008e50:	611a      	str	r2, [r3, #16]
 8008e52:	683b      	ldr	r3, [r7, #0]
 8008e54:	691b      	ldr	r3, [r3, #16]
 8008e56:	3301      	adds	r3, #1
 8008e58:	029a      	lsls	r2, r3, #10
 8008e5a:	687b      	ldr	r3, [r7, #4]
 8008e5c:	655a      	str	r2, [r3, #84]	@ 0x54
 8008e5e:	687b      	ldr	r3, [r7, #4]
 8008e60:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8008e62:	687b      	ldr	r3, [r7, #4]
 8008e64:	65da      	str	r2, [r3, #92]	@ 0x5c
 8008e66:	687b      	ldr	r3, [r7, #4]
 8008e68:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8008e6c:	659a      	str	r2, [r3, #88]	@ 0x58
 8008e6e:	687b      	ldr	r3, [r7, #4]
 8008e70:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 8008e72:	687b      	ldr	r3, [r7, #4]
 8008e74:	661a      	str	r2, [r3, #96]	@ 0x60
 8008e76:	e00f      	b.n	8008e98 <HAL_SD_GetCardCSD+0x1fc>
 8008e78:	687b      	ldr	r3, [r7, #4]
 8008e7a:	681b      	ldr	r3, [r3, #0]
 8008e7c:	4a58      	ldr	r2, [pc, #352]	@ (8008fe0 <HAL_SD_GetCardCSD+0x344>)
 8008e7e:	639a      	str	r2, [r3, #56]	@ 0x38
 8008e80:	687b      	ldr	r3, [r7, #4]
 8008e82:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008e84:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 8008e88:	687b      	ldr	r3, [r7, #4]
 8008e8a:	639a      	str	r2, [r3, #56]	@ 0x38
 8008e8c:	687b      	ldr	r3, [r7, #4]
 8008e8e:	2201      	movs	r2, #1
 8008e90:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8008e94:	2301      	movs	r3, #1
 8008e96:	e09d      	b.n	8008fd4 <HAL_SD_GetCardCSD+0x338>
 8008e98:	687b      	ldr	r3, [r7, #4]
 8008e9a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008e9c:	0b9b      	lsrs	r3, r3, #14
 8008e9e:	b2db      	uxtb	r3, r3
 8008ea0:	f003 0301 	and.w	r3, r3, #1
 8008ea4:	b2da      	uxtb	r2, r3
 8008ea6:	683b      	ldr	r3, [r7, #0]
 8008ea8:	765a      	strb	r2, [r3, #25]
 8008eaa:	687b      	ldr	r3, [r7, #4]
 8008eac:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008eae:	09db      	lsrs	r3, r3, #7
 8008eb0:	b2db      	uxtb	r3, r3
 8008eb2:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8008eb6:	b2da      	uxtb	r2, r3
 8008eb8:	683b      	ldr	r3, [r7, #0]
 8008eba:	769a      	strb	r2, [r3, #26]
 8008ebc:	687b      	ldr	r3, [r7, #4]
 8008ebe:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008ec0:	b2db      	uxtb	r3, r3
 8008ec2:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8008ec6:	b2da      	uxtb	r2, r3
 8008ec8:	683b      	ldr	r3, [r7, #0]
 8008eca:	76da      	strb	r2, [r3, #27]
 8008ecc:	687b      	ldr	r3, [r7, #4]
 8008ece:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008ed0:	0fdb      	lsrs	r3, r3, #31
 8008ed2:	b2da      	uxtb	r2, r3
 8008ed4:	683b      	ldr	r3, [r7, #0]
 8008ed6:	771a      	strb	r2, [r3, #28]
 8008ed8:	687b      	ldr	r3, [r7, #4]
 8008eda:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008edc:	0f5b      	lsrs	r3, r3, #29
 8008ede:	b2db      	uxtb	r3, r3
 8008ee0:	f003 0303 	and.w	r3, r3, #3
 8008ee4:	b2da      	uxtb	r2, r3
 8008ee6:	683b      	ldr	r3, [r7, #0]
 8008ee8:	775a      	strb	r2, [r3, #29]
 8008eea:	687b      	ldr	r3, [r7, #4]
 8008eec:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008eee:	0e9b      	lsrs	r3, r3, #26
 8008ef0:	b2db      	uxtb	r3, r3
 8008ef2:	f003 0307 	and.w	r3, r3, #7
 8008ef6:	b2da      	uxtb	r2, r3
 8008ef8:	683b      	ldr	r3, [r7, #0]
 8008efa:	779a      	strb	r2, [r3, #30]
 8008efc:	687b      	ldr	r3, [r7, #4]
 8008efe:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008f00:	0d9b      	lsrs	r3, r3, #22
 8008f02:	b2db      	uxtb	r3, r3
 8008f04:	f003 030f 	and.w	r3, r3, #15
 8008f08:	b2da      	uxtb	r2, r3
 8008f0a:	683b      	ldr	r3, [r7, #0]
 8008f0c:	77da      	strb	r2, [r3, #31]
 8008f0e:	687b      	ldr	r3, [r7, #4]
 8008f10:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008f12:	0d5b      	lsrs	r3, r3, #21
 8008f14:	b2db      	uxtb	r3, r3
 8008f16:	f003 0301 	and.w	r3, r3, #1
 8008f1a:	b2da      	uxtb	r2, r3
 8008f1c:	683b      	ldr	r3, [r7, #0]
 8008f1e:	f883 2020 	strb.w	r2, [r3, #32]
 8008f22:	683b      	ldr	r3, [r7, #0]
 8008f24:	2200      	movs	r2, #0
 8008f26:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8008f2a:	687b      	ldr	r3, [r7, #4]
 8008f2c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008f2e:	0c1b      	lsrs	r3, r3, #16
 8008f30:	b2db      	uxtb	r3, r3
 8008f32:	f003 0301 	and.w	r3, r3, #1
 8008f36:	b2da      	uxtb	r2, r3
 8008f38:	683b      	ldr	r3, [r7, #0]
 8008f3a:	f883 2022 	strb.w	r2, [r3, #34]	@ 0x22
 8008f3e:	687b      	ldr	r3, [r7, #4]
 8008f40:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008f42:	0bdb      	lsrs	r3, r3, #15
 8008f44:	b2db      	uxtb	r3, r3
 8008f46:	f003 0301 	and.w	r3, r3, #1
 8008f4a:	b2da      	uxtb	r2, r3
 8008f4c:	683b      	ldr	r3, [r7, #0]
 8008f4e:	f883 2023 	strb.w	r2, [r3, #35]	@ 0x23
 8008f52:	687b      	ldr	r3, [r7, #4]
 8008f54:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008f56:	0b9b      	lsrs	r3, r3, #14
 8008f58:	b2db      	uxtb	r3, r3
 8008f5a:	f003 0301 	and.w	r3, r3, #1
 8008f5e:	b2da      	uxtb	r2, r3
 8008f60:	683b      	ldr	r3, [r7, #0]
 8008f62:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8008f66:	687b      	ldr	r3, [r7, #4]
 8008f68:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008f6a:	0b5b      	lsrs	r3, r3, #13
 8008f6c:	b2db      	uxtb	r3, r3
 8008f6e:	f003 0301 	and.w	r3, r3, #1
 8008f72:	b2da      	uxtb	r2, r3
 8008f74:	683b      	ldr	r3, [r7, #0]
 8008f76:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8008f7a:	687b      	ldr	r3, [r7, #4]
 8008f7c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008f7e:	0b1b      	lsrs	r3, r3, #12
 8008f80:	b2db      	uxtb	r3, r3
 8008f82:	f003 0301 	and.w	r3, r3, #1
 8008f86:	b2da      	uxtb	r2, r3
 8008f88:	683b      	ldr	r3, [r7, #0]
 8008f8a:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 8008f8e:	687b      	ldr	r3, [r7, #4]
 8008f90:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008f92:	0a9b      	lsrs	r3, r3, #10
 8008f94:	b2db      	uxtb	r3, r3
 8008f96:	f003 0303 	and.w	r3, r3, #3
 8008f9a:	b2da      	uxtb	r2, r3
 8008f9c:	683b      	ldr	r3, [r7, #0]
 8008f9e:	f883 2027 	strb.w	r2, [r3, #39]	@ 0x27
 8008fa2:	687b      	ldr	r3, [r7, #4]
 8008fa4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008fa6:	0a1b      	lsrs	r3, r3, #8
 8008fa8:	b2db      	uxtb	r3, r3
 8008faa:	f003 0303 	and.w	r3, r3, #3
 8008fae:	b2da      	uxtb	r2, r3
 8008fb0:	683b      	ldr	r3, [r7, #0]
 8008fb2:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8008fb6:	687b      	ldr	r3, [r7, #4]
 8008fb8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008fba:	085b      	lsrs	r3, r3, #1
 8008fbc:	b2db      	uxtb	r3, r3
 8008fbe:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8008fc2:	b2da      	uxtb	r2, r3
 8008fc4:	683b      	ldr	r3, [r7, #0]
 8008fc6:	f883 2029 	strb.w	r2, [r3, #41]	@ 0x29
 8008fca:	683b      	ldr	r3, [r7, #0]
 8008fcc:	2201      	movs	r2, #1
 8008fce:	f883 202a 	strb.w	r2, [r3, #42]	@ 0x2a
 8008fd2:	2300      	movs	r3, #0
 8008fd4:	4618      	mov	r0, r3
 8008fd6:	370c      	adds	r7, #12
 8008fd8:	46bd      	mov	sp, r7
 8008fda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fde:	4770      	bx	lr
 8008fe0:	004005ff 	.word	0x004005ff

08008fe4 <HAL_SD_GetCardInfo>:
 8008fe4:	b480      	push	{r7}
 8008fe6:	b083      	sub	sp, #12
 8008fe8:	af00      	add	r7, sp, #0
 8008fea:	6078      	str	r0, [r7, #4]
 8008fec:	6039      	str	r1, [r7, #0]
 8008fee:	687b      	ldr	r3, [r7, #4]
 8008ff0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8008ff2:	683b      	ldr	r3, [r7, #0]
 8008ff4:	601a      	str	r2, [r3, #0]
 8008ff6:	687b      	ldr	r3, [r7, #4]
 8008ff8:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8008ffa:	683b      	ldr	r3, [r7, #0]
 8008ffc:	605a      	str	r2, [r3, #4]
 8008ffe:	687b      	ldr	r3, [r7, #4]
 8009000:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8009002:	683b      	ldr	r3, [r7, #0]
 8009004:	609a      	str	r2, [r3, #8]
 8009006:	687b      	ldr	r3, [r7, #4]
 8009008:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800900a:	683b      	ldr	r3, [r7, #0]
 800900c:	60da      	str	r2, [r3, #12]
 800900e:	687b      	ldr	r3, [r7, #4]
 8009010:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8009012:	683b      	ldr	r3, [r7, #0]
 8009014:	611a      	str	r2, [r3, #16]
 8009016:	687b      	ldr	r3, [r7, #4]
 8009018:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 800901a:	683b      	ldr	r3, [r7, #0]
 800901c:	615a      	str	r2, [r3, #20]
 800901e:	687b      	ldr	r3, [r7, #4]
 8009020:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8009022:	683b      	ldr	r3, [r7, #0]
 8009024:	619a      	str	r2, [r3, #24]
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800902a:	683b      	ldr	r3, [r7, #0]
 800902c:	61da      	str	r2, [r3, #28]
 800902e:	2300      	movs	r3, #0
 8009030:	4618      	mov	r0, r3
 8009032:	370c      	adds	r7, #12
 8009034:	46bd      	mov	sp, r7
 8009036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800903a:	4770      	bx	lr

0800903c <HAL_SD_GetCardState>:
 800903c:	b580      	push	{r7, lr}
 800903e:	b086      	sub	sp, #24
 8009040:	af00      	add	r7, sp, #0
 8009042:	6078      	str	r0, [r7, #4]
 8009044:	2300      	movs	r3, #0
 8009046:	60fb      	str	r3, [r7, #12]
 8009048:	f107 030c 	add.w	r3, r7, #12
 800904c:	4619      	mov	r1, r3
 800904e:	6878      	ldr	r0, [r7, #4]
 8009050:	f000 fa7e 	bl	8009550 <SD_SendStatus>
 8009054:	6178      	str	r0, [r7, #20]
 8009056:	697b      	ldr	r3, [r7, #20]
 8009058:	2b00      	cmp	r3, #0
 800905a:	d005      	beq.n	8009068 <HAL_SD_GetCardState+0x2c>
 800905c:	687b      	ldr	r3, [r7, #4]
 800905e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8009060:	697b      	ldr	r3, [r7, #20]
 8009062:	431a      	orrs	r2, r3
 8009064:	687b      	ldr	r3, [r7, #4]
 8009066:	639a      	str	r2, [r3, #56]	@ 0x38
 8009068:	68fb      	ldr	r3, [r7, #12]
 800906a:	0a5b      	lsrs	r3, r3, #9
 800906c:	f003 030f 	and.w	r3, r3, #15
 8009070:	613b      	str	r3, [r7, #16]
 8009072:	693b      	ldr	r3, [r7, #16]
 8009074:	4618      	mov	r0, r3
 8009076:	3718      	adds	r7, #24
 8009078:	46bd      	mov	sp, r7
 800907a:	bd80      	pop	{r7, pc}

0800907c <SD_DMATransmitCplt>:
 800907c:	b480      	push	{r7}
 800907e:	b085      	sub	sp, #20
 8009080:	af00      	add	r7, sp, #0
 8009082:	6078      	str	r0, [r7, #4]
 8009084:	687b      	ldr	r3, [r7, #4]
 8009086:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009088:	60fb      	str	r3, [r7, #12]
 800908a:	68fb      	ldr	r3, [r7, #12]
 800908c:	681b      	ldr	r3, [r3, #0]
 800908e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8009090:	68fb      	ldr	r3, [r7, #12]
 8009092:	681b      	ldr	r3, [r3, #0]
 8009094:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8009098:	63da      	str	r2, [r3, #60]	@ 0x3c
 800909a:	bf00      	nop
 800909c:	3714      	adds	r7, #20
 800909e:	46bd      	mov	sp, r7
 80090a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090a4:	4770      	bx	lr

080090a6 <SD_DMAReceiveCplt>:
 80090a6:	b580      	push	{r7, lr}
 80090a8:	b084      	sub	sp, #16
 80090aa:	af00      	add	r7, sp, #0
 80090ac:	6078      	str	r0, [r7, #4]
 80090ae:	687b      	ldr	r3, [r7, #4]
 80090b0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80090b2:	60fb      	str	r3, [r7, #12]
 80090b4:	68fb      	ldr	r3, [r7, #12]
 80090b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80090b8:	2b82      	cmp	r3, #130	@ 0x82
 80090ba:	d111      	bne.n	80090e0 <SD_DMAReceiveCplt+0x3a>
 80090bc:	68fb      	ldr	r3, [r7, #12]
 80090be:	681b      	ldr	r3, [r3, #0]
 80090c0:	4618      	mov	r0, r3
 80090c2:	f001 ff89 	bl	800afd8 <SDMMC_CmdStopTransfer>
 80090c6:	60b8      	str	r0, [r7, #8]
 80090c8:	68bb      	ldr	r3, [r7, #8]
 80090ca:	2b00      	cmp	r3, #0
 80090cc:	d008      	beq.n	80090e0 <SD_DMAReceiveCplt+0x3a>
 80090ce:	68fb      	ldr	r3, [r7, #12]
 80090d0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80090d2:	68bb      	ldr	r3, [r7, #8]
 80090d4:	431a      	orrs	r2, r3
 80090d6:	68fb      	ldr	r3, [r7, #12]
 80090d8:	639a      	str	r2, [r3, #56]	@ 0x38
 80090da:	68f8      	ldr	r0, [r7, #12]
 80090dc:	f7ff fdd4 	bl	8008c88 <HAL_SD_ErrorCallback>
 80090e0:	68fb      	ldr	r3, [r7, #12]
 80090e2:	681b      	ldr	r3, [r3, #0]
 80090e4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80090e6:	68fb      	ldr	r3, [r7, #12]
 80090e8:	681b      	ldr	r3, [r3, #0]
 80090ea:	f022 0208 	bic.w	r2, r2, #8
 80090ee:	62da      	str	r2, [r3, #44]	@ 0x2c
 80090f0:	68fb      	ldr	r3, [r7, #12]
 80090f2:	681b      	ldr	r3, [r3, #0]
 80090f4:	f240 523a 	movw	r2, #1338	@ 0x53a
 80090f8:	639a      	str	r2, [r3, #56]	@ 0x38
 80090fa:	68fb      	ldr	r3, [r7, #12]
 80090fc:	2201      	movs	r2, #1
 80090fe:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8009102:	68fb      	ldr	r3, [r7, #12]
 8009104:	2200      	movs	r2, #0
 8009106:	631a      	str	r2, [r3, #48]	@ 0x30
 8009108:	68f8      	ldr	r0, [r7, #12]
 800910a:	f002 fba9 	bl	800b860 <HAL_SD_RxCpltCallback>
 800910e:	bf00      	nop
 8009110:	3710      	adds	r7, #16
 8009112:	46bd      	mov	sp, r7
 8009114:	bd80      	pop	{r7, pc}
	...

08009118 <SD_DMAError>:
 8009118:	b580      	push	{r7, lr}
 800911a:	b086      	sub	sp, #24
 800911c:	af00      	add	r7, sp, #0
 800911e:	6078      	str	r0, [r7, #4]
 8009120:	687b      	ldr	r3, [r7, #4]
 8009122:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009124:	617b      	str	r3, [r7, #20]
 8009126:	6878      	ldr	r0, [r7, #4]
 8009128:	f7fd fde6 	bl	8006cf8 <HAL_DMA_GetError>
 800912c:	4603      	mov	r3, r0
 800912e:	2b02      	cmp	r3, #2
 8009130:	d03e      	beq.n	80091b0 <SD_DMAError+0x98>
 8009132:	697b      	ldr	r3, [r7, #20]
 8009134:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009136:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009138:	613b      	str	r3, [r7, #16]
 800913a:	697b      	ldr	r3, [r7, #20]
 800913c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800913e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009140:	60fb      	str	r3, [r7, #12]
 8009142:	693b      	ldr	r3, [r7, #16]
 8009144:	2b01      	cmp	r3, #1
 8009146:	d002      	beq.n	800914e <SD_DMAError+0x36>
 8009148:	68fb      	ldr	r3, [r7, #12]
 800914a:	2b01      	cmp	r3, #1
 800914c:	d12d      	bne.n	80091aa <SD_DMAError+0x92>
 800914e:	697b      	ldr	r3, [r7, #20]
 8009150:	681b      	ldr	r3, [r3, #0]
 8009152:	4a19      	ldr	r2, [pc, #100]	@ (80091b8 <SD_DMAError+0xa0>)
 8009154:	639a      	str	r2, [r3, #56]	@ 0x38
 8009156:	697b      	ldr	r3, [r7, #20]
 8009158:	681b      	ldr	r3, [r3, #0]
 800915a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800915c:	697b      	ldr	r3, [r7, #20]
 800915e:	681b      	ldr	r3, [r3, #0]
 8009160:	f422 729d 	bic.w	r2, r2, #314	@ 0x13a
 8009164:	63da      	str	r2, [r3, #60]	@ 0x3c
 8009166:	697b      	ldr	r3, [r7, #20]
 8009168:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800916a:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 800916e:	697b      	ldr	r3, [r7, #20]
 8009170:	639a      	str	r2, [r3, #56]	@ 0x38
 8009172:	6978      	ldr	r0, [r7, #20]
 8009174:	f7ff ff62 	bl	800903c <HAL_SD_GetCardState>
 8009178:	60b8      	str	r0, [r7, #8]
 800917a:	68bb      	ldr	r3, [r7, #8]
 800917c:	2b06      	cmp	r3, #6
 800917e:	d002      	beq.n	8009186 <SD_DMAError+0x6e>
 8009180:	68bb      	ldr	r3, [r7, #8]
 8009182:	2b05      	cmp	r3, #5
 8009184:	d10a      	bne.n	800919c <SD_DMAError+0x84>
 8009186:	697b      	ldr	r3, [r7, #20]
 8009188:	681b      	ldr	r3, [r3, #0]
 800918a:	4618      	mov	r0, r3
 800918c:	f001 ff24 	bl	800afd8 <SDMMC_CmdStopTransfer>
 8009190:	4602      	mov	r2, r0
 8009192:	697b      	ldr	r3, [r7, #20]
 8009194:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009196:	431a      	orrs	r2, r3
 8009198:	697b      	ldr	r3, [r7, #20]
 800919a:	639a      	str	r2, [r3, #56]	@ 0x38
 800919c:	697b      	ldr	r3, [r7, #20]
 800919e:	2201      	movs	r2, #1
 80091a0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80091a4:	697b      	ldr	r3, [r7, #20]
 80091a6:	2200      	movs	r2, #0
 80091a8:	631a      	str	r2, [r3, #48]	@ 0x30
 80091aa:	6978      	ldr	r0, [r7, #20]
 80091ac:	f7ff fd6c 	bl	8008c88 <HAL_SD_ErrorCallback>
 80091b0:	bf00      	nop
 80091b2:	3718      	adds	r7, #24
 80091b4:	46bd      	mov	sp, r7
 80091b6:	bd80      	pop	{r7, pc}
 80091b8:	004005ff 	.word	0x004005ff

080091bc <SD_DMATxAbort>:
 80091bc:	b580      	push	{r7, lr}
 80091be:	b084      	sub	sp, #16
 80091c0:	af00      	add	r7, sp, #0
 80091c2:	6078      	str	r0, [r7, #4]
 80091c4:	687b      	ldr	r3, [r7, #4]
 80091c6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80091c8:	60fb      	str	r3, [r7, #12]
 80091ca:	68fb      	ldr	r3, [r7, #12]
 80091cc:	681b      	ldr	r3, [r3, #0]
 80091ce:	f240 523a 	movw	r2, #1338	@ 0x53a
 80091d2:	639a      	str	r2, [r3, #56]	@ 0x38
 80091d4:	68f8      	ldr	r0, [r7, #12]
 80091d6:	f7ff ff31 	bl	800903c <HAL_SD_GetCardState>
 80091da:	60b8      	str	r0, [r7, #8]
 80091dc:	68fb      	ldr	r3, [r7, #12]
 80091de:	2201      	movs	r2, #1
 80091e0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80091e4:	68fb      	ldr	r3, [r7, #12]
 80091e6:	2200      	movs	r2, #0
 80091e8:	631a      	str	r2, [r3, #48]	@ 0x30
 80091ea:	68bb      	ldr	r3, [r7, #8]
 80091ec:	2b06      	cmp	r3, #6
 80091ee:	d002      	beq.n	80091f6 <SD_DMATxAbort+0x3a>
 80091f0:	68bb      	ldr	r3, [r7, #8]
 80091f2:	2b05      	cmp	r3, #5
 80091f4:	d10a      	bne.n	800920c <SD_DMATxAbort+0x50>
 80091f6:	68fb      	ldr	r3, [r7, #12]
 80091f8:	681b      	ldr	r3, [r3, #0]
 80091fa:	4618      	mov	r0, r3
 80091fc:	f001 feec 	bl	800afd8 <SDMMC_CmdStopTransfer>
 8009200:	4602      	mov	r2, r0
 8009202:	68fb      	ldr	r3, [r7, #12]
 8009204:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009206:	431a      	orrs	r2, r3
 8009208:	68fb      	ldr	r3, [r7, #12]
 800920a:	639a      	str	r2, [r3, #56]	@ 0x38
 800920c:	68fb      	ldr	r3, [r7, #12]
 800920e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009210:	2b00      	cmp	r3, #0
 8009212:	d103      	bne.n	800921c <SD_DMATxAbort+0x60>
 8009214:	68f8      	ldr	r0, [r7, #12]
 8009216:	f002 fb0f 	bl	800b838 <HAL_SD_AbortCallback>
 800921a:	e002      	b.n	8009222 <SD_DMATxAbort+0x66>
 800921c:	68f8      	ldr	r0, [r7, #12]
 800921e:	f7ff fd33 	bl	8008c88 <HAL_SD_ErrorCallback>
 8009222:	bf00      	nop
 8009224:	3710      	adds	r7, #16
 8009226:	46bd      	mov	sp, r7
 8009228:	bd80      	pop	{r7, pc}

0800922a <SD_DMARxAbort>:
 800922a:	b580      	push	{r7, lr}
 800922c:	b084      	sub	sp, #16
 800922e:	af00      	add	r7, sp, #0
 8009230:	6078      	str	r0, [r7, #4]
 8009232:	687b      	ldr	r3, [r7, #4]
 8009234:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009236:	60fb      	str	r3, [r7, #12]
 8009238:	68fb      	ldr	r3, [r7, #12]
 800923a:	681b      	ldr	r3, [r3, #0]
 800923c:	f240 523a 	movw	r2, #1338	@ 0x53a
 8009240:	639a      	str	r2, [r3, #56]	@ 0x38
 8009242:	68f8      	ldr	r0, [r7, #12]
 8009244:	f7ff fefa 	bl	800903c <HAL_SD_GetCardState>
 8009248:	60b8      	str	r0, [r7, #8]
 800924a:	68fb      	ldr	r3, [r7, #12]
 800924c:	2201      	movs	r2, #1
 800924e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8009252:	68fb      	ldr	r3, [r7, #12]
 8009254:	2200      	movs	r2, #0
 8009256:	631a      	str	r2, [r3, #48]	@ 0x30
 8009258:	68bb      	ldr	r3, [r7, #8]
 800925a:	2b06      	cmp	r3, #6
 800925c:	d002      	beq.n	8009264 <SD_DMARxAbort+0x3a>
 800925e:	68bb      	ldr	r3, [r7, #8]
 8009260:	2b05      	cmp	r3, #5
 8009262:	d10a      	bne.n	800927a <SD_DMARxAbort+0x50>
 8009264:	68fb      	ldr	r3, [r7, #12]
 8009266:	681b      	ldr	r3, [r3, #0]
 8009268:	4618      	mov	r0, r3
 800926a:	f001 feb5 	bl	800afd8 <SDMMC_CmdStopTransfer>
 800926e:	4602      	mov	r2, r0
 8009270:	68fb      	ldr	r3, [r7, #12]
 8009272:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009274:	431a      	orrs	r2, r3
 8009276:	68fb      	ldr	r3, [r7, #12]
 8009278:	639a      	str	r2, [r3, #56]	@ 0x38
 800927a:	68fb      	ldr	r3, [r7, #12]
 800927c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800927e:	2b00      	cmp	r3, #0
 8009280:	d103      	bne.n	800928a <SD_DMARxAbort+0x60>
 8009282:	68f8      	ldr	r0, [r7, #12]
 8009284:	f002 fad8 	bl	800b838 <HAL_SD_AbortCallback>
 8009288:	e002      	b.n	8009290 <SD_DMARxAbort+0x66>
 800928a:	68f8      	ldr	r0, [r7, #12]
 800928c:	f7ff fcfc 	bl	8008c88 <HAL_SD_ErrorCallback>
 8009290:	bf00      	nop
 8009292:	3710      	adds	r7, #16
 8009294:	46bd      	mov	sp, r7
 8009296:	bd80      	pop	{r7, pc}

08009298 <SD_InitCard>:
 8009298:	b5b0      	push	{r4, r5, r7, lr}
 800929a:	b094      	sub	sp, #80	@ 0x50
 800929c:	af04      	add	r7, sp, #16
 800929e:	6078      	str	r0, [r7, #4]
 80092a0:	2301      	movs	r3, #1
 80092a2:	81fb      	strh	r3, [r7, #14]
 80092a4:	687b      	ldr	r3, [r7, #4]
 80092a6:	681b      	ldr	r3, [r3, #0]
 80092a8:	4618      	mov	r0, r3
 80092aa:	f001 fd67 	bl	800ad7c <SDMMC_GetPowerState>
 80092ae:	4603      	mov	r3, r0
 80092b0:	2b00      	cmp	r3, #0
 80092b2:	d102      	bne.n	80092ba <SD_InitCard+0x22>
 80092b4:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
 80092b8:	e0b8      	b.n	800942c <SD_InitCard+0x194>
 80092ba:	687b      	ldr	r3, [r7, #4]
 80092bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80092be:	2b03      	cmp	r3, #3
 80092c0:	d02f      	beq.n	8009322 <SD_InitCard+0x8a>
 80092c2:	687b      	ldr	r3, [r7, #4]
 80092c4:	681b      	ldr	r3, [r3, #0]
 80092c6:	4618      	mov	r0, r3
 80092c8:	f001 ff4e 	bl	800b168 <SDMMC_CmdSendCID>
 80092cc:	63f8      	str	r0, [r7, #60]	@ 0x3c
 80092ce:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80092d0:	2b00      	cmp	r3, #0
 80092d2:	d001      	beq.n	80092d8 <SD_InitCard+0x40>
 80092d4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80092d6:	e0a9      	b.n	800942c <SD_InitCard+0x194>
 80092d8:	687b      	ldr	r3, [r7, #4]
 80092da:	681b      	ldr	r3, [r3, #0]
 80092dc:	2100      	movs	r1, #0
 80092de:	4618      	mov	r0, r3
 80092e0:	f001 fd91 	bl	800ae06 <SDMMC_GetResponse>
 80092e4:	4602      	mov	r2, r0
 80092e6:	687b      	ldr	r3, [r7, #4]
 80092e8:	675a      	str	r2, [r3, #116]	@ 0x74
 80092ea:	687b      	ldr	r3, [r7, #4]
 80092ec:	681b      	ldr	r3, [r3, #0]
 80092ee:	2104      	movs	r1, #4
 80092f0:	4618      	mov	r0, r3
 80092f2:	f001 fd88 	bl	800ae06 <SDMMC_GetResponse>
 80092f6:	4602      	mov	r2, r0
 80092f8:	687b      	ldr	r3, [r7, #4]
 80092fa:	679a      	str	r2, [r3, #120]	@ 0x78
 80092fc:	687b      	ldr	r3, [r7, #4]
 80092fe:	681b      	ldr	r3, [r3, #0]
 8009300:	2108      	movs	r1, #8
 8009302:	4618      	mov	r0, r3
 8009304:	f001 fd7f 	bl	800ae06 <SDMMC_GetResponse>
 8009308:	4602      	mov	r2, r0
 800930a:	687b      	ldr	r3, [r7, #4]
 800930c:	67da      	str	r2, [r3, #124]	@ 0x7c
 800930e:	687b      	ldr	r3, [r7, #4]
 8009310:	681b      	ldr	r3, [r3, #0]
 8009312:	210c      	movs	r1, #12
 8009314:	4618      	mov	r0, r3
 8009316:	f001 fd76 	bl	800ae06 <SDMMC_GetResponse>
 800931a:	4602      	mov	r2, r0
 800931c:	687b      	ldr	r3, [r7, #4]
 800931e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8009322:	687b      	ldr	r3, [r7, #4]
 8009324:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8009326:	2b03      	cmp	r3, #3
 8009328:	d00d      	beq.n	8009346 <SD_InitCard+0xae>
 800932a:	687b      	ldr	r3, [r7, #4]
 800932c:	681b      	ldr	r3, [r3, #0]
 800932e:	f107 020e 	add.w	r2, r7, #14
 8009332:	4611      	mov	r1, r2
 8009334:	4618      	mov	r0, r3
 8009336:	f001 ff54 	bl	800b1e2 <SDMMC_CmdSetRelAdd>
 800933a:	63f8      	str	r0, [r7, #60]	@ 0x3c
 800933c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800933e:	2b00      	cmp	r3, #0
 8009340:	d001      	beq.n	8009346 <SD_InitCard+0xae>
 8009342:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8009344:	e072      	b.n	800942c <SD_InitCard+0x194>
 8009346:	687b      	ldr	r3, [r7, #4]
 8009348:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800934a:	2b03      	cmp	r3, #3
 800934c:	d036      	beq.n	80093bc <SD_InitCard+0x124>
 800934e:	89fb      	ldrh	r3, [r7, #14]
 8009350:	461a      	mov	r2, r3
 8009352:	687b      	ldr	r3, [r7, #4]
 8009354:	651a      	str	r2, [r3, #80]	@ 0x50
 8009356:	687b      	ldr	r3, [r7, #4]
 8009358:	681a      	ldr	r2, [r3, #0]
 800935a:	687b      	ldr	r3, [r7, #4]
 800935c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800935e:	041b      	lsls	r3, r3, #16
 8009360:	4619      	mov	r1, r3
 8009362:	4610      	mov	r0, r2
 8009364:	f001 ff1e 	bl	800b1a4 <SDMMC_CmdSendCSD>
 8009368:	63f8      	str	r0, [r7, #60]	@ 0x3c
 800936a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800936c:	2b00      	cmp	r3, #0
 800936e:	d001      	beq.n	8009374 <SD_InitCard+0xdc>
 8009370:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8009372:	e05b      	b.n	800942c <SD_InitCard+0x194>
 8009374:	687b      	ldr	r3, [r7, #4]
 8009376:	681b      	ldr	r3, [r3, #0]
 8009378:	2100      	movs	r1, #0
 800937a:	4618      	mov	r0, r3
 800937c:	f001 fd43 	bl	800ae06 <SDMMC_GetResponse>
 8009380:	4602      	mov	r2, r0
 8009382:	687b      	ldr	r3, [r7, #4]
 8009384:	665a      	str	r2, [r3, #100]	@ 0x64
 8009386:	687b      	ldr	r3, [r7, #4]
 8009388:	681b      	ldr	r3, [r3, #0]
 800938a:	2104      	movs	r1, #4
 800938c:	4618      	mov	r0, r3
 800938e:	f001 fd3a 	bl	800ae06 <SDMMC_GetResponse>
 8009392:	4602      	mov	r2, r0
 8009394:	687b      	ldr	r3, [r7, #4]
 8009396:	669a      	str	r2, [r3, #104]	@ 0x68
 8009398:	687b      	ldr	r3, [r7, #4]
 800939a:	681b      	ldr	r3, [r3, #0]
 800939c:	2108      	movs	r1, #8
 800939e:	4618      	mov	r0, r3
 80093a0:	f001 fd31 	bl	800ae06 <SDMMC_GetResponse>
 80093a4:	4602      	mov	r2, r0
 80093a6:	687b      	ldr	r3, [r7, #4]
 80093a8:	66da      	str	r2, [r3, #108]	@ 0x6c
 80093aa:	687b      	ldr	r3, [r7, #4]
 80093ac:	681b      	ldr	r3, [r3, #0]
 80093ae:	210c      	movs	r1, #12
 80093b0:	4618      	mov	r0, r3
 80093b2:	f001 fd28 	bl	800ae06 <SDMMC_GetResponse>
 80093b6:	4602      	mov	r2, r0
 80093b8:	687b      	ldr	r3, [r7, #4]
 80093ba:	671a      	str	r2, [r3, #112]	@ 0x70
 80093bc:	687b      	ldr	r3, [r7, #4]
 80093be:	681b      	ldr	r3, [r3, #0]
 80093c0:	2104      	movs	r1, #4
 80093c2:	4618      	mov	r0, r3
 80093c4:	f001 fd1f 	bl	800ae06 <SDMMC_GetResponse>
 80093c8:	4603      	mov	r3, r0
 80093ca:	0d1a      	lsrs	r2, r3, #20
 80093cc:	687b      	ldr	r3, [r7, #4]
 80093ce:	64da      	str	r2, [r3, #76]	@ 0x4c
 80093d0:	f107 0310 	add.w	r3, r7, #16
 80093d4:	4619      	mov	r1, r3
 80093d6:	6878      	ldr	r0, [r7, #4]
 80093d8:	f7ff fc60 	bl	8008c9c <HAL_SD_GetCardCSD>
 80093dc:	4603      	mov	r3, r0
 80093de:	2b00      	cmp	r3, #0
 80093e0:	d002      	beq.n	80093e8 <SD_InitCard+0x150>
 80093e2:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 80093e6:	e021      	b.n	800942c <SD_InitCard+0x194>
 80093e8:	687b      	ldr	r3, [r7, #4]
 80093ea:	6819      	ldr	r1, [r3, #0]
 80093ec:	687b      	ldr	r3, [r7, #4]
 80093ee:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80093f0:	041b      	lsls	r3, r3, #16
 80093f2:	2200      	movs	r2, #0
 80093f4:	461c      	mov	r4, r3
 80093f6:	4615      	mov	r5, r2
 80093f8:	4622      	mov	r2, r4
 80093fa:	462b      	mov	r3, r5
 80093fc:	4608      	mov	r0, r1
 80093fe:	f001 fe0d 	bl	800b01c <SDMMC_CmdSelDesel>
 8009402:	63f8      	str	r0, [r7, #60]	@ 0x3c
 8009404:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8009406:	2b00      	cmp	r3, #0
 8009408:	d001      	beq.n	800940e <SD_InitCard+0x176>
 800940a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800940c:	e00e      	b.n	800942c <SD_InitCard+0x194>
 800940e:	687b      	ldr	r3, [r7, #4]
 8009410:	681d      	ldr	r5, [r3, #0]
 8009412:	687b      	ldr	r3, [r7, #4]
 8009414:	466c      	mov	r4, sp
 8009416:	f103 0210 	add.w	r2, r3, #16
 800941a:	ca07      	ldmia	r2, {r0, r1, r2}
 800941c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8009420:	3304      	adds	r3, #4
 8009422:	cb0e      	ldmia	r3, {r1, r2, r3}
 8009424:	4628      	mov	r0, r5
 8009426:	f001 fc51 	bl	800accc <SDMMC_Init>
 800942a:	2300      	movs	r3, #0
 800942c:	4618      	mov	r0, r3
 800942e:	3740      	adds	r7, #64	@ 0x40
 8009430:	46bd      	mov	sp, r7
 8009432:	bdb0      	pop	{r4, r5, r7, pc}

08009434 <SD_PowerON>:
 8009434:	b580      	push	{r7, lr}
 8009436:	b086      	sub	sp, #24
 8009438:	af00      	add	r7, sp, #0
 800943a:	6078      	str	r0, [r7, #4]
 800943c:	2300      	movs	r3, #0
 800943e:	60bb      	str	r3, [r7, #8]
 8009440:	2300      	movs	r3, #0
 8009442:	617b      	str	r3, [r7, #20]
 8009444:	2300      	movs	r3, #0
 8009446:	613b      	str	r3, [r7, #16]
 8009448:	687b      	ldr	r3, [r7, #4]
 800944a:	681b      	ldr	r3, [r3, #0]
 800944c:	4618      	mov	r0, r3
 800944e:	f001 fe08 	bl	800b062 <SDMMC_CmdGoIdleState>
 8009452:	60f8      	str	r0, [r7, #12]
 8009454:	68fb      	ldr	r3, [r7, #12]
 8009456:	2b00      	cmp	r3, #0
 8009458:	d001      	beq.n	800945e <SD_PowerON+0x2a>
 800945a:	68fb      	ldr	r3, [r7, #12]
 800945c:	e072      	b.n	8009544 <SD_PowerON+0x110>
 800945e:	687b      	ldr	r3, [r7, #4]
 8009460:	681b      	ldr	r3, [r3, #0]
 8009462:	4618      	mov	r0, r3
 8009464:	f001 fe1b 	bl	800b09e <SDMMC_CmdOperCond>
 8009468:	60f8      	str	r0, [r7, #12]
 800946a:	68fb      	ldr	r3, [r7, #12]
 800946c:	2b00      	cmp	r3, #0
 800946e:	d00d      	beq.n	800948c <SD_PowerON+0x58>
 8009470:	687b      	ldr	r3, [r7, #4]
 8009472:	2200      	movs	r2, #0
 8009474:	649a      	str	r2, [r3, #72]	@ 0x48
 8009476:	687b      	ldr	r3, [r7, #4]
 8009478:	681b      	ldr	r3, [r3, #0]
 800947a:	4618      	mov	r0, r3
 800947c:	f001 fdf1 	bl	800b062 <SDMMC_CmdGoIdleState>
 8009480:	60f8      	str	r0, [r7, #12]
 8009482:	68fb      	ldr	r3, [r7, #12]
 8009484:	2b00      	cmp	r3, #0
 8009486:	d004      	beq.n	8009492 <SD_PowerON+0x5e>
 8009488:	68fb      	ldr	r3, [r7, #12]
 800948a:	e05b      	b.n	8009544 <SD_PowerON+0x110>
 800948c:	687b      	ldr	r3, [r7, #4]
 800948e:	2201      	movs	r2, #1
 8009490:	649a      	str	r2, [r3, #72]	@ 0x48
 8009492:	687b      	ldr	r3, [r7, #4]
 8009494:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8009496:	2b01      	cmp	r3, #1
 8009498:	d137      	bne.n	800950a <SD_PowerON+0xd6>
 800949a:	687b      	ldr	r3, [r7, #4]
 800949c:	681b      	ldr	r3, [r3, #0]
 800949e:	2100      	movs	r1, #0
 80094a0:	4618      	mov	r0, r3
 80094a2:	f001 fe1b 	bl	800b0dc <SDMMC_CmdAppCommand>
 80094a6:	60f8      	str	r0, [r7, #12]
 80094a8:	68fb      	ldr	r3, [r7, #12]
 80094aa:	2b00      	cmp	r3, #0
 80094ac:	d02d      	beq.n	800950a <SD_PowerON+0xd6>
 80094ae:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 80094b2:	e047      	b.n	8009544 <SD_PowerON+0x110>
 80094b4:	687b      	ldr	r3, [r7, #4]
 80094b6:	681b      	ldr	r3, [r3, #0]
 80094b8:	2100      	movs	r1, #0
 80094ba:	4618      	mov	r0, r3
 80094bc:	f001 fe0e 	bl	800b0dc <SDMMC_CmdAppCommand>
 80094c0:	60f8      	str	r0, [r7, #12]
 80094c2:	68fb      	ldr	r3, [r7, #12]
 80094c4:	2b00      	cmp	r3, #0
 80094c6:	d001      	beq.n	80094cc <SD_PowerON+0x98>
 80094c8:	68fb      	ldr	r3, [r7, #12]
 80094ca:	e03b      	b.n	8009544 <SD_PowerON+0x110>
 80094cc:	687b      	ldr	r3, [r7, #4]
 80094ce:	681b      	ldr	r3, [r3, #0]
 80094d0:	491e      	ldr	r1, [pc, #120]	@ (800954c <SD_PowerON+0x118>)
 80094d2:	4618      	mov	r0, r3
 80094d4:	f001 fe24 	bl	800b120 <SDMMC_CmdAppOperCommand>
 80094d8:	60f8      	str	r0, [r7, #12]
 80094da:	68fb      	ldr	r3, [r7, #12]
 80094dc:	2b00      	cmp	r3, #0
 80094de:	d002      	beq.n	80094e6 <SD_PowerON+0xb2>
 80094e0:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 80094e4:	e02e      	b.n	8009544 <SD_PowerON+0x110>
 80094e6:	687b      	ldr	r3, [r7, #4]
 80094e8:	681b      	ldr	r3, [r3, #0]
 80094ea:	2100      	movs	r1, #0
 80094ec:	4618      	mov	r0, r3
 80094ee:	f001 fc8a 	bl	800ae06 <SDMMC_GetResponse>
 80094f2:	6178      	str	r0, [r7, #20]
 80094f4:	697b      	ldr	r3, [r7, #20]
 80094f6:	0fdb      	lsrs	r3, r3, #31
 80094f8:	2b01      	cmp	r3, #1
 80094fa:	d101      	bne.n	8009500 <SD_PowerON+0xcc>
 80094fc:	2301      	movs	r3, #1
 80094fe:	e000      	b.n	8009502 <SD_PowerON+0xce>
 8009500:	2300      	movs	r3, #0
 8009502:	613b      	str	r3, [r7, #16]
 8009504:	68bb      	ldr	r3, [r7, #8]
 8009506:	3301      	adds	r3, #1
 8009508:	60bb      	str	r3, [r7, #8]
 800950a:	68bb      	ldr	r3, [r7, #8]
 800950c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8009510:	4293      	cmp	r3, r2
 8009512:	d802      	bhi.n	800951a <SD_PowerON+0xe6>
 8009514:	693b      	ldr	r3, [r7, #16]
 8009516:	2b00      	cmp	r3, #0
 8009518:	d0cc      	beq.n	80094b4 <SD_PowerON+0x80>
 800951a:	68bb      	ldr	r3, [r7, #8]
 800951c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8009520:	4293      	cmp	r3, r2
 8009522:	d902      	bls.n	800952a <SD_PowerON+0xf6>
 8009524:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8009528:	e00c      	b.n	8009544 <SD_PowerON+0x110>
 800952a:	697b      	ldr	r3, [r7, #20]
 800952c:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8009530:	2b00      	cmp	r3, #0
 8009532:	d003      	beq.n	800953c <SD_PowerON+0x108>
 8009534:	687b      	ldr	r3, [r7, #4]
 8009536:	2201      	movs	r2, #1
 8009538:	645a      	str	r2, [r3, #68]	@ 0x44
 800953a:	e002      	b.n	8009542 <SD_PowerON+0x10e>
 800953c:	687b      	ldr	r3, [r7, #4]
 800953e:	2200      	movs	r2, #0
 8009540:	645a      	str	r2, [r3, #68]	@ 0x44
 8009542:	2300      	movs	r3, #0
 8009544:	4618      	mov	r0, r3
 8009546:	3718      	adds	r7, #24
 8009548:	46bd      	mov	sp, r7
 800954a:	bd80      	pop	{r7, pc}
 800954c:	c1100000 	.word	0xc1100000

08009550 <SD_SendStatus>:
 8009550:	b580      	push	{r7, lr}
 8009552:	b084      	sub	sp, #16
 8009554:	af00      	add	r7, sp, #0
 8009556:	6078      	str	r0, [r7, #4]
 8009558:	6039      	str	r1, [r7, #0]
 800955a:	683b      	ldr	r3, [r7, #0]
 800955c:	2b00      	cmp	r3, #0
 800955e:	d102      	bne.n	8009566 <SD_SendStatus+0x16>
 8009560:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8009564:	e018      	b.n	8009598 <SD_SendStatus+0x48>
 8009566:	687b      	ldr	r3, [r7, #4]
 8009568:	681a      	ldr	r2, [r3, #0]
 800956a:	687b      	ldr	r3, [r7, #4]
 800956c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800956e:	041b      	lsls	r3, r3, #16
 8009570:	4619      	mov	r1, r3
 8009572:	4610      	mov	r0, r2
 8009574:	f001 fe56 	bl	800b224 <SDMMC_CmdSendStatus>
 8009578:	60f8      	str	r0, [r7, #12]
 800957a:	68fb      	ldr	r3, [r7, #12]
 800957c:	2b00      	cmp	r3, #0
 800957e:	d001      	beq.n	8009584 <SD_SendStatus+0x34>
 8009580:	68fb      	ldr	r3, [r7, #12]
 8009582:	e009      	b.n	8009598 <SD_SendStatus+0x48>
 8009584:	687b      	ldr	r3, [r7, #4]
 8009586:	681b      	ldr	r3, [r3, #0]
 8009588:	2100      	movs	r1, #0
 800958a:	4618      	mov	r0, r3
 800958c:	f001 fc3b 	bl	800ae06 <SDMMC_GetResponse>
 8009590:	4602      	mov	r2, r0
 8009592:	683b      	ldr	r3, [r7, #0]
 8009594:	601a      	str	r2, [r3, #0]
 8009596:	2300      	movs	r3, #0
 8009598:	4618      	mov	r0, r3
 800959a:	3710      	adds	r7, #16
 800959c:	46bd      	mov	sp, r7
 800959e:	bd80      	pop	{r7, pc}

080095a0 <SD_Read_IT>:
 80095a0:	b580      	push	{r7, lr}
 80095a2:	b086      	sub	sp, #24
 80095a4:	af00      	add	r7, sp, #0
 80095a6:	6078      	str	r0, [r7, #4]
 80095a8:	687b      	ldr	r3, [r7, #4]
 80095aa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80095ac:	60fb      	str	r3, [r7, #12]
 80095ae:	687b      	ldr	r3, [r7, #4]
 80095b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80095b2:	613b      	str	r3, [r7, #16]
 80095b4:	693b      	ldr	r3, [r7, #16]
 80095b6:	2b00      	cmp	r3, #0
 80095b8:	d03f      	beq.n	800963a <SD_Read_IT+0x9a>
 80095ba:	2300      	movs	r3, #0
 80095bc:	617b      	str	r3, [r7, #20]
 80095be:	e033      	b.n	8009628 <SD_Read_IT+0x88>
 80095c0:	687b      	ldr	r3, [r7, #4]
 80095c2:	681b      	ldr	r3, [r3, #0]
 80095c4:	4618      	mov	r0, r3
 80095c6:	f001 fbad 	bl	800ad24 <SDMMC_ReadFIFO>
 80095ca:	60b8      	str	r0, [r7, #8]
 80095cc:	68bb      	ldr	r3, [r7, #8]
 80095ce:	b2da      	uxtb	r2, r3
 80095d0:	68fb      	ldr	r3, [r7, #12]
 80095d2:	701a      	strb	r2, [r3, #0]
 80095d4:	68fb      	ldr	r3, [r7, #12]
 80095d6:	3301      	adds	r3, #1
 80095d8:	60fb      	str	r3, [r7, #12]
 80095da:	693b      	ldr	r3, [r7, #16]
 80095dc:	3b01      	subs	r3, #1
 80095de:	613b      	str	r3, [r7, #16]
 80095e0:	68bb      	ldr	r3, [r7, #8]
 80095e2:	0a1b      	lsrs	r3, r3, #8
 80095e4:	b2da      	uxtb	r2, r3
 80095e6:	68fb      	ldr	r3, [r7, #12]
 80095e8:	701a      	strb	r2, [r3, #0]
 80095ea:	68fb      	ldr	r3, [r7, #12]
 80095ec:	3301      	adds	r3, #1
 80095ee:	60fb      	str	r3, [r7, #12]
 80095f0:	693b      	ldr	r3, [r7, #16]
 80095f2:	3b01      	subs	r3, #1
 80095f4:	613b      	str	r3, [r7, #16]
 80095f6:	68bb      	ldr	r3, [r7, #8]
 80095f8:	0c1b      	lsrs	r3, r3, #16
 80095fa:	b2da      	uxtb	r2, r3
 80095fc:	68fb      	ldr	r3, [r7, #12]
 80095fe:	701a      	strb	r2, [r3, #0]
 8009600:	68fb      	ldr	r3, [r7, #12]
 8009602:	3301      	adds	r3, #1
 8009604:	60fb      	str	r3, [r7, #12]
 8009606:	693b      	ldr	r3, [r7, #16]
 8009608:	3b01      	subs	r3, #1
 800960a:	613b      	str	r3, [r7, #16]
 800960c:	68bb      	ldr	r3, [r7, #8]
 800960e:	0e1b      	lsrs	r3, r3, #24
 8009610:	b2da      	uxtb	r2, r3
 8009612:	68fb      	ldr	r3, [r7, #12]
 8009614:	701a      	strb	r2, [r3, #0]
 8009616:	68fb      	ldr	r3, [r7, #12]
 8009618:	3301      	adds	r3, #1
 800961a:	60fb      	str	r3, [r7, #12]
 800961c:	693b      	ldr	r3, [r7, #16]
 800961e:	3b01      	subs	r3, #1
 8009620:	613b      	str	r3, [r7, #16]
 8009622:	697b      	ldr	r3, [r7, #20]
 8009624:	3301      	adds	r3, #1
 8009626:	617b      	str	r3, [r7, #20]
 8009628:	697b      	ldr	r3, [r7, #20]
 800962a:	2b07      	cmp	r3, #7
 800962c:	d9c8      	bls.n	80095c0 <SD_Read_IT+0x20>
 800962e:	687b      	ldr	r3, [r7, #4]
 8009630:	68fa      	ldr	r2, [r7, #12]
 8009632:	629a      	str	r2, [r3, #40]	@ 0x28
 8009634:	687b      	ldr	r3, [r7, #4]
 8009636:	693a      	ldr	r2, [r7, #16]
 8009638:	62da      	str	r2, [r3, #44]	@ 0x2c
 800963a:	bf00      	nop
 800963c:	3718      	adds	r7, #24
 800963e:	46bd      	mov	sp, r7
 8009640:	bd80      	pop	{r7, pc}

08009642 <SD_Write_IT>:
 8009642:	b580      	push	{r7, lr}
 8009644:	b086      	sub	sp, #24
 8009646:	af00      	add	r7, sp, #0
 8009648:	6078      	str	r0, [r7, #4]
 800964a:	687b      	ldr	r3, [r7, #4]
 800964c:	6a1b      	ldr	r3, [r3, #32]
 800964e:	60fb      	str	r3, [r7, #12]
 8009650:	687b      	ldr	r3, [r7, #4]
 8009652:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009654:	613b      	str	r3, [r7, #16]
 8009656:	693b      	ldr	r3, [r7, #16]
 8009658:	2b00      	cmp	r3, #0
 800965a:	d043      	beq.n	80096e4 <SD_Write_IT+0xa2>
 800965c:	2300      	movs	r3, #0
 800965e:	617b      	str	r3, [r7, #20]
 8009660:	e037      	b.n	80096d2 <SD_Write_IT+0x90>
 8009662:	68fb      	ldr	r3, [r7, #12]
 8009664:	781b      	ldrb	r3, [r3, #0]
 8009666:	60bb      	str	r3, [r7, #8]
 8009668:	68fb      	ldr	r3, [r7, #12]
 800966a:	3301      	adds	r3, #1
 800966c:	60fb      	str	r3, [r7, #12]
 800966e:	693b      	ldr	r3, [r7, #16]
 8009670:	3b01      	subs	r3, #1
 8009672:	613b      	str	r3, [r7, #16]
 8009674:	68fb      	ldr	r3, [r7, #12]
 8009676:	781b      	ldrb	r3, [r3, #0]
 8009678:	021a      	lsls	r2, r3, #8
 800967a:	68bb      	ldr	r3, [r7, #8]
 800967c:	4313      	orrs	r3, r2
 800967e:	60bb      	str	r3, [r7, #8]
 8009680:	68fb      	ldr	r3, [r7, #12]
 8009682:	3301      	adds	r3, #1
 8009684:	60fb      	str	r3, [r7, #12]
 8009686:	693b      	ldr	r3, [r7, #16]
 8009688:	3b01      	subs	r3, #1
 800968a:	613b      	str	r3, [r7, #16]
 800968c:	68fb      	ldr	r3, [r7, #12]
 800968e:	781b      	ldrb	r3, [r3, #0]
 8009690:	041a      	lsls	r2, r3, #16
 8009692:	68bb      	ldr	r3, [r7, #8]
 8009694:	4313      	orrs	r3, r2
 8009696:	60bb      	str	r3, [r7, #8]
 8009698:	68fb      	ldr	r3, [r7, #12]
 800969a:	3301      	adds	r3, #1
 800969c:	60fb      	str	r3, [r7, #12]
 800969e:	693b      	ldr	r3, [r7, #16]
 80096a0:	3b01      	subs	r3, #1
 80096a2:	613b      	str	r3, [r7, #16]
 80096a4:	68fb      	ldr	r3, [r7, #12]
 80096a6:	781b      	ldrb	r3, [r3, #0]
 80096a8:	061a      	lsls	r2, r3, #24
 80096aa:	68bb      	ldr	r3, [r7, #8]
 80096ac:	4313      	orrs	r3, r2
 80096ae:	60bb      	str	r3, [r7, #8]
 80096b0:	68fb      	ldr	r3, [r7, #12]
 80096b2:	3301      	adds	r3, #1
 80096b4:	60fb      	str	r3, [r7, #12]
 80096b6:	693b      	ldr	r3, [r7, #16]
 80096b8:	3b01      	subs	r3, #1
 80096ba:	613b      	str	r3, [r7, #16]
 80096bc:	687b      	ldr	r3, [r7, #4]
 80096be:	681b      	ldr	r3, [r3, #0]
 80096c0:	f107 0208 	add.w	r2, r7, #8
 80096c4:	4611      	mov	r1, r2
 80096c6:	4618      	mov	r0, r3
 80096c8:	f001 fb39 	bl	800ad3e <SDMMC_WriteFIFO>
 80096cc:	697b      	ldr	r3, [r7, #20]
 80096ce:	3301      	adds	r3, #1
 80096d0:	617b      	str	r3, [r7, #20]
 80096d2:	697b      	ldr	r3, [r7, #20]
 80096d4:	2b07      	cmp	r3, #7
 80096d6:	d9c4      	bls.n	8009662 <SD_Write_IT+0x20>
 80096d8:	687b      	ldr	r3, [r7, #4]
 80096da:	68fa      	ldr	r2, [r7, #12]
 80096dc:	621a      	str	r2, [r3, #32]
 80096de:	687b      	ldr	r3, [r7, #4]
 80096e0:	693a      	ldr	r2, [r7, #16]
 80096e2:	625a      	str	r2, [r3, #36]	@ 0x24
 80096e4:	bf00      	nop
 80096e6:	3718      	adds	r7, #24
 80096e8:	46bd      	mov	sp, r7
 80096ea:	bd80      	pop	{r7, pc}

080096ec <HAL_SRAM_Init>:
 80096ec:	b580      	push	{r7, lr}
 80096ee:	b084      	sub	sp, #16
 80096f0:	af00      	add	r7, sp, #0
 80096f2:	60f8      	str	r0, [r7, #12]
 80096f4:	60b9      	str	r1, [r7, #8]
 80096f6:	607a      	str	r2, [r7, #4]
 80096f8:	68fb      	ldr	r3, [r7, #12]
 80096fa:	2b00      	cmp	r3, #0
 80096fc:	d101      	bne.n	8009702 <HAL_SRAM_Init+0x16>
 80096fe:	2301      	movs	r3, #1
 8009700:	e038      	b.n	8009774 <HAL_SRAM_Init+0x88>
 8009702:	68fb      	ldr	r3, [r7, #12]
 8009704:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8009708:	b2db      	uxtb	r3, r3
 800970a:	2b00      	cmp	r3, #0
 800970c:	d106      	bne.n	800971c <HAL_SRAM_Init+0x30>
 800970e:	68fb      	ldr	r3, [r7, #12]
 8009710:	2200      	movs	r2, #0
 8009712:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8009716:	68f8      	ldr	r0, [r7, #12]
 8009718:	f7fa f9f4 	bl	8003b04 <HAL_SRAM_MspInit>
 800971c:	68fb      	ldr	r3, [r7, #12]
 800971e:	681a      	ldr	r2, [r3, #0]
 8009720:	68fb      	ldr	r3, [r7, #12]
 8009722:	3308      	adds	r3, #8
 8009724:	4619      	mov	r1, r3
 8009726:	4610      	mov	r0, r2
 8009728:	f001 f9b8 	bl	800aa9c <FMC_NORSRAM_Init>
 800972c:	68fb      	ldr	r3, [r7, #12]
 800972e:	6818      	ldr	r0, [r3, #0]
 8009730:	68fb      	ldr	r3, [r7, #12]
 8009732:	689b      	ldr	r3, [r3, #8]
 8009734:	461a      	mov	r2, r3
 8009736:	68b9      	ldr	r1, [r7, #8]
 8009738:	f001 fa40 	bl	800abbc <FMC_NORSRAM_Timing_Init>
 800973c:	68fb      	ldr	r3, [r7, #12]
 800973e:	6858      	ldr	r0, [r3, #4]
 8009740:	68fb      	ldr	r3, [r7, #12]
 8009742:	689a      	ldr	r2, [r3, #8]
 8009744:	68fb      	ldr	r3, [r7, #12]
 8009746:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009748:	6879      	ldr	r1, [r7, #4]
 800974a:	f001 fa87 	bl	800ac5c <FMC_NORSRAM_Extended_Timing_Init>
 800974e:	68fb      	ldr	r3, [r7, #12]
 8009750:	681b      	ldr	r3, [r3, #0]
 8009752:	68fa      	ldr	r2, [r7, #12]
 8009754:	6892      	ldr	r2, [r2, #8]
 8009756:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800975a:	68fb      	ldr	r3, [r7, #12]
 800975c:	681b      	ldr	r3, [r3, #0]
 800975e:	68fa      	ldr	r2, [r7, #12]
 8009760:	6892      	ldr	r2, [r2, #8]
 8009762:	f041 0101 	orr.w	r1, r1, #1
 8009766:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800976a:	68fb      	ldr	r3, [r7, #12]
 800976c:	2201      	movs	r2, #1
 800976e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8009772:	2300      	movs	r3, #0
 8009774:	4618      	mov	r0, r3
 8009776:	3710      	adds	r7, #16
 8009778:	46bd      	mov	sp, r7
 800977a:	bd80      	pop	{r7, pc}

0800977c <HAL_TIM_Base_Init>:
 800977c:	b580      	push	{r7, lr}
 800977e:	b082      	sub	sp, #8
 8009780:	af00      	add	r7, sp, #0
 8009782:	6078      	str	r0, [r7, #4]
 8009784:	687b      	ldr	r3, [r7, #4]
 8009786:	2b00      	cmp	r3, #0
 8009788:	d101      	bne.n	800978e <HAL_TIM_Base_Init+0x12>
 800978a:	2301      	movs	r3, #1
 800978c:	e049      	b.n	8009822 <HAL_TIM_Base_Init+0xa6>
 800978e:	687b      	ldr	r3, [r7, #4]
 8009790:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8009794:	b2db      	uxtb	r3, r3
 8009796:	2b00      	cmp	r3, #0
 8009798:	d106      	bne.n	80097a8 <HAL_TIM_Base_Init+0x2c>
 800979a:	687b      	ldr	r3, [r7, #4]
 800979c:	2200      	movs	r2, #0
 800979e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80097a2:	6878      	ldr	r0, [r7, #4]
 80097a4:	f7f9 ffd6 	bl	8003754 <HAL_TIM_Base_MspInit>
 80097a8:	687b      	ldr	r3, [r7, #4]
 80097aa:	2202      	movs	r2, #2
 80097ac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80097b0:	687b      	ldr	r3, [r7, #4]
 80097b2:	681a      	ldr	r2, [r3, #0]
 80097b4:	687b      	ldr	r3, [r7, #4]
 80097b6:	3304      	adds	r3, #4
 80097b8:	4619      	mov	r1, r3
 80097ba:	4610      	mov	r0, r2
 80097bc:	f000 fa38 	bl	8009c30 <TIM_Base_SetConfig>
 80097c0:	687b      	ldr	r3, [r7, #4]
 80097c2:	2201      	movs	r2, #1
 80097c4:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 80097c8:	687b      	ldr	r3, [r7, #4]
 80097ca:	2201      	movs	r2, #1
 80097cc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80097d0:	687b      	ldr	r3, [r7, #4]
 80097d2:	2201      	movs	r2, #1
 80097d4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80097d8:	687b      	ldr	r3, [r7, #4]
 80097da:	2201      	movs	r2, #1
 80097dc:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80097e0:	687b      	ldr	r3, [r7, #4]
 80097e2:	2201      	movs	r2, #1
 80097e4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80097e8:	687b      	ldr	r3, [r7, #4]
 80097ea:	2201      	movs	r2, #1
 80097ec:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80097f0:	687b      	ldr	r3, [r7, #4]
 80097f2:	2201      	movs	r2, #1
 80097f4:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80097f8:	687b      	ldr	r3, [r7, #4]
 80097fa:	2201      	movs	r2, #1
 80097fc:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8009800:	687b      	ldr	r3, [r7, #4]
 8009802:	2201      	movs	r2, #1
 8009804:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8009808:	687b      	ldr	r3, [r7, #4]
 800980a:	2201      	movs	r2, #1
 800980c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8009810:	687b      	ldr	r3, [r7, #4]
 8009812:	2201      	movs	r2, #1
 8009814:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8009818:	687b      	ldr	r3, [r7, #4]
 800981a:	2201      	movs	r2, #1
 800981c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8009820:	2300      	movs	r3, #0
 8009822:	4618      	mov	r0, r3
 8009824:	3708      	adds	r7, #8
 8009826:	46bd      	mov	sp, r7
 8009828:	bd80      	pop	{r7, pc}
	...

0800982c <HAL_TIM_Base_Start_IT>:
 800982c:	b480      	push	{r7}
 800982e:	b085      	sub	sp, #20
 8009830:	af00      	add	r7, sp, #0
 8009832:	6078      	str	r0, [r7, #4]
 8009834:	687b      	ldr	r3, [r7, #4]
 8009836:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800983a:	b2db      	uxtb	r3, r3
 800983c:	2b01      	cmp	r3, #1
 800983e:	d001      	beq.n	8009844 <HAL_TIM_Base_Start_IT+0x18>
 8009840:	2301      	movs	r3, #1
 8009842:	e054      	b.n	80098ee <HAL_TIM_Base_Start_IT+0xc2>
 8009844:	687b      	ldr	r3, [r7, #4]
 8009846:	2202      	movs	r2, #2
 8009848:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800984c:	687b      	ldr	r3, [r7, #4]
 800984e:	681b      	ldr	r3, [r3, #0]
 8009850:	68da      	ldr	r2, [r3, #12]
 8009852:	687b      	ldr	r3, [r7, #4]
 8009854:	681b      	ldr	r3, [r3, #0]
 8009856:	f042 0201 	orr.w	r2, r2, #1
 800985a:	60da      	str	r2, [r3, #12]
 800985c:	687b      	ldr	r3, [r7, #4]
 800985e:	681b      	ldr	r3, [r3, #0]
 8009860:	4a26      	ldr	r2, [pc, #152]	@ (80098fc <HAL_TIM_Base_Start_IT+0xd0>)
 8009862:	4293      	cmp	r3, r2
 8009864:	d022      	beq.n	80098ac <HAL_TIM_Base_Start_IT+0x80>
 8009866:	687b      	ldr	r3, [r7, #4]
 8009868:	681b      	ldr	r3, [r3, #0]
 800986a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800986e:	d01d      	beq.n	80098ac <HAL_TIM_Base_Start_IT+0x80>
 8009870:	687b      	ldr	r3, [r7, #4]
 8009872:	681b      	ldr	r3, [r3, #0]
 8009874:	4a22      	ldr	r2, [pc, #136]	@ (8009900 <HAL_TIM_Base_Start_IT+0xd4>)
 8009876:	4293      	cmp	r3, r2
 8009878:	d018      	beq.n	80098ac <HAL_TIM_Base_Start_IT+0x80>
 800987a:	687b      	ldr	r3, [r7, #4]
 800987c:	681b      	ldr	r3, [r3, #0]
 800987e:	4a21      	ldr	r2, [pc, #132]	@ (8009904 <HAL_TIM_Base_Start_IT+0xd8>)
 8009880:	4293      	cmp	r3, r2
 8009882:	d013      	beq.n	80098ac <HAL_TIM_Base_Start_IT+0x80>
 8009884:	687b      	ldr	r3, [r7, #4]
 8009886:	681b      	ldr	r3, [r3, #0]
 8009888:	4a1f      	ldr	r2, [pc, #124]	@ (8009908 <HAL_TIM_Base_Start_IT+0xdc>)
 800988a:	4293      	cmp	r3, r2
 800988c:	d00e      	beq.n	80098ac <HAL_TIM_Base_Start_IT+0x80>
 800988e:	687b      	ldr	r3, [r7, #4]
 8009890:	681b      	ldr	r3, [r3, #0]
 8009892:	4a1e      	ldr	r2, [pc, #120]	@ (800990c <HAL_TIM_Base_Start_IT+0xe0>)
 8009894:	4293      	cmp	r3, r2
 8009896:	d009      	beq.n	80098ac <HAL_TIM_Base_Start_IT+0x80>
 8009898:	687b      	ldr	r3, [r7, #4]
 800989a:	681b      	ldr	r3, [r3, #0]
 800989c:	4a1c      	ldr	r2, [pc, #112]	@ (8009910 <HAL_TIM_Base_Start_IT+0xe4>)
 800989e:	4293      	cmp	r3, r2
 80098a0:	d004      	beq.n	80098ac <HAL_TIM_Base_Start_IT+0x80>
 80098a2:	687b      	ldr	r3, [r7, #4]
 80098a4:	681b      	ldr	r3, [r3, #0]
 80098a6:	4a1b      	ldr	r2, [pc, #108]	@ (8009914 <HAL_TIM_Base_Start_IT+0xe8>)
 80098a8:	4293      	cmp	r3, r2
 80098aa:	d115      	bne.n	80098d8 <HAL_TIM_Base_Start_IT+0xac>
 80098ac:	687b      	ldr	r3, [r7, #4]
 80098ae:	681b      	ldr	r3, [r3, #0]
 80098b0:	689a      	ldr	r2, [r3, #8]
 80098b2:	4b19      	ldr	r3, [pc, #100]	@ (8009918 <HAL_TIM_Base_Start_IT+0xec>)
 80098b4:	4013      	ands	r3, r2
 80098b6:	60fb      	str	r3, [r7, #12]
 80098b8:	68fb      	ldr	r3, [r7, #12]
 80098ba:	2b06      	cmp	r3, #6
 80098bc:	d015      	beq.n	80098ea <HAL_TIM_Base_Start_IT+0xbe>
 80098be:	68fb      	ldr	r3, [r7, #12]
 80098c0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80098c4:	d011      	beq.n	80098ea <HAL_TIM_Base_Start_IT+0xbe>
 80098c6:	687b      	ldr	r3, [r7, #4]
 80098c8:	681b      	ldr	r3, [r3, #0]
 80098ca:	681a      	ldr	r2, [r3, #0]
 80098cc:	687b      	ldr	r3, [r7, #4]
 80098ce:	681b      	ldr	r3, [r3, #0]
 80098d0:	f042 0201 	orr.w	r2, r2, #1
 80098d4:	601a      	str	r2, [r3, #0]
 80098d6:	e008      	b.n	80098ea <HAL_TIM_Base_Start_IT+0xbe>
 80098d8:	687b      	ldr	r3, [r7, #4]
 80098da:	681b      	ldr	r3, [r3, #0]
 80098dc:	681a      	ldr	r2, [r3, #0]
 80098de:	687b      	ldr	r3, [r7, #4]
 80098e0:	681b      	ldr	r3, [r3, #0]
 80098e2:	f042 0201 	orr.w	r2, r2, #1
 80098e6:	601a      	str	r2, [r3, #0]
 80098e8:	e000      	b.n	80098ec <HAL_TIM_Base_Start_IT+0xc0>
 80098ea:	bf00      	nop
 80098ec:	2300      	movs	r3, #0
 80098ee:	4618      	mov	r0, r3
 80098f0:	3714      	adds	r7, #20
 80098f2:	46bd      	mov	sp, r7
 80098f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098f8:	4770      	bx	lr
 80098fa:	bf00      	nop
 80098fc:	40010000 	.word	0x40010000
 8009900:	40000400 	.word	0x40000400
 8009904:	40000800 	.word	0x40000800
 8009908:	40000c00 	.word	0x40000c00
 800990c:	40010400 	.word	0x40010400
 8009910:	40014000 	.word	0x40014000
 8009914:	40001800 	.word	0x40001800
 8009918:	00010007 	.word	0x00010007

0800991c <HAL_TIM_IRQHandler>:
 800991c:	b580      	push	{r7, lr}
 800991e:	b082      	sub	sp, #8
 8009920:	af00      	add	r7, sp, #0
 8009922:	6078      	str	r0, [r7, #4]
 8009924:	687b      	ldr	r3, [r7, #4]
 8009926:	681b      	ldr	r3, [r3, #0]
 8009928:	691b      	ldr	r3, [r3, #16]
 800992a:	f003 0302 	and.w	r3, r3, #2
 800992e:	2b02      	cmp	r3, #2
 8009930:	d122      	bne.n	8009978 <HAL_TIM_IRQHandler+0x5c>
 8009932:	687b      	ldr	r3, [r7, #4]
 8009934:	681b      	ldr	r3, [r3, #0]
 8009936:	68db      	ldr	r3, [r3, #12]
 8009938:	f003 0302 	and.w	r3, r3, #2
 800993c:	2b02      	cmp	r3, #2
 800993e:	d11b      	bne.n	8009978 <HAL_TIM_IRQHandler+0x5c>
 8009940:	687b      	ldr	r3, [r7, #4]
 8009942:	681b      	ldr	r3, [r3, #0]
 8009944:	f06f 0202 	mvn.w	r2, #2
 8009948:	611a      	str	r2, [r3, #16]
 800994a:	687b      	ldr	r3, [r7, #4]
 800994c:	2201      	movs	r2, #1
 800994e:	771a      	strb	r2, [r3, #28]
 8009950:	687b      	ldr	r3, [r7, #4]
 8009952:	681b      	ldr	r3, [r3, #0]
 8009954:	699b      	ldr	r3, [r3, #24]
 8009956:	f003 0303 	and.w	r3, r3, #3
 800995a:	2b00      	cmp	r3, #0
 800995c:	d003      	beq.n	8009966 <HAL_TIM_IRQHandler+0x4a>
 800995e:	6878      	ldr	r0, [r7, #4]
 8009960:	f000 f947 	bl	8009bf2 <HAL_TIM_IC_CaptureCallback>
 8009964:	e005      	b.n	8009972 <HAL_TIM_IRQHandler+0x56>
 8009966:	6878      	ldr	r0, [r7, #4]
 8009968:	f000 f939 	bl	8009bde <HAL_TIM_OC_DelayElapsedCallback>
 800996c:	6878      	ldr	r0, [r7, #4]
 800996e:	f000 f94a 	bl	8009c06 <HAL_TIM_PWM_PulseFinishedCallback>
 8009972:	687b      	ldr	r3, [r7, #4]
 8009974:	2200      	movs	r2, #0
 8009976:	771a      	strb	r2, [r3, #28]
 8009978:	687b      	ldr	r3, [r7, #4]
 800997a:	681b      	ldr	r3, [r3, #0]
 800997c:	691b      	ldr	r3, [r3, #16]
 800997e:	f003 0304 	and.w	r3, r3, #4
 8009982:	2b04      	cmp	r3, #4
 8009984:	d122      	bne.n	80099cc <HAL_TIM_IRQHandler+0xb0>
 8009986:	687b      	ldr	r3, [r7, #4]
 8009988:	681b      	ldr	r3, [r3, #0]
 800998a:	68db      	ldr	r3, [r3, #12]
 800998c:	f003 0304 	and.w	r3, r3, #4
 8009990:	2b04      	cmp	r3, #4
 8009992:	d11b      	bne.n	80099cc <HAL_TIM_IRQHandler+0xb0>
 8009994:	687b      	ldr	r3, [r7, #4]
 8009996:	681b      	ldr	r3, [r3, #0]
 8009998:	f06f 0204 	mvn.w	r2, #4
 800999c:	611a      	str	r2, [r3, #16]
 800999e:	687b      	ldr	r3, [r7, #4]
 80099a0:	2202      	movs	r2, #2
 80099a2:	771a      	strb	r2, [r3, #28]
 80099a4:	687b      	ldr	r3, [r7, #4]
 80099a6:	681b      	ldr	r3, [r3, #0]
 80099a8:	699b      	ldr	r3, [r3, #24]
 80099aa:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80099ae:	2b00      	cmp	r3, #0
 80099b0:	d003      	beq.n	80099ba <HAL_TIM_IRQHandler+0x9e>
 80099b2:	6878      	ldr	r0, [r7, #4]
 80099b4:	f000 f91d 	bl	8009bf2 <HAL_TIM_IC_CaptureCallback>
 80099b8:	e005      	b.n	80099c6 <HAL_TIM_IRQHandler+0xaa>
 80099ba:	6878      	ldr	r0, [r7, #4]
 80099bc:	f000 f90f 	bl	8009bde <HAL_TIM_OC_DelayElapsedCallback>
 80099c0:	6878      	ldr	r0, [r7, #4]
 80099c2:	f000 f920 	bl	8009c06 <HAL_TIM_PWM_PulseFinishedCallback>
 80099c6:	687b      	ldr	r3, [r7, #4]
 80099c8:	2200      	movs	r2, #0
 80099ca:	771a      	strb	r2, [r3, #28]
 80099cc:	687b      	ldr	r3, [r7, #4]
 80099ce:	681b      	ldr	r3, [r3, #0]
 80099d0:	691b      	ldr	r3, [r3, #16]
 80099d2:	f003 0308 	and.w	r3, r3, #8
 80099d6:	2b08      	cmp	r3, #8
 80099d8:	d122      	bne.n	8009a20 <HAL_TIM_IRQHandler+0x104>
 80099da:	687b      	ldr	r3, [r7, #4]
 80099dc:	681b      	ldr	r3, [r3, #0]
 80099de:	68db      	ldr	r3, [r3, #12]
 80099e0:	f003 0308 	and.w	r3, r3, #8
 80099e4:	2b08      	cmp	r3, #8
 80099e6:	d11b      	bne.n	8009a20 <HAL_TIM_IRQHandler+0x104>
 80099e8:	687b      	ldr	r3, [r7, #4]
 80099ea:	681b      	ldr	r3, [r3, #0]
 80099ec:	f06f 0208 	mvn.w	r2, #8
 80099f0:	611a      	str	r2, [r3, #16]
 80099f2:	687b      	ldr	r3, [r7, #4]
 80099f4:	2204      	movs	r2, #4
 80099f6:	771a      	strb	r2, [r3, #28]
 80099f8:	687b      	ldr	r3, [r7, #4]
 80099fa:	681b      	ldr	r3, [r3, #0]
 80099fc:	69db      	ldr	r3, [r3, #28]
 80099fe:	f003 0303 	and.w	r3, r3, #3
 8009a02:	2b00      	cmp	r3, #0
 8009a04:	d003      	beq.n	8009a0e <HAL_TIM_IRQHandler+0xf2>
 8009a06:	6878      	ldr	r0, [r7, #4]
 8009a08:	f000 f8f3 	bl	8009bf2 <HAL_TIM_IC_CaptureCallback>
 8009a0c:	e005      	b.n	8009a1a <HAL_TIM_IRQHandler+0xfe>
 8009a0e:	6878      	ldr	r0, [r7, #4]
 8009a10:	f000 f8e5 	bl	8009bde <HAL_TIM_OC_DelayElapsedCallback>
 8009a14:	6878      	ldr	r0, [r7, #4]
 8009a16:	f000 f8f6 	bl	8009c06 <HAL_TIM_PWM_PulseFinishedCallback>
 8009a1a:	687b      	ldr	r3, [r7, #4]
 8009a1c:	2200      	movs	r2, #0
 8009a1e:	771a      	strb	r2, [r3, #28]
 8009a20:	687b      	ldr	r3, [r7, #4]
 8009a22:	681b      	ldr	r3, [r3, #0]
 8009a24:	691b      	ldr	r3, [r3, #16]
 8009a26:	f003 0310 	and.w	r3, r3, #16
 8009a2a:	2b10      	cmp	r3, #16
 8009a2c:	d122      	bne.n	8009a74 <HAL_TIM_IRQHandler+0x158>
 8009a2e:	687b      	ldr	r3, [r7, #4]
 8009a30:	681b      	ldr	r3, [r3, #0]
 8009a32:	68db      	ldr	r3, [r3, #12]
 8009a34:	f003 0310 	and.w	r3, r3, #16
 8009a38:	2b10      	cmp	r3, #16
 8009a3a:	d11b      	bne.n	8009a74 <HAL_TIM_IRQHandler+0x158>
 8009a3c:	687b      	ldr	r3, [r7, #4]
 8009a3e:	681b      	ldr	r3, [r3, #0]
 8009a40:	f06f 0210 	mvn.w	r2, #16
 8009a44:	611a      	str	r2, [r3, #16]
 8009a46:	687b      	ldr	r3, [r7, #4]
 8009a48:	2208      	movs	r2, #8
 8009a4a:	771a      	strb	r2, [r3, #28]
 8009a4c:	687b      	ldr	r3, [r7, #4]
 8009a4e:	681b      	ldr	r3, [r3, #0]
 8009a50:	69db      	ldr	r3, [r3, #28]
 8009a52:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8009a56:	2b00      	cmp	r3, #0
 8009a58:	d003      	beq.n	8009a62 <HAL_TIM_IRQHandler+0x146>
 8009a5a:	6878      	ldr	r0, [r7, #4]
 8009a5c:	f000 f8c9 	bl	8009bf2 <HAL_TIM_IC_CaptureCallback>
 8009a60:	e005      	b.n	8009a6e <HAL_TIM_IRQHandler+0x152>
 8009a62:	6878      	ldr	r0, [r7, #4]
 8009a64:	f000 f8bb 	bl	8009bde <HAL_TIM_OC_DelayElapsedCallback>
 8009a68:	6878      	ldr	r0, [r7, #4]
 8009a6a:	f000 f8cc 	bl	8009c06 <HAL_TIM_PWM_PulseFinishedCallback>
 8009a6e:	687b      	ldr	r3, [r7, #4]
 8009a70:	2200      	movs	r2, #0
 8009a72:	771a      	strb	r2, [r3, #28]
 8009a74:	687b      	ldr	r3, [r7, #4]
 8009a76:	681b      	ldr	r3, [r3, #0]
 8009a78:	691b      	ldr	r3, [r3, #16]
 8009a7a:	f003 0301 	and.w	r3, r3, #1
 8009a7e:	2b01      	cmp	r3, #1
 8009a80:	d10e      	bne.n	8009aa0 <HAL_TIM_IRQHandler+0x184>
 8009a82:	687b      	ldr	r3, [r7, #4]
 8009a84:	681b      	ldr	r3, [r3, #0]
 8009a86:	68db      	ldr	r3, [r3, #12]
 8009a88:	f003 0301 	and.w	r3, r3, #1
 8009a8c:	2b01      	cmp	r3, #1
 8009a8e:	d107      	bne.n	8009aa0 <HAL_TIM_IRQHandler+0x184>
 8009a90:	687b      	ldr	r3, [r7, #4]
 8009a92:	681b      	ldr	r3, [r3, #0]
 8009a94:	f06f 0201 	mvn.w	r2, #1
 8009a98:	611a      	str	r2, [r3, #16]
 8009a9a:	6878      	ldr	r0, [r7, #4]
 8009a9c:	f7f8 fa40 	bl	8001f20 <HAL_TIM_PeriodElapsedCallback>
 8009aa0:	687b      	ldr	r3, [r7, #4]
 8009aa2:	681b      	ldr	r3, [r3, #0]
 8009aa4:	691b      	ldr	r3, [r3, #16]
 8009aa6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8009aaa:	2b80      	cmp	r3, #128	@ 0x80
 8009aac:	d10e      	bne.n	8009acc <HAL_TIM_IRQHandler+0x1b0>
 8009aae:	687b      	ldr	r3, [r7, #4]
 8009ab0:	681b      	ldr	r3, [r3, #0]
 8009ab2:	68db      	ldr	r3, [r3, #12]
 8009ab4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8009ab8:	2b80      	cmp	r3, #128	@ 0x80
 8009aba:	d107      	bne.n	8009acc <HAL_TIM_IRQHandler+0x1b0>
 8009abc:	687b      	ldr	r3, [r7, #4]
 8009abe:	681b      	ldr	r3, [r3, #0]
 8009ac0:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8009ac4:	611a      	str	r2, [r3, #16]
 8009ac6:	6878      	ldr	r0, [r7, #4]
 8009ac8:	f000 fafe 	bl	800a0c8 <HAL_TIMEx_BreakCallback>
 8009acc:	687b      	ldr	r3, [r7, #4]
 8009ace:	681b      	ldr	r3, [r3, #0]
 8009ad0:	691b      	ldr	r3, [r3, #16]
 8009ad2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8009ad6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8009ada:	d10e      	bne.n	8009afa <HAL_TIM_IRQHandler+0x1de>
 8009adc:	687b      	ldr	r3, [r7, #4]
 8009ade:	681b      	ldr	r3, [r3, #0]
 8009ae0:	68db      	ldr	r3, [r3, #12]
 8009ae2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8009ae6:	2b80      	cmp	r3, #128	@ 0x80
 8009ae8:	d107      	bne.n	8009afa <HAL_TIM_IRQHandler+0x1de>
 8009aea:	687b      	ldr	r3, [r7, #4]
 8009aec:	681b      	ldr	r3, [r3, #0]
 8009aee:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8009af2:	611a      	str	r2, [r3, #16]
 8009af4:	6878      	ldr	r0, [r7, #4]
 8009af6:	f000 faf1 	bl	800a0dc <HAL_TIMEx_Break2Callback>
 8009afa:	687b      	ldr	r3, [r7, #4]
 8009afc:	681b      	ldr	r3, [r3, #0]
 8009afe:	691b      	ldr	r3, [r3, #16]
 8009b00:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009b04:	2b40      	cmp	r3, #64	@ 0x40
 8009b06:	d10e      	bne.n	8009b26 <HAL_TIM_IRQHandler+0x20a>
 8009b08:	687b      	ldr	r3, [r7, #4]
 8009b0a:	681b      	ldr	r3, [r3, #0]
 8009b0c:	68db      	ldr	r3, [r3, #12]
 8009b0e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009b12:	2b40      	cmp	r3, #64	@ 0x40
 8009b14:	d107      	bne.n	8009b26 <HAL_TIM_IRQHandler+0x20a>
 8009b16:	687b      	ldr	r3, [r7, #4]
 8009b18:	681b      	ldr	r3, [r3, #0]
 8009b1a:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8009b1e:	611a      	str	r2, [r3, #16]
 8009b20:	6878      	ldr	r0, [r7, #4]
 8009b22:	f000 f87a 	bl	8009c1a <HAL_TIM_TriggerCallback>
 8009b26:	687b      	ldr	r3, [r7, #4]
 8009b28:	681b      	ldr	r3, [r3, #0]
 8009b2a:	691b      	ldr	r3, [r3, #16]
 8009b2c:	f003 0320 	and.w	r3, r3, #32
 8009b30:	2b20      	cmp	r3, #32
 8009b32:	d10e      	bne.n	8009b52 <HAL_TIM_IRQHandler+0x236>
 8009b34:	687b      	ldr	r3, [r7, #4]
 8009b36:	681b      	ldr	r3, [r3, #0]
 8009b38:	68db      	ldr	r3, [r3, #12]
 8009b3a:	f003 0320 	and.w	r3, r3, #32
 8009b3e:	2b20      	cmp	r3, #32
 8009b40:	d107      	bne.n	8009b52 <HAL_TIM_IRQHandler+0x236>
 8009b42:	687b      	ldr	r3, [r7, #4]
 8009b44:	681b      	ldr	r3, [r3, #0]
 8009b46:	f06f 0220 	mvn.w	r2, #32
 8009b4a:	611a      	str	r2, [r3, #16]
 8009b4c:	6878      	ldr	r0, [r7, #4]
 8009b4e:	f000 fab1 	bl	800a0b4 <HAL_TIMEx_CommutCallback>
 8009b52:	bf00      	nop
 8009b54:	3708      	adds	r7, #8
 8009b56:	46bd      	mov	sp, r7
 8009b58:	bd80      	pop	{r7, pc}

08009b5a <HAL_TIM_SlaveConfigSynchro>:
 8009b5a:	b580      	push	{r7, lr}
 8009b5c:	b082      	sub	sp, #8
 8009b5e:	af00      	add	r7, sp, #0
 8009b60:	6078      	str	r0, [r7, #4]
 8009b62:	6039      	str	r1, [r7, #0]
 8009b64:	687b      	ldr	r3, [r7, #4]
 8009b66:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8009b6a:	2b01      	cmp	r3, #1
 8009b6c:	d101      	bne.n	8009b72 <HAL_TIM_SlaveConfigSynchro+0x18>
 8009b6e:	2302      	movs	r3, #2
 8009b70:	e031      	b.n	8009bd6 <HAL_TIM_SlaveConfigSynchro+0x7c>
 8009b72:	687b      	ldr	r3, [r7, #4]
 8009b74:	2201      	movs	r2, #1
 8009b76:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8009b7a:	687b      	ldr	r3, [r7, #4]
 8009b7c:	2202      	movs	r2, #2
 8009b7e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8009b82:	6839      	ldr	r1, [r7, #0]
 8009b84:	6878      	ldr	r0, [r7, #4]
 8009b86:	f000 f8f3 	bl	8009d70 <TIM_SlaveTimer_SetConfig>
 8009b8a:	4603      	mov	r3, r0
 8009b8c:	2b00      	cmp	r3, #0
 8009b8e:	d009      	beq.n	8009ba4 <HAL_TIM_SlaveConfigSynchro+0x4a>
 8009b90:	687b      	ldr	r3, [r7, #4]
 8009b92:	2201      	movs	r2, #1
 8009b94:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8009b98:	687b      	ldr	r3, [r7, #4]
 8009b9a:	2200      	movs	r2, #0
 8009b9c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8009ba0:	2301      	movs	r3, #1
 8009ba2:	e018      	b.n	8009bd6 <HAL_TIM_SlaveConfigSynchro+0x7c>
 8009ba4:	687b      	ldr	r3, [r7, #4]
 8009ba6:	681b      	ldr	r3, [r3, #0]
 8009ba8:	68da      	ldr	r2, [r3, #12]
 8009baa:	687b      	ldr	r3, [r7, #4]
 8009bac:	681b      	ldr	r3, [r3, #0]
 8009bae:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8009bb2:	60da      	str	r2, [r3, #12]
 8009bb4:	687b      	ldr	r3, [r7, #4]
 8009bb6:	681b      	ldr	r3, [r3, #0]
 8009bb8:	68da      	ldr	r2, [r3, #12]
 8009bba:	687b      	ldr	r3, [r7, #4]
 8009bbc:	681b      	ldr	r3, [r3, #0]
 8009bbe:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8009bc2:	60da      	str	r2, [r3, #12]
 8009bc4:	687b      	ldr	r3, [r7, #4]
 8009bc6:	2201      	movs	r2, #1
 8009bc8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8009bcc:	687b      	ldr	r3, [r7, #4]
 8009bce:	2200      	movs	r2, #0
 8009bd0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8009bd4:	2300      	movs	r3, #0
 8009bd6:	4618      	mov	r0, r3
 8009bd8:	3708      	adds	r7, #8
 8009bda:	46bd      	mov	sp, r7
 8009bdc:	bd80      	pop	{r7, pc}

08009bde <HAL_TIM_OC_DelayElapsedCallback>:
 8009bde:	b480      	push	{r7}
 8009be0:	b083      	sub	sp, #12
 8009be2:	af00      	add	r7, sp, #0
 8009be4:	6078      	str	r0, [r7, #4]
 8009be6:	bf00      	nop
 8009be8:	370c      	adds	r7, #12
 8009bea:	46bd      	mov	sp, r7
 8009bec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bf0:	4770      	bx	lr

08009bf2 <HAL_TIM_IC_CaptureCallback>:
 8009bf2:	b480      	push	{r7}
 8009bf4:	b083      	sub	sp, #12
 8009bf6:	af00      	add	r7, sp, #0
 8009bf8:	6078      	str	r0, [r7, #4]
 8009bfa:	bf00      	nop
 8009bfc:	370c      	adds	r7, #12
 8009bfe:	46bd      	mov	sp, r7
 8009c00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c04:	4770      	bx	lr

08009c06 <HAL_TIM_PWM_PulseFinishedCallback>:
 8009c06:	b480      	push	{r7}
 8009c08:	b083      	sub	sp, #12
 8009c0a:	af00      	add	r7, sp, #0
 8009c0c:	6078      	str	r0, [r7, #4]
 8009c0e:	bf00      	nop
 8009c10:	370c      	adds	r7, #12
 8009c12:	46bd      	mov	sp, r7
 8009c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c18:	4770      	bx	lr

08009c1a <HAL_TIM_TriggerCallback>:
 8009c1a:	b480      	push	{r7}
 8009c1c:	b083      	sub	sp, #12
 8009c1e:	af00      	add	r7, sp, #0
 8009c20:	6078      	str	r0, [r7, #4]
 8009c22:	bf00      	nop
 8009c24:	370c      	adds	r7, #12
 8009c26:	46bd      	mov	sp, r7
 8009c28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c2c:	4770      	bx	lr
	...

08009c30 <TIM_Base_SetConfig>:
 8009c30:	b480      	push	{r7}
 8009c32:	b085      	sub	sp, #20
 8009c34:	af00      	add	r7, sp, #0
 8009c36:	6078      	str	r0, [r7, #4]
 8009c38:	6039      	str	r1, [r7, #0]
 8009c3a:	687b      	ldr	r3, [r7, #4]
 8009c3c:	681b      	ldr	r3, [r3, #0]
 8009c3e:	60fb      	str	r3, [r7, #12]
 8009c40:	687b      	ldr	r3, [r7, #4]
 8009c42:	4a40      	ldr	r2, [pc, #256]	@ (8009d44 <TIM_Base_SetConfig+0x114>)
 8009c44:	4293      	cmp	r3, r2
 8009c46:	d013      	beq.n	8009c70 <TIM_Base_SetConfig+0x40>
 8009c48:	687b      	ldr	r3, [r7, #4]
 8009c4a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009c4e:	d00f      	beq.n	8009c70 <TIM_Base_SetConfig+0x40>
 8009c50:	687b      	ldr	r3, [r7, #4]
 8009c52:	4a3d      	ldr	r2, [pc, #244]	@ (8009d48 <TIM_Base_SetConfig+0x118>)
 8009c54:	4293      	cmp	r3, r2
 8009c56:	d00b      	beq.n	8009c70 <TIM_Base_SetConfig+0x40>
 8009c58:	687b      	ldr	r3, [r7, #4]
 8009c5a:	4a3c      	ldr	r2, [pc, #240]	@ (8009d4c <TIM_Base_SetConfig+0x11c>)
 8009c5c:	4293      	cmp	r3, r2
 8009c5e:	d007      	beq.n	8009c70 <TIM_Base_SetConfig+0x40>
 8009c60:	687b      	ldr	r3, [r7, #4]
 8009c62:	4a3b      	ldr	r2, [pc, #236]	@ (8009d50 <TIM_Base_SetConfig+0x120>)
 8009c64:	4293      	cmp	r3, r2
 8009c66:	d003      	beq.n	8009c70 <TIM_Base_SetConfig+0x40>
 8009c68:	687b      	ldr	r3, [r7, #4]
 8009c6a:	4a3a      	ldr	r2, [pc, #232]	@ (8009d54 <TIM_Base_SetConfig+0x124>)
 8009c6c:	4293      	cmp	r3, r2
 8009c6e:	d108      	bne.n	8009c82 <TIM_Base_SetConfig+0x52>
 8009c70:	68fb      	ldr	r3, [r7, #12]
 8009c72:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009c76:	60fb      	str	r3, [r7, #12]
 8009c78:	683b      	ldr	r3, [r7, #0]
 8009c7a:	685b      	ldr	r3, [r3, #4]
 8009c7c:	68fa      	ldr	r2, [r7, #12]
 8009c7e:	4313      	orrs	r3, r2
 8009c80:	60fb      	str	r3, [r7, #12]
 8009c82:	687b      	ldr	r3, [r7, #4]
 8009c84:	4a2f      	ldr	r2, [pc, #188]	@ (8009d44 <TIM_Base_SetConfig+0x114>)
 8009c86:	4293      	cmp	r3, r2
 8009c88:	d02b      	beq.n	8009ce2 <TIM_Base_SetConfig+0xb2>
 8009c8a:	687b      	ldr	r3, [r7, #4]
 8009c8c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009c90:	d027      	beq.n	8009ce2 <TIM_Base_SetConfig+0xb2>
 8009c92:	687b      	ldr	r3, [r7, #4]
 8009c94:	4a2c      	ldr	r2, [pc, #176]	@ (8009d48 <TIM_Base_SetConfig+0x118>)
 8009c96:	4293      	cmp	r3, r2
 8009c98:	d023      	beq.n	8009ce2 <TIM_Base_SetConfig+0xb2>
 8009c9a:	687b      	ldr	r3, [r7, #4]
 8009c9c:	4a2b      	ldr	r2, [pc, #172]	@ (8009d4c <TIM_Base_SetConfig+0x11c>)
 8009c9e:	4293      	cmp	r3, r2
 8009ca0:	d01f      	beq.n	8009ce2 <TIM_Base_SetConfig+0xb2>
 8009ca2:	687b      	ldr	r3, [r7, #4]
 8009ca4:	4a2a      	ldr	r2, [pc, #168]	@ (8009d50 <TIM_Base_SetConfig+0x120>)
 8009ca6:	4293      	cmp	r3, r2
 8009ca8:	d01b      	beq.n	8009ce2 <TIM_Base_SetConfig+0xb2>
 8009caa:	687b      	ldr	r3, [r7, #4]
 8009cac:	4a29      	ldr	r2, [pc, #164]	@ (8009d54 <TIM_Base_SetConfig+0x124>)
 8009cae:	4293      	cmp	r3, r2
 8009cb0:	d017      	beq.n	8009ce2 <TIM_Base_SetConfig+0xb2>
 8009cb2:	687b      	ldr	r3, [r7, #4]
 8009cb4:	4a28      	ldr	r2, [pc, #160]	@ (8009d58 <TIM_Base_SetConfig+0x128>)
 8009cb6:	4293      	cmp	r3, r2
 8009cb8:	d013      	beq.n	8009ce2 <TIM_Base_SetConfig+0xb2>
 8009cba:	687b      	ldr	r3, [r7, #4]
 8009cbc:	4a27      	ldr	r2, [pc, #156]	@ (8009d5c <TIM_Base_SetConfig+0x12c>)
 8009cbe:	4293      	cmp	r3, r2
 8009cc0:	d00f      	beq.n	8009ce2 <TIM_Base_SetConfig+0xb2>
 8009cc2:	687b      	ldr	r3, [r7, #4]
 8009cc4:	4a26      	ldr	r2, [pc, #152]	@ (8009d60 <TIM_Base_SetConfig+0x130>)
 8009cc6:	4293      	cmp	r3, r2
 8009cc8:	d00b      	beq.n	8009ce2 <TIM_Base_SetConfig+0xb2>
 8009cca:	687b      	ldr	r3, [r7, #4]
 8009ccc:	4a25      	ldr	r2, [pc, #148]	@ (8009d64 <TIM_Base_SetConfig+0x134>)
 8009cce:	4293      	cmp	r3, r2
 8009cd0:	d007      	beq.n	8009ce2 <TIM_Base_SetConfig+0xb2>
 8009cd2:	687b      	ldr	r3, [r7, #4]
 8009cd4:	4a24      	ldr	r2, [pc, #144]	@ (8009d68 <TIM_Base_SetConfig+0x138>)
 8009cd6:	4293      	cmp	r3, r2
 8009cd8:	d003      	beq.n	8009ce2 <TIM_Base_SetConfig+0xb2>
 8009cda:	687b      	ldr	r3, [r7, #4]
 8009cdc:	4a23      	ldr	r2, [pc, #140]	@ (8009d6c <TIM_Base_SetConfig+0x13c>)
 8009cde:	4293      	cmp	r3, r2
 8009ce0:	d108      	bne.n	8009cf4 <TIM_Base_SetConfig+0xc4>
 8009ce2:	68fb      	ldr	r3, [r7, #12]
 8009ce4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8009ce8:	60fb      	str	r3, [r7, #12]
 8009cea:	683b      	ldr	r3, [r7, #0]
 8009cec:	68db      	ldr	r3, [r3, #12]
 8009cee:	68fa      	ldr	r2, [r7, #12]
 8009cf0:	4313      	orrs	r3, r2
 8009cf2:	60fb      	str	r3, [r7, #12]
 8009cf4:	68fb      	ldr	r3, [r7, #12]
 8009cf6:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8009cfa:	683b      	ldr	r3, [r7, #0]
 8009cfc:	695b      	ldr	r3, [r3, #20]
 8009cfe:	4313      	orrs	r3, r2
 8009d00:	60fb      	str	r3, [r7, #12]
 8009d02:	687b      	ldr	r3, [r7, #4]
 8009d04:	68fa      	ldr	r2, [r7, #12]
 8009d06:	601a      	str	r2, [r3, #0]
 8009d08:	683b      	ldr	r3, [r7, #0]
 8009d0a:	689a      	ldr	r2, [r3, #8]
 8009d0c:	687b      	ldr	r3, [r7, #4]
 8009d0e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8009d10:	683b      	ldr	r3, [r7, #0]
 8009d12:	681a      	ldr	r2, [r3, #0]
 8009d14:	687b      	ldr	r3, [r7, #4]
 8009d16:	629a      	str	r2, [r3, #40]	@ 0x28
 8009d18:	687b      	ldr	r3, [r7, #4]
 8009d1a:	4a0a      	ldr	r2, [pc, #40]	@ (8009d44 <TIM_Base_SetConfig+0x114>)
 8009d1c:	4293      	cmp	r3, r2
 8009d1e:	d003      	beq.n	8009d28 <TIM_Base_SetConfig+0xf8>
 8009d20:	687b      	ldr	r3, [r7, #4]
 8009d22:	4a0c      	ldr	r2, [pc, #48]	@ (8009d54 <TIM_Base_SetConfig+0x124>)
 8009d24:	4293      	cmp	r3, r2
 8009d26:	d103      	bne.n	8009d30 <TIM_Base_SetConfig+0x100>
 8009d28:	683b      	ldr	r3, [r7, #0]
 8009d2a:	691a      	ldr	r2, [r3, #16]
 8009d2c:	687b      	ldr	r3, [r7, #4]
 8009d2e:	631a      	str	r2, [r3, #48]	@ 0x30
 8009d30:	687b      	ldr	r3, [r7, #4]
 8009d32:	2201      	movs	r2, #1
 8009d34:	615a      	str	r2, [r3, #20]
 8009d36:	bf00      	nop
 8009d38:	3714      	adds	r7, #20
 8009d3a:	46bd      	mov	sp, r7
 8009d3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d40:	4770      	bx	lr
 8009d42:	bf00      	nop
 8009d44:	40010000 	.word	0x40010000
 8009d48:	40000400 	.word	0x40000400
 8009d4c:	40000800 	.word	0x40000800
 8009d50:	40000c00 	.word	0x40000c00
 8009d54:	40010400 	.word	0x40010400
 8009d58:	40014000 	.word	0x40014000
 8009d5c:	40014400 	.word	0x40014400
 8009d60:	40014800 	.word	0x40014800
 8009d64:	40001800 	.word	0x40001800
 8009d68:	40001c00 	.word	0x40001c00
 8009d6c:	40002000 	.word	0x40002000

08009d70 <TIM_SlaveTimer_SetConfig>:
 8009d70:	b580      	push	{r7, lr}
 8009d72:	b086      	sub	sp, #24
 8009d74:	af00      	add	r7, sp, #0
 8009d76:	6078      	str	r0, [r7, #4]
 8009d78:	6039      	str	r1, [r7, #0]
 8009d7a:	2300      	movs	r3, #0
 8009d7c:	75fb      	strb	r3, [r7, #23]
 8009d7e:	687b      	ldr	r3, [r7, #4]
 8009d80:	681b      	ldr	r3, [r3, #0]
 8009d82:	689b      	ldr	r3, [r3, #8]
 8009d84:	613b      	str	r3, [r7, #16]
 8009d86:	693b      	ldr	r3, [r7, #16]
 8009d88:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009d8c:	613b      	str	r3, [r7, #16]
 8009d8e:	683b      	ldr	r3, [r7, #0]
 8009d90:	685b      	ldr	r3, [r3, #4]
 8009d92:	693a      	ldr	r2, [r7, #16]
 8009d94:	4313      	orrs	r3, r2
 8009d96:	613b      	str	r3, [r7, #16]
 8009d98:	693a      	ldr	r2, [r7, #16]
 8009d9a:	4b3e      	ldr	r3, [pc, #248]	@ (8009e94 <TIM_SlaveTimer_SetConfig+0x124>)
 8009d9c:	4013      	ands	r3, r2
 8009d9e:	613b      	str	r3, [r7, #16]
 8009da0:	683b      	ldr	r3, [r7, #0]
 8009da2:	681b      	ldr	r3, [r3, #0]
 8009da4:	693a      	ldr	r2, [r7, #16]
 8009da6:	4313      	orrs	r3, r2
 8009da8:	613b      	str	r3, [r7, #16]
 8009daa:	687b      	ldr	r3, [r7, #4]
 8009dac:	681b      	ldr	r3, [r3, #0]
 8009dae:	693a      	ldr	r2, [r7, #16]
 8009db0:	609a      	str	r2, [r3, #8]
 8009db2:	683b      	ldr	r3, [r7, #0]
 8009db4:	685b      	ldr	r3, [r3, #4]
 8009db6:	2b70      	cmp	r3, #112	@ 0x70
 8009db8:	d01a      	beq.n	8009df0 <TIM_SlaveTimer_SetConfig+0x80>
 8009dba:	2b70      	cmp	r3, #112	@ 0x70
 8009dbc:	d860      	bhi.n	8009e80 <TIM_SlaveTimer_SetConfig+0x110>
 8009dbe:	2b60      	cmp	r3, #96	@ 0x60
 8009dc0:	d054      	beq.n	8009e6c <TIM_SlaveTimer_SetConfig+0xfc>
 8009dc2:	2b60      	cmp	r3, #96	@ 0x60
 8009dc4:	d85c      	bhi.n	8009e80 <TIM_SlaveTimer_SetConfig+0x110>
 8009dc6:	2b50      	cmp	r3, #80	@ 0x50
 8009dc8:	d046      	beq.n	8009e58 <TIM_SlaveTimer_SetConfig+0xe8>
 8009dca:	2b50      	cmp	r3, #80	@ 0x50
 8009dcc:	d858      	bhi.n	8009e80 <TIM_SlaveTimer_SetConfig+0x110>
 8009dce:	2b40      	cmp	r3, #64	@ 0x40
 8009dd0:	d019      	beq.n	8009e06 <TIM_SlaveTimer_SetConfig+0x96>
 8009dd2:	2b40      	cmp	r3, #64	@ 0x40
 8009dd4:	d854      	bhi.n	8009e80 <TIM_SlaveTimer_SetConfig+0x110>
 8009dd6:	2b30      	cmp	r3, #48	@ 0x30
 8009dd8:	d055      	beq.n	8009e86 <TIM_SlaveTimer_SetConfig+0x116>
 8009dda:	2b30      	cmp	r3, #48	@ 0x30
 8009ddc:	d850      	bhi.n	8009e80 <TIM_SlaveTimer_SetConfig+0x110>
 8009dde:	2b20      	cmp	r3, #32
 8009de0:	d051      	beq.n	8009e86 <TIM_SlaveTimer_SetConfig+0x116>
 8009de2:	2b20      	cmp	r3, #32
 8009de4:	d84c      	bhi.n	8009e80 <TIM_SlaveTimer_SetConfig+0x110>
 8009de6:	2b00      	cmp	r3, #0
 8009de8:	d04d      	beq.n	8009e86 <TIM_SlaveTimer_SetConfig+0x116>
 8009dea:	2b10      	cmp	r3, #16
 8009dec:	d04b      	beq.n	8009e86 <TIM_SlaveTimer_SetConfig+0x116>
 8009dee:	e047      	b.n	8009e80 <TIM_SlaveTimer_SetConfig+0x110>
 8009df0:	687b      	ldr	r3, [r7, #4]
 8009df2:	6818      	ldr	r0, [r3, #0]
 8009df4:	683b      	ldr	r3, [r7, #0]
 8009df6:	68d9      	ldr	r1, [r3, #12]
 8009df8:	683b      	ldr	r3, [r7, #0]
 8009dfa:	689a      	ldr	r2, [r3, #8]
 8009dfc:	683b      	ldr	r3, [r7, #0]
 8009dfe:	691b      	ldr	r3, [r3, #16]
 8009e00:	f000 f8a9 	bl	8009f56 <TIM_ETR_SetConfig>
 8009e04:	e040      	b.n	8009e88 <TIM_SlaveTimer_SetConfig+0x118>
 8009e06:	683b      	ldr	r3, [r7, #0]
 8009e08:	681b      	ldr	r3, [r3, #0]
 8009e0a:	2b05      	cmp	r3, #5
 8009e0c:	d101      	bne.n	8009e12 <TIM_SlaveTimer_SetConfig+0xa2>
 8009e0e:	2301      	movs	r3, #1
 8009e10:	e03b      	b.n	8009e8a <TIM_SlaveTimer_SetConfig+0x11a>
 8009e12:	687b      	ldr	r3, [r7, #4]
 8009e14:	681b      	ldr	r3, [r3, #0]
 8009e16:	6a1b      	ldr	r3, [r3, #32]
 8009e18:	60fb      	str	r3, [r7, #12]
 8009e1a:	687b      	ldr	r3, [r7, #4]
 8009e1c:	681b      	ldr	r3, [r3, #0]
 8009e1e:	6a1a      	ldr	r2, [r3, #32]
 8009e20:	687b      	ldr	r3, [r7, #4]
 8009e22:	681b      	ldr	r3, [r3, #0]
 8009e24:	f022 0201 	bic.w	r2, r2, #1
 8009e28:	621a      	str	r2, [r3, #32]
 8009e2a:	687b      	ldr	r3, [r7, #4]
 8009e2c:	681b      	ldr	r3, [r3, #0]
 8009e2e:	699b      	ldr	r3, [r3, #24]
 8009e30:	60bb      	str	r3, [r7, #8]
 8009e32:	68bb      	ldr	r3, [r7, #8]
 8009e34:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8009e38:	60bb      	str	r3, [r7, #8]
 8009e3a:	683b      	ldr	r3, [r7, #0]
 8009e3c:	691b      	ldr	r3, [r3, #16]
 8009e3e:	011b      	lsls	r3, r3, #4
 8009e40:	68ba      	ldr	r2, [r7, #8]
 8009e42:	4313      	orrs	r3, r2
 8009e44:	60bb      	str	r3, [r7, #8]
 8009e46:	687b      	ldr	r3, [r7, #4]
 8009e48:	681b      	ldr	r3, [r3, #0]
 8009e4a:	68ba      	ldr	r2, [r7, #8]
 8009e4c:	619a      	str	r2, [r3, #24]
 8009e4e:	687b      	ldr	r3, [r7, #4]
 8009e50:	681b      	ldr	r3, [r3, #0]
 8009e52:	68fa      	ldr	r2, [r7, #12]
 8009e54:	621a      	str	r2, [r3, #32]
 8009e56:	e017      	b.n	8009e88 <TIM_SlaveTimer_SetConfig+0x118>
 8009e58:	687b      	ldr	r3, [r7, #4]
 8009e5a:	6818      	ldr	r0, [r3, #0]
 8009e5c:	683b      	ldr	r3, [r7, #0]
 8009e5e:	6899      	ldr	r1, [r3, #8]
 8009e60:	683b      	ldr	r3, [r7, #0]
 8009e62:	691b      	ldr	r3, [r3, #16]
 8009e64:	461a      	mov	r2, r3
 8009e66:	f000 f817 	bl	8009e98 <TIM_TI1_ConfigInputStage>
 8009e6a:	e00d      	b.n	8009e88 <TIM_SlaveTimer_SetConfig+0x118>
 8009e6c:	687b      	ldr	r3, [r7, #4]
 8009e6e:	6818      	ldr	r0, [r3, #0]
 8009e70:	683b      	ldr	r3, [r7, #0]
 8009e72:	6899      	ldr	r1, [r3, #8]
 8009e74:	683b      	ldr	r3, [r7, #0]
 8009e76:	691b      	ldr	r3, [r3, #16]
 8009e78:	461a      	mov	r2, r3
 8009e7a:	f000 f83c 	bl	8009ef6 <TIM_TI2_ConfigInputStage>
 8009e7e:	e003      	b.n	8009e88 <TIM_SlaveTimer_SetConfig+0x118>
 8009e80:	2301      	movs	r3, #1
 8009e82:	75fb      	strb	r3, [r7, #23]
 8009e84:	e000      	b.n	8009e88 <TIM_SlaveTimer_SetConfig+0x118>
 8009e86:	bf00      	nop
 8009e88:	7dfb      	ldrb	r3, [r7, #23]
 8009e8a:	4618      	mov	r0, r3
 8009e8c:	3718      	adds	r7, #24
 8009e8e:	46bd      	mov	sp, r7
 8009e90:	bd80      	pop	{r7, pc}
 8009e92:	bf00      	nop
 8009e94:	fffefff8 	.word	0xfffefff8

08009e98 <TIM_TI1_ConfigInputStage>:
 8009e98:	b480      	push	{r7}
 8009e9a:	b087      	sub	sp, #28
 8009e9c:	af00      	add	r7, sp, #0
 8009e9e:	60f8      	str	r0, [r7, #12]
 8009ea0:	60b9      	str	r1, [r7, #8]
 8009ea2:	607a      	str	r2, [r7, #4]
 8009ea4:	68fb      	ldr	r3, [r7, #12]
 8009ea6:	6a1b      	ldr	r3, [r3, #32]
 8009ea8:	617b      	str	r3, [r7, #20]
 8009eaa:	68fb      	ldr	r3, [r7, #12]
 8009eac:	6a1b      	ldr	r3, [r3, #32]
 8009eae:	f023 0201 	bic.w	r2, r3, #1
 8009eb2:	68fb      	ldr	r3, [r7, #12]
 8009eb4:	621a      	str	r2, [r3, #32]
 8009eb6:	68fb      	ldr	r3, [r7, #12]
 8009eb8:	699b      	ldr	r3, [r3, #24]
 8009eba:	613b      	str	r3, [r7, #16]
 8009ebc:	693b      	ldr	r3, [r7, #16]
 8009ebe:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8009ec2:	613b      	str	r3, [r7, #16]
 8009ec4:	687b      	ldr	r3, [r7, #4]
 8009ec6:	011b      	lsls	r3, r3, #4
 8009ec8:	693a      	ldr	r2, [r7, #16]
 8009eca:	4313      	orrs	r3, r2
 8009ecc:	613b      	str	r3, [r7, #16]
 8009ece:	697b      	ldr	r3, [r7, #20]
 8009ed0:	f023 030a 	bic.w	r3, r3, #10
 8009ed4:	617b      	str	r3, [r7, #20]
 8009ed6:	697a      	ldr	r2, [r7, #20]
 8009ed8:	68bb      	ldr	r3, [r7, #8]
 8009eda:	4313      	orrs	r3, r2
 8009edc:	617b      	str	r3, [r7, #20]
 8009ede:	68fb      	ldr	r3, [r7, #12]
 8009ee0:	693a      	ldr	r2, [r7, #16]
 8009ee2:	619a      	str	r2, [r3, #24]
 8009ee4:	68fb      	ldr	r3, [r7, #12]
 8009ee6:	697a      	ldr	r2, [r7, #20]
 8009ee8:	621a      	str	r2, [r3, #32]
 8009eea:	bf00      	nop
 8009eec:	371c      	adds	r7, #28
 8009eee:	46bd      	mov	sp, r7
 8009ef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ef4:	4770      	bx	lr

08009ef6 <TIM_TI2_ConfigInputStage>:
 8009ef6:	b480      	push	{r7}
 8009ef8:	b087      	sub	sp, #28
 8009efa:	af00      	add	r7, sp, #0
 8009efc:	60f8      	str	r0, [r7, #12]
 8009efe:	60b9      	str	r1, [r7, #8]
 8009f00:	607a      	str	r2, [r7, #4]
 8009f02:	68fb      	ldr	r3, [r7, #12]
 8009f04:	6a1b      	ldr	r3, [r3, #32]
 8009f06:	f023 0210 	bic.w	r2, r3, #16
 8009f0a:	68fb      	ldr	r3, [r7, #12]
 8009f0c:	621a      	str	r2, [r3, #32]
 8009f0e:	68fb      	ldr	r3, [r7, #12]
 8009f10:	699b      	ldr	r3, [r3, #24]
 8009f12:	617b      	str	r3, [r7, #20]
 8009f14:	68fb      	ldr	r3, [r7, #12]
 8009f16:	6a1b      	ldr	r3, [r3, #32]
 8009f18:	613b      	str	r3, [r7, #16]
 8009f1a:	697b      	ldr	r3, [r7, #20]
 8009f1c:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8009f20:	617b      	str	r3, [r7, #20]
 8009f22:	687b      	ldr	r3, [r7, #4]
 8009f24:	031b      	lsls	r3, r3, #12
 8009f26:	697a      	ldr	r2, [r7, #20]
 8009f28:	4313      	orrs	r3, r2
 8009f2a:	617b      	str	r3, [r7, #20]
 8009f2c:	693b      	ldr	r3, [r7, #16]
 8009f2e:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8009f32:	613b      	str	r3, [r7, #16]
 8009f34:	68bb      	ldr	r3, [r7, #8]
 8009f36:	011b      	lsls	r3, r3, #4
 8009f38:	693a      	ldr	r2, [r7, #16]
 8009f3a:	4313      	orrs	r3, r2
 8009f3c:	613b      	str	r3, [r7, #16]
 8009f3e:	68fb      	ldr	r3, [r7, #12]
 8009f40:	697a      	ldr	r2, [r7, #20]
 8009f42:	619a      	str	r2, [r3, #24]
 8009f44:	68fb      	ldr	r3, [r7, #12]
 8009f46:	693a      	ldr	r2, [r7, #16]
 8009f48:	621a      	str	r2, [r3, #32]
 8009f4a:	bf00      	nop
 8009f4c:	371c      	adds	r7, #28
 8009f4e:	46bd      	mov	sp, r7
 8009f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f54:	4770      	bx	lr

08009f56 <TIM_ETR_SetConfig>:
 8009f56:	b480      	push	{r7}
 8009f58:	b087      	sub	sp, #28
 8009f5a:	af00      	add	r7, sp, #0
 8009f5c:	60f8      	str	r0, [r7, #12]
 8009f5e:	60b9      	str	r1, [r7, #8]
 8009f60:	607a      	str	r2, [r7, #4]
 8009f62:	603b      	str	r3, [r7, #0]
 8009f64:	68fb      	ldr	r3, [r7, #12]
 8009f66:	689b      	ldr	r3, [r3, #8]
 8009f68:	617b      	str	r3, [r7, #20]
 8009f6a:	697b      	ldr	r3, [r7, #20]
 8009f6c:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8009f70:	617b      	str	r3, [r7, #20]
 8009f72:	683b      	ldr	r3, [r7, #0]
 8009f74:	021a      	lsls	r2, r3, #8
 8009f76:	687b      	ldr	r3, [r7, #4]
 8009f78:	431a      	orrs	r2, r3
 8009f7a:	68bb      	ldr	r3, [r7, #8]
 8009f7c:	4313      	orrs	r3, r2
 8009f7e:	697a      	ldr	r2, [r7, #20]
 8009f80:	4313      	orrs	r3, r2
 8009f82:	617b      	str	r3, [r7, #20]
 8009f84:	68fb      	ldr	r3, [r7, #12]
 8009f86:	697a      	ldr	r2, [r7, #20]
 8009f88:	609a      	str	r2, [r3, #8]
 8009f8a:	bf00      	nop
 8009f8c:	371c      	adds	r7, #28
 8009f8e:	46bd      	mov	sp, r7
 8009f90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f94:	4770      	bx	lr
	...

08009f98 <HAL_TIMEx_MasterConfigSynchronization>:
 8009f98:	b480      	push	{r7}
 8009f9a:	b085      	sub	sp, #20
 8009f9c:	af00      	add	r7, sp, #0
 8009f9e:	6078      	str	r0, [r7, #4]
 8009fa0:	6039      	str	r1, [r7, #0]
 8009fa2:	687b      	ldr	r3, [r7, #4]
 8009fa4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8009fa8:	2b01      	cmp	r3, #1
 8009faa:	d101      	bne.n	8009fb0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8009fac:	2302      	movs	r3, #2
 8009fae:	e06d      	b.n	800a08c <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 8009fb0:	687b      	ldr	r3, [r7, #4]
 8009fb2:	2201      	movs	r2, #1
 8009fb4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8009fb8:	687b      	ldr	r3, [r7, #4]
 8009fba:	2202      	movs	r2, #2
 8009fbc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8009fc0:	687b      	ldr	r3, [r7, #4]
 8009fc2:	681b      	ldr	r3, [r3, #0]
 8009fc4:	685b      	ldr	r3, [r3, #4]
 8009fc6:	60fb      	str	r3, [r7, #12]
 8009fc8:	687b      	ldr	r3, [r7, #4]
 8009fca:	681b      	ldr	r3, [r3, #0]
 8009fcc:	689b      	ldr	r3, [r3, #8]
 8009fce:	60bb      	str	r3, [r7, #8]
 8009fd0:	687b      	ldr	r3, [r7, #4]
 8009fd2:	681b      	ldr	r3, [r3, #0]
 8009fd4:	4a30      	ldr	r2, [pc, #192]	@ (800a098 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8009fd6:	4293      	cmp	r3, r2
 8009fd8:	d004      	beq.n	8009fe4 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8009fda:	687b      	ldr	r3, [r7, #4]
 8009fdc:	681b      	ldr	r3, [r3, #0]
 8009fde:	4a2f      	ldr	r2, [pc, #188]	@ (800a09c <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8009fe0:	4293      	cmp	r3, r2
 8009fe2:	d108      	bne.n	8009ff6 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009fe4:	68fb      	ldr	r3, [r7, #12]
 8009fe6:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8009fea:	60fb      	str	r3, [r7, #12]
 8009fec:	683b      	ldr	r3, [r7, #0]
 8009fee:	685b      	ldr	r3, [r3, #4]
 8009ff0:	68fa      	ldr	r2, [r7, #12]
 8009ff2:	4313      	orrs	r3, r2
 8009ff4:	60fb      	str	r3, [r7, #12]
 8009ff6:	68fb      	ldr	r3, [r7, #12]
 8009ff8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009ffc:	60fb      	str	r3, [r7, #12]
 8009ffe:	683b      	ldr	r3, [r7, #0]
 800a000:	681b      	ldr	r3, [r3, #0]
 800a002:	68fa      	ldr	r2, [r7, #12]
 800a004:	4313      	orrs	r3, r2
 800a006:	60fb      	str	r3, [r7, #12]
 800a008:	687b      	ldr	r3, [r7, #4]
 800a00a:	681b      	ldr	r3, [r3, #0]
 800a00c:	68fa      	ldr	r2, [r7, #12]
 800a00e:	605a      	str	r2, [r3, #4]
 800a010:	687b      	ldr	r3, [r7, #4]
 800a012:	681b      	ldr	r3, [r3, #0]
 800a014:	4a20      	ldr	r2, [pc, #128]	@ (800a098 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800a016:	4293      	cmp	r3, r2
 800a018:	d022      	beq.n	800a060 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800a01a:	687b      	ldr	r3, [r7, #4]
 800a01c:	681b      	ldr	r3, [r3, #0]
 800a01e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a022:	d01d      	beq.n	800a060 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800a024:	687b      	ldr	r3, [r7, #4]
 800a026:	681b      	ldr	r3, [r3, #0]
 800a028:	4a1d      	ldr	r2, [pc, #116]	@ (800a0a0 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 800a02a:	4293      	cmp	r3, r2
 800a02c:	d018      	beq.n	800a060 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800a02e:	687b      	ldr	r3, [r7, #4]
 800a030:	681b      	ldr	r3, [r3, #0]
 800a032:	4a1c      	ldr	r2, [pc, #112]	@ (800a0a4 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 800a034:	4293      	cmp	r3, r2
 800a036:	d013      	beq.n	800a060 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800a038:	687b      	ldr	r3, [r7, #4]
 800a03a:	681b      	ldr	r3, [r3, #0]
 800a03c:	4a1a      	ldr	r2, [pc, #104]	@ (800a0a8 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 800a03e:	4293      	cmp	r3, r2
 800a040:	d00e      	beq.n	800a060 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800a042:	687b      	ldr	r3, [r7, #4]
 800a044:	681b      	ldr	r3, [r3, #0]
 800a046:	4a15      	ldr	r2, [pc, #84]	@ (800a09c <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800a048:	4293      	cmp	r3, r2
 800a04a:	d009      	beq.n	800a060 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800a04c:	687b      	ldr	r3, [r7, #4]
 800a04e:	681b      	ldr	r3, [r3, #0]
 800a050:	4a16      	ldr	r2, [pc, #88]	@ (800a0ac <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 800a052:	4293      	cmp	r3, r2
 800a054:	d004      	beq.n	800a060 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800a056:	687b      	ldr	r3, [r7, #4]
 800a058:	681b      	ldr	r3, [r3, #0]
 800a05a:	4a15      	ldr	r2, [pc, #84]	@ (800a0b0 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 800a05c:	4293      	cmp	r3, r2
 800a05e:	d10c      	bne.n	800a07a <HAL_TIMEx_MasterConfigSynchronization+0xe2>
 800a060:	68bb      	ldr	r3, [r7, #8]
 800a062:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800a066:	60bb      	str	r3, [r7, #8]
 800a068:	683b      	ldr	r3, [r7, #0]
 800a06a:	689b      	ldr	r3, [r3, #8]
 800a06c:	68ba      	ldr	r2, [r7, #8]
 800a06e:	4313      	orrs	r3, r2
 800a070:	60bb      	str	r3, [r7, #8]
 800a072:	687b      	ldr	r3, [r7, #4]
 800a074:	681b      	ldr	r3, [r3, #0]
 800a076:	68ba      	ldr	r2, [r7, #8]
 800a078:	609a      	str	r2, [r3, #8]
 800a07a:	687b      	ldr	r3, [r7, #4]
 800a07c:	2201      	movs	r2, #1
 800a07e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800a082:	687b      	ldr	r3, [r7, #4]
 800a084:	2200      	movs	r2, #0
 800a086:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800a08a:	2300      	movs	r3, #0
 800a08c:	4618      	mov	r0, r3
 800a08e:	3714      	adds	r7, #20
 800a090:	46bd      	mov	sp, r7
 800a092:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a096:	4770      	bx	lr
 800a098:	40010000 	.word	0x40010000
 800a09c:	40010400 	.word	0x40010400
 800a0a0:	40000400 	.word	0x40000400
 800a0a4:	40000800 	.word	0x40000800
 800a0a8:	40000c00 	.word	0x40000c00
 800a0ac:	40014000 	.word	0x40014000
 800a0b0:	40001800 	.word	0x40001800

0800a0b4 <HAL_TIMEx_CommutCallback>:
 800a0b4:	b480      	push	{r7}
 800a0b6:	b083      	sub	sp, #12
 800a0b8:	af00      	add	r7, sp, #0
 800a0ba:	6078      	str	r0, [r7, #4]
 800a0bc:	bf00      	nop
 800a0be:	370c      	adds	r7, #12
 800a0c0:	46bd      	mov	sp, r7
 800a0c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0c6:	4770      	bx	lr

0800a0c8 <HAL_TIMEx_BreakCallback>:
 800a0c8:	b480      	push	{r7}
 800a0ca:	b083      	sub	sp, #12
 800a0cc:	af00      	add	r7, sp, #0
 800a0ce:	6078      	str	r0, [r7, #4]
 800a0d0:	bf00      	nop
 800a0d2:	370c      	adds	r7, #12
 800a0d4:	46bd      	mov	sp, r7
 800a0d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0da:	4770      	bx	lr

0800a0dc <HAL_TIMEx_Break2Callback>:
 800a0dc:	b480      	push	{r7}
 800a0de:	b083      	sub	sp, #12
 800a0e0:	af00      	add	r7, sp, #0
 800a0e2:	6078      	str	r0, [r7, #4]
 800a0e4:	bf00      	nop
 800a0e6:	370c      	adds	r7, #12
 800a0e8:	46bd      	mov	sp, r7
 800a0ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0ee:	4770      	bx	lr

0800a0f0 <HAL_UART_Init>:
 800a0f0:	b580      	push	{r7, lr}
 800a0f2:	b082      	sub	sp, #8
 800a0f4:	af00      	add	r7, sp, #0
 800a0f6:	6078      	str	r0, [r7, #4]
 800a0f8:	687b      	ldr	r3, [r7, #4]
 800a0fa:	2b00      	cmp	r3, #0
 800a0fc:	d101      	bne.n	800a102 <HAL_UART_Init+0x12>
 800a0fe:	2301      	movs	r3, #1
 800a100:	e040      	b.n	800a184 <HAL_UART_Init+0x94>
 800a102:	687b      	ldr	r3, [r7, #4]
 800a104:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800a106:	2b00      	cmp	r3, #0
 800a108:	d106      	bne.n	800a118 <HAL_UART_Init+0x28>
 800a10a:	687b      	ldr	r3, [r7, #4]
 800a10c:	2200      	movs	r2, #0
 800a10e:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800a112:	6878      	ldr	r0, [r7, #4]
 800a114:	f7f9 fbae 	bl	8003874 <HAL_UART_MspInit>
 800a118:	687b      	ldr	r3, [r7, #4]
 800a11a:	2224      	movs	r2, #36	@ 0x24
 800a11c:	67da      	str	r2, [r3, #124]	@ 0x7c
 800a11e:	687b      	ldr	r3, [r7, #4]
 800a120:	681b      	ldr	r3, [r3, #0]
 800a122:	681a      	ldr	r2, [r3, #0]
 800a124:	687b      	ldr	r3, [r7, #4]
 800a126:	681b      	ldr	r3, [r3, #0]
 800a128:	f022 0201 	bic.w	r2, r2, #1
 800a12c:	601a      	str	r2, [r3, #0]
 800a12e:	6878      	ldr	r0, [r7, #4]
 800a130:	f000 f8b0 	bl	800a294 <UART_SetConfig>
 800a134:	4603      	mov	r3, r0
 800a136:	2b01      	cmp	r3, #1
 800a138:	d101      	bne.n	800a13e <HAL_UART_Init+0x4e>
 800a13a:	2301      	movs	r3, #1
 800a13c:	e022      	b.n	800a184 <HAL_UART_Init+0x94>
 800a13e:	687b      	ldr	r3, [r7, #4]
 800a140:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a142:	2b00      	cmp	r3, #0
 800a144:	d002      	beq.n	800a14c <HAL_UART_Init+0x5c>
 800a146:	6878      	ldr	r0, [r7, #4]
 800a148:	f000 fb08 	bl	800a75c <UART_AdvFeatureConfig>
 800a14c:	687b      	ldr	r3, [r7, #4]
 800a14e:	681b      	ldr	r3, [r3, #0]
 800a150:	685a      	ldr	r2, [r3, #4]
 800a152:	687b      	ldr	r3, [r7, #4]
 800a154:	681b      	ldr	r3, [r3, #0]
 800a156:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800a15a:	605a      	str	r2, [r3, #4]
 800a15c:	687b      	ldr	r3, [r7, #4]
 800a15e:	681b      	ldr	r3, [r3, #0]
 800a160:	689a      	ldr	r2, [r3, #8]
 800a162:	687b      	ldr	r3, [r7, #4]
 800a164:	681b      	ldr	r3, [r3, #0]
 800a166:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800a16a:	609a      	str	r2, [r3, #8]
 800a16c:	687b      	ldr	r3, [r7, #4]
 800a16e:	681b      	ldr	r3, [r3, #0]
 800a170:	681a      	ldr	r2, [r3, #0]
 800a172:	687b      	ldr	r3, [r7, #4]
 800a174:	681b      	ldr	r3, [r3, #0]
 800a176:	f042 0201 	orr.w	r2, r2, #1
 800a17a:	601a      	str	r2, [r3, #0]
 800a17c:	6878      	ldr	r0, [r7, #4]
 800a17e:	f000 fb8f 	bl	800a8a0 <UART_CheckIdleState>
 800a182:	4603      	mov	r3, r0
 800a184:	4618      	mov	r0, r3
 800a186:	3708      	adds	r7, #8
 800a188:	46bd      	mov	sp, r7
 800a18a:	bd80      	pop	{r7, pc}

0800a18c <HAL_UART_Transmit>:
 800a18c:	b580      	push	{r7, lr}
 800a18e:	b08a      	sub	sp, #40	@ 0x28
 800a190:	af02      	add	r7, sp, #8
 800a192:	60f8      	str	r0, [r7, #12]
 800a194:	60b9      	str	r1, [r7, #8]
 800a196:	603b      	str	r3, [r7, #0]
 800a198:	4613      	mov	r3, r2
 800a19a:	80fb      	strh	r3, [r7, #6]
 800a19c:	68fb      	ldr	r3, [r7, #12]
 800a19e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800a1a0:	2b20      	cmp	r3, #32
 800a1a2:	d171      	bne.n	800a288 <HAL_UART_Transmit+0xfc>
 800a1a4:	68bb      	ldr	r3, [r7, #8]
 800a1a6:	2b00      	cmp	r3, #0
 800a1a8:	d002      	beq.n	800a1b0 <HAL_UART_Transmit+0x24>
 800a1aa:	88fb      	ldrh	r3, [r7, #6]
 800a1ac:	2b00      	cmp	r3, #0
 800a1ae:	d101      	bne.n	800a1b4 <HAL_UART_Transmit+0x28>
 800a1b0:	2301      	movs	r3, #1
 800a1b2:	e06a      	b.n	800a28a <HAL_UART_Transmit+0xfe>
 800a1b4:	68fb      	ldr	r3, [r7, #12]
 800a1b6:	2200      	movs	r2, #0
 800a1b8:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800a1bc:	68fb      	ldr	r3, [r7, #12]
 800a1be:	2221      	movs	r2, #33	@ 0x21
 800a1c0:	67da      	str	r2, [r3, #124]	@ 0x7c
 800a1c2:	f7fa ff4b 	bl	800505c <HAL_GetTick>
 800a1c6:	6178      	str	r0, [r7, #20]
 800a1c8:	68fb      	ldr	r3, [r7, #12]
 800a1ca:	88fa      	ldrh	r2, [r7, #6]
 800a1cc:	f8a3 2050 	strh.w	r2, [r3, #80]	@ 0x50
 800a1d0:	68fb      	ldr	r3, [r7, #12]
 800a1d2:	88fa      	ldrh	r2, [r7, #6]
 800a1d4:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 800a1d8:	68fb      	ldr	r3, [r7, #12]
 800a1da:	689b      	ldr	r3, [r3, #8]
 800a1dc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800a1e0:	d108      	bne.n	800a1f4 <HAL_UART_Transmit+0x68>
 800a1e2:	68fb      	ldr	r3, [r7, #12]
 800a1e4:	691b      	ldr	r3, [r3, #16]
 800a1e6:	2b00      	cmp	r3, #0
 800a1e8:	d104      	bne.n	800a1f4 <HAL_UART_Transmit+0x68>
 800a1ea:	2300      	movs	r3, #0
 800a1ec:	61fb      	str	r3, [r7, #28]
 800a1ee:	68bb      	ldr	r3, [r7, #8]
 800a1f0:	61bb      	str	r3, [r7, #24]
 800a1f2:	e003      	b.n	800a1fc <HAL_UART_Transmit+0x70>
 800a1f4:	68bb      	ldr	r3, [r7, #8]
 800a1f6:	61fb      	str	r3, [r7, #28]
 800a1f8:	2300      	movs	r3, #0
 800a1fa:	61bb      	str	r3, [r7, #24]
 800a1fc:	e02c      	b.n	800a258 <HAL_UART_Transmit+0xcc>
 800a1fe:	683b      	ldr	r3, [r7, #0]
 800a200:	9300      	str	r3, [sp, #0]
 800a202:	697b      	ldr	r3, [r7, #20]
 800a204:	2200      	movs	r2, #0
 800a206:	2180      	movs	r1, #128	@ 0x80
 800a208:	68f8      	ldr	r0, [r7, #12]
 800a20a:	f000 fb80 	bl	800a90e <UART_WaitOnFlagUntilTimeout>
 800a20e:	4603      	mov	r3, r0
 800a210:	2b00      	cmp	r3, #0
 800a212:	d001      	beq.n	800a218 <HAL_UART_Transmit+0x8c>
 800a214:	2303      	movs	r3, #3
 800a216:	e038      	b.n	800a28a <HAL_UART_Transmit+0xfe>
 800a218:	69fb      	ldr	r3, [r7, #28]
 800a21a:	2b00      	cmp	r3, #0
 800a21c:	d10b      	bne.n	800a236 <HAL_UART_Transmit+0xaa>
 800a21e:	69bb      	ldr	r3, [r7, #24]
 800a220:	881b      	ldrh	r3, [r3, #0]
 800a222:	461a      	mov	r2, r3
 800a224:	68fb      	ldr	r3, [r7, #12]
 800a226:	681b      	ldr	r3, [r3, #0]
 800a228:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800a22c:	629a      	str	r2, [r3, #40]	@ 0x28
 800a22e:	69bb      	ldr	r3, [r7, #24]
 800a230:	3302      	adds	r3, #2
 800a232:	61bb      	str	r3, [r7, #24]
 800a234:	e007      	b.n	800a246 <HAL_UART_Transmit+0xba>
 800a236:	69fb      	ldr	r3, [r7, #28]
 800a238:	781a      	ldrb	r2, [r3, #0]
 800a23a:	68fb      	ldr	r3, [r7, #12]
 800a23c:	681b      	ldr	r3, [r3, #0]
 800a23e:	629a      	str	r2, [r3, #40]	@ 0x28
 800a240:	69fb      	ldr	r3, [r7, #28]
 800a242:	3301      	adds	r3, #1
 800a244:	61fb      	str	r3, [r7, #28]
 800a246:	68fb      	ldr	r3, [r7, #12]
 800a248:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 800a24c:	b29b      	uxth	r3, r3
 800a24e:	3b01      	subs	r3, #1
 800a250:	b29a      	uxth	r2, r3
 800a252:	68fb      	ldr	r3, [r7, #12]
 800a254:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 800a258:	68fb      	ldr	r3, [r7, #12]
 800a25a:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 800a25e:	b29b      	uxth	r3, r3
 800a260:	2b00      	cmp	r3, #0
 800a262:	d1cc      	bne.n	800a1fe <HAL_UART_Transmit+0x72>
 800a264:	683b      	ldr	r3, [r7, #0]
 800a266:	9300      	str	r3, [sp, #0]
 800a268:	697b      	ldr	r3, [r7, #20]
 800a26a:	2200      	movs	r2, #0
 800a26c:	2140      	movs	r1, #64	@ 0x40
 800a26e:	68f8      	ldr	r0, [r7, #12]
 800a270:	f000 fb4d 	bl	800a90e <UART_WaitOnFlagUntilTimeout>
 800a274:	4603      	mov	r3, r0
 800a276:	2b00      	cmp	r3, #0
 800a278:	d001      	beq.n	800a27e <HAL_UART_Transmit+0xf2>
 800a27a:	2303      	movs	r3, #3
 800a27c:	e005      	b.n	800a28a <HAL_UART_Transmit+0xfe>
 800a27e:	68fb      	ldr	r3, [r7, #12]
 800a280:	2220      	movs	r2, #32
 800a282:	67da      	str	r2, [r3, #124]	@ 0x7c
 800a284:	2300      	movs	r3, #0
 800a286:	e000      	b.n	800a28a <HAL_UART_Transmit+0xfe>
 800a288:	2302      	movs	r3, #2
 800a28a:	4618      	mov	r0, r3
 800a28c:	3720      	adds	r7, #32
 800a28e:	46bd      	mov	sp, r7
 800a290:	bd80      	pop	{r7, pc}
	...

0800a294 <UART_SetConfig>:
 800a294:	b580      	push	{r7, lr}
 800a296:	b088      	sub	sp, #32
 800a298:	af00      	add	r7, sp, #0
 800a29a:	6078      	str	r0, [r7, #4]
 800a29c:	2300      	movs	r3, #0
 800a29e:	77bb      	strb	r3, [r7, #30]
 800a2a0:	687b      	ldr	r3, [r7, #4]
 800a2a2:	689a      	ldr	r2, [r3, #8]
 800a2a4:	687b      	ldr	r3, [r7, #4]
 800a2a6:	691b      	ldr	r3, [r3, #16]
 800a2a8:	431a      	orrs	r2, r3
 800a2aa:	687b      	ldr	r3, [r7, #4]
 800a2ac:	695b      	ldr	r3, [r3, #20]
 800a2ae:	431a      	orrs	r2, r3
 800a2b0:	687b      	ldr	r3, [r7, #4]
 800a2b2:	69db      	ldr	r3, [r3, #28]
 800a2b4:	4313      	orrs	r3, r2
 800a2b6:	617b      	str	r3, [r7, #20]
 800a2b8:	687b      	ldr	r3, [r7, #4]
 800a2ba:	681b      	ldr	r3, [r3, #0]
 800a2bc:	681a      	ldr	r2, [r3, #0]
 800a2be:	4ba6      	ldr	r3, [pc, #664]	@ (800a558 <UART_SetConfig+0x2c4>)
 800a2c0:	4013      	ands	r3, r2
 800a2c2:	687a      	ldr	r2, [r7, #4]
 800a2c4:	6812      	ldr	r2, [r2, #0]
 800a2c6:	6979      	ldr	r1, [r7, #20]
 800a2c8:	430b      	orrs	r3, r1
 800a2ca:	6013      	str	r3, [r2, #0]
 800a2cc:	687b      	ldr	r3, [r7, #4]
 800a2ce:	681b      	ldr	r3, [r3, #0]
 800a2d0:	685b      	ldr	r3, [r3, #4]
 800a2d2:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800a2d6:	687b      	ldr	r3, [r7, #4]
 800a2d8:	68da      	ldr	r2, [r3, #12]
 800a2da:	687b      	ldr	r3, [r7, #4]
 800a2dc:	681b      	ldr	r3, [r3, #0]
 800a2de:	430a      	orrs	r2, r1
 800a2e0:	605a      	str	r2, [r3, #4]
 800a2e2:	687b      	ldr	r3, [r7, #4]
 800a2e4:	699b      	ldr	r3, [r3, #24]
 800a2e6:	617b      	str	r3, [r7, #20]
 800a2e8:	687b      	ldr	r3, [r7, #4]
 800a2ea:	6a1b      	ldr	r3, [r3, #32]
 800a2ec:	697a      	ldr	r2, [r7, #20]
 800a2ee:	4313      	orrs	r3, r2
 800a2f0:	617b      	str	r3, [r7, #20]
 800a2f2:	687b      	ldr	r3, [r7, #4]
 800a2f4:	681b      	ldr	r3, [r3, #0]
 800a2f6:	689b      	ldr	r3, [r3, #8]
 800a2f8:	f423 6130 	bic.w	r1, r3, #2816	@ 0xb00
 800a2fc:	687b      	ldr	r3, [r7, #4]
 800a2fe:	681b      	ldr	r3, [r3, #0]
 800a300:	697a      	ldr	r2, [r7, #20]
 800a302:	430a      	orrs	r2, r1
 800a304:	609a      	str	r2, [r3, #8]
 800a306:	687b      	ldr	r3, [r7, #4]
 800a308:	681b      	ldr	r3, [r3, #0]
 800a30a:	4a94      	ldr	r2, [pc, #592]	@ (800a55c <UART_SetConfig+0x2c8>)
 800a30c:	4293      	cmp	r3, r2
 800a30e:	d120      	bne.n	800a352 <UART_SetConfig+0xbe>
 800a310:	4b93      	ldr	r3, [pc, #588]	@ (800a560 <UART_SetConfig+0x2cc>)
 800a312:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a316:	f003 0303 	and.w	r3, r3, #3
 800a31a:	2b03      	cmp	r3, #3
 800a31c:	d816      	bhi.n	800a34c <UART_SetConfig+0xb8>
 800a31e:	a201      	add	r2, pc, #4	@ (adr r2, 800a324 <UART_SetConfig+0x90>)
 800a320:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a324:	0800a335 	.word	0x0800a335
 800a328:	0800a341 	.word	0x0800a341
 800a32c:	0800a33b 	.word	0x0800a33b
 800a330:	0800a347 	.word	0x0800a347
 800a334:	2301      	movs	r3, #1
 800a336:	77fb      	strb	r3, [r7, #31]
 800a338:	e150      	b.n	800a5dc <UART_SetConfig+0x348>
 800a33a:	2302      	movs	r3, #2
 800a33c:	77fb      	strb	r3, [r7, #31]
 800a33e:	e14d      	b.n	800a5dc <UART_SetConfig+0x348>
 800a340:	2304      	movs	r3, #4
 800a342:	77fb      	strb	r3, [r7, #31]
 800a344:	e14a      	b.n	800a5dc <UART_SetConfig+0x348>
 800a346:	2308      	movs	r3, #8
 800a348:	77fb      	strb	r3, [r7, #31]
 800a34a:	e147      	b.n	800a5dc <UART_SetConfig+0x348>
 800a34c:	2310      	movs	r3, #16
 800a34e:	77fb      	strb	r3, [r7, #31]
 800a350:	e144      	b.n	800a5dc <UART_SetConfig+0x348>
 800a352:	687b      	ldr	r3, [r7, #4]
 800a354:	681b      	ldr	r3, [r3, #0]
 800a356:	4a83      	ldr	r2, [pc, #524]	@ (800a564 <UART_SetConfig+0x2d0>)
 800a358:	4293      	cmp	r3, r2
 800a35a:	d132      	bne.n	800a3c2 <UART_SetConfig+0x12e>
 800a35c:	4b80      	ldr	r3, [pc, #512]	@ (800a560 <UART_SetConfig+0x2cc>)
 800a35e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a362:	f003 030c 	and.w	r3, r3, #12
 800a366:	2b0c      	cmp	r3, #12
 800a368:	d828      	bhi.n	800a3bc <UART_SetConfig+0x128>
 800a36a:	a201      	add	r2, pc, #4	@ (adr r2, 800a370 <UART_SetConfig+0xdc>)
 800a36c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a370:	0800a3a5 	.word	0x0800a3a5
 800a374:	0800a3bd 	.word	0x0800a3bd
 800a378:	0800a3bd 	.word	0x0800a3bd
 800a37c:	0800a3bd 	.word	0x0800a3bd
 800a380:	0800a3b1 	.word	0x0800a3b1
 800a384:	0800a3bd 	.word	0x0800a3bd
 800a388:	0800a3bd 	.word	0x0800a3bd
 800a38c:	0800a3bd 	.word	0x0800a3bd
 800a390:	0800a3ab 	.word	0x0800a3ab
 800a394:	0800a3bd 	.word	0x0800a3bd
 800a398:	0800a3bd 	.word	0x0800a3bd
 800a39c:	0800a3bd 	.word	0x0800a3bd
 800a3a0:	0800a3b7 	.word	0x0800a3b7
 800a3a4:	2300      	movs	r3, #0
 800a3a6:	77fb      	strb	r3, [r7, #31]
 800a3a8:	e118      	b.n	800a5dc <UART_SetConfig+0x348>
 800a3aa:	2302      	movs	r3, #2
 800a3ac:	77fb      	strb	r3, [r7, #31]
 800a3ae:	e115      	b.n	800a5dc <UART_SetConfig+0x348>
 800a3b0:	2304      	movs	r3, #4
 800a3b2:	77fb      	strb	r3, [r7, #31]
 800a3b4:	e112      	b.n	800a5dc <UART_SetConfig+0x348>
 800a3b6:	2308      	movs	r3, #8
 800a3b8:	77fb      	strb	r3, [r7, #31]
 800a3ba:	e10f      	b.n	800a5dc <UART_SetConfig+0x348>
 800a3bc:	2310      	movs	r3, #16
 800a3be:	77fb      	strb	r3, [r7, #31]
 800a3c0:	e10c      	b.n	800a5dc <UART_SetConfig+0x348>
 800a3c2:	687b      	ldr	r3, [r7, #4]
 800a3c4:	681b      	ldr	r3, [r3, #0]
 800a3c6:	4a68      	ldr	r2, [pc, #416]	@ (800a568 <UART_SetConfig+0x2d4>)
 800a3c8:	4293      	cmp	r3, r2
 800a3ca:	d120      	bne.n	800a40e <UART_SetConfig+0x17a>
 800a3cc:	4b64      	ldr	r3, [pc, #400]	@ (800a560 <UART_SetConfig+0x2cc>)
 800a3ce:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a3d2:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 800a3d6:	2b30      	cmp	r3, #48	@ 0x30
 800a3d8:	d013      	beq.n	800a402 <UART_SetConfig+0x16e>
 800a3da:	2b30      	cmp	r3, #48	@ 0x30
 800a3dc:	d814      	bhi.n	800a408 <UART_SetConfig+0x174>
 800a3de:	2b20      	cmp	r3, #32
 800a3e0:	d009      	beq.n	800a3f6 <UART_SetConfig+0x162>
 800a3e2:	2b20      	cmp	r3, #32
 800a3e4:	d810      	bhi.n	800a408 <UART_SetConfig+0x174>
 800a3e6:	2b00      	cmp	r3, #0
 800a3e8:	d002      	beq.n	800a3f0 <UART_SetConfig+0x15c>
 800a3ea:	2b10      	cmp	r3, #16
 800a3ec:	d006      	beq.n	800a3fc <UART_SetConfig+0x168>
 800a3ee:	e00b      	b.n	800a408 <UART_SetConfig+0x174>
 800a3f0:	2300      	movs	r3, #0
 800a3f2:	77fb      	strb	r3, [r7, #31]
 800a3f4:	e0f2      	b.n	800a5dc <UART_SetConfig+0x348>
 800a3f6:	2302      	movs	r3, #2
 800a3f8:	77fb      	strb	r3, [r7, #31]
 800a3fa:	e0ef      	b.n	800a5dc <UART_SetConfig+0x348>
 800a3fc:	2304      	movs	r3, #4
 800a3fe:	77fb      	strb	r3, [r7, #31]
 800a400:	e0ec      	b.n	800a5dc <UART_SetConfig+0x348>
 800a402:	2308      	movs	r3, #8
 800a404:	77fb      	strb	r3, [r7, #31]
 800a406:	e0e9      	b.n	800a5dc <UART_SetConfig+0x348>
 800a408:	2310      	movs	r3, #16
 800a40a:	77fb      	strb	r3, [r7, #31]
 800a40c:	e0e6      	b.n	800a5dc <UART_SetConfig+0x348>
 800a40e:	687b      	ldr	r3, [r7, #4]
 800a410:	681b      	ldr	r3, [r3, #0]
 800a412:	4a56      	ldr	r2, [pc, #344]	@ (800a56c <UART_SetConfig+0x2d8>)
 800a414:	4293      	cmp	r3, r2
 800a416:	d120      	bne.n	800a45a <UART_SetConfig+0x1c6>
 800a418:	4b51      	ldr	r3, [pc, #324]	@ (800a560 <UART_SetConfig+0x2cc>)
 800a41a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a41e:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 800a422:	2bc0      	cmp	r3, #192	@ 0xc0
 800a424:	d013      	beq.n	800a44e <UART_SetConfig+0x1ba>
 800a426:	2bc0      	cmp	r3, #192	@ 0xc0
 800a428:	d814      	bhi.n	800a454 <UART_SetConfig+0x1c0>
 800a42a:	2b80      	cmp	r3, #128	@ 0x80
 800a42c:	d009      	beq.n	800a442 <UART_SetConfig+0x1ae>
 800a42e:	2b80      	cmp	r3, #128	@ 0x80
 800a430:	d810      	bhi.n	800a454 <UART_SetConfig+0x1c0>
 800a432:	2b00      	cmp	r3, #0
 800a434:	d002      	beq.n	800a43c <UART_SetConfig+0x1a8>
 800a436:	2b40      	cmp	r3, #64	@ 0x40
 800a438:	d006      	beq.n	800a448 <UART_SetConfig+0x1b4>
 800a43a:	e00b      	b.n	800a454 <UART_SetConfig+0x1c0>
 800a43c:	2300      	movs	r3, #0
 800a43e:	77fb      	strb	r3, [r7, #31]
 800a440:	e0cc      	b.n	800a5dc <UART_SetConfig+0x348>
 800a442:	2302      	movs	r3, #2
 800a444:	77fb      	strb	r3, [r7, #31]
 800a446:	e0c9      	b.n	800a5dc <UART_SetConfig+0x348>
 800a448:	2304      	movs	r3, #4
 800a44a:	77fb      	strb	r3, [r7, #31]
 800a44c:	e0c6      	b.n	800a5dc <UART_SetConfig+0x348>
 800a44e:	2308      	movs	r3, #8
 800a450:	77fb      	strb	r3, [r7, #31]
 800a452:	e0c3      	b.n	800a5dc <UART_SetConfig+0x348>
 800a454:	2310      	movs	r3, #16
 800a456:	77fb      	strb	r3, [r7, #31]
 800a458:	e0c0      	b.n	800a5dc <UART_SetConfig+0x348>
 800a45a:	687b      	ldr	r3, [r7, #4]
 800a45c:	681b      	ldr	r3, [r3, #0]
 800a45e:	4a44      	ldr	r2, [pc, #272]	@ (800a570 <UART_SetConfig+0x2dc>)
 800a460:	4293      	cmp	r3, r2
 800a462:	d125      	bne.n	800a4b0 <UART_SetConfig+0x21c>
 800a464:	4b3e      	ldr	r3, [pc, #248]	@ (800a560 <UART_SetConfig+0x2cc>)
 800a466:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a46a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800a46e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800a472:	d017      	beq.n	800a4a4 <UART_SetConfig+0x210>
 800a474:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800a478:	d817      	bhi.n	800a4aa <UART_SetConfig+0x216>
 800a47a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800a47e:	d00b      	beq.n	800a498 <UART_SetConfig+0x204>
 800a480:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800a484:	d811      	bhi.n	800a4aa <UART_SetConfig+0x216>
 800a486:	2b00      	cmp	r3, #0
 800a488:	d003      	beq.n	800a492 <UART_SetConfig+0x1fe>
 800a48a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800a48e:	d006      	beq.n	800a49e <UART_SetConfig+0x20a>
 800a490:	e00b      	b.n	800a4aa <UART_SetConfig+0x216>
 800a492:	2300      	movs	r3, #0
 800a494:	77fb      	strb	r3, [r7, #31]
 800a496:	e0a1      	b.n	800a5dc <UART_SetConfig+0x348>
 800a498:	2302      	movs	r3, #2
 800a49a:	77fb      	strb	r3, [r7, #31]
 800a49c:	e09e      	b.n	800a5dc <UART_SetConfig+0x348>
 800a49e:	2304      	movs	r3, #4
 800a4a0:	77fb      	strb	r3, [r7, #31]
 800a4a2:	e09b      	b.n	800a5dc <UART_SetConfig+0x348>
 800a4a4:	2308      	movs	r3, #8
 800a4a6:	77fb      	strb	r3, [r7, #31]
 800a4a8:	e098      	b.n	800a5dc <UART_SetConfig+0x348>
 800a4aa:	2310      	movs	r3, #16
 800a4ac:	77fb      	strb	r3, [r7, #31]
 800a4ae:	e095      	b.n	800a5dc <UART_SetConfig+0x348>
 800a4b0:	687b      	ldr	r3, [r7, #4]
 800a4b2:	681b      	ldr	r3, [r3, #0]
 800a4b4:	4a2f      	ldr	r2, [pc, #188]	@ (800a574 <UART_SetConfig+0x2e0>)
 800a4b6:	4293      	cmp	r3, r2
 800a4b8:	d125      	bne.n	800a506 <UART_SetConfig+0x272>
 800a4ba:	4b29      	ldr	r3, [pc, #164]	@ (800a560 <UART_SetConfig+0x2cc>)
 800a4bc:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a4c0:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 800a4c4:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800a4c8:	d017      	beq.n	800a4fa <UART_SetConfig+0x266>
 800a4ca:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800a4ce:	d817      	bhi.n	800a500 <UART_SetConfig+0x26c>
 800a4d0:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a4d4:	d00b      	beq.n	800a4ee <UART_SetConfig+0x25a>
 800a4d6:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a4da:	d811      	bhi.n	800a500 <UART_SetConfig+0x26c>
 800a4dc:	2b00      	cmp	r3, #0
 800a4de:	d003      	beq.n	800a4e8 <UART_SetConfig+0x254>
 800a4e0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a4e4:	d006      	beq.n	800a4f4 <UART_SetConfig+0x260>
 800a4e6:	e00b      	b.n	800a500 <UART_SetConfig+0x26c>
 800a4e8:	2301      	movs	r3, #1
 800a4ea:	77fb      	strb	r3, [r7, #31]
 800a4ec:	e076      	b.n	800a5dc <UART_SetConfig+0x348>
 800a4ee:	2302      	movs	r3, #2
 800a4f0:	77fb      	strb	r3, [r7, #31]
 800a4f2:	e073      	b.n	800a5dc <UART_SetConfig+0x348>
 800a4f4:	2304      	movs	r3, #4
 800a4f6:	77fb      	strb	r3, [r7, #31]
 800a4f8:	e070      	b.n	800a5dc <UART_SetConfig+0x348>
 800a4fa:	2308      	movs	r3, #8
 800a4fc:	77fb      	strb	r3, [r7, #31]
 800a4fe:	e06d      	b.n	800a5dc <UART_SetConfig+0x348>
 800a500:	2310      	movs	r3, #16
 800a502:	77fb      	strb	r3, [r7, #31]
 800a504:	e06a      	b.n	800a5dc <UART_SetConfig+0x348>
 800a506:	687b      	ldr	r3, [r7, #4]
 800a508:	681b      	ldr	r3, [r3, #0]
 800a50a:	4a1b      	ldr	r2, [pc, #108]	@ (800a578 <UART_SetConfig+0x2e4>)
 800a50c:	4293      	cmp	r3, r2
 800a50e:	d138      	bne.n	800a582 <UART_SetConfig+0x2ee>
 800a510:	4b13      	ldr	r3, [pc, #76]	@ (800a560 <UART_SetConfig+0x2cc>)
 800a512:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a516:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 800a51a:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800a51e:	d017      	beq.n	800a550 <UART_SetConfig+0x2bc>
 800a520:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800a524:	d82a      	bhi.n	800a57c <UART_SetConfig+0x2e8>
 800a526:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800a52a:	d00b      	beq.n	800a544 <UART_SetConfig+0x2b0>
 800a52c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800a530:	d824      	bhi.n	800a57c <UART_SetConfig+0x2e8>
 800a532:	2b00      	cmp	r3, #0
 800a534:	d003      	beq.n	800a53e <UART_SetConfig+0x2aa>
 800a536:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800a53a:	d006      	beq.n	800a54a <UART_SetConfig+0x2b6>
 800a53c:	e01e      	b.n	800a57c <UART_SetConfig+0x2e8>
 800a53e:	2300      	movs	r3, #0
 800a540:	77fb      	strb	r3, [r7, #31]
 800a542:	e04b      	b.n	800a5dc <UART_SetConfig+0x348>
 800a544:	2302      	movs	r3, #2
 800a546:	77fb      	strb	r3, [r7, #31]
 800a548:	e048      	b.n	800a5dc <UART_SetConfig+0x348>
 800a54a:	2304      	movs	r3, #4
 800a54c:	77fb      	strb	r3, [r7, #31]
 800a54e:	e045      	b.n	800a5dc <UART_SetConfig+0x348>
 800a550:	2308      	movs	r3, #8
 800a552:	77fb      	strb	r3, [r7, #31]
 800a554:	e042      	b.n	800a5dc <UART_SetConfig+0x348>
 800a556:	bf00      	nop
 800a558:	efff69f3 	.word	0xefff69f3
 800a55c:	40011000 	.word	0x40011000
 800a560:	40023800 	.word	0x40023800
 800a564:	40004400 	.word	0x40004400
 800a568:	40004800 	.word	0x40004800
 800a56c:	40004c00 	.word	0x40004c00
 800a570:	40005000 	.word	0x40005000
 800a574:	40011400 	.word	0x40011400
 800a578:	40007800 	.word	0x40007800
 800a57c:	2310      	movs	r3, #16
 800a57e:	77fb      	strb	r3, [r7, #31]
 800a580:	e02c      	b.n	800a5dc <UART_SetConfig+0x348>
 800a582:	687b      	ldr	r3, [r7, #4]
 800a584:	681b      	ldr	r3, [r3, #0]
 800a586:	4a72      	ldr	r2, [pc, #456]	@ (800a750 <UART_SetConfig+0x4bc>)
 800a588:	4293      	cmp	r3, r2
 800a58a:	d125      	bne.n	800a5d8 <UART_SetConfig+0x344>
 800a58c:	4b71      	ldr	r3, [pc, #452]	@ (800a754 <UART_SetConfig+0x4c0>)
 800a58e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a592:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800a596:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 800a59a:	d017      	beq.n	800a5cc <UART_SetConfig+0x338>
 800a59c:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 800a5a0:	d817      	bhi.n	800a5d2 <UART_SetConfig+0x33e>
 800a5a2:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a5a6:	d00b      	beq.n	800a5c0 <UART_SetConfig+0x32c>
 800a5a8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a5ac:	d811      	bhi.n	800a5d2 <UART_SetConfig+0x33e>
 800a5ae:	2b00      	cmp	r3, #0
 800a5b0:	d003      	beq.n	800a5ba <UART_SetConfig+0x326>
 800a5b2:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800a5b6:	d006      	beq.n	800a5c6 <UART_SetConfig+0x332>
 800a5b8:	e00b      	b.n	800a5d2 <UART_SetConfig+0x33e>
 800a5ba:	2300      	movs	r3, #0
 800a5bc:	77fb      	strb	r3, [r7, #31]
 800a5be:	e00d      	b.n	800a5dc <UART_SetConfig+0x348>
 800a5c0:	2302      	movs	r3, #2
 800a5c2:	77fb      	strb	r3, [r7, #31]
 800a5c4:	e00a      	b.n	800a5dc <UART_SetConfig+0x348>
 800a5c6:	2304      	movs	r3, #4
 800a5c8:	77fb      	strb	r3, [r7, #31]
 800a5ca:	e007      	b.n	800a5dc <UART_SetConfig+0x348>
 800a5cc:	2308      	movs	r3, #8
 800a5ce:	77fb      	strb	r3, [r7, #31]
 800a5d0:	e004      	b.n	800a5dc <UART_SetConfig+0x348>
 800a5d2:	2310      	movs	r3, #16
 800a5d4:	77fb      	strb	r3, [r7, #31]
 800a5d6:	e001      	b.n	800a5dc <UART_SetConfig+0x348>
 800a5d8:	2310      	movs	r3, #16
 800a5da:	77fb      	strb	r3, [r7, #31]
 800a5dc:	687b      	ldr	r3, [r7, #4]
 800a5de:	69db      	ldr	r3, [r3, #28]
 800a5e0:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a5e4:	d15b      	bne.n	800a69e <UART_SetConfig+0x40a>
 800a5e6:	7ffb      	ldrb	r3, [r7, #31]
 800a5e8:	2b08      	cmp	r3, #8
 800a5ea:	d828      	bhi.n	800a63e <UART_SetConfig+0x3aa>
 800a5ec:	a201      	add	r2, pc, #4	@ (adr r2, 800a5f4 <UART_SetConfig+0x360>)
 800a5ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a5f2:	bf00      	nop
 800a5f4:	0800a619 	.word	0x0800a619
 800a5f8:	0800a621 	.word	0x0800a621
 800a5fc:	0800a629 	.word	0x0800a629
 800a600:	0800a63f 	.word	0x0800a63f
 800a604:	0800a62f 	.word	0x0800a62f
 800a608:	0800a63f 	.word	0x0800a63f
 800a60c:	0800a63f 	.word	0x0800a63f
 800a610:	0800a63f 	.word	0x0800a63f
 800a614:	0800a637 	.word	0x0800a637
 800a618:	f7fd fb28 	bl	8007c6c <HAL_RCC_GetPCLK1Freq>
 800a61c:	61b8      	str	r0, [r7, #24]
 800a61e:	e013      	b.n	800a648 <UART_SetConfig+0x3b4>
 800a620:	f7fd fb38 	bl	8007c94 <HAL_RCC_GetPCLK2Freq>
 800a624:	61b8      	str	r0, [r7, #24]
 800a626:	e00f      	b.n	800a648 <UART_SetConfig+0x3b4>
 800a628:	4b4b      	ldr	r3, [pc, #300]	@ (800a758 <UART_SetConfig+0x4c4>)
 800a62a:	61bb      	str	r3, [r7, #24]
 800a62c:	e00c      	b.n	800a648 <UART_SetConfig+0x3b4>
 800a62e:	f7fd fa0d 	bl	8007a4c <HAL_RCC_GetSysClockFreq>
 800a632:	61b8      	str	r0, [r7, #24]
 800a634:	e008      	b.n	800a648 <UART_SetConfig+0x3b4>
 800a636:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800a63a:	61bb      	str	r3, [r7, #24]
 800a63c:	e004      	b.n	800a648 <UART_SetConfig+0x3b4>
 800a63e:	2300      	movs	r3, #0
 800a640:	61bb      	str	r3, [r7, #24]
 800a642:	2301      	movs	r3, #1
 800a644:	77bb      	strb	r3, [r7, #30]
 800a646:	bf00      	nop
 800a648:	69bb      	ldr	r3, [r7, #24]
 800a64a:	2b00      	cmp	r3, #0
 800a64c:	d074      	beq.n	800a738 <UART_SetConfig+0x4a4>
 800a64e:	69bb      	ldr	r3, [r7, #24]
 800a650:	005a      	lsls	r2, r3, #1
 800a652:	687b      	ldr	r3, [r7, #4]
 800a654:	685b      	ldr	r3, [r3, #4]
 800a656:	085b      	lsrs	r3, r3, #1
 800a658:	441a      	add	r2, r3
 800a65a:	687b      	ldr	r3, [r7, #4]
 800a65c:	685b      	ldr	r3, [r3, #4]
 800a65e:	fbb2 f3f3 	udiv	r3, r2, r3
 800a662:	613b      	str	r3, [r7, #16]
 800a664:	693b      	ldr	r3, [r7, #16]
 800a666:	2b0f      	cmp	r3, #15
 800a668:	d916      	bls.n	800a698 <UART_SetConfig+0x404>
 800a66a:	693b      	ldr	r3, [r7, #16]
 800a66c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800a670:	d212      	bcs.n	800a698 <UART_SetConfig+0x404>
 800a672:	693b      	ldr	r3, [r7, #16]
 800a674:	b29b      	uxth	r3, r3
 800a676:	f023 030f 	bic.w	r3, r3, #15
 800a67a:	81fb      	strh	r3, [r7, #14]
 800a67c:	693b      	ldr	r3, [r7, #16]
 800a67e:	085b      	lsrs	r3, r3, #1
 800a680:	b29b      	uxth	r3, r3
 800a682:	f003 0307 	and.w	r3, r3, #7
 800a686:	b29a      	uxth	r2, r3
 800a688:	89fb      	ldrh	r3, [r7, #14]
 800a68a:	4313      	orrs	r3, r2
 800a68c:	81fb      	strh	r3, [r7, #14]
 800a68e:	687b      	ldr	r3, [r7, #4]
 800a690:	681b      	ldr	r3, [r3, #0]
 800a692:	89fa      	ldrh	r2, [r7, #14]
 800a694:	60da      	str	r2, [r3, #12]
 800a696:	e04f      	b.n	800a738 <UART_SetConfig+0x4a4>
 800a698:	2301      	movs	r3, #1
 800a69a:	77bb      	strb	r3, [r7, #30]
 800a69c:	e04c      	b.n	800a738 <UART_SetConfig+0x4a4>
 800a69e:	7ffb      	ldrb	r3, [r7, #31]
 800a6a0:	2b08      	cmp	r3, #8
 800a6a2:	d828      	bhi.n	800a6f6 <UART_SetConfig+0x462>
 800a6a4:	a201      	add	r2, pc, #4	@ (adr r2, 800a6ac <UART_SetConfig+0x418>)
 800a6a6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a6aa:	bf00      	nop
 800a6ac:	0800a6d1 	.word	0x0800a6d1
 800a6b0:	0800a6d9 	.word	0x0800a6d9
 800a6b4:	0800a6e1 	.word	0x0800a6e1
 800a6b8:	0800a6f7 	.word	0x0800a6f7
 800a6bc:	0800a6e7 	.word	0x0800a6e7
 800a6c0:	0800a6f7 	.word	0x0800a6f7
 800a6c4:	0800a6f7 	.word	0x0800a6f7
 800a6c8:	0800a6f7 	.word	0x0800a6f7
 800a6cc:	0800a6ef 	.word	0x0800a6ef
 800a6d0:	f7fd facc 	bl	8007c6c <HAL_RCC_GetPCLK1Freq>
 800a6d4:	61b8      	str	r0, [r7, #24]
 800a6d6:	e013      	b.n	800a700 <UART_SetConfig+0x46c>
 800a6d8:	f7fd fadc 	bl	8007c94 <HAL_RCC_GetPCLK2Freq>
 800a6dc:	61b8      	str	r0, [r7, #24]
 800a6de:	e00f      	b.n	800a700 <UART_SetConfig+0x46c>
 800a6e0:	4b1d      	ldr	r3, [pc, #116]	@ (800a758 <UART_SetConfig+0x4c4>)
 800a6e2:	61bb      	str	r3, [r7, #24]
 800a6e4:	e00c      	b.n	800a700 <UART_SetConfig+0x46c>
 800a6e6:	f7fd f9b1 	bl	8007a4c <HAL_RCC_GetSysClockFreq>
 800a6ea:	61b8      	str	r0, [r7, #24]
 800a6ec:	e008      	b.n	800a700 <UART_SetConfig+0x46c>
 800a6ee:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800a6f2:	61bb      	str	r3, [r7, #24]
 800a6f4:	e004      	b.n	800a700 <UART_SetConfig+0x46c>
 800a6f6:	2300      	movs	r3, #0
 800a6f8:	61bb      	str	r3, [r7, #24]
 800a6fa:	2301      	movs	r3, #1
 800a6fc:	77bb      	strb	r3, [r7, #30]
 800a6fe:	bf00      	nop
 800a700:	69bb      	ldr	r3, [r7, #24]
 800a702:	2b00      	cmp	r3, #0
 800a704:	d018      	beq.n	800a738 <UART_SetConfig+0x4a4>
 800a706:	687b      	ldr	r3, [r7, #4]
 800a708:	685b      	ldr	r3, [r3, #4]
 800a70a:	085a      	lsrs	r2, r3, #1
 800a70c:	69bb      	ldr	r3, [r7, #24]
 800a70e:	441a      	add	r2, r3
 800a710:	687b      	ldr	r3, [r7, #4]
 800a712:	685b      	ldr	r3, [r3, #4]
 800a714:	fbb2 f3f3 	udiv	r3, r2, r3
 800a718:	613b      	str	r3, [r7, #16]
 800a71a:	693b      	ldr	r3, [r7, #16]
 800a71c:	2b0f      	cmp	r3, #15
 800a71e:	d909      	bls.n	800a734 <UART_SetConfig+0x4a0>
 800a720:	693b      	ldr	r3, [r7, #16]
 800a722:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800a726:	d205      	bcs.n	800a734 <UART_SetConfig+0x4a0>
 800a728:	693b      	ldr	r3, [r7, #16]
 800a72a:	b29a      	uxth	r2, r3
 800a72c:	687b      	ldr	r3, [r7, #4]
 800a72e:	681b      	ldr	r3, [r3, #0]
 800a730:	60da      	str	r2, [r3, #12]
 800a732:	e001      	b.n	800a738 <UART_SetConfig+0x4a4>
 800a734:	2301      	movs	r3, #1
 800a736:	77bb      	strb	r3, [r7, #30]
 800a738:	687b      	ldr	r3, [r7, #4]
 800a73a:	2200      	movs	r2, #0
 800a73c:	669a      	str	r2, [r3, #104]	@ 0x68
 800a73e:	687b      	ldr	r3, [r7, #4]
 800a740:	2200      	movs	r2, #0
 800a742:	66da      	str	r2, [r3, #108]	@ 0x6c
 800a744:	7fbb      	ldrb	r3, [r7, #30]
 800a746:	4618      	mov	r0, r3
 800a748:	3720      	adds	r7, #32
 800a74a:	46bd      	mov	sp, r7
 800a74c:	bd80      	pop	{r7, pc}
 800a74e:	bf00      	nop
 800a750:	40007c00 	.word	0x40007c00
 800a754:	40023800 	.word	0x40023800
 800a758:	00f42400 	.word	0x00f42400

0800a75c <UART_AdvFeatureConfig>:
 800a75c:	b480      	push	{r7}
 800a75e:	b083      	sub	sp, #12
 800a760:	af00      	add	r7, sp, #0
 800a762:	6078      	str	r0, [r7, #4]
 800a764:	687b      	ldr	r3, [r7, #4]
 800a766:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a768:	f003 0301 	and.w	r3, r3, #1
 800a76c:	2b00      	cmp	r3, #0
 800a76e:	d00a      	beq.n	800a786 <UART_AdvFeatureConfig+0x2a>
 800a770:	687b      	ldr	r3, [r7, #4]
 800a772:	681b      	ldr	r3, [r3, #0]
 800a774:	685b      	ldr	r3, [r3, #4]
 800a776:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 800a77a:	687b      	ldr	r3, [r7, #4]
 800a77c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800a77e:	687b      	ldr	r3, [r7, #4]
 800a780:	681b      	ldr	r3, [r3, #0]
 800a782:	430a      	orrs	r2, r1
 800a784:	605a      	str	r2, [r3, #4]
 800a786:	687b      	ldr	r3, [r7, #4]
 800a788:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a78a:	f003 0302 	and.w	r3, r3, #2
 800a78e:	2b00      	cmp	r3, #0
 800a790:	d00a      	beq.n	800a7a8 <UART_AdvFeatureConfig+0x4c>
 800a792:	687b      	ldr	r3, [r7, #4]
 800a794:	681b      	ldr	r3, [r3, #0]
 800a796:	685b      	ldr	r3, [r3, #4]
 800a798:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 800a79c:	687b      	ldr	r3, [r7, #4]
 800a79e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800a7a0:	687b      	ldr	r3, [r7, #4]
 800a7a2:	681b      	ldr	r3, [r3, #0]
 800a7a4:	430a      	orrs	r2, r1
 800a7a6:	605a      	str	r2, [r3, #4]
 800a7a8:	687b      	ldr	r3, [r7, #4]
 800a7aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a7ac:	f003 0304 	and.w	r3, r3, #4
 800a7b0:	2b00      	cmp	r3, #0
 800a7b2:	d00a      	beq.n	800a7ca <UART_AdvFeatureConfig+0x6e>
 800a7b4:	687b      	ldr	r3, [r7, #4]
 800a7b6:	681b      	ldr	r3, [r3, #0]
 800a7b8:	685b      	ldr	r3, [r3, #4]
 800a7ba:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 800a7be:	687b      	ldr	r3, [r7, #4]
 800a7c0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800a7c2:	687b      	ldr	r3, [r7, #4]
 800a7c4:	681b      	ldr	r3, [r3, #0]
 800a7c6:	430a      	orrs	r2, r1
 800a7c8:	605a      	str	r2, [r3, #4]
 800a7ca:	687b      	ldr	r3, [r7, #4]
 800a7cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a7ce:	f003 0308 	and.w	r3, r3, #8
 800a7d2:	2b00      	cmp	r3, #0
 800a7d4:	d00a      	beq.n	800a7ec <UART_AdvFeatureConfig+0x90>
 800a7d6:	687b      	ldr	r3, [r7, #4]
 800a7d8:	681b      	ldr	r3, [r3, #0]
 800a7da:	685b      	ldr	r3, [r3, #4]
 800a7dc:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 800a7e0:	687b      	ldr	r3, [r7, #4]
 800a7e2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a7e4:	687b      	ldr	r3, [r7, #4]
 800a7e6:	681b      	ldr	r3, [r3, #0]
 800a7e8:	430a      	orrs	r2, r1
 800a7ea:	605a      	str	r2, [r3, #4]
 800a7ec:	687b      	ldr	r3, [r7, #4]
 800a7ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a7f0:	f003 0310 	and.w	r3, r3, #16
 800a7f4:	2b00      	cmp	r3, #0
 800a7f6:	d00a      	beq.n	800a80e <UART_AdvFeatureConfig+0xb2>
 800a7f8:	687b      	ldr	r3, [r7, #4]
 800a7fa:	681b      	ldr	r3, [r3, #0]
 800a7fc:	689b      	ldr	r3, [r3, #8]
 800a7fe:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 800a802:	687b      	ldr	r3, [r7, #4]
 800a804:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800a806:	687b      	ldr	r3, [r7, #4]
 800a808:	681b      	ldr	r3, [r3, #0]
 800a80a:	430a      	orrs	r2, r1
 800a80c:	609a      	str	r2, [r3, #8]
 800a80e:	687b      	ldr	r3, [r7, #4]
 800a810:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a812:	f003 0320 	and.w	r3, r3, #32
 800a816:	2b00      	cmp	r3, #0
 800a818:	d00a      	beq.n	800a830 <UART_AdvFeatureConfig+0xd4>
 800a81a:	687b      	ldr	r3, [r7, #4]
 800a81c:	681b      	ldr	r3, [r3, #0]
 800a81e:	689b      	ldr	r3, [r3, #8]
 800a820:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 800a824:	687b      	ldr	r3, [r7, #4]
 800a826:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800a828:	687b      	ldr	r3, [r7, #4]
 800a82a:	681b      	ldr	r3, [r3, #0]
 800a82c:	430a      	orrs	r2, r1
 800a82e:	609a      	str	r2, [r3, #8]
 800a830:	687b      	ldr	r3, [r7, #4]
 800a832:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a834:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a838:	2b00      	cmp	r3, #0
 800a83a:	d01a      	beq.n	800a872 <UART_AdvFeatureConfig+0x116>
 800a83c:	687b      	ldr	r3, [r7, #4]
 800a83e:	681b      	ldr	r3, [r3, #0]
 800a840:	685b      	ldr	r3, [r3, #4]
 800a842:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 800a846:	687b      	ldr	r3, [r7, #4]
 800a848:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800a84a:	687b      	ldr	r3, [r7, #4]
 800a84c:	681b      	ldr	r3, [r3, #0]
 800a84e:	430a      	orrs	r2, r1
 800a850:	605a      	str	r2, [r3, #4]
 800a852:	687b      	ldr	r3, [r7, #4]
 800a854:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a856:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800a85a:	d10a      	bne.n	800a872 <UART_AdvFeatureConfig+0x116>
 800a85c:	687b      	ldr	r3, [r7, #4]
 800a85e:	681b      	ldr	r3, [r3, #0]
 800a860:	685b      	ldr	r3, [r3, #4]
 800a862:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 800a866:	687b      	ldr	r3, [r7, #4]
 800a868:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800a86a:	687b      	ldr	r3, [r7, #4]
 800a86c:	681b      	ldr	r3, [r3, #0]
 800a86e:	430a      	orrs	r2, r1
 800a870:	605a      	str	r2, [r3, #4]
 800a872:	687b      	ldr	r3, [r7, #4]
 800a874:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a876:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a87a:	2b00      	cmp	r3, #0
 800a87c:	d00a      	beq.n	800a894 <UART_AdvFeatureConfig+0x138>
 800a87e:	687b      	ldr	r3, [r7, #4]
 800a880:	681b      	ldr	r3, [r3, #0]
 800a882:	685b      	ldr	r3, [r3, #4]
 800a884:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 800a888:	687b      	ldr	r3, [r7, #4]
 800a88a:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 800a88c:	687b      	ldr	r3, [r7, #4]
 800a88e:	681b      	ldr	r3, [r3, #0]
 800a890:	430a      	orrs	r2, r1
 800a892:	605a      	str	r2, [r3, #4]
 800a894:	bf00      	nop
 800a896:	370c      	adds	r7, #12
 800a898:	46bd      	mov	sp, r7
 800a89a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a89e:	4770      	bx	lr

0800a8a0 <UART_CheckIdleState>:
 800a8a0:	b580      	push	{r7, lr}
 800a8a2:	b086      	sub	sp, #24
 800a8a4:	af02      	add	r7, sp, #8
 800a8a6:	6078      	str	r0, [r7, #4]
 800a8a8:	687b      	ldr	r3, [r7, #4]
 800a8aa:	2200      	movs	r2, #0
 800a8ac:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800a8b0:	f7fa fbd4 	bl	800505c <HAL_GetTick>
 800a8b4:	60f8      	str	r0, [r7, #12]
 800a8b6:	687b      	ldr	r3, [r7, #4]
 800a8b8:	681b      	ldr	r3, [r3, #0]
 800a8ba:	681b      	ldr	r3, [r3, #0]
 800a8bc:	f003 0308 	and.w	r3, r3, #8
 800a8c0:	2b08      	cmp	r3, #8
 800a8c2:	d10e      	bne.n	800a8e2 <UART_CheckIdleState+0x42>
 800a8c4:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800a8c8:	9300      	str	r3, [sp, #0]
 800a8ca:	68fb      	ldr	r3, [r7, #12]
 800a8cc:	2200      	movs	r2, #0
 800a8ce:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 800a8d2:	6878      	ldr	r0, [r7, #4]
 800a8d4:	f000 f81b 	bl	800a90e <UART_WaitOnFlagUntilTimeout>
 800a8d8:	4603      	mov	r3, r0
 800a8da:	2b00      	cmp	r3, #0
 800a8dc:	d001      	beq.n	800a8e2 <UART_CheckIdleState+0x42>
 800a8de:	2303      	movs	r3, #3
 800a8e0:	e011      	b.n	800a906 <UART_CheckIdleState+0x66>
 800a8e2:	687b      	ldr	r3, [r7, #4]
 800a8e4:	2220      	movs	r2, #32
 800a8e6:	67da      	str	r2, [r3, #124]	@ 0x7c
 800a8e8:	687b      	ldr	r3, [r7, #4]
 800a8ea:	2220      	movs	r2, #32
 800a8ec:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800a8f0:	687b      	ldr	r3, [r7, #4]
 800a8f2:	2200      	movs	r2, #0
 800a8f4:	661a      	str	r2, [r3, #96]	@ 0x60
 800a8f6:	687b      	ldr	r3, [r7, #4]
 800a8f8:	2200      	movs	r2, #0
 800a8fa:	665a      	str	r2, [r3, #100]	@ 0x64
 800a8fc:	687b      	ldr	r3, [r7, #4]
 800a8fe:	2200      	movs	r2, #0
 800a900:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800a904:	2300      	movs	r3, #0
 800a906:	4618      	mov	r0, r3
 800a908:	3710      	adds	r7, #16
 800a90a:	46bd      	mov	sp, r7
 800a90c:	bd80      	pop	{r7, pc}

0800a90e <UART_WaitOnFlagUntilTimeout>:
 800a90e:	b580      	push	{r7, lr}
 800a910:	b09c      	sub	sp, #112	@ 0x70
 800a912:	af00      	add	r7, sp, #0
 800a914:	60f8      	str	r0, [r7, #12]
 800a916:	60b9      	str	r1, [r7, #8]
 800a918:	603b      	str	r3, [r7, #0]
 800a91a:	4613      	mov	r3, r2
 800a91c:	71fb      	strb	r3, [r7, #7]
 800a91e:	e0a7      	b.n	800aa70 <UART_WaitOnFlagUntilTimeout+0x162>
 800a920:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800a922:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a926:	f000 80a3 	beq.w	800aa70 <UART_WaitOnFlagUntilTimeout+0x162>
 800a92a:	f7fa fb97 	bl	800505c <HAL_GetTick>
 800a92e:	4602      	mov	r2, r0
 800a930:	683b      	ldr	r3, [r7, #0]
 800a932:	1ad3      	subs	r3, r2, r3
 800a934:	6fba      	ldr	r2, [r7, #120]	@ 0x78
 800a936:	429a      	cmp	r2, r3
 800a938:	d302      	bcc.n	800a940 <UART_WaitOnFlagUntilTimeout+0x32>
 800a93a:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800a93c:	2b00      	cmp	r3, #0
 800a93e:	d13f      	bne.n	800a9c0 <UART_WaitOnFlagUntilTimeout+0xb2>
 800a940:	68fb      	ldr	r3, [r7, #12]
 800a942:	681b      	ldr	r3, [r3, #0]
 800a944:	653b      	str	r3, [r7, #80]	@ 0x50
 800a946:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800a948:	e853 3f00 	ldrex	r3, [r3]
 800a94c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800a94e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800a950:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
 800a954:	667b      	str	r3, [r7, #100]	@ 0x64
 800a956:	68fb      	ldr	r3, [r7, #12]
 800a958:	681b      	ldr	r3, [r3, #0]
 800a95a:	461a      	mov	r2, r3
 800a95c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800a95e:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800a960:	65ba      	str	r2, [r7, #88]	@ 0x58
 800a962:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 800a964:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 800a966:	e841 2300 	strex	r3, r2, [r1]
 800a96a:	657b      	str	r3, [r7, #84]	@ 0x54
 800a96c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800a96e:	2b00      	cmp	r3, #0
 800a970:	d1e6      	bne.n	800a940 <UART_WaitOnFlagUntilTimeout+0x32>
 800a972:	68fb      	ldr	r3, [r7, #12]
 800a974:	681b      	ldr	r3, [r3, #0]
 800a976:	3308      	adds	r3, #8
 800a978:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800a97a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a97c:	e853 3f00 	ldrex	r3, [r3]
 800a980:	63bb      	str	r3, [r7, #56]	@ 0x38
 800a982:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a984:	f023 0301 	bic.w	r3, r3, #1
 800a988:	663b      	str	r3, [r7, #96]	@ 0x60
 800a98a:	68fb      	ldr	r3, [r7, #12]
 800a98c:	681b      	ldr	r3, [r3, #0]
 800a98e:	3308      	adds	r3, #8
 800a990:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 800a992:	64ba      	str	r2, [r7, #72]	@ 0x48
 800a994:	647b      	str	r3, [r7, #68]	@ 0x44
 800a996:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 800a998:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800a99a:	e841 2300 	strex	r3, r2, [r1]
 800a99e:	643b      	str	r3, [r7, #64]	@ 0x40
 800a9a0:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800a9a2:	2b00      	cmp	r3, #0
 800a9a4:	d1e5      	bne.n	800a972 <UART_WaitOnFlagUntilTimeout+0x64>
 800a9a6:	68fb      	ldr	r3, [r7, #12]
 800a9a8:	2220      	movs	r2, #32
 800a9aa:	67da      	str	r2, [r3, #124]	@ 0x7c
 800a9ac:	68fb      	ldr	r3, [r7, #12]
 800a9ae:	2220      	movs	r2, #32
 800a9b0:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800a9b4:	68fb      	ldr	r3, [r7, #12]
 800a9b6:	2200      	movs	r2, #0
 800a9b8:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800a9bc:	2303      	movs	r3, #3
 800a9be:	e068      	b.n	800aa92 <UART_WaitOnFlagUntilTimeout+0x184>
 800a9c0:	68fb      	ldr	r3, [r7, #12]
 800a9c2:	681b      	ldr	r3, [r3, #0]
 800a9c4:	681b      	ldr	r3, [r3, #0]
 800a9c6:	f003 0304 	and.w	r3, r3, #4
 800a9ca:	2b00      	cmp	r3, #0
 800a9cc:	d050      	beq.n	800aa70 <UART_WaitOnFlagUntilTimeout+0x162>
 800a9ce:	68fb      	ldr	r3, [r7, #12]
 800a9d0:	681b      	ldr	r3, [r3, #0]
 800a9d2:	69db      	ldr	r3, [r3, #28]
 800a9d4:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800a9d8:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a9dc:	d148      	bne.n	800aa70 <UART_WaitOnFlagUntilTimeout+0x162>
 800a9de:	68fb      	ldr	r3, [r7, #12]
 800a9e0:	681b      	ldr	r3, [r3, #0]
 800a9e2:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800a9e6:	621a      	str	r2, [r3, #32]
 800a9e8:	68fb      	ldr	r3, [r7, #12]
 800a9ea:	681b      	ldr	r3, [r3, #0]
 800a9ec:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a9ee:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a9f0:	e853 3f00 	ldrex	r3, [r3]
 800a9f4:	627b      	str	r3, [r7, #36]	@ 0x24
 800a9f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a9f8:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
 800a9fc:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800a9fe:	68fb      	ldr	r3, [r7, #12]
 800aa00:	681b      	ldr	r3, [r3, #0]
 800aa02:	461a      	mov	r2, r3
 800aa04:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800aa06:	637b      	str	r3, [r7, #52]	@ 0x34
 800aa08:	633a      	str	r2, [r7, #48]	@ 0x30
 800aa0a:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800aa0c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800aa0e:	e841 2300 	strex	r3, r2, [r1]
 800aa12:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800aa14:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800aa16:	2b00      	cmp	r3, #0
 800aa18:	d1e6      	bne.n	800a9e8 <UART_WaitOnFlagUntilTimeout+0xda>
 800aa1a:	68fb      	ldr	r3, [r7, #12]
 800aa1c:	681b      	ldr	r3, [r3, #0]
 800aa1e:	3308      	adds	r3, #8
 800aa20:	617b      	str	r3, [r7, #20]
 800aa22:	697b      	ldr	r3, [r7, #20]
 800aa24:	e853 3f00 	ldrex	r3, [r3]
 800aa28:	613b      	str	r3, [r7, #16]
 800aa2a:	693b      	ldr	r3, [r7, #16]
 800aa2c:	f023 0301 	bic.w	r3, r3, #1
 800aa30:	66bb      	str	r3, [r7, #104]	@ 0x68
 800aa32:	68fb      	ldr	r3, [r7, #12]
 800aa34:	681b      	ldr	r3, [r3, #0]
 800aa36:	3308      	adds	r3, #8
 800aa38:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 800aa3a:	623a      	str	r2, [r7, #32]
 800aa3c:	61fb      	str	r3, [r7, #28]
 800aa3e:	69f9      	ldr	r1, [r7, #28]
 800aa40:	6a3a      	ldr	r2, [r7, #32]
 800aa42:	e841 2300 	strex	r3, r2, [r1]
 800aa46:	61bb      	str	r3, [r7, #24]
 800aa48:	69bb      	ldr	r3, [r7, #24]
 800aa4a:	2b00      	cmp	r3, #0
 800aa4c:	d1e5      	bne.n	800aa1a <UART_WaitOnFlagUntilTimeout+0x10c>
 800aa4e:	68fb      	ldr	r3, [r7, #12]
 800aa50:	2220      	movs	r2, #32
 800aa52:	67da      	str	r2, [r3, #124]	@ 0x7c
 800aa54:	68fb      	ldr	r3, [r7, #12]
 800aa56:	2220      	movs	r2, #32
 800aa58:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800aa5c:	68fb      	ldr	r3, [r7, #12]
 800aa5e:	2220      	movs	r2, #32
 800aa60:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800aa64:	68fb      	ldr	r3, [r7, #12]
 800aa66:	2200      	movs	r2, #0
 800aa68:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800aa6c:	2303      	movs	r3, #3
 800aa6e:	e010      	b.n	800aa92 <UART_WaitOnFlagUntilTimeout+0x184>
 800aa70:	68fb      	ldr	r3, [r7, #12]
 800aa72:	681b      	ldr	r3, [r3, #0]
 800aa74:	69da      	ldr	r2, [r3, #28]
 800aa76:	68bb      	ldr	r3, [r7, #8]
 800aa78:	4013      	ands	r3, r2
 800aa7a:	68ba      	ldr	r2, [r7, #8]
 800aa7c:	429a      	cmp	r2, r3
 800aa7e:	bf0c      	ite	eq
 800aa80:	2301      	moveq	r3, #1
 800aa82:	2300      	movne	r3, #0
 800aa84:	b2db      	uxtb	r3, r3
 800aa86:	461a      	mov	r2, r3
 800aa88:	79fb      	ldrb	r3, [r7, #7]
 800aa8a:	429a      	cmp	r2, r3
 800aa8c:	f43f af48 	beq.w	800a920 <UART_WaitOnFlagUntilTimeout+0x12>
 800aa90:	2300      	movs	r3, #0
 800aa92:	4618      	mov	r0, r3
 800aa94:	3770      	adds	r7, #112	@ 0x70
 800aa96:	46bd      	mov	sp, r7
 800aa98:	bd80      	pop	{r7, pc}
	...

0800aa9c <FMC_NORSRAM_Init>:
 800aa9c:	b480      	push	{r7}
 800aa9e:	b087      	sub	sp, #28
 800aaa0:	af00      	add	r7, sp, #0
 800aaa2:	6078      	str	r0, [r7, #4]
 800aaa4:	6039      	str	r1, [r7, #0]
 800aaa6:	683b      	ldr	r3, [r7, #0]
 800aaa8:	681a      	ldr	r2, [r3, #0]
 800aaaa:	687b      	ldr	r3, [r7, #4]
 800aaac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800aab0:	683a      	ldr	r2, [r7, #0]
 800aab2:	6812      	ldr	r2, [r2, #0]
 800aab4:	f023 0101 	bic.w	r1, r3, #1
 800aab8:	687b      	ldr	r3, [r7, #4]
 800aaba:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800aabe:	683b      	ldr	r3, [r7, #0]
 800aac0:	689b      	ldr	r3, [r3, #8]
 800aac2:	2b08      	cmp	r3, #8
 800aac4:	d102      	bne.n	800aacc <FMC_NORSRAM_Init+0x30>
 800aac6:	2340      	movs	r3, #64	@ 0x40
 800aac8:	617b      	str	r3, [r7, #20]
 800aaca:	e001      	b.n	800aad0 <FMC_NORSRAM_Init+0x34>
 800aacc:	2300      	movs	r3, #0
 800aace:	617b      	str	r3, [r7, #20]
 800aad0:	683b      	ldr	r3, [r7, #0]
 800aad2:	685a      	ldr	r2, [r3, #4]
 800aad4:	697b      	ldr	r3, [r7, #20]
 800aad6:	431a      	orrs	r2, r3
 800aad8:	683b      	ldr	r3, [r7, #0]
 800aada:	689b      	ldr	r3, [r3, #8]
 800aadc:	431a      	orrs	r2, r3
 800aade:	683b      	ldr	r3, [r7, #0]
 800aae0:	68db      	ldr	r3, [r3, #12]
 800aae2:	431a      	orrs	r2, r3
 800aae4:	683b      	ldr	r3, [r7, #0]
 800aae6:	691b      	ldr	r3, [r3, #16]
 800aae8:	431a      	orrs	r2, r3
 800aaea:	683b      	ldr	r3, [r7, #0]
 800aaec:	695b      	ldr	r3, [r3, #20]
 800aaee:	431a      	orrs	r2, r3
 800aaf0:	683b      	ldr	r3, [r7, #0]
 800aaf2:	699b      	ldr	r3, [r3, #24]
 800aaf4:	431a      	orrs	r2, r3
 800aaf6:	683b      	ldr	r3, [r7, #0]
 800aaf8:	69db      	ldr	r3, [r3, #28]
 800aafa:	431a      	orrs	r2, r3
 800aafc:	683b      	ldr	r3, [r7, #0]
 800aafe:	6a1b      	ldr	r3, [r3, #32]
 800ab00:	431a      	orrs	r2, r3
 800ab02:	683b      	ldr	r3, [r7, #0]
 800ab04:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ab06:	431a      	orrs	r2, r3
 800ab08:	683b      	ldr	r3, [r7, #0]
 800ab0a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ab0c:	431a      	orrs	r2, r3
 800ab0e:	683b      	ldr	r3, [r7, #0]
 800ab10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ab12:	4313      	orrs	r3, r2
 800ab14:	613b      	str	r3, [r7, #16]
 800ab16:	683b      	ldr	r3, [r7, #0]
 800ab18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ab1a:	693a      	ldr	r2, [r7, #16]
 800ab1c:	4313      	orrs	r3, r2
 800ab1e:	613b      	str	r3, [r7, #16]
 800ab20:	683b      	ldr	r3, [r7, #0]
 800ab22:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ab24:	693a      	ldr	r2, [r7, #16]
 800ab26:	4313      	orrs	r3, r2
 800ab28:	613b      	str	r3, [r7, #16]
 800ab2a:	683b      	ldr	r3, [r7, #0]
 800ab2c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ab2e:	693a      	ldr	r2, [r7, #16]
 800ab30:	4313      	orrs	r3, r2
 800ab32:	613b      	str	r3, [r7, #16]
 800ab34:	4b20      	ldr	r3, [pc, #128]	@ (800abb8 <FMC_NORSRAM_Init+0x11c>)
 800ab36:	60fb      	str	r3, [r7, #12]
 800ab38:	68fb      	ldr	r3, [r7, #12]
 800ab3a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800ab3e:	60fb      	str	r3, [r7, #12]
 800ab40:	68fb      	ldr	r3, [r7, #12]
 800ab42:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800ab46:	60fb      	str	r3, [r7, #12]
 800ab48:	68fb      	ldr	r3, [r7, #12]
 800ab4a:	f443 23e0 	orr.w	r3, r3, #458752	@ 0x70000
 800ab4e:	60fb      	str	r3, [r7, #12]
 800ab50:	683b      	ldr	r3, [r7, #0]
 800ab52:	681a      	ldr	r2, [r3, #0]
 800ab54:	687b      	ldr	r3, [r7, #4]
 800ab56:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800ab5a:	68fb      	ldr	r3, [r7, #12]
 800ab5c:	43db      	mvns	r3, r3
 800ab5e:	ea02 0103 	and.w	r1, r2, r3
 800ab62:	683b      	ldr	r3, [r7, #0]
 800ab64:	681a      	ldr	r2, [r3, #0]
 800ab66:	693b      	ldr	r3, [r7, #16]
 800ab68:	4319      	orrs	r1, r3
 800ab6a:	687b      	ldr	r3, [r7, #4]
 800ab6c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800ab70:	683b      	ldr	r3, [r7, #0]
 800ab72:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ab74:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800ab78:	d10c      	bne.n	800ab94 <FMC_NORSRAM_Init+0xf8>
 800ab7a:	683b      	ldr	r3, [r7, #0]
 800ab7c:	681b      	ldr	r3, [r3, #0]
 800ab7e:	2b00      	cmp	r3, #0
 800ab80:	d008      	beq.n	800ab94 <FMC_NORSRAM_Init+0xf8>
 800ab82:	687b      	ldr	r3, [r7, #4]
 800ab84:	681b      	ldr	r3, [r3, #0]
 800ab86:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 800ab8a:	683b      	ldr	r3, [r7, #0]
 800ab8c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ab8e:	431a      	orrs	r2, r3
 800ab90:	687b      	ldr	r3, [r7, #4]
 800ab92:	601a      	str	r2, [r3, #0]
 800ab94:	683b      	ldr	r3, [r7, #0]
 800ab96:	681b      	ldr	r3, [r3, #0]
 800ab98:	2b00      	cmp	r3, #0
 800ab9a:	d006      	beq.n	800abaa <FMC_NORSRAM_Init+0x10e>
 800ab9c:	687b      	ldr	r3, [r7, #4]
 800ab9e:	681a      	ldr	r2, [r3, #0]
 800aba0:	683b      	ldr	r3, [r7, #0]
 800aba2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800aba4:	431a      	orrs	r2, r3
 800aba6:	687b      	ldr	r3, [r7, #4]
 800aba8:	601a      	str	r2, [r3, #0]
 800abaa:	2300      	movs	r3, #0
 800abac:	4618      	mov	r0, r3
 800abae:	371c      	adds	r7, #28
 800abb0:	46bd      	mov	sp, r7
 800abb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abb6:	4770      	bx	lr
 800abb8:	0008fb7f 	.word	0x0008fb7f

0800abbc <FMC_NORSRAM_Timing_Init>:
 800abbc:	b480      	push	{r7}
 800abbe:	b087      	sub	sp, #28
 800abc0:	af00      	add	r7, sp, #0
 800abc2:	60f8      	str	r0, [r7, #12]
 800abc4:	60b9      	str	r1, [r7, #8]
 800abc6:	607a      	str	r2, [r7, #4]
 800abc8:	687b      	ldr	r3, [r7, #4]
 800abca:	1c5a      	adds	r2, r3, #1
 800abcc:	68fb      	ldr	r3, [r7, #12]
 800abce:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800abd2:	f003 4140 	and.w	r1, r3, #3221225472	@ 0xc0000000
 800abd6:	68bb      	ldr	r3, [r7, #8]
 800abd8:	681a      	ldr	r2, [r3, #0]
 800abda:	68bb      	ldr	r3, [r7, #8]
 800abdc:	685b      	ldr	r3, [r3, #4]
 800abde:	011b      	lsls	r3, r3, #4
 800abe0:	431a      	orrs	r2, r3
 800abe2:	68bb      	ldr	r3, [r7, #8]
 800abe4:	689b      	ldr	r3, [r3, #8]
 800abe6:	021b      	lsls	r3, r3, #8
 800abe8:	431a      	orrs	r2, r3
 800abea:	68bb      	ldr	r3, [r7, #8]
 800abec:	68db      	ldr	r3, [r3, #12]
 800abee:	041b      	lsls	r3, r3, #16
 800abf0:	431a      	orrs	r2, r3
 800abf2:	68bb      	ldr	r3, [r7, #8]
 800abf4:	691b      	ldr	r3, [r3, #16]
 800abf6:	3b01      	subs	r3, #1
 800abf8:	051b      	lsls	r3, r3, #20
 800abfa:	431a      	orrs	r2, r3
 800abfc:	68bb      	ldr	r3, [r7, #8]
 800abfe:	695b      	ldr	r3, [r3, #20]
 800ac00:	3b02      	subs	r3, #2
 800ac02:	061b      	lsls	r3, r3, #24
 800ac04:	431a      	orrs	r2, r3
 800ac06:	68bb      	ldr	r3, [r7, #8]
 800ac08:	699b      	ldr	r3, [r3, #24]
 800ac0a:	4313      	orrs	r3, r2
 800ac0c:	687a      	ldr	r2, [r7, #4]
 800ac0e:	3201      	adds	r2, #1
 800ac10:	4319      	orrs	r1, r3
 800ac12:	68fb      	ldr	r3, [r7, #12]
 800ac14:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800ac18:	68fb      	ldr	r3, [r7, #12]
 800ac1a:	681b      	ldr	r3, [r3, #0]
 800ac1c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800ac20:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800ac24:	d113      	bne.n	800ac4e <FMC_NORSRAM_Timing_Init+0x92>
 800ac26:	68fb      	ldr	r3, [r7, #12]
 800ac28:	685b      	ldr	r3, [r3, #4]
 800ac2a:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 800ac2e:	617b      	str	r3, [r7, #20]
 800ac30:	68bb      	ldr	r3, [r7, #8]
 800ac32:	691b      	ldr	r3, [r3, #16]
 800ac34:	3b01      	subs	r3, #1
 800ac36:	051b      	lsls	r3, r3, #20
 800ac38:	697a      	ldr	r2, [r7, #20]
 800ac3a:	4313      	orrs	r3, r2
 800ac3c:	617b      	str	r3, [r7, #20]
 800ac3e:	68fb      	ldr	r3, [r7, #12]
 800ac40:	685b      	ldr	r3, [r3, #4]
 800ac42:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 800ac46:	697b      	ldr	r3, [r7, #20]
 800ac48:	431a      	orrs	r2, r3
 800ac4a:	68fb      	ldr	r3, [r7, #12]
 800ac4c:	605a      	str	r2, [r3, #4]
 800ac4e:	2300      	movs	r3, #0
 800ac50:	4618      	mov	r0, r3
 800ac52:	371c      	adds	r7, #28
 800ac54:	46bd      	mov	sp, r7
 800ac56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac5a:	4770      	bx	lr

0800ac5c <FMC_NORSRAM_Extended_Timing_Init>:
 800ac5c:	b480      	push	{r7}
 800ac5e:	b085      	sub	sp, #20
 800ac60:	af00      	add	r7, sp, #0
 800ac62:	60f8      	str	r0, [r7, #12]
 800ac64:	60b9      	str	r1, [r7, #8]
 800ac66:	607a      	str	r2, [r7, #4]
 800ac68:	603b      	str	r3, [r7, #0]
 800ac6a:	683b      	ldr	r3, [r7, #0]
 800ac6c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800ac70:	d11d      	bne.n	800acae <FMC_NORSRAM_Extended_Timing_Init+0x52>
 800ac72:	68fb      	ldr	r3, [r7, #12]
 800ac74:	687a      	ldr	r2, [r7, #4]
 800ac76:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800ac7a:	4b13      	ldr	r3, [pc, #76]	@ (800acc8 <FMC_NORSRAM_Extended_Timing_Init+0x6c>)
 800ac7c:	4013      	ands	r3, r2
 800ac7e:	68ba      	ldr	r2, [r7, #8]
 800ac80:	6811      	ldr	r1, [r2, #0]
 800ac82:	68ba      	ldr	r2, [r7, #8]
 800ac84:	6852      	ldr	r2, [r2, #4]
 800ac86:	0112      	lsls	r2, r2, #4
 800ac88:	4311      	orrs	r1, r2
 800ac8a:	68ba      	ldr	r2, [r7, #8]
 800ac8c:	6892      	ldr	r2, [r2, #8]
 800ac8e:	0212      	lsls	r2, r2, #8
 800ac90:	4311      	orrs	r1, r2
 800ac92:	68ba      	ldr	r2, [r7, #8]
 800ac94:	6992      	ldr	r2, [r2, #24]
 800ac96:	4311      	orrs	r1, r2
 800ac98:	68ba      	ldr	r2, [r7, #8]
 800ac9a:	68d2      	ldr	r2, [r2, #12]
 800ac9c:	0412      	lsls	r2, r2, #16
 800ac9e:	430a      	orrs	r2, r1
 800aca0:	ea43 0102 	orr.w	r1, r3, r2
 800aca4:	68fb      	ldr	r3, [r7, #12]
 800aca6:	687a      	ldr	r2, [r7, #4]
 800aca8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800acac:	e005      	b.n	800acba <FMC_NORSRAM_Extended_Timing_Init+0x5e>
 800acae:	68fb      	ldr	r3, [r7, #12]
 800acb0:	687a      	ldr	r2, [r7, #4]
 800acb2:	f06f 4170 	mvn.w	r1, #4026531840	@ 0xf0000000
 800acb6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800acba:	2300      	movs	r3, #0
 800acbc:	4618      	mov	r0, r3
 800acbe:	3714      	adds	r7, #20
 800acc0:	46bd      	mov	sp, r7
 800acc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acc6:	4770      	bx	lr
 800acc8:	cff00000 	.word	0xcff00000

0800accc <SDMMC_Init>:
 800accc:	b084      	sub	sp, #16
 800acce:	b480      	push	{r7}
 800acd0:	b085      	sub	sp, #20
 800acd2:	af00      	add	r7, sp, #0
 800acd4:	6078      	str	r0, [r7, #4]
 800acd6:	f107 001c 	add.w	r0, r7, #28
 800acda:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800acde:	2300      	movs	r3, #0
 800ace0:	60fb      	str	r3, [r7, #12]
 800ace2:	69fa      	ldr	r2, [r7, #28]
 800ace4:	6a3b      	ldr	r3, [r7, #32]
 800ace6:	431a      	orrs	r2, r3
 800ace8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800acea:	431a      	orrs	r2, r3
 800acec:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800acee:	431a      	orrs	r2, r3
 800acf0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800acf2:	431a      	orrs	r2, r3
 800acf4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800acf6:	4313      	orrs	r3, r2
 800acf8:	68fa      	ldr	r2, [r7, #12]
 800acfa:	4313      	orrs	r3, r2
 800acfc:	60fb      	str	r3, [r7, #12]
 800acfe:	687b      	ldr	r3, [r7, #4]
 800ad00:	685a      	ldr	r2, [r3, #4]
 800ad02:	4b07      	ldr	r3, [pc, #28]	@ (800ad20 <SDMMC_Init+0x54>)
 800ad04:	4013      	ands	r3, r2
 800ad06:	68fa      	ldr	r2, [r7, #12]
 800ad08:	431a      	orrs	r2, r3
 800ad0a:	687b      	ldr	r3, [r7, #4]
 800ad0c:	605a      	str	r2, [r3, #4]
 800ad0e:	2300      	movs	r3, #0
 800ad10:	4618      	mov	r0, r3
 800ad12:	3714      	adds	r7, #20
 800ad14:	46bd      	mov	sp, r7
 800ad16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad1a:	b004      	add	sp, #16
 800ad1c:	4770      	bx	lr
 800ad1e:	bf00      	nop
 800ad20:	ffff8100 	.word	0xffff8100

0800ad24 <SDMMC_ReadFIFO>:
 800ad24:	b480      	push	{r7}
 800ad26:	b083      	sub	sp, #12
 800ad28:	af00      	add	r7, sp, #0
 800ad2a:	6078      	str	r0, [r7, #4]
 800ad2c:	687b      	ldr	r3, [r7, #4]
 800ad2e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ad32:	4618      	mov	r0, r3
 800ad34:	370c      	adds	r7, #12
 800ad36:	46bd      	mov	sp, r7
 800ad38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad3c:	4770      	bx	lr

0800ad3e <SDMMC_WriteFIFO>:
 800ad3e:	b480      	push	{r7}
 800ad40:	b083      	sub	sp, #12
 800ad42:	af00      	add	r7, sp, #0
 800ad44:	6078      	str	r0, [r7, #4]
 800ad46:	6039      	str	r1, [r7, #0]
 800ad48:	683b      	ldr	r3, [r7, #0]
 800ad4a:	681a      	ldr	r2, [r3, #0]
 800ad4c:	687b      	ldr	r3, [r7, #4]
 800ad4e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800ad52:	2300      	movs	r3, #0
 800ad54:	4618      	mov	r0, r3
 800ad56:	370c      	adds	r7, #12
 800ad58:	46bd      	mov	sp, r7
 800ad5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad5e:	4770      	bx	lr

0800ad60 <SDMMC_PowerState_ON>:
 800ad60:	b480      	push	{r7}
 800ad62:	b083      	sub	sp, #12
 800ad64:	af00      	add	r7, sp, #0
 800ad66:	6078      	str	r0, [r7, #4]
 800ad68:	687b      	ldr	r3, [r7, #4]
 800ad6a:	2203      	movs	r2, #3
 800ad6c:	601a      	str	r2, [r3, #0]
 800ad6e:	2300      	movs	r3, #0
 800ad70:	4618      	mov	r0, r3
 800ad72:	370c      	adds	r7, #12
 800ad74:	46bd      	mov	sp, r7
 800ad76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad7a:	4770      	bx	lr

0800ad7c <SDMMC_GetPowerState>:
 800ad7c:	b480      	push	{r7}
 800ad7e:	b083      	sub	sp, #12
 800ad80:	af00      	add	r7, sp, #0
 800ad82:	6078      	str	r0, [r7, #4]
 800ad84:	687b      	ldr	r3, [r7, #4]
 800ad86:	681b      	ldr	r3, [r3, #0]
 800ad88:	f003 0303 	and.w	r3, r3, #3
 800ad8c:	4618      	mov	r0, r3
 800ad8e:	370c      	adds	r7, #12
 800ad90:	46bd      	mov	sp, r7
 800ad92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad96:	4770      	bx	lr

0800ad98 <SDMMC_SendCommand>:
 800ad98:	b480      	push	{r7}
 800ad9a:	b085      	sub	sp, #20
 800ad9c:	af00      	add	r7, sp, #0
 800ad9e:	6078      	str	r0, [r7, #4]
 800ada0:	6039      	str	r1, [r7, #0]
 800ada2:	2300      	movs	r3, #0
 800ada4:	60fb      	str	r3, [r7, #12]
 800ada6:	683b      	ldr	r3, [r7, #0]
 800ada8:	681a      	ldr	r2, [r3, #0]
 800adaa:	687b      	ldr	r3, [r7, #4]
 800adac:	609a      	str	r2, [r3, #8]
 800adae:	683b      	ldr	r3, [r7, #0]
 800adb0:	685a      	ldr	r2, [r3, #4]
 800adb2:	683b      	ldr	r3, [r7, #0]
 800adb4:	689b      	ldr	r3, [r3, #8]
 800adb6:	431a      	orrs	r2, r3
 800adb8:	683b      	ldr	r3, [r7, #0]
 800adba:	68db      	ldr	r3, [r3, #12]
 800adbc:	431a      	orrs	r2, r3
 800adbe:	683b      	ldr	r3, [r7, #0]
 800adc0:	691b      	ldr	r3, [r3, #16]
 800adc2:	4313      	orrs	r3, r2
 800adc4:	68fa      	ldr	r2, [r7, #12]
 800adc6:	4313      	orrs	r3, r2
 800adc8:	60fb      	str	r3, [r7, #12]
 800adca:	687b      	ldr	r3, [r7, #4]
 800adcc:	68da      	ldr	r2, [r3, #12]
 800adce:	4b06      	ldr	r3, [pc, #24]	@ (800ade8 <SDMMC_SendCommand+0x50>)
 800add0:	4013      	ands	r3, r2
 800add2:	68fa      	ldr	r2, [r7, #12]
 800add4:	431a      	orrs	r2, r3
 800add6:	687b      	ldr	r3, [r7, #4]
 800add8:	60da      	str	r2, [r3, #12]
 800adda:	2300      	movs	r3, #0
 800addc:	4618      	mov	r0, r3
 800adde:	3714      	adds	r7, #20
 800ade0:	46bd      	mov	sp, r7
 800ade2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ade6:	4770      	bx	lr
 800ade8:	fffff000 	.word	0xfffff000

0800adec <SDMMC_GetCommandResponse>:
 800adec:	b480      	push	{r7}
 800adee:	b083      	sub	sp, #12
 800adf0:	af00      	add	r7, sp, #0
 800adf2:	6078      	str	r0, [r7, #4]
 800adf4:	687b      	ldr	r3, [r7, #4]
 800adf6:	691b      	ldr	r3, [r3, #16]
 800adf8:	b2db      	uxtb	r3, r3
 800adfa:	4618      	mov	r0, r3
 800adfc:	370c      	adds	r7, #12
 800adfe:	46bd      	mov	sp, r7
 800ae00:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae04:	4770      	bx	lr

0800ae06 <SDMMC_GetResponse>:
 800ae06:	b480      	push	{r7}
 800ae08:	b085      	sub	sp, #20
 800ae0a:	af00      	add	r7, sp, #0
 800ae0c:	6078      	str	r0, [r7, #4]
 800ae0e:	6039      	str	r1, [r7, #0]
 800ae10:	687b      	ldr	r3, [r7, #4]
 800ae12:	3314      	adds	r3, #20
 800ae14:	461a      	mov	r2, r3
 800ae16:	683b      	ldr	r3, [r7, #0]
 800ae18:	4413      	add	r3, r2
 800ae1a:	60fb      	str	r3, [r7, #12]
 800ae1c:	68fb      	ldr	r3, [r7, #12]
 800ae1e:	681b      	ldr	r3, [r3, #0]
 800ae20:	4618      	mov	r0, r3
 800ae22:	3714      	adds	r7, #20
 800ae24:	46bd      	mov	sp, r7
 800ae26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae2a:	4770      	bx	lr

0800ae2c <SDMMC_ConfigData>:
 800ae2c:	b480      	push	{r7}
 800ae2e:	b085      	sub	sp, #20
 800ae30:	af00      	add	r7, sp, #0
 800ae32:	6078      	str	r0, [r7, #4]
 800ae34:	6039      	str	r1, [r7, #0]
 800ae36:	2300      	movs	r3, #0
 800ae38:	60fb      	str	r3, [r7, #12]
 800ae3a:	683b      	ldr	r3, [r7, #0]
 800ae3c:	681a      	ldr	r2, [r3, #0]
 800ae3e:	687b      	ldr	r3, [r7, #4]
 800ae40:	625a      	str	r2, [r3, #36]	@ 0x24
 800ae42:	683b      	ldr	r3, [r7, #0]
 800ae44:	685a      	ldr	r2, [r3, #4]
 800ae46:	687b      	ldr	r3, [r7, #4]
 800ae48:	629a      	str	r2, [r3, #40]	@ 0x28
 800ae4a:	683b      	ldr	r3, [r7, #0]
 800ae4c:	689a      	ldr	r2, [r3, #8]
 800ae4e:	683b      	ldr	r3, [r7, #0]
 800ae50:	68db      	ldr	r3, [r3, #12]
 800ae52:	431a      	orrs	r2, r3
 800ae54:	683b      	ldr	r3, [r7, #0]
 800ae56:	691b      	ldr	r3, [r3, #16]
 800ae58:	431a      	orrs	r2, r3
 800ae5a:	683b      	ldr	r3, [r7, #0]
 800ae5c:	695b      	ldr	r3, [r3, #20]
 800ae5e:	4313      	orrs	r3, r2
 800ae60:	68fa      	ldr	r2, [r7, #12]
 800ae62:	4313      	orrs	r3, r2
 800ae64:	60fb      	str	r3, [r7, #12]
 800ae66:	687b      	ldr	r3, [r7, #4]
 800ae68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ae6a:	f023 02f7 	bic.w	r2, r3, #247	@ 0xf7
 800ae6e:	68fb      	ldr	r3, [r7, #12]
 800ae70:	431a      	orrs	r2, r3
 800ae72:	687b      	ldr	r3, [r7, #4]
 800ae74:	62da      	str	r2, [r3, #44]	@ 0x2c
 800ae76:	2300      	movs	r3, #0
 800ae78:	4618      	mov	r0, r3
 800ae7a:	3714      	adds	r7, #20
 800ae7c:	46bd      	mov	sp, r7
 800ae7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae82:	4770      	bx	lr

0800ae84 <SDMMC_CmdBlockLength>:
 800ae84:	b580      	push	{r7, lr}
 800ae86:	b088      	sub	sp, #32
 800ae88:	af00      	add	r7, sp, #0
 800ae8a:	6078      	str	r0, [r7, #4]
 800ae8c:	6039      	str	r1, [r7, #0]
 800ae8e:	683b      	ldr	r3, [r7, #0]
 800ae90:	60bb      	str	r3, [r7, #8]
 800ae92:	2310      	movs	r3, #16
 800ae94:	60fb      	str	r3, [r7, #12]
 800ae96:	2340      	movs	r3, #64	@ 0x40
 800ae98:	613b      	str	r3, [r7, #16]
 800ae9a:	2300      	movs	r3, #0
 800ae9c:	617b      	str	r3, [r7, #20]
 800ae9e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800aea2:	61bb      	str	r3, [r7, #24]
 800aea4:	f107 0308 	add.w	r3, r7, #8
 800aea8:	4619      	mov	r1, r3
 800aeaa:	6878      	ldr	r0, [r7, #4]
 800aeac:	f7ff ff74 	bl	800ad98 <SDMMC_SendCommand>
 800aeb0:	f241 3288 	movw	r2, #5000	@ 0x1388
 800aeb4:	2110      	movs	r1, #16
 800aeb6:	6878      	ldr	r0, [r7, #4]
 800aeb8:	f000 f9d6 	bl	800b268 <SDMMC_GetCmdResp1>
 800aebc:	61f8      	str	r0, [r7, #28]
 800aebe:	69fb      	ldr	r3, [r7, #28]
 800aec0:	4618      	mov	r0, r3
 800aec2:	3720      	adds	r7, #32
 800aec4:	46bd      	mov	sp, r7
 800aec6:	bd80      	pop	{r7, pc}

0800aec8 <SDMMC_CmdReadSingleBlock>:
 800aec8:	b580      	push	{r7, lr}
 800aeca:	b088      	sub	sp, #32
 800aecc:	af00      	add	r7, sp, #0
 800aece:	6078      	str	r0, [r7, #4]
 800aed0:	6039      	str	r1, [r7, #0]
 800aed2:	683b      	ldr	r3, [r7, #0]
 800aed4:	60bb      	str	r3, [r7, #8]
 800aed6:	2311      	movs	r3, #17
 800aed8:	60fb      	str	r3, [r7, #12]
 800aeda:	2340      	movs	r3, #64	@ 0x40
 800aedc:	613b      	str	r3, [r7, #16]
 800aede:	2300      	movs	r3, #0
 800aee0:	617b      	str	r3, [r7, #20]
 800aee2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800aee6:	61bb      	str	r3, [r7, #24]
 800aee8:	f107 0308 	add.w	r3, r7, #8
 800aeec:	4619      	mov	r1, r3
 800aeee:	6878      	ldr	r0, [r7, #4]
 800aef0:	f7ff ff52 	bl	800ad98 <SDMMC_SendCommand>
 800aef4:	f241 3288 	movw	r2, #5000	@ 0x1388
 800aef8:	2111      	movs	r1, #17
 800aefa:	6878      	ldr	r0, [r7, #4]
 800aefc:	f000 f9b4 	bl	800b268 <SDMMC_GetCmdResp1>
 800af00:	61f8      	str	r0, [r7, #28]
 800af02:	69fb      	ldr	r3, [r7, #28]
 800af04:	4618      	mov	r0, r3
 800af06:	3720      	adds	r7, #32
 800af08:	46bd      	mov	sp, r7
 800af0a:	bd80      	pop	{r7, pc}

0800af0c <SDMMC_CmdReadMultiBlock>:
 800af0c:	b580      	push	{r7, lr}
 800af0e:	b088      	sub	sp, #32
 800af10:	af00      	add	r7, sp, #0
 800af12:	6078      	str	r0, [r7, #4]
 800af14:	6039      	str	r1, [r7, #0]
 800af16:	683b      	ldr	r3, [r7, #0]
 800af18:	60bb      	str	r3, [r7, #8]
 800af1a:	2312      	movs	r3, #18
 800af1c:	60fb      	str	r3, [r7, #12]
 800af1e:	2340      	movs	r3, #64	@ 0x40
 800af20:	613b      	str	r3, [r7, #16]
 800af22:	2300      	movs	r3, #0
 800af24:	617b      	str	r3, [r7, #20]
 800af26:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800af2a:	61bb      	str	r3, [r7, #24]
 800af2c:	f107 0308 	add.w	r3, r7, #8
 800af30:	4619      	mov	r1, r3
 800af32:	6878      	ldr	r0, [r7, #4]
 800af34:	f7ff ff30 	bl	800ad98 <SDMMC_SendCommand>
 800af38:	f241 3288 	movw	r2, #5000	@ 0x1388
 800af3c:	2112      	movs	r1, #18
 800af3e:	6878      	ldr	r0, [r7, #4]
 800af40:	f000 f992 	bl	800b268 <SDMMC_GetCmdResp1>
 800af44:	61f8      	str	r0, [r7, #28]
 800af46:	69fb      	ldr	r3, [r7, #28]
 800af48:	4618      	mov	r0, r3
 800af4a:	3720      	adds	r7, #32
 800af4c:	46bd      	mov	sp, r7
 800af4e:	bd80      	pop	{r7, pc}

0800af50 <SDMMC_CmdWriteSingleBlock>:
 800af50:	b580      	push	{r7, lr}
 800af52:	b088      	sub	sp, #32
 800af54:	af00      	add	r7, sp, #0
 800af56:	6078      	str	r0, [r7, #4]
 800af58:	6039      	str	r1, [r7, #0]
 800af5a:	683b      	ldr	r3, [r7, #0]
 800af5c:	60bb      	str	r3, [r7, #8]
 800af5e:	2318      	movs	r3, #24
 800af60:	60fb      	str	r3, [r7, #12]
 800af62:	2340      	movs	r3, #64	@ 0x40
 800af64:	613b      	str	r3, [r7, #16]
 800af66:	2300      	movs	r3, #0
 800af68:	617b      	str	r3, [r7, #20]
 800af6a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800af6e:	61bb      	str	r3, [r7, #24]
 800af70:	f107 0308 	add.w	r3, r7, #8
 800af74:	4619      	mov	r1, r3
 800af76:	6878      	ldr	r0, [r7, #4]
 800af78:	f7ff ff0e 	bl	800ad98 <SDMMC_SendCommand>
 800af7c:	f241 3288 	movw	r2, #5000	@ 0x1388
 800af80:	2118      	movs	r1, #24
 800af82:	6878      	ldr	r0, [r7, #4]
 800af84:	f000 f970 	bl	800b268 <SDMMC_GetCmdResp1>
 800af88:	61f8      	str	r0, [r7, #28]
 800af8a:	69fb      	ldr	r3, [r7, #28]
 800af8c:	4618      	mov	r0, r3
 800af8e:	3720      	adds	r7, #32
 800af90:	46bd      	mov	sp, r7
 800af92:	bd80      	pop	{r7, pc}

0800af94 <SDMMC_CmdWriteMultiBlock>:
 800af94:	b580      	push	{r7, lr}
 800af96:	b088      	sub	sp, #32
 800af98:	af00      	add	r7, sp, #0
 800af9a:	6078      	str	r0, [r7, #4]
 800af9c:	6039      	str	r1, [r7, #0]
 800af9e:	683b      	ldr	r3, [r7, #0]
 800afa0:	60bb      	str	r3, [r7, #8]
 800afa2:	2319      	movs	r3, #25
 800afa4:	60fb      	str	r3, [r7, #12]
 800afa6:	2340      	movs	r3, #64	@ 0x40
 800afa8:	613b      	str	r3, [r7, #16]
 800afaa:	2300      	movs	r3, #0
 800afac:	617b      	str	r3, [r7, #20]
 800afae:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800afb2:	61bb      	str	r3, [r7, #24]
 800afb4:	f107 0308 	add.w	r3, r7, #8
 800afb8:	4619      	mov	r1, r3
 800afba:	6878      	ldr	r0, [r7, #4]
 800afbc:	f7ff feec 	bl	800ad98 <SDMMC_SendCommand>
 800afc0:	f241 3288 	movw	r2, #5000	@ 0x1388
 800afc4:	2119      	movs	r1, #25
 800afc6:	6878      	ldr	r0, [r7, #4]
 800afc8:	f000 f94e 	bl	800b268 <SDMMC_GetCmdResp1>
 800afcc:	61f8      	str	r0, [r7, #28]
 800afce:	69fb      	ldr	r3, [r7, #28]
 800afd0:	4618      	mov	r0, r3
 800afd2:	3720      	adds	r7, #32
 800afd4:	46bd      	mov	sp, r7
 800afd6:	bd80      	pop	{r7, pc}

0800afd8 <SDMMC_CmdStopTransfer>:
 800afd8:	b580      	push	{r7, lr}
 800afda:	b088      	sub	sp, #32
 800afdc:	af00      	add	r7, sp, #0
 800afde:	6078      	str	r0, [r7, #4]
 800afe0:	2300      	movs	r3, #0
 800afe2:	60bb      	str	r3, [r7, #8]
 800afe4:	230c      	movs	r3, #12
 800afe6:	60fb      	str	r3, [r7, #12]
 800afe8:	2340      	movs	r3, #64	@ 0x40
 800afea:	613b      	str	r3, [r7, #16]
 800afec:	2300      	movs	r3, #0
 800afee:	617b      	str	r3, [r7, #20]
 800aff0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800aff4:	61bb      	str	r3, [r7, #24]
 800aff6:	f107 0308 	add.w	r3, r7, #8
 800affa:	4619      	mov	r1, r3
 800affc:	6878      	ldr	r0, [r7, #4]
 800affe:	f7ff fecb 	bl	800ad98 <SDMMC_SendCommand>
 800b002:	4a05      	ldr	r2, [pc, #20]	@ (800b018 <SDMMC_CmdStopTransfer+0x40>)
 800b004:	210c      	movs	r1, #12
 800b006:	6878      	ldr	r0, [r7, #4]
 800b008:	f000 f92e 	bl	800b268 <SDMMC_GetCmdResp1>
 800b00c:	61f8      	str	r0, [r7, #28]
 800b00e:	69fb      	ldr	r3, [r7, #28]
 800b010:	4618      	mov	r0, r3
 800b012:	3720      	adds	r7, #32
 800b014:	46bd      	mov	sp, r7
 800b016:	bd80      	pop	{r7, pc}
 800b018:	05f5e100 	.word	0x05f5e100

0800b01c <SDMMC_CmdSelDesel>:
 800b01c:	b580      	push	{r7, lr}
 800b01e:	b08a      	sub	sp, #40	@ 0x28
 800b020:	af00      	add	r7, sp, #0
 800b022:	60f8      	str	r0, [r7, #12]
 800b024:	e9c7 2300 	strd	r2, r3, [r7]
 800b028:	683b      	ldr	r3, [r7, #0]
 800b02a:	613b      	str	r3, [r7, #16]
 800b02c:	2307      	movs	r3, #7
 800b02e:	617b      	str	r3, [r7, #20]
 800b030:	2340      	movs	r3, #64	@ 0x40
 800b032:	61bb      	str	r3, [r7, #24]
 800b034:	2300      	movs	r3, #0
 800b036:	61fb      	str	r3, [r7, #28]
 800b038:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b03c:	623b      	str	r3, [r7, #32]
 800b03e:	f107 0310 	add.w	r3, r7, #16
 800b042:	4619      	mov	r1, r3
 800b044:	68f8      	ldr	r0, [r7, #12]
 800b046:	f7ff fea7 	bl	800ad98 <SDMMC_SendCommand>
 800b04a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b04e:	2107      	movs	r1, #7
 800b050:	68f8      	ldr	r0, [r7, #12]
 800b052:	f000 f909 	bl	800b268 <SDMMC_GetCmdResp1>
 800b056:	6278      	str	r0, [r7, #36]	@ 0x24
 800b058:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b05a:	4618      	mov	r0, r3
 800b05c:	3728      	adds	r7, #40	@ 0x28
 800b05e:	46bd      	mov	sp, r7
 800b060:	bd80      	pop	{r7, pc}

0800b062 <SDMMC_CmdGoIdleState>:
 800b062:	b580      	push	{r7, lr}
 800b064:	b088      	sub	sp, #32
 800b066:	af00      	add	r7, sp, #0
 800b068:	6078      	str	r0, [r7, #4]
 800b06a:	2300      	movs	r3, #0
 800b06c:	60bb      	str	r3, [r7, #8]
 800b06e:	2300      	movs	r3, #0
 800b070:	60fb      	str	r3, [r7, #12]
 800b072:	2300      	movs	r3, #0
 800b074:	613b      	str	r3, [r7, #16]
 800b076:	2300      	movs	r3, #0
 800b078:	617b      	str	r3, [r7, #20]
 800b07a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b07e:	61bb      	str	r3, [r7, #24]
 800b080:	f107 0308 	add.w	r3, r7, #8
 800b084:	4619      	mov	r1, r3
 800b086:	6878      	ldr	r0, [r7, #4]
 800b088:	f7ff fe86 	bl	800ad98 <SDMMC_SendCommand>
 800b08c:	6878      	ldr	r0, [r7, #4]
 800b08e:	f000 fb23 	bl	800b6d8 <SDMMC_GetCmdError>
 800b092:	61f8      	str	r0, [r7, #28]
 800b094:	69fb      	ldr	r3, [r7, #28]
 800b096:	4618      	mov	r0, r3
 800b098:	3720      	adds	r7, #32
 800b09a:	46bd      	mov	sp, r7
 800b09c:	bd80      	pop	{r7, pc}

0800b09e <SDMMC_CmdOperCond>:
 800b09e:	b580      	push	{r7, lr}
 800b0a0:	b088      	sub	sp, #32
 800b0a2:	af00      	add	r7, sp, #0
 800b0a4:	6078      	str	r0, [r7, #4]
 800b0a6:	f44f 73d5 	mov.w	r3, #426	@ 0x1aa
 800b0aa:	60bb      	str	r3, [r7, #8]
 800b0ac:	2308      	movs	r3, #8
 800b0ae:	60fb      	str	r3, [r7, #12]
 800b0b0:	2340      	movs	r3, #64	@ 0x40
 800b0b2:	613b      	str	r3, [r7, #16]
 800b0b4:	2300      	movs	r3, #0
 800b0b6:	617b      	str	r3, [r7, #20]
 800b0b8:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b0bc:	61bb      	str	r3, [r7, #24]
 800b0be:	f107 0308 	add.w	r3, r7, #8
 800b0c2:	4619      	mov	r1, r3
 800b0c4:	6878      	ldr	r0, [r7, #4]
 800b0c6:	f7ff fe67 	bl	800ad98 <SDMMC_SendCommand>
 800b0ca:	6878      	ldr	r0, [r7, #4]
 800b0cc:	f000 fab6 	bl	800b63c <SDMMC_GetCmdResp7>
 800b0d0:	61f8      	str	r0, [r7, #28]
 800b0d2:	69fb      	ldr	r3, [r7, #28]
 800b0d4:	4618      	mov	r0, r3
 800b0d6:	3720      	adds	r7, #32
 800b0d8:	46bd      	mov	sp, r7
 800b0da:	bd80      	pop	{r7, pc}

0800b0dc <SDMMC_CmdAppCommand>:
 800b0dc:	b580      	push	{r7, lr}
 800b0de:	b088      	sub	sp, #32
 800b0e0:	af00      	add	r7, sp, #0
 800b0e2:	6078      	str	r0, [r7, #4]
 800b0e4:	6039      	str	r1, [r7, #0]
 800b0e6:	683b      	ldr	r3, [r7, #0]
 800b0e8:	60bb      	str	r3, [r7, #8]
 800b0ea:	2337      	movs	r3, #55	@ 0x37
 800b0ec:	60fb      	str	r3, [r7, #12]
 800b0ee:	2340      	movs	r3, #64	@ 0x40
 800b0f0:	613b      	str	r3, [r7, #16]
 800b0f2:	2300      	movs	r3, #0
 800b0f4:	617b      	str	r3, [r7, #20]
 800b0f6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b0fa:	61bb      	str	r3, [r7, #24]
 800b0fc:	f107 0308 	add.w	r3, r7, #8
 800b100:	4619      	mov	r1, r3
 800b102:	6878      	ldr	r0, [r7, #4]
 800b104:	f7ff fe48 	bl	800ad98 <SDMMC_SendCommand>
 800b108:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b10c:	2137      	movs	r1, #55	@ 0x37
 800b10e:	6878      	ldr	r0, [r7, #4]
 800b110:	f000 f8aa 	bl	800b268 <SDMMC_GetCmdResp1>
 800b114:	61f8      	str	r0, [r7, #28]
 800b116:	69fb      	ldr	r3, [r7, #28]
 800b118:	4618      	mov	r0, r3
 800b11a:	3720      	adds	r7, #32
 800b11c:	46bd      	mov	sp, r7
 800b11e:	bd80      	pop	{r7, pc}

0800b120 <SDMMC_CmdAppOperCommand>:
 800b120:	b580      	push	{r7, lr}
 800b122:	b088      	sub	sp, #32
 800b124:	af00      	add	r7, sp, #0
 800b126:	6078      	str	r0, [r7, #4]
 800b128:	6039      	str	r1, [r7, #0]
 800b12a:	683a      	ldr	r2, [r7, #0]
 800b12c:	4b0d      	ldr	r3, [pc, #52]	@ (800b164 <SDMMC_CmdAppOperCommand+0x44>)
 800b12e:	4313      	orrs	r3, r2
 800b130:	60bb      	str	r3, [r7, #8]
 800b132:	2329      	movs	r3, #41	@ 0x29
 800b134:	60fb      	str	r3, [r7, #12]
 800b136:	2340      	movs	r3, #64	@ 0x40
 800b138:	613b      	str	r3, [r7, #16]
 800b13a:	2300      	movs	r3, #0
 800b13c:	617b      	str	r3, [r7, #20]
 800b13e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b142:	61bb      	str	r3, [r7, #24]
 800b144:	f107 0308 	add.w	r3, r7, #8
 800b148:	4619      	mov	r1, r3
 800b14a:	6878      	ldr	r0, [r7, #4]
 800b14c:	f7ff fe24 	bl	800ad98 <SDMMC_SendCommand>
 800b150:	6878      	ldr	r0, [r7, #4]
 800b152:	f000 f9bf 	bl	800b4d4 <SDMMC_GetCmdResp3>
 800b156:	61f8      	str	r0, [r7, #28]
 800b158:	69fb      	ldr	r3, [r7, #28]
 800b15a:	4618      	mov	r0, r3
 800b15c:	3720      	adds	r7, #32
 800b15e:	46bd      	mov	sp, r7
 800b160:	bd80      	pop	{r7, pc}
 800b162:	bf00      	nop
 800b164:	80100000 	.word	0x80100000

0800b168 <SDMMC_CmdSendCID>:
 800b168:	b580      	push	{r7, lr}
 800b16a:	b088      	sub	sp, #32
 800b16c:	af00      	add	r7, sp, #0
 800b16e:	6078      	str	r0, [r7, #4]
 800b170:	2300      	movs	r3, #0
 800b172:	60bb      	str	r3, [r7, #8]
 800b174:	2302      	movs	r3, #2
 800b176:	60fb      	str	r3, [r7, #12]
 800b178:	23c0      	movs	r3, #192	@ 0xc0
 800b17a:	613b      	str	r3, [r7, #16]
 800b17c:	2300      	movs	r3, #0
 800b17e:	617b      	str	r3, [r7, #20]
 800b180:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b184:	61bb      	str	r3, [r7, #24]
 800b186:	f107 0308 	add.w	r3, r7, #8
 800b18a:	4619      	mov	r1, r3
 800b18c:	6878      	ldr	r0, [r7, #4]
 800b18e:	f7ff fe03 	bl	800ad98 <SDMMC_SendCommand>
 800b192:	6878      	ldr	r0, [r7, #4]
 800b194:	f000 f956 	bl	800b444 <SDMMC_GetCmdResp2>
 800b198:	61f8      	str	r0, [r7, #28]
 800b19a:	69fb      	ldr	r3, [r7, #28]
 800b19c:	4618      	mov	r0, r3
 800b19e:	3720      	adds	r7, #32
 800b1a0:	46bd      	mov	sp, r7
 800b1a2:	bd80      	pop	{r7, pc}

0800b1a4 <SDMMC_CmdSendCSD>:
 800b1a4:	b580      	push	{r7, lr}
 800b1a6:	b088      	sub	sp, #32
 800b1a8:	af00      	add	r7, sp, #0
 800b1aa:	6078      	str	r0, [r7, #4]
 800b1ac:	6039      	str	r1, [r7, #0]
 800b1ae:	683b      	ldr	r3, [r7, #0]
 800b1b0:	60bb      	str	r3, [r7, #8]
 800b1b2:	2309      	movs	r3, #9
 800b1b4:	60fb      	str	r3, [r7, #12]
 800b1b6:	23c0      	movs	r3, #192	@ 0xc0
 800b1b8:	613b      	str	r3, [r7, #16]
 800b1ba:	2300      	movs	r3, #0
 800b1bc:	617b      	str	r3, [r7, #20]
 800b1be:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b1c2:	61bb      	str	r3, [r7, #24]
 800b1c4:	f107 0308 	add.w	r3, r7, #8
 800b1c8:	4619      	mov	r1, r3
 800b1ca:	6878      	ldr	r0, [r7, #4]
 800b1cc:	f7ff fde4 	bl	800ad98 <SDMMC_SendCommand>
 800b1d0:	6878      	ldr	r0, [r7, #4]
 800b1d2:	f000 f937 	bl	800b444 <SDMMC_GetCmdResp2>
 800b1d6:	61f8      	str	r0, [r7, #28]
 800b1d8:	69fb      	ldr	r3, [r7, #28]
 800b1da:	4618      	mov	r0, r3
 800b1dc:	3720      	adds	r7, #32
 800b1de:	46bd      	mov	sp, r7
 800b1e0:	bd80      	pop	{r7, pc}

0800b1e2 <SDMMC_CmdSetRelAdd>:
 800b1e2:	b580      	push	{r7, lr}
 800b1e4:	b088      	sub	sp, #32
 800b1e6:	af00      	add	r7, sp, #0
 800b1e8:	6078      	str	r0, [r7, #4]
 800b1ea:	6039      	str	r1, [r7, #0]
 800b1ec:	2300      	movs	r3, #0
 800b1ee:	60bb      	str	r3, [r7, #8]
 800b1f0:	2303      	movs	r3, #3
 800b1f2:	60fb      	str	r3, [r7, #12]
 800b1f4:	2340      	movs	r3, #64	@ 0x40
 800b1f6:	613b      	str	r3, [r7, #16]
 800b1f8:	2300      	movs	r3, #0
 800b1fa:	617b      	str	r3, [r7, #20]
 800b1fc:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b200:	61bb      	str	r3, [r7, #24]
 800b202:	f107 0308 	add.w	r3, r7, #8
 800b206:	4619      	mov	r1, r3
 800b208:	6878      	ldr	r0, [r7, #4]
 800b20a:	f7ff fdc5 	bl	800ad98 <SDMMC_SendCommand>
 800b20e:	683a      	ldr	r2, [r7, #0]
 800b210:	2103      	movs	r1, #3
 800b212:	6878      	ldr	r0, [r7, #4]
 800b214:	f000 f99c 	bl	800b550 <SDMMC_GetCmdResp6>
 800b218:	61f8      	str	r0, [r7, #28]
 800b21a:	69fb      	ldr	r3, [r7, #28]
 800b21c:	4618      	mov	r0, r3
 800b21e:	3720      	adds	r7, #32
 800b220:	46bd      	mov	sp, r7
 800b222:	bd80      	pop	{r7, pc}

0800b224 <SDMMC_CmdSendStatus>:
 800b224:	b580      	push	{r7, lr}
 800b226:	b088      	sub	sp, #32
 800b228:	af00      	add	r7, sp, #0
 800b22a:	6078      	str	r0, [r7, #4]
 800b22c:	6039      	str	r1, [r7, #0]
 800b22e:	683b      	ldr	r3, [r7, #0]
 800b230:	60bb      	str	r3, [r7, #8]
 800b232:	230d      	movs	r3, #13
 800b234:	60fb      	str	r3, [r7, #12]
 800b236:	2340      	movs	r3, #64	@ 0x40
 800b238:	613b      	str	r3, [r7, #16]
 800b23a:	2300      	movs	r3, #0
 800b23c:	617b      	str	r3, [r7, #20]
 800b23e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b242:	61bb      	str	r3, [r7, #24]
 800b244:	f107 0308 	add.w	r3, r7, #8
 800b248:	4619      	mov	r1, r3
 800b24a:	6878      	ldr	r0, [r7, #4]
 800b24c:	f7ff fda4 	bl	800ad98 <SDMMC_SendCommand>
 800b250:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b254:	210d      	movs	r1, #13
 800b256:	6878      	ldr	r0, [r7, #4]
 800b258:	f000 f806 	bl	800b268 <SDMMC_GetCmdResp1>
 800b25c:	61f8      	str	r0, [r7, #28]
 800b25e:	69fb      	ldr	r3, [r7, #28]
 800b260:	4618      	mov	r0, r3
 800b262:	3720      	adds	r7, #32
 800b264:	46bd      	mov	sp, r7
 800b266:	bd80      	pop	{r7, pc}

0800b268 <SDMMC_GetCmdResp1>:
 800b268:	b580      	push	{r7, lr}
 800b26a:	b088      	sub	sp, #32
 800b26c:	af00      	add	r7, sp, #0
 800b26e:	60f8      	str	r0, [r7, #12]
 800b270:	460b      	mov	r3, r1
 800b272:	607a      	str	r2, [r7, #4]
 800b274:	72fb      	strb	r3, [r7, #11]
 800b276:	4b70      	ldr	r3, [pc, #448]	@ (800b438 <SDMMC_GetCmdResp1+0x1d0>)
 800b278:	681b      	ldr	r3, [r3, #0]
 800b27a:	4a70      	ldr	r2, [pc, #448]	@ (800b43c <SDMMC_GetCmdResp1+0x1d4>)
 800b27c:	fba2 2303 	umull	r2, r3, r2, r3
 800b280:	0a5a      	lsrs	r2, r3, #9
 800b282:	687b      	ldr	r3, [r7, #4]
 800b284:	fb02 f303 	mul.w	r3, r2, r3
 800b288:	61fb      	str	r3, [r7, #28]
 800b28a:	69fb      	ldr	r3, [r7, #28]
 800b28c:	1e5a      	subs	r2, r3, #1
 800b28e:	61fa      	str	r2, [r7, #28]
 800b290:	2b00      	cmp	r3, #0
 800b292:	d102      	bne.n	800b29a <SDMMC_GetCmdResp1+0x32>
 800b294:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800b298:	e0c9      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b29a:	68fb      	ldr	r3, [r7, #12]
 800b29c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b29e:	61bb      	str	r3, [r7, #24]
 800b2a0:	69bb      	ldr	r3, [r7, #24]
 800b2a2:	f003 0345 	and.w	r3, r3, #69	@ 0x45
 800b2a6:	2b00      	cmp	r3, #0
 800b2a8:	d0ef      	beq.n	800b28a <SDMMC_GetCmdResp1+0x22>
 800b2aa:	69bb      	ldr	r3, [r7, #24]
 800b2ac:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800b2b0:	2b00      	cmp	r3, #0
 800b2b2:	d1ea      	bne.n	800b28a <SDMMC_GetCmdResp1+0x22>
 800b2b4:	68fb      	ldr	r3, [r7, #12]
 800b2b6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b2b8:	f003 0304 	and.w	r3, r3, #4
 800b2bc:	2b00      	cmp	r3, #0
 800b2be:	d004      	beq.n	800b2ca <SDMMC_GetCmdResp1+0x62>
 800b2c0:	68fb      	ldr	r3, [r7, #12]
 800b2c2:	2204      	movs	r2, #4
 800b2c4:	639a      	str	r2, [r3, #56]	@ 0x38
 800b2c6:	2304      	movs	r3, #4
 800b2c8:	e0b1      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b2ca:	68fb      	ldr	r3, [r7, #12]
 800b2cc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b2ce:	f003 0301 	and.w	r3, r3, #1
 800b2d2:	2b00      	cmp	r3, #0
 800b2d4:	d004      	beq.n	800b2e0 <SDMMC_GetCmdResp1+0x78>
 800b2d6:	68fb      	ldr	r3, [r7, #12]
 800b2d8:	2201      	movs	r2, #1
 800b2da:	639a      	str	r2, [r3, #56]	@ 0x38
 800b2dc:	2301      	movs	r3, #1
 800b2de:	e0a6      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b2e0:	68fb      	ldr	r3, [r7, #12]
 800b2e2:	22c5      	movs	r2, #197	@ 0xc5
 800b2e4:	639a      	str	r2, [r3, #56]	@ 0x38
 800b2e6:	68f8      	ldr	r0, [r7, #12]
 800b2e8:	f7ff fd80 	bl	800adec <SDMMC_GetCommandResponse>
 800b2ec:	4603      	mov	r3, r0
 800b2ee:	461a      	mov	r2, r3
 800b2f0:	7afb      	ldrb	r3, [r7, #11]
 800b2f2:	4293      	cmp	r3, r2
 800b2f4:	d001      	beq.n	800b2fa <SDMMC_GetCmdResp1+0x92>
 800b2f6:	2301      	movs	r3, #1
 800b2f8:	e099      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b2fa:	2100      	movs	r1, #0
 800b2fc:	68f8      	ldr	r0, [r7, #12]
 800b2fe:	f7ff fd82 	bl	800ae06 <SDMMC_GetResponse>
 800b302:	6178      	str	r0, [r7, #20]
 800b304:	697a      	ldr	r2, [r7, #20]
 800b306:	4b4e      	ldr	r3, [pc, #312]	@ (800b440 <SDMMC_GetCmdResp1+0x1d8>)
 800b308:	4013      	ands	r3, r2
 800b30a:	2b00      	cmp	r3, #0
 800b30c:	d101      	bne.n	800b312 <SDMMC_GetCmdResp1+0xaa>
 800b30e:	2300      	movs	r3, #0
 800b310:	e08d      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b312:	697b      	ldr	r3, [r7, #20]
 800b314:	2b00      	cmp	r3, #0
 800b316:	da02      	bge.n	800b31e <SDMMC_GetCmdResp1+0xb6>
 800b318:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800b31c:	e087      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b31e:	697b      	ldr	r3, [r7, #20]
 800b320:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 800b324:	2b00      	cmp	r3, #0
 800b326:	d001      	beq.n	800b32c <SDMMC_GetCmdResp1+0xc4>
 800b328:	2340      	movs	r3, #64	@ 0x40
 800b32a:	e080      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b32c:	697b      	ldr	r3, [r7, #20]
 800b32e:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800b332:	2b00      	cmp	r3, #0
 800b334:	d001      	beq.n	800b33a <SDMMC_GetCmdResp1+0xd2>
 800b336:	2380      	movs	r3, #128	@ 0x80
 800b338:	e079      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b33a:	697b      	ldr	r3, [r7, #20]
 800b33c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800b340:	2b00      	cmp	r3, #0
 800b342:	d002      	beq.n	800b34a <SDMMC_GetCmdResp1+0xe2>
 800b344:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800b348:	e071      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b34a:	697b      	ldr	r3, [r7, #20]
 800b34c:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800b350:	2b00      	cmp	r3, #0
 800b352:	d002      	beq.n	800b35a <SDMMC_GetCmdResp1+0xf2>
 800b354:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800b358:	e069      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b35a:	697b      	ldr	r3, [r7, #20]
 800b35c:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800b360:	2b00      	cmp	r3, #0
 800b362:	d002      	beq.n	800b36a <SDMMC_GetCmdResp1+0x102>
 800b364:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b368:	e061      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b36a:	697b      	ldr	r3, [r7, #20]
 800b36c:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800b370:	2b00      	cmp	r3, #0
 800b372:	d002      	beq.n	800b37a <SDMMC_GetCmdResp1+0x112>
 800b374:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800b378:	e059      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b37a:	697b      	ldr	r3, [r7, #20]
 800b37c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800b380:	2b00      	cmp	r3, #0
 800b382:	d002      	beq.n	800b38a <SDMMC_GetCmdResp1+0x122>
 800b384:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800b388:	e051      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b38a:	697b      	ldr	r3, [r7, #20]
 800b38c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800b390:	2b00      	cmp	r3, #0
 800b392:	d002      	beq.n	800b39a <SDMMC_GetCmdResp1+0x132>
 800b394:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800b398:	e049      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b39a:	697b      	ldr	r3, [r7, #20]
 800b39c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800b3a0:	2b00      	cmp	r3, #0
 800b3a2:	d002      	beq.n	800b3aa <SDMMC_GetCmdResp1+0x142>
 800b3a4:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 800b3a8:	e041      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b3aa:	697b      	ldr	r3, [r7, #20]
 800b3ac:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800b3b0:	2b00      	cmp	r3, #0
 800b3b2:	d002      	beq.n	800b3ba <SDMMC_GetCmdResp1+0x152>
 800b3b4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800b3b8:	e039      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b3ba:	697b      	ldr	r3, [r7, #20]
 800b3bc:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800b3c0:	2b00      	cmp	r3, #0
 800b3c2:	d002      	beq.n	800b3ca <SDMMC_GetCmdResp1+0x162>
 800b3c4:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 800b3c8:	e031      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b3ca:	697b      	ldr	r3, [r7, #20]
 800b3cc:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800b3d0:	2b00      	cmp	r3, #0
 800b3d2:	d002      	beq.n	800b3da <SDMMC_GetCmdResp1+0x172>
 800b3d4:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
 800b3d8:	e029      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b3da:	697b      	ldr	r3, [r7, #20]
 800b3dc:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800b3e0:	2b00      	cmp	r3, #0
 800b3e2:	d002      	beq.n	800b3ea <SDMMC_GetCmdResp1+0x182>
 800b3e4:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 800b3e8:	e021      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b3ea:	697b      	ldr	r3, [r7, #20]
 800b3ec:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800b3f0:	2b00      	cmp	r3, #0
 800b3f2:	d002      	beq.n	800b3fa <SDMMC_GetCmdResp1+0x192>
 800b3f4:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 800b3f8:	e019      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b3fa:	697b      	ldr	r3, [r7, #20]
 800b3fc:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800b400:	2b00      	cmp	r3, #0
 800b402:	d002      	beq.n	800b40a <SDMMC_GetCmdResp1+0x1a2>
 800b404:	f44f 1300 	mov.w	r3, #2097152	@ 0x200000
 800b408:	e011      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b40a:	697b      	ldr	r3, [r7, #20]
 800b40c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800b410:	2b00      	cmp	r3, #0
 800b412:	d002      	beq.n	800b41a <SDMMC_GetCmdResp1+0x1b2>
 800b414:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 800b418:	e009      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b41a:	697b      	ldr	r3, [r7, #20]
 800b41c:	f003 0308 	and.w	r3, r3, #8
 800b420:	2b00      	cmp	r3, #0
 800b422:	d002      	beq.n	800b42a <SDMMC_GetCmdResp1+0x1c2>
 800b424:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
 800b428:	e001      	b.n	800b42e <SDMMC_GetCmdResp1+0x1c6>
 800b42a:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800b42e:	4618      	mov	r0, r3
 800b430:	3720      	adds	r7, #32
 800b432:	46bd      	mov	sp, r7
 800b434:	bd80      	pop	{r7, pc}
 800b436:	bf00      	nop
 800b438:	2000009c 	.word	0x2000009c
 800b43c:	10624dd3 	.word	0x10624dd3
 800b440:	fdffe008 	.word	0xfdffe008

0800b444 <SDMMC_GetCmdResp2>:
 800b444:	b480      	push	{r7}
 800b446:	b085      	sub	sp, #20
 800b448:	af00      	add	r7, sp, #0
 800b44a:	6078      	str	r0, [r7, #4]
 800b44c:	4b1f      	ldr	r3, [pc, #124]	@ (800b4cc <SDMMC_GetCmdResp2+0x88>)
 800b44e:	681b      	ldr	r3, [r3, #0]
 800b450:	4a1f      	ldr	r2, [pc, #124]	@ (800b4d0 <SDMMC_GetCmdResp2+0x8c>)
 800b452:	fba2 2303 	umull	r2, r3, r2, r3
 800b456:	0a5b      	lsrs	r3, r3, #9
 800b458:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b45c:	fb02 f303 	mul.w	r3, r2, r3
 800b460:	60fb      	str	r3, [r7, #12]
 800b462:	68fb      	ldr	r3, [r7, #12]
 800b464:	1e5a      	subs	r2, r3, #1
 800b466:	60fa      	str	r2, [r7, #12]
 800b468:	2b00      	cmp	r3, #0
 800b46a:	d102      	bne.n	800b472 <SDMMC_GetCmdResp2+0x2e>
 800b46c:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800b470:	e026      	b.n	800b4c0 <SDMMC_GetCmdResp2+0x7c>
 800b472:	687b      	ldr	r3, [r7, #4]
 800b474:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b476:	60bb      	str	r3, [r7, #8]
 800b478:	68bb      	ldr	r3, [r7, #8]
 800b47a:	f003 0345 	and.w	r3, r3, #69	@ 0x45
 800b47e:	2b00      	cmp	r3, #0
 800b480:	d0ef      	beq.n	800b462 <SDMMC_GetCmdResp2+0x1e>
 800b482:	68bb      	ldr	r3, [r7, #8]
 800b484:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800b488:	2b00      	cmp	r3, #0
 800b48a:	d1ea      	bne.n	800b462 <SDMMC_GetCmdResp2+0x1e>
 800b48c:	687b      	ldr	r3, [r7, #4]
 800b48e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b490:	f003 0304 	and.w	r3, r3, #4
 800b494:	2b00      	cmp	r3, #0
 800b496:	d004      	beq.n	800b4a2 <SDMMC_GetCmdResp2+0x5e>
 800b498:	687b      	ldr	r3, [r7, #4]
 800b49a:	2204      	movs	r2, #4
 800b49c:	639a      	str	r2, [r3, #56]	@ 0x38
 800b49e:	2304      	movs	r3, #4
 800b4a0:	e00e      	b.n	800b4c0 <SDMMC_GetCmdResp2+0x7c>
 800b4a2:	687b      	ldr	r3, [r7, #4]
 800b4a4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b4a6:	f003 0301 	and.w	r3, r3, #1
 800b4aa:	2b00      	cmp	r3, #0
 800b4ac:	d004      	beq.n	800b4b8 <SDMMC_GetCmdResp2+0x74>
 800b4ae:	687b      	ldr	r3, [r7, #4]
 800b4b0:	2201      	movs	r2, #1
 800b4b2:	639a      	str	r2, [r3, #56]	@ 0x38
 800b4b4:	2301      	movs	r3, #1
 800b4b6:	e003      	b.n	800b4c0 <SDMMC_GetCmdResp2+0x7c>
 800b4b8:	687b      	ldr	r3, [r7, #4]
 800b4ba:	22c5      	movs	r2, #197	@ 0xc5
 800b4bc:	639a      	str	r2, [r3, #56]	@ 0x38
 800b4be:	2300      	movs	r3, #0
 800b4c0:	4618      	mov	r0, r3
 800b4c2:	3714      	adds	r7, #20
 800b4c4:	46bd      	mov	sp, r7
 800b4c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4ca:	4770      	bx	lr
 800b4cc:	2000009c 	.word	0x2000009c
 800b4d0:	10624dd3 	.word	0x10624dd3

0800b4d4 <SDMMC_GetCmdResp3>:
 800b4d4:	b480      	push	{r7}
 800b4d6:	b085      	sub	sp, #20
 800b4d8:	af00      	add	r7, sp, #0
 800b4da:	6078      	str	r0, [r7, #4]
 800b4dc:	4b1a      	ldr	r3, [pc, #104]	@ (800b548 <SDMMC_GetCmdResp3+0x74>)
 800b4de:	681b      	ldr	r3, [r3, #0]
 800b4e0:	4a1a      	ldr	r2, [pc, #104]	@ (800b54c <SDMMC_GetCmdResp3+0x78>)
 800b4e2:	fba2 2303 	umull	r2, r3, r2, r3
 800b4e6:	0a5b      	lsrs	r3, r3, #9
 800b4e8:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b4ec:	fb02 f303 	mul.w	r3, r2, r3
 800b4f0:	60fb      	str	r3, [r7, #12]
 800b4f2:	68fb      	ldr	r3, [r7, #12]
 800b4f4:	1e5a      	subs	r2, r3, #1
 800b4f6:	60fa      	str	r2, [r7, #12]
 800b4f8:	2b00      	cmp	r3, #0
 800b4fa:	d102      	bne.n	800b502 <SDMMC_GetCmdResp3+0x2e>
 800b4fc:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800b500:	e01b      	b.n	800b53a <SDMMC_GetCmdResp3+0x66>
 800b502:	687b      	ldr	r3, [r7, #4]
 800b504:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b506:	60bb      	str	r3, [r7, #8]
 800b508:	68bb      	ldr	r3, [r7, #8]
 800b50a:	f003 0345 	and.w	r3, r3, #69	@ 0x45
 800b50e:	2b00      	cmp	r3, #0
 800b510:	d0ef      	beq.n	800b4f2 <SDMMC_GetCmdResp3+0x1e>
 800b512:	68bb      	ldr	r3, [r7, #8]
 800b514:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800b518:	2b00      	cmp	r3, #0
 800b51a:	d1ea      	bne.n	800b4f2 <SDMMC_GetCmdResp3+0x1e>
 800b51c:	687b      	ldr	r3, [r7, #4]
 800b51e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b520:	f003 0304 	and.w	r3, r3, #4
 800b524:	2b00      	cmp	r3, #0
 800b526:	d004      	beq.n	800b532 <SDMMC_GetCmdResp3+0x5e>
 800b528:	687b      	ldr	r3, [r7, #4]
 800b52a:	2204      	movs	r2, #4
 800b52c:	639a      	str	r2, [r3, #56]	@ 0x38
 800b52e:	2304      	movs	r3, #4
 800b530:	e003      	b.n	800b53a <SDMMC_GetCmdResp3+0x66>
 800b532:	687b      	ldr	r3, [r7, #4]
 800b534:	22c5      	movs	r2, #197	@ 0xc5
 800b536:	639a      	str	r2, [r3, #56]	@ 0x38
 800b538:	2300      	movs	r3, #0
 800b53a:	4618      	mov	r0, r3
 800b53c:	3714      	adds	r7, #20
 800b53e:	46bd      	mov	sp, r7
 800b540:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b544:	4770      	bx	lr
 800b546:	bf00      	nop
 800b548:	2000009c 	.word	0x2000009c
 800b54c:	10624dd3 	.word	0x10624dd3

0800b550 <SDMMC_GetCmdResp6>:
 800b550:	b580      	push	{r7, lr}
 800b552:	b088      	sub	sp, #32
 800b554:	af00      	add	r7, sp, #0
 800b556:	60f8      	str	r0, [r7, #12]
 800b558:	460b      	mov	r3, r1
 800b55a:	607a      	str	r2, [r7, #4]
 800b55c:	72fb      	strb	r3, [r7, #11]
 800b55e:	4b35      	ldr	r3, [pc, #212]	@ (800b634 <SDMMC_GetCmdResp6+0xe4>)
 800b560:	681b      	ldr	r3, [r3, #0]
 800b562:	4a35      	ldr	r2, [pc, #212]	@ (800b638 <SDMMC_GetCmdResp6+0xe8>)
 800b564:	fba2 2303 	umull	r2, r3, r2, r3
 800b568:	0a5b      	lsrs	r3, r3, #9
 800b56a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b56e:	fb02 f303 	mul.w	r3, r2, r3
 800b572:	61fb      	str	r3, [r7, #28]
 800b574:	69fb      	ldr	r3, [r7, #28]
 800b576:	1e5a      	subs	r2, r3, #1
 800b578:	61fa      	str	r2, [r7, #28]
 800b57a:	2b00      	cmp	r3, #0
 800b57c:	d102      	bne.n	800b584 <SDMMC_GetCmdResp6+0x34>
 800b57e:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800b582:	e052      	b.n	800b62a <SDMMC_GetCmdResp6+0xda>
 800b584:	68fb      	ldr	r3, [r7, #12]
 800b586:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b588:	61bb      	str	r3, [r7, #24]
 800b58a:	69bb      	ldr	r3, [r7, #24]
 800b58c:	f003 0345 	and.w	r3, r3, #69	@ 0x45
 800b590:	2b00      	cmp	r3, #0
 800b592:	d0ef      	beq.n	800b574 <SDMMC_GetCmdResp6+0x24>
 800b594:	69bb      	ldr	r3, [r7, #24]
 800b596:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800b59a:	2b00      	cmp	r3, #0
 800b59c:	d1ea      	bne.n	800b574 <SDMMC_GetCmdResp6+0x24>
 800b59e:	68fb      	ldr	r3, [r7, #12]
 800b5a0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b5a2:	f003 0304 	and.w	r3, r3, #4
 800b5a6:	2b00      	cmp	r3, #0
 800b5a8:	d004      	beq.n	800b5b4 <SDMMC_GetCmdResp6+0x64>
 800b5aa:	68fb      	ldr	r3, [r7, #12]
 800b5ac:	2204      	movs	r2, #4
 800b5ae:	639a      	str	r2, [r3, #56]	@ 0x38
 800b5b0:	2304      	movs	r3, #4
 800b5b2:	e03a      	b.n	800b62a <SDMMC_GetCmdResp6+0xda>
 800b5b4:	68fb      	ldr	r3, [r7, #12]
 800b5b6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b5b8:	f003 0301 	and.w	r3, r3, #1
 800b5bc:	2b00      	cmp	r3, #0
 800b5be:	d004      	beq.n	800b5ca <SDMMC_GetCmdResp6+0x7a>
 800b5c0:	68fb      	ldr	r3, [r7, #12]
 800b5c2:	2201      	movs	r2, #1
 800b5c4:	639a      	str	r2, [r3, #56]	@ 0x38
 800b5c6:	2301      	movs	r3, #1
 800b5c8:	e02f      	b.n	800b62a <SDMMC_GetCmdResp6+0xda>
 800b5ca:	68f8      	ldr	r0, [r7, #12]
 800b5cc:	f7ff fc0e 	bl	800adec <SDMMC_GetCommandResponse>
 800b5d0:	4603      	mov	r3, r0
 800b5d2:	461a      	mov	r2, r3
 800b5d4:	7afb      	ldrb	r3, [r7, #11]
 800b5d6:	4293      	cmp	r3, r2
 800b5d8:	d001      	beq.n	800b5de <SDMMC_GetCmdResp6+0x8e>
 800b5da:	2301      	movs	r3, #1
 800b5dc:	e025      	b.n	800b62a <SDMMC_GetCmdResp6+0xda>
 800b5de:	68fb      	ldr	r3, [r7, #12]
 800b5e0:	22c5      	movs	r2, #197	@ 0xc5
 800b5e2:	639a      	str	r2, [r3, #56]	@ 0x38
 800b5e4:	2100      	movs	r1, #0
 800b5e6:	68f8      	ldr	r0, [r7, #12]
 800b5e8:	f7ff fc0d 	bl	800ae06 <SDMMC_GetResponse>
 800b5ec:	6178      	str	r0, [r7, #20]
 800b5ee:	697b      	ldr	r3, [r7, #20]
 800b5f0:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 800b5f4:	2b00      	cmp	r3, #0
 800b5f6:	d106      	bne.n	800b606 <SDMMC_GetCmdResp6+0xb6>
 800b5f8:	697b      	ldr	r3, [r7, #20]
 800b5fa:	0c1b      	lsrs	r3, r3, #16
 800b5fc:	b29a      	uxth	r2, r3
 800b5fe:	687b      	ldr	r3, [r7, #4]
 800b600:	801a      	strh	r2, [r3, #0]
 800b602:	2300      	movs	r3, #0
 800b604:	e011      	b.n	800b62a <SDMMC_GetCmdResp6+0xda>
 800b606:	697b      	ldr	r3, [r7, #20]
 800b608:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800b60c:	2b00      	cmp	r3, #0
 800b60e:	d002      	beq.n	800b616 <SDMMC_GetCmdResp6+0xc6>
 800b610:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800b614:	e009      	b.n	800b62a <SDMMC_GetCmdResp6+0xda>
 800b616:	697b      	ldr	r3, [r7, #20]
 800b618:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800b61c:	2b00      	cmp	r3, #0
 800b61e:	d002      	beq.n	800b626 <SDMMC_GetCmdResp6+0xd6>
 800b620:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800b624:	e001      	b.n	800b62a <SDMMC_GetCmdResp6+0xda>
 800b626:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800b62a:	4618      	mov	r0, r3
 800b62c:	3720      	adds	r7, #32
 800b62e:	46bd      	mov	sp, r7
 800b630:	bd80      	pop	{r7, pc}
 800b632:	bf00      	nop
 800b634:	2000009c 	.word	0x2000009c
 800b638:	10624dd3 	.word	0x10624dd3

0800b63c <SDMMC_GetCmdResp7>:
 800b63c:	b480      	push	{r7}
 800b63e:	b085      	sub	sp, #20
 800b640:	af00      	add	r7, sp, #0
 800b642:	6078      	str	r0, [r7, #4]
 800b644:	4b22      	ldr	r3, [pc, #136]	@ (800b6d0 <SDMMC_GetCmdResp7+0x94>)
 800b646:	681b      	ldr	r3, [r3, #0]
 800b648:	4a22      	ldr	r2, [pc, #136]	@ (800b6d4 <SDMMC_GetCmdResp7+0x98>)
 800b64a:	fba2 2303 	umull	r2, r3, r2, r3
 800b64e:	0a5b      	lsrs	r3, r3, #9
 800b650:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b654:	fb02 f303 	mul.w	r3, r2, r3
 800b658:	60fb      	str	r3, [r7, #12]
 800b65a:	68fb      	ldr	r3, [r7, #12]
 800b65c:	1e5a      	subs	r2, r3, #1
 800b65e:	60fa      	str	r2, [r7, #12]
 800b660:	2b00      	cmp	r3, #0
 800b662:	d102      	bne.n	800b66a <SDMMC_GetCmdResp7+0x2e>
 800b664:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800b668:	e02c      	b.n	800b6c4 <SDMMC_GetCmdResp7+0x88>
 800b66a:	687b      	ldr	r3, [r7, #4]
 800b66c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b66e:	60bb      	str	r3, [r7, #8]
 800b670:	68bb      	ldr	r3, [r7, #8]
 800b672:	f003 0345 	and.w	r3, r3, #69	@ 0x45
 800b676:	2b00      	cmp	r3, #0
 800b678:	d0ef      	beq.n	800b65a <SDMMC_GetCmdResp7+0x1e>
 800b67a:	68bb      	ldr	r3, [r7, #8]
 800b67c:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800b680:	2b00      	cmp	r3, #0
 800b682:	d1ea      	bne.n	800b65a <SDMMC_GetCmdResp7+0x1e>
 800b684:	687b      	ldr	r3, [r7, #4]
 800b686:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b688:	f003 0304 	and.w	r3, r3, #4
 800b68c:	2b00      	cmp	r3, #0
 800b68e:	d004      	beq.n	800b69a <SDMMC_GetCmdResp7+0x5e>
 800b690:	687b      	ldr	r3, [r7, #4]
 800b692:	2204      	movs	r2, #4
 800b694:	639a      	str	r2, [r3, #56]	@ 0x38
 800b696:	2304      	movs	r3, #4
 800b698:	e014      	b.n	800b6c4 <SDMMC_GetCmdResp7+0x88>
 800b69a:	687b      	ldr	r3, [r7, #4]
 800b69c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b69e:	f003 0301 	and.w	r3, r3, #1
 800b6a2:	2b00      	cmp	r3, #0
 800b6a4:	d004      	beq.n	800b6b0 <SDMMC_GetCmdResp7+0x74>
 800b6a6:	687b      	ldr	r3, [r7, #4]
 800b6a8:	2201      	movs	r2, #1
 800b6aa:	639a      	str	r2, [r3, #56]	@ 0x38
 800b6ac:	2301      	movs	r3, #1
 800b6ae:	e009      	b.n	800b6c4 <SDMMC_GetCmdResp7+0x88>
 800b6b0:	687b      	ldr	r3, [r7, #4]
 800b6b2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b6b4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800b6b8:	2b00      	cmp	r3, #0
 800b6ba:	d002      	beq.n	800b6c2 <SDMMC_GetCmdResp7+0x86>
 800b6bc:	687b      	ldr	r3, [r7, #4]
 800b6be:	2240      	movs	r2, #64	@ 0x40
 800b6c0:	639a      	str	r2, [r3, #56]	@ 0x38
 800b6c2:	2300      	movs	r3, #0
 800b6c4:	4618      	mov	r0, r3
 800b6c6:	3714      	adds	r7, #20
 800b6c8:	46bd      	mov	sp, r7
 800b6ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6ce:	4770      	bx	lr
 800b6d0:	2000009c 	.word	0x2000009c
 800b6d4:	10624dd3 	.word	0x10624dd3

0800b6d8 <SDMMC_GetCmdError>:
 800b6d8:	b480      	push	{r7}
 800b6da:	b085      	sub	sp, #20
 800b6dc:	af00      	add	r7, sp, #0
 800b6de:	6078      	str	r0, [r7, #4]
 800b6e0:	4b11      	ldr	r3, [pc, #68]	@ (800b728 <SDMMC_GetCmdError+0x50>)
 800b6e2:	681b      	ldr	r3, [r3, #0]
 800b6e4:	4a11      	ldr	r2, [pc, #68]	@ (800b72c <SDMMC_GetCmdError+0x54>)
 800b6e6:	fba2 2303 	umull	r2, r3, r2, r3
 800b6ea:	0a5b      	lsrs	r3, r3, #9
 800b6ec:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b6f0:	fb02 f303 	mul.w	r3, r2, r3
 800b6f4:	60fb      	str	r3, [r7, #12]
 800b6f6:	68fb      	ldr	r3, [r7, #12]
 800b6f8:	1e5a      	subs	r2, r3, #1
 800b6fa:	60fa      	str	r2, [r7, #12]
 800b6fc:	2b00      	cmp	r3, #0
 800b6fe:	d102      	bne.n	800b706 <SDMMC_GetCmdError+0x2e>
 800b700:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800b704:	e009      	b.n	800b71a <SDMMC_GetCmdError+0x42>
 800b706:	687b      	ldr	r3, [r7, #4]
 800b708:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b70a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800b70e:	2b00      	cmp	r3, #0
 800b710:	d0f1      	beq.n	800b6f6 <SDMMC_GetCmdError+0x1e>
 800b712:	687b      	ldr	r3, [r7, #4]
 800b714:	22c5      	movs	r2, #197	@ 0xc5
 800b716:	639a      	str	r2, [r3, #56]	@ 0x38
 800b718:	2300      	movs	r3, #0
 800b71a:	4618      	mov	r0, r3
 800b71c:	3714      	adds	r7, #20
 800b71e:	46bd      	mov	sp, r7
 800b720:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b724:	4770      	bx	lr
 800b726:	bf00      	nop
 800b728:	2000009c 	.word	0x2000009c
 800b72c:	10624dd3 	.word	0x10624dd3

0800b730 <MX_FATFS_Init>:
 800b730:	b580      	push	{r7, lr}
 800b732:	af00      	add	r7, sp, #0
 800b734:	4904      	ldr	r1, [pc, #16]	@ (800b748 <MX_FATFS_Init+0x18>)
 800b736:	4805      	ldr	r0, [pc, #20]	@ (800b74c <MX_FATFS_Init+0x1c>)
 800b738:	f002 fcbc 	bl	800e0b4 <FATFS_LinkDriver>
 800b73c:	4603      	mov	r3, r0
 800b73e:	461a      	mov	r2, r3
 800b740:	4b03      	ldr	r3, [pc, #12]	@ (800b750 <MX_FATFS_Init+0x20>)
 800b742:	701a      	strb	r2, [r3, #0]
 800b744:	bf00      	nop
 800b746:	bd80      	pop	{r7, pc}
 800b748:	20002840 	.word	0x20002840
 800b74c:	0801e0e4 	.word	0x0801e0e4
 800b750:	2000283c 	.word	0x2000283c

0800b754 <get_fattime>:
 800b754:	b480      	push	{r7}
 800b756:	af00      	add	r7, sp, #0
 800b758:	2300      	movs	r3, #0
 800b75a:	4618      	mov	r0, r3
 800b75c:	46bd      	mov	sp, r7
 800b75e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b762:	4770      	bx	lr

0800b764 <BSP_SD_Init>:
 800b764:	b580      	push	{r7, lr}
 800b766:	b082      	sub	sp, #8
 800b768:	af00      	add	r7, sp, #0
 800b76a:	2300      	movs	r3, #0
 800b76c:	71fb      	strb	r3, [r7, #7]
 800b76e:	f000 f888 	bl	800b882 <BSP_SD_IsDetected>
 800b772:	4603      	mov	r3, r0
 800b774:	2b01      	cmp	r3, #1
 800b776:	d001      	beq.n	800b77c <BSP_SD_Init+0x18>
 800b778:	2302      	movs	r3, #2
 800b77a:	e005      	b.n	800b788 <BSP_SD_Init+0x24>
 800b77c:	4804      	ldr	r0, [pc, #16]	@ (800b790 <BSP_SD_Init+0x2c>)
 800b77e:	f7fc fe8d 	bl	800849c <HAL_SD_Init>
 800b782:	4603      	mov	r3, r0
 800b784:	71fb      	strb	r3, [r7, #7]
 800b786:	79fb      	ldrb	r3, [r7, #7]
 800b788:	4618      	mov	r0, r3
 800b78a:	3708      	adds	r7, #8
 800b78c:	46bd      	mov	sp, r7
 800b78e:	bd80      	pop	{r7, pc}
 800b790:	200023d8 	.word	0x200023d8

0800b794 <BSP_SD_ReadBlocks_DMA>:
 800b794:	b580      	push	{r7, lr}
 800b796:	b086      	sub	sp, #24
 800b798:	af00      	add	r7, sp, #0
 800b79a:	60f8      	str	r0, [r7, #12]
 800b79c:	60b9      	str	r1, [r7, #8]
 800b79e:	607a      	str	r2, [r7, #4]
 800b7a0:	2300      	movs	r3, #0
 800b7a2:	75fb      	strb	r3, [r7, #23]
 800b7a4:	687b      	ldr	r3, [r7, #4]
 800b7a6:	68ba      	ldr	r2, [r7, #8]
 800b7a8:	68f9      	ldr	r1, [r7, #12]
 800b7aa:	4806      	ldr	r0, [pc, #24]	@ (800b7c4 <BSP_SD_ReadBlocks_DMA+0x30>)
 800b7ac:	f7fc ff2e 	bl	800860c <HAL_SD_ReadBlocks_DMA>
 800b7b0:	4603      	mov	r3, r0
 800b7b2:	2b00      	cmp	r3, #0
 800b7b4:	d001      	beq.n	800b7ba <BSP_SD_ReadBlocks_DMA+0x26>
 800b7b6:	2301      	movs	r3, #1
 800b7b8:	75fb      	strb	r3, [r7, #23]
 800b7ba:	7dfb      	ldrb	r3, [r7, #23]
 800b7bc:	4618      	mov	r0, r3
 800b7be:	3718      	adds	r7, #24
 800b7c0:	46bd      	mov	sp, r7
 800b7c2:	bd80      	pop	{r7, pc}
 800b7c4:	200023d8 	.word	0x200023d8

0800b7c8 <BSP_SD_WriteBlocks_DMA>:
 800b7c8:	b580      	push	{r7, lr}
 800b7ca:	b086      	sub	sp, #24
 800b7cc:	af00      	add	r7, sp, #0
 800b7ce:	60f8      	str	r0, [r7, #12]
 800b7d0:	60b9      	str	r1, [r7, #8]
 800b7d2:	607a      	str	r2, [r7, #4]
 800b7d4:	2300      	movs	r3, #0
 800b7d6:	75fb      	strb	r3, [r7, #23]
 800b7d8:	687b      	ldr	r3, [r7, #4]
 800b7da:	68ba      	ldr	r2, [r7, #8]
 800b7dc:	68f9      	ldr	r1, [r7, #12]
 800b7de:	4806      	ldr	r0, [pc, #24]	@ (800b7f8 <BSP_SD_WriteBlocks_DMA+0x30>)
 800b7e0:	f7fc fff6 	bl	80087d0 <HAL_SD_WriteBlocks_DMA>
 800b7e4:	4603      	mov	r3, r0
 800b7e6:	2b00      	cmp	r3, #0
 800b7e8:	d001      	beq.n	800b7ee <BSP_SD_WriteBlocks_DMA+0x26>
 800b7ea:	2301      	movs	r3, #1
 800b7ec:	75fb      	strb	r3, [r7, #23]
 800b7ee:	7dfb      	ldrb	r3, [r7, #23]
 800b7f0:	4618      	mov	r0, r3
 800b7f2:	3718      	adds	r7, #24
 800b7f4:	46bd      	mov	sp, r7
 800b7f6:	bd80      	pop	{r7, pc}
 800b7f8:	200023d8 	.word	0x200023d8

0800b7fc <BSP_SD_GetCardState>:
 800b7fc:	b580      	push	{r7, lr}
 800b7fe:	af00      	add	r7, sp, #0
 800b800:	4805      	ldr	r0, [pc, #20]	@ (800b818 <BSP_SD_GetCardState+0x1c>)
 800b802:	f7fd fc1b 	bl	800903c <HAL_SD_GetCardState>
 800b806:	4603      	mov	r3, r0
 800b808:	2b04      	cmp	r3, #4
 800b80a:	bf14      	ite	ne
 800b80c:	2301      	movne	r3, #1
 800b80e:	2300      	moveq	r3, #0
 800b810:	b2db      	uxtb	r3, r3
 800b812:	4618      	mov	r0, r3
 800b814:	bd80      	pop	{r7, pc}
 800b816:	bf00      	nop
 800b818:	200023d8 	.word	0x200023d8

0800b81c <BSP_SD_GetCardInfo>:
 800b81c:	b580      	push	{r7, lr}
 800b81e:	b082      	sub	sp, #8
 800b820:	af00      	add	r7, sp, #0
 800b822:	6078      	str	r0, [r7, #4]
 800b824:	6879      	ldr	r1, [r7, #4]
 800b826:	4803      	ldr	r0, [pc, #12]	@ (800b834 <BSP_SD_GetCardInfo+0x18>)
 800b828:	f7fd fbdc 	bl	8008fe4 <HAL_SD_GetCardInfo>
 800b82c:	bf00      	nop
 800b82e:	3708      	adds	r7, #8
 800b830:	46bd      	mov	sp, r7
 800b832:	bd80      	pop	{r7, pc}
 800b834:	200023d8 	.word	0x200023d8

0800b838 <HAL_SD_AbortCallback>:
 800b838:	b580      	push	{r7, lr}
 800b83a:	b082      	sub	sp, #8
 800b83c:	af00      	add	r7, sp, #0
 800b83e:	6078      	str	r0, [r7, #4]
 800b840:	f000 f818 	bl	800b874 <BSP_SD_AbortCallback>
 800b844:	bf00      	nop
 800b846:	3708      	adds	r7, #8
 800b848:	46bd      	mov	sp, r7
 800b84a:	bd80      	pop	{r7, pc}

0800b84c <HAL_SD_TxCpltCallback>:
 800b84c:	b580      	push	{r7, lr}
 800b84e:	b082      	sub	sp, #8
 800b850:	af00      	add	r7, sp, #0
 800b852:	6078      	str	r0, [r7, #4]
 800b854:	f000 f98c 	bl	800bb70 <BSP_SD_WriteCpltCallback>
 800b858:	bf00      	nop
 800b85a:	3708      	adds	r7, #8
 800b85c:	46bd      	mov	sp, r7
 800b85e:	bd80      	pop	{r7, pc}

0800b860 <HAL_SD_RxCpltCallback>:
 800b860:	b580      	push	{r7, lr}
 800b862:	b082      	sub	sp, #8
 800b864:	af00      	add	r7, sp, #0
 800b866:	6078      	str	r0, [r7, #4]
 800b868:	f000 f98e 	bl	800bb88 <BSP_SD_ReadCpltCallback>
 800b86c:	bf00      	nop
 800b86e:	3708      	adds	r7, #8
 800b870:	46bd      	mov	sp, r7
 800b872:	bd80      	pop	{r7, pc}

0800b874 <BSP_SD_AbortCallback>:
 800b874:	b480      	push	{r7}
 800b876:	af00      	add	r7, sp, #0
 800b878:	bf00      	nop
 800b87a:	46bd      	mov	sp, r7
 800b87c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b880:	4770      	bx	lr

0800b882 <BSP_SD_IsDetected>:
 800b882:	b480      	push	{r7}
 800b884:	b083      	sub	sp, #12
 800b886:	af00      	add	r7, sp, #0
 800b888:	2301      	movs	r3, #1
 800b88a:	71fb      	strb	r3, [r7, #7]
 800b88c:	79fb      	ldrb	r3, [r7, #7]
 800b88e:	b2db      	uxtb	r3, r3
 800b890:	4618      	mov	r0, r3
 800b892:	370c      	adds	r7, #12
 800b894:	46bd      	mov	sp, r7
 800b896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b89a:	4770      	bx	lr

0800b89c <SD_CheckStatusWithTimeout>:
 800b89c:	b580      	push	{r7, lr}
 800b89e:	b084      	sub	sp, #16
 800b8a0:	af00      	add	r7, sp, #0
 800b8a2:	6078      	str	r0, [r7, #4]
 800b8a4:	f7f9 fbda 	bl	800505c <HAL_GetTick>
 800b8a8:	60f8      	str	r0, [r7, #12]
 800b8aa:	e006      	b.n	800b8ba <SD_CheckStatusWithTimeout+0x1e>
 800b8ac:	f7ff ffa6 	bl	800b7fc <BSP_SD_GetCardState>
 800b8b0:	4603      	mov	r3, r0
 800b8b2:	2b00      	cmp	r3, #0
 800b8b4:	d101      	bne.n	800b8ba <SD_CheckStatusWithTimeout+0x1e>
 800b8b6:	2300      	movs	r3, #0
 800b8b8:	e009      	b.n	800b8ce <SD_CheckStatusWithTimeout+0x32>
 800b8ba:	f7f9 fbcf 	bl	800505c <HAL_GetTick>
 800b8be:	4602      	mov	r2, r0
 800b8c0:	68fb      	ldr	r3, [r7, #12]
 800b8c2:	1ad3      	subs	r3, r2, r3
 800b8c4:	687a      	ldr	r2, [r7, #4]
 800b8c6:	429a      	cmp	r2, r3
 800b8c8:	d8f0      	bhi.n	800b8ac <SD_CheckStatusWithTimeout+0x10>
 800b8ca:	f04f 33ff 	mov.w	r3, #4294967295
 800b8ce:	4618      	mov	r0, r3
 800b8d0:	3710      	adds	r7, #16
 800b8d2:	46bd      	mov	sp, r7
 800b8d4:	bd80      	pop	{r7, pc}
	...

0800b8d8 <SD_CheckStatus>:
 800b8d8:	b580      	push	{r7, lr}
 800b8da:	b082      	sub	sp, #8
 800b8dc:	af00      	add	r7, sp, #0
 800b8de:	4603      	mov	r3, r0
 800b8e0:	71fb      	strb	r3, [r7, #7]
 800b8e2:	4b0b      	ldr	r3, [pc, #44]	@ (800b910 <SD_CheckStatus+0x38>)
 800b8e4:	2201      	movs	r2, #1
 800b8e6:	701a      	strb	r2, [r3, #0]
 800b8e8:	f7ff ff88 	bl	800b7fc <BSP_SD_GetCardState>
 800b8ec:	4603      	mov	r3, r0
 800b8ee:	2b00      	cmp	r3, #0
 800b8f0:	d107      	bne.n	800b902 <SD_CheckStatus+0x2a>
 800b8f2:	4b07      	ldr	r3, [pc, #28]	@ (800b910 <SD_CheckStatus+0x38>)
 800b8f4:	781b      	ldrb	r3, [r3, #0]
 800b8f6:	b2db      	uxtb	r3, r3
 800b8f8:	f023 0301 	bic.w	r3, r3, #1
 800b8fc:	b2da      	uxtb	r2, r3
 800b8fe:	4b04      	ldr	r3, [pc, #16]	@ (800b910 <SD_CheckStatus+0x38>)
 800b900:	701a      	strb	r2, [r3, #0]
 800b902:	4b03      	ldr	r3, [pc, #12]	@ (800b910 <SD_CheckStatus+0x38>)
 800b904:	781b      	ldrb	r3, [r3, #0]
 800b906:	b2db      	uxtb	r3, r3
 800b908:	4618      	mov	r0, r3
 800b90a:	3708      	adds	r7, #8
 800b90c:	46bd      	mov	sp, r7
 800b90e:	bd80      	pop	{r7, pc}
 800b910:	200000a5 	.word	0x200000a5

0800b914 <SD_initialize>:
 800b914:	b580      	push	{r7, lr}
 800b916:	b082      	sub	sp, #8
 800b918:	af00      	add	r7, sp, #0
 800b91a:	4603      	mov	r3, r0
 800b91c:	71fb      	strb	r3, [r7, #7]
 800b91e:	f7ff ff21 	bl	800b764 <BSP_SD_Init>
 800b922:	4603      	mov	r3, r0
 800b924:	2b00      	cmp	r3, #0
 800b926:	d107      	bne.n	800b938 <SD_initialize+0x24>
 800b928:	79fb      	ldrb	r3, [r7, #7]
 800b92a:	4618      	mov	r0, r3
 800b92c:	f7ff ffd4 	bl	800b8d8 <SD_CheckStatus>
 800b930:	4603      	mov	r3, r0
 800b932:	461a      	mov	r2, r3
 800b934:	4b04      	ldr	r3, [pc, #16]	@ (800b948 <SD_initialize+0x34>)
 800b936:	701a      	strb	r2, [r3, #0]
 800b938:	4b03      	ldr	r3, [pc, #12]	@ (800b948 <SD_initialize+0x34>)
 800b93a:	781b      	ldrb	r3, [r3, #0]
 800b93c:	b2db      	uxtb	r3, r3
 800b93e:	4618      	mov	r0, r3
 800b940:	3708      	adds	r7, #8
 800b942:	46bd      	mov	sp, r7
 800b944:	bd80      	pop	{r7, pc}
 800b946:	bf00      	nop
 800b948:	200000a5 	.word	0x200000a5

0800b94c <SD_status>:
 800b94c:	b580      	push	{r7, lr}
 800b94e:	b082      	sub	sp, #8
 800b950:	af00      	add	r7, sp, #0
 800b952:	4603      	mov	r3, r0
 800b954:	71fb      	strb	r3, [r7, #7]
 800b956:	79fb      	ldrb	r3, [r7, #7]
 800b958:	4618      	mov	r0, r3
 800b95a:	f7ff ffbd 	bl	800b8d8 <SD_CheckStatus>
 800b95e:	4603      	mov	r3, r0
 800b960:	4618      	mov	r0, r3
 800b962:	3708      	adds	r7, #8
 800b964:	46bd      	mov	sp, r7
 800b966:	bd80      	pop	{r7, pc}

0800b968 <SD_read>:
 800b968:	b580      	push	{r7, lr}
 800b96a:	b086      	sub	sp, #24
 800b96c:	af00      	add	r7, sp, #0
 800b96e:	60b9      	str	r1, [r7, #8]
 800b970:	607a      	str	r2, [r7, #4]
 800b972:	603b      	str	r3, [r7, #0]
 800b974:	4603      	mov	r3, r0
 800b976:	73fb      	strb	r3, [r7, #15]
 800b978:	2301      	movs	r3, #1
 800b97a:	75fb      	strb	r3, [r7, #23]
 800b97c:	f247 5030 	movw	r0, #30000	@ 0x7530
 800b980:	f7ff ff8c 	bl	800b89c <SD_CheckStatusWithTimeout>
 800b984:	4603      	mov	r3, r0
 800b986:	2b00      	cmp	r3, #0
 800b988:	da01      	bge.n	800b98e <SD_read+0x26>
 800b98a:	7dfb      	ldrb	r3, [r7, #23]
 800b98c:	e03b      	b.n	800ba06 <SD_read+0x9e>
 800b98e:	683a      	ldr	r2, [r7, #0]
 800b990:	6879      	ldr	r1, [r7, #4]
 800b992:	68b8      	ldr	r0, [r7, #8]
 800b994:	f7ff fefe 	bl	800b794 <BSP_SD_ReadBlocks_DMA>
 800b998:	4603      	mov	r3, r0
 800b99a:	2b00      	cmp	r3, #0
 800b99c:	d132      	bne.n	800ba04 <SD_read+0x9c>
 800b99e:	4b1c      	ldr	r3, [pc, #112]	@ (800ba10 <SD_read+0xa8>)
 800b9a0:	2200      	movs	r2, #0
 800b9a2:	601a      	str	r2, [r3, #0]
 800b9a4:	f7f9 fb5a 	bl	800505c <HAL_GetTick>
 800b9a8:	6138      	str	r0, [r7, #16]
 800b9aa:	bf00      	nop
 800b9ac:	4b18      	ldr	r3, [pc, #96]	@ (800ba10 <SD_read+0xa8>)
 800b9ae:	681b      	ldr	r3, [r3, #0]
 800b9b0:	2b00      	cmp	r3, #0
 800b9b2:	d108      	bne.n	800b9c6 <SD_read+0x5e>
 800b9b4:	f7f9 fb52 	bl	800505c <HAL_GetTick>
 800b9b8:	4602      	mov	r2, r0
 800b9ba:	693b      	ldr	r3, [r7, #16]
 800b9bc:	1ad3      	subs	r3, r2, r3
 800b9be:	f247 522f 	movw	r2, #29999	@ 0x752f
 800b9c2:	4293      	cmp	r3, r2
 800b9c4:	d9f2      	bls.n	800b9ac <SD_read+0x44>
 800b9c6:	4b12      	ldr	r3, [pc, #72]	@ (800ba10 <SD_read+0xa8>)
 800b9c8:	681b      	ldr	r3, [r3, #0]
 800b9ca:	2b00      	cmp	r3, #0
 800b9cc:	d102      	bne.n	800b9d4 <SD_read+0x6c>
 800b9ce:	2301      	movs	r3, #1
 800b9d0:	75fb      	strb	r3, [r7, #23]
 800b9d2:	e017      	b.n	800ba04 <SD_read+0x9c>
 800b9d4:	4b0e      	ldr	r3, [pc, #56]	@ (800ba10 <SD_read+0xa8>)
 800b9d6:	2200      	movs	r2, #0
 800b9d8:	601a      	str	r2, [r3, #0]
 800b9da:	f7f9 fb3f 	bl	800505c <HAL_GetTick>
 800b9de:	6138      	str	r0, [r7, #16]
 800b9e0:	e007      	b.n	800b9f2 <SD_read+0x8a>
 800b9e2:	f7ff ff0b 	bl	800b7fc <BSP_SD_GetCardState>
 800b9e6:	4603      	mov	r3, r0
 800b9e8:	2b00      	cmp	r3, #0
 800b9ea:	d102      	bne.n	800b9f2 <SD_read+0x8a>
 800b9ec:	2300      	movs	r3, #0
 800b9ee:	75fb      	strb	r3, [r7, #23]
 800b9f0:	e008      	b.n	800ba04 <SD_read+0x9c>
 800b9f2:	f7f9 fb33 	bl	800505c <HAL_GetTick>
 800b9f6:	4602      	mov	r2, r0
 800b9f8:	693b      	ldr	r3, [r7, #16]
 800b9fa:	1ad3      	subs	r3, r2, r3
 800b9fc:	f247 522f 	movw	r2, #29999	@ 0x752f
 800ba00:	4293      	cmp	r3, r2
 800ba02:	d9ee      	bls.n	800b9e2 <SD_read+0x7a>
 800ba04:	7dfb      	ldrb	r3, [r7, #23]
 800ba06:	4618      	mov	r0, r3
 800ba08:	3718      	adds	r7, #24
 800ba0a:	46bd      	mov	sp, r7
 800ba0c:	bd80      	pop	{r7, pc}
 800ba0e:	bf00      	nop
 800ba10:	200048ac 	.word	0x200048ac

0800ba14 <SD_write>:
 800ba14:	b580      	push	{r7, lr}
 800ba16:	b086      	sub	sp, #24
 800ba18:	af00      	add	r7, sp, #0
 800ba1a:	60b9      	str	r1, [r7, #8]
 800ba1c:	607a      	str	r2, [r7, #4]
 800ba1e:	603b      	str	r3, [r7, #0]
 800ba20:	4603      	mov	r3, r0
 800ba22:	73fb      	strb	r3, [r7, #15]
 800ba24:	2301      	movs	r3, #1
 800ba26:	75fb      	strb	r3, [r7, #23]
 800ba28:	4b24      	ldr	r3, [pc, #144]	@ (800babc <SD_write+0xa8>)
 800ba2a:	2200      	movs	r2, #0
 800ba2c:	601a      	str	r2, [r3, #0]
 800ba2e:	f247 5030 	movw	r0, #30000	@ 0x7530
 800ba32:	f7ff ff33 	bl	800b89c <SD_CheckStatusWithTimeout>
 800ba36:	4603      	mov	r3, r0
 800ba38:	2b00      	cmp	r3, #0
 800ba3a:	da01      	bge.n	800ba40 <SD_write+0x2c>
 800ba3c:	7dfb      	ldrb	r3, [r7, #23]
 800ba3e:	e038      	b.n	800bab2 <SD_write+0x9e>
 800ba40:	683a      	ldr	r2, [r7, #0]
 800ba42:	6879      	ldr	r1, [r7, #4]
 800ba44:	68b8      	ldr	r0, [r7, #8]
 800ba46:	f7ff febf 	bl	800b7c8 <BSP_SD_WriteBlocks_DMA>
 800ba4a:	4603      	mov	r3, r0
 800ba4c:	2b00      	cmp	r3, #0
 800ba4e:	d12f      	bne.n	800bab0 <SD_write+0x9c>
 800ba50:	f7f9 fb04 	bl	800505c <HAL_GetTick>
 800ba54:	6138      	str	r0, [r7, #16]
 800ba56:	bf00      	nop
 800ba58:	4b18      	ldr	r3, [pc, #96]	@ (800babc <SD_write+0xa8>)
 800ba5a:	681b      	ldr	r3, [r3, #0]
 800ba5c:	2b00      	cmp	r3, #0
 800ba5e:	d108      	bne.n	800ba72 <SD_write+0x5e>
 800ba60:	f7f9 fafc 	bl	800505c <HAL_GetTick>
 800ba64:	4602      	mov	r2, r0
 800ba66:	693b      	ldr	r3, [r7, #16]
 800ba68:	1ad3      	subs	r3, r2, r3
 800ba6a:	f247 522f 	movw	r2, #29999	@ 0x752f
 800ba6e:	4293      	cmp	r3, r2
 800ba70:	d9f2      	bls.n	800ba58 <SD_write+0x44>
 800ba72:	4b12      	ldr	r3, [pc, #72]	@ (800babc <SD_write+0xa8>)
 800ba74:	681b      	ldr	r3, [r3, #0]
 800ba76:	2b00      	cmp	r3, #0
 800ba78:	d102      	bne.n	800ba80 <SD_write+0x6c>
 800ba7a:	2301      	movs	r3, #1
 800ba7c:	75fb      	strb	r3, [r7, #23]
 800ba7e:	e017      	b.n	800bab0 <SD_write+0x9c>
 800ba80:	4b0e      	ldr	r3, [pc, #56]	@ (800babc <SD_write+0xa8>)
 800ba82:	2200      	movs	r2, #0
 800ba84:	601a      	str	r2, [r3, #0]
 800ba86:	f7f9 fae9 	bl	800505c <HAL_GetTick>
 800ba8a:	6138      	str	r0, [r7, #16]
 800ba8c:	e007      	b.n	800ba9e <SD_write+0x8a>
 800ba8e:	f7ff feb5 	bl	800b7fc <BSP_SD_GetCardState>
 800ba92:	4603      	mov	r3, r0
 800ba94:	2b00      	cmp	r3, #0
 800ba96:	d102      	bne.n	800ba9e <SD_write+0x8a>
 800ba98:	2300      	movs	r3, #0
 800ba9a:	75fb      	strb	r3, [r7, #23]
 800ba9c:	e008      	b.n	800bab0 <SD_write+0x9c>
 800ba9e:	f7f9 fadd 	bl	800505c <HAL_GetTick>
 800baa2:	4602      	mov	r2, r0
 800baa4:	693b      	ldr	r3, [r7, #16]
 800baa6:	1ad3      	subs	r3, r2, r3
 800baa8:	f247 522f 	movw	r2, #29999	@ 0x752f
 800baac:	4293      	cmp	r3, r2
 800baae:	d9ee      	bls.n	800ba8e <SD_write+0x7a>
 800bab0:	7dfb      	ldrb	r3, [r7, #23]
 800bab2:	4618      	mov	r0, r3
 800bab4:	3718      	adds	r7, #24
 800bab6:	46bd      	mov	sp, r7
 800bab8:	bd80      	pop	{r7, pc}
 800baba:	bf00      	nop
 800babc:	200048a8 	.word	0x200048a8

0800bac0 <SD_ioctl>:
 800bac0:	b580      	push	{r7, lr}
 800bac2:	b08c      	sub	sp, #48	@ 0x30
 800bac4:	af00      	add	r7, sp, #0
 800bac6:	4603      	mov	r3, r0
 800bac8:	603a      	str	r2, [r7, #0]
 800baca:	71fb      	strb	r3, [r7, #7]
 800bacc:	460b      	mov	r3, r1
 800bace:	71bb      	strb	r3, [r7, #6]
 800bad0:	2301      	movs	r3, #1
 800bad2:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800bad6:	4b25      	ldr	r3, [pc, #148]	@ (800bb6c <SD_ioctl+0xac>)
 800bad8:	781b      	ldrb	r3, [r3, #0]
 800bada:	b2db      	uxtb	r3, r3
 800badc:	f003 0301 	and.w	r3, r3, #1
 800bae0:	2b00      	cmp	r3, #0
 800bae2:	d001      	beq.n	800bae8 <SD_ioctl+0x28>
 800bae4:	2303      	movs	r3, #3
 800bae6:	e03c      	b.n	800bb62 <SD_ioctl+0xa2>
 800bae8:	79bb      	ldrb	r3, [r7, #6]
 800baea:	2b03      	cmp	r3, #3
 800baec:	d834      	bhi.n	800bb58 <SD_ioctl+0x98>
 800baee:	a201      	add	r2, pc, #4	@ (adr r2, 800baf4 <SD_ioctl+0x34>)
 800baf0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800baf4:	0800bb05 	.word	0x0800bb05
 800baf8:	0800bb0d 	.word	0x0800bb0d
 800bafc:	0800bb25 	.word	0x0800bb25
 800bb00:	0800bb3f 	.word	0x0800bb3f
 800bb04:	2300      	movs	r3, #0
 800bb06:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800bb0a:	e028      	b.n	800bb5e <SD_ioctl+0x9e>
 800bb0c:	f107 030c 	add.w	r3, r7, #12
 800bb10:	4618      	mov	r0, r3
 800bb12:	f7ff fe83 	bl	800b81c <BSP_SD_GetCardInfo>
 800bb16:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800bb18:	683b      	ldr	r3, [r7, #0]
 800bb1a:	601a      	str	r2, [r3, #0]
 800bb1c:	2300      	movs	r3, #0
 800bb1e:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800bb22:	e01c      	b.n	800bb5e <SD_ioctl+0x9e>
 800bb24:	f107 030c 	add.w	r3, r7, #12
 800bb28:	4618      	mov	r0, r3
 800bb2a:	f7ff fe77 	bl	800b81c <BSP_SD_GetCardInfo>
 800bb2e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bb30:	b29a      	uxth	r2, r3
 800bb32:	683b      	ldr	r3, [r7, #0]
 800bb34:	801a      	strh	r2, [r3, #0]
 800bb36:	2300      	movs	r3, #0
 800bb38:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800bb3c:	e00f      	b.n	800bb5e <SD_ioctl+0x9e>
 800bb3e:	f107 030c 	add.w	r3, r7, #12
 800bb42:	4618      	mov	r0, r3
 800bb44:	f7ff fe6a 	bl	800b81c <BSP_SD_GetCardInfo>
 800bb48:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bb4a:	0a5a      	lsrs	r2, r3, #9
 800bb4c:	683b      	ldr	r3, [r7, #0]
 800bb4e:	601a      	str	r2, [r3, #0]
 800bb50:	2300      	movs	r3, #0
 800bb52:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800bb56:	e002      	b.n	800bb5e <SD_ioctl+0x9e>
 800bb58:	2304      	movs	r3, #4
 800bb5a:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800bb5e:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800bb62:	4618      	mov	r0, r3
 800bb64:	3730      	adds	r7, #48	@ 0x30
 800bb66:	46bd      	mov	sp, r7
 800bb68:	bd80      	pop	{r7, pc}
 800bb6a:	bf00      	nop
 800bb6c:	200000a5 	.word	0x200000a5

0800bb70 <BSP_SD_WriteCpltCallback>:
 800bb70:	b480      	push	{r7}
 800bb72:	af00      	add	r7, sp, #0
 800bb74:	4b03      	ldr	r3, [pc, #12]	@ (800bb84 <BSP_SD_WriteCpltCallback+0x14>)
 800bb76:	2201      	movs	r2, #1
 800bb78:	601a      	str	r2, [r3, #0]
 800bb7a:	bf00      	nop
 800bb7c:	46bd      	mov	sp, r7
 800bb7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb82:	4770      	bx	lr
 800bb84:	200048a8 	.word	0x200048a8

0800bb88 <BSP_SD_ReadCpltCallback>:
 800bb88:	b480      	push	{r7}
 800bb8a:	af00      	add	r7, sp, #0
 800bb8c:	4b03      	ldr	r3, [pc, #12]	@ (800bb9c <BSP_SD_ReadCpltCallback+0x14>)
 800bb8e:	2201      	movs	r2, #1
 800bb90:	601a      	str	r2, [r3, #0]
 800bb92:	bf00      	nop
 800bb94:	46bd      	mov	sp, r7
 800bb96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb9a:	4770      	bx	lr
 800bb9c:	200048ac 	.word	0x200048ac

0800bba0 <disk_status>:
 800bba0:	b580      	push	{r7, lr}
 800bba2:	b084      	sub	sp, #16
 800bba4:	af00      	add	r7, sp, #0
 800bba6:	4603      	mov	r3, r0
 800bba8:	71fb      	strb	r3, [r7, #7]
 800bbaa:	79fb      	ldrb	r3, [r7, #7]
 800bbac:	4a08      	ldr	r2, [pc, #32]	@ (800bbd0 <disk_status+0x30>)
 800bbae:	009b      	lsls	r3, r3, #2
 800bbb0:	4413      	add	r3, r2
 800bbb2:	685b      	ldr	r3, [r3, #4]
 800bbb4:	685b      	ldr	r3, [r3, #4]
 800bbb6:	79fa      	ldrb	r2, [r7, #7]
 800bbb8:	4905      	ldr	r1, [pc, #20]	@ (800bbd0 <disk_status+0x30>)
 800bbba:	440a      	add	r2, r1
 800bbbc:	7a12      	ldrb	r2, [r2, #8]
 800bbbe:	4610      	mov	r0, r2
 800bbc0:	4798      	blx	r3
 800bbc2:	4603      	mov	r3, r0
 800bbc4:	73fb      	strb	r3, [r7, #15]
 800bbc6:	7bfb      	ldrb	r3, [r7, #15]
 800bbc8:	4618      	mov	r0, r3
 800bbca:	3710      	adds	r7, #16
 800bbcc:	46bd      	mov	sp, r7
 800bbce:	bd80      	pop	{r7, pc}
 800bbd0:	200048d8 	.word	0x200048d8

0800bbd4 <disk_initialize>:
 800bbd4:	b580      	push	{r7, lr}
 800bbd6:	b084      	sub	sp, #16
 800bbd8:	af00      	add	r7, sp, #0
 800bbda:	4603      	mov	r3, r0
 800bbdc:	71fb      	strb	r3, [r7, #7]
 800bbde:	2300      	movs	r3, #0
 800bbe0:	73fb      	strb	r3, [r7, #15]
 800bbe2:	79fb      	ldrb	r3, [r7, #7]
 800bbe4:	4a0d      	ldr	r2, [pc, #52]	@ (800bc1c <disk_initialize+0x48>)
 800bbe6:	5cd3      	ldrb	r3, [r2, r3]
 800bbe8:	2b00      	cmp	r3, #0
 800bbea:	d111      	bne.n	800bc10 <disk_initialize+0x3c>
 800bbec:	79fb      	ldrb	r3, [r7, #7]
 800bbee:	4a0b      	ldr	r2, [pc, #44]	@ (800bc1c <disk_initialize+0x48>)
 800bbf0:	2101      	movs	r1, #1
 800bbf2:	54d1      	strb	r1, [r2, r3]
 800bbf4:	79fb      	ldrb	r3, [r7, #7]
 800bbf6:	4a09      	ldr	r2, [pc, #36]	@ (800bc1c <disk_initialize+0x48>)
 800bbf8:	009b      	lsls	r3, r3, #2
 800bbfa:	4413      	add	r3, r2
 800bbfc:	685b      	ldr	r3, [r3, #4]
 800bbfe:	681b      	ldr	r3, [r3, #0]
 800bc00:	79fa      	ldrb	r2, [r7, #7]
 800bc02:	4906      	ldr	r1, [pc, #24]	@ (800bc1c <disk_initialize+0x48>)
 800bc04:	440a      	add	r2, r1
 800bc06:	7a12      	ldrb	r2, [r2, #8]
 800bc08:	4610      	mov	r0, r2
 800bc0a:	4798      	blx	r3
 800bc0c:	4603      	mov	r3, r0
 800bc0e:	73fb      	strb	r3, [r7, #15]
 800bc10:	7bfb      	ldrb	r3, [r7, #15]
 800bc12:	4618      	mov	r0, r3
 800bc14:	3710      	adds	r7, #16
 800bc16:	46bd      	mov	sp, r7
 800bc18:	bd80      	pop	{r7, pc}
 800bc1a:	bf00      	nop
 800bc1c:	200048d8 	.word	0x200048d8

0800bc20 <disk_read>:
 800bc20:	b590      	push	{r4, r7, lr}
 800bc22:	b087      	sub	sp, #28
 800bc24:	af00      	add	r7, sp, #0
 800bc26:	60b9      	str	r1, [r7, #8]
 800bc28:	607a      	str	r2, [r7, #4]
 800bc2a:	603b      	str	r3, [r7, #0]
 800bc2c:	4603      	mov	r3, r0
 800bc2e:	73fb      	strb	r3, [r7, #15]
 800bc30:	7bfb      	ldrb	r3, [r7, #15]
 800bc32:	4a0a      	ldr	r2, [pc, #40]	@ (800bc5c <disk_read+0x3c>)
 800bc34:	009b      	lsls	r3, r3, #2
 800bc36:	4413      	add	r3, r2
 800bc38:	685b      	ldr	r3, [r3, #4]
 800bc3a:	689c      	ldr	r4, [r3, #8]
 800bc3c:	7bfb      	ldrb	r3, [r7, #15]
 800bc3e:	4a07      	ldr	r2, [pc, #28]	@ (800bc5c <disk_read+0x3c>)
 800bc40:	4413      	add	r3, r2
 800bc42:	7a18      	ldrb	r0, [r3, #8]
 800bc44:	683b      	ldr	r3, [r7, #0]
 800bc46:	687a      	ldr	r2, [r7, #4]
 800bc48:	68b9      	ldr	r1, [r7, #8]
 800bc4a:	47a0      	blx	r4
 800bc4c:	4603      	mov	r3, r0
 800bc4e:	75fb      	strb	r3, [r7, #23]
 800bc50:	7dfb      	ldrb	r3, [r7, #23]
 800bc52:	4618      	mov	r0, r3
 800bc54:	371c      	adds	r7, #28
 800bc56:	46bd      	mov	sp, r7
 800bc58:	bd90      	pop	{r4, r7, pc}
 800bc5a:	bf00      	nop
 800bc5c:	200048d8 	.word	0x200048d8

0800bc60 <disk_write>:
 800bc60:	b590      	push	{r4, r7, lr}
 800bc62:	b087      	sub	sp, #28
 800bc64:	af00      	add	r7, sp, #0
 800bc66:	60b9      	str	r1, [r7, #8]
 800bc68:	607a      	str	r2, [r7, #4]
 800bc6a:	603b      	str	r3, [r7, #0]
 800bc6c:	4603      	mov	r3, r0
 800bc6e:	73fb      	strb	r3, [r7, #15]
 800bc70:	7bfb      	ldrb	r3, [r7, #15]
 800bc72:	4a0a      	ldr	r2, [pc, #40]	@ (800bc9c <disk_write+0x3c>)
 800bc74:	009b      	lsls	r3, r3, #2
 800bc76:	4413      	add	r3, r2
 800bc78:	685b      	ldr	r3, [r3, #4]
 800bc7a:	68dc      	ldr	r4, [r3, #12]
 800bc7c:	7bfb      	ldrb	r3, [r7, #15]
 800bc7e:	4a07      	ldr	r2, [pc, #28]	@ (800bc9c <disk_write+0x3c>)
 800bc80:	4413      	add	r3, r2
 800bc82:	7a18      	ldrb	r0, [r3, #8]
 800bc84:	683b      	ldr	r3, [r7, #0]
 800bc86:	687a      	ldr	r2, [r7, #4]
 800bc88:	68b9      	ldr	r1, [r7, #8]
 800bc8a:	47a0      	blx	r4
 800bc8c:	4603      	mov	r3, r0
 800bc8e:	75fb      	strb	r3, [r7, #23]
 800bc90:	7dfb      	ldrb	r3, [r7, #23]
 800bc92:	4618      	mov	r0, r3
 800bc94:	371c      	adds	r7, #28
 800bc96:	46bd      	mov	sp, r7
 800bc98:	bd90      	pop	{r4, r7, pc}
 800bc9a:	bf00      	nop
 800bc9c:	200048d8 	.word	0x200048d8

0800bca0 <disk_ioctl>:
 800bca0:	b580      	push	{r7, lr}
 800bca2:	b084      	sub	sp, #16
 800bca4:	af00      	add	r7, sp, #0
 800bca6:	4603      	mov	r3, r0
 800bca8:	603a      	str	r2, [r7, #0]
 800bcaa:	71fb      	strb	r3, [r7, #7]
 800bcac:	460b      	mov	r3, r1
 800bcae:	71bb      	strb	r3, [r7, #6]
 800bcb0:	79fb      	ldrb	r3, [r7, #7]
 800bcb2:	4a09      	ldr	r2, [pc, #36]	@ (800bcd8 <disk_ioctl+0x38>)
 800bcb4:	009b      	lsls	r3, r3, #2
 800bcb6:	4413      	add	r3, r2
 800bcb8:	685b      	ldr	r3, [r3, #4]
 800bcba:	691b      	ldr	r3, [r3, #16]
 800bcbc:	79fa      	ldrb	r2, [r7, #7]
 800bcbe:	4906      	ldr	r1, [pc, #24]	@ (800bcd8 <disk_ioctl+0x38>)
 800bcc0:	440a      	add	r2, r1
 800bcc2:	7a10      	ldrb	r0, [r2, #8]
 800bcc4:	79b9      	ldrb	r1, [r7, #6]
 800bcc6:	683a      	ldr	r2, [r7, #0]
 800bcc8:	4798      	blx	r3
 800bcca:	4603      	mov	r3, r0
 800bccc:	73fb      	strb	r3, [r7, #15]
 800bcce:	7bfb      	ldrb	r3, [r7, #15]
 800bcd0:	4618      	mov	r0, r3
 800bcd2:	3710      	adds	r7, #16
 800bcd4:	46bd      	mov	sp, r7
 800bcd6:	bd80      	pop	{r7, pc}
 800bcd8:	200048d8 	.word	0x200048d8

0800bcdc <ld_word>:
 800bcdc:	b480      	push	{r7}
 800bcde:	b085      	sub	sp, #20
 800bce0:	af00      	add	r7, sp, #0
 800bce2:	6078      	str	r0, [r7, #4]
 800bce4:	687b      	ldr	r3, [r7, #4]
 800bce6:	3301      	adds	r3, #1
 800bce8:	781b      	ldrb	r3, [r3, #0]
 800bcea:	81fb      	strh	r3, [r7, #14]
 800bcec:	89fb      	ldrh	r3, [r7, #14]
 800bcee:	021b      	lsls	r3, r3, #8
 800bcf0:	b21a      	sxth	r2, r3
 800bcf2:	687b      	ldr	r3, [r7, #4]
 800bcf4:	781b      	ldrb	r3, [r3, #0]
 800bcf6:	b21b      	sxth	r3, r3
 800bcf8:	4313      	orrs	r3, r2
 800bcfa:	b21b      	sxth	r3, r3
 800bcfc:	81fb      	strh	r3, [r7, #14]
 800bcfe:	89fb      	ldrh	r3, [r7, #14]
 800bd00:	4618      	mov	r0, r3
 800bd02:	3714      	adds	r7, #20
 800bd04:	46bd      	mov	sp, r7
 800bd06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd0a:	4770      	bx	lr

0800bd0c <ld_dword>:
 800bd0c:	b480      	push	{r7}
 800bd0e:	b085      	sub	sp, #20
 800bd10:	af00      	add	r7, sp, #0
 800bd12:	6078      	str	r0, [r7, #4]
 800bd14:	687b      	ldr	r3, [r7, #4]
 800bd16:	3303      	adds	r3, #3
 800bd18:	781b      	ldrb	r3, [r3, #0]
 800bd1a:	60fb      	str	r3, [r7, #12]
 800bd1c:	68fb      	ldr	r3, [r7, #12]
 800bd1e:	021b      	lsls	r3, r3, #8
 800bd20:	687a      	ldr	r2, [r7, #4]
 800bd22:	3202      	adds	r2, #2
 800bd24:	7812      	ldrb	r2, [r2, #0]
 800bd26:	4313      	orrs	r3, r2
 800bd28:	60fb      	str	r3, [r7, #12]
 800bd2a:	68fb      	ldr	r3, [r7, #12]
 800bd2c:	021b      	lsls	r3, r3, #8
 800bd2e:	687a      	ldr	r2, [r7, #4]
 800bd30:	3201      	adds	r2, #1
 800bd32:	7812      	ldrb	r2, [r2, #0]
 800bd34:	4313      	orrs	r3, r2
 800bd36:	60fb      	str	r3, [r7, #12]
 800bd38:	68fb      	ldr	r3, [r7, #12]
 800bd3a:	021b      	lsls	r3, r3, #8
 800bd3c:	687a      	ldr	r2, [r7, #4]
 800bd3e:	7812      	ldrb	r2, [r2, #0]
 800bd40:	4313      	orrs	r3, r2
 800bd42:	60fb      	str	r3, [r7, #12]
 800bd44:	68fb      	ldr	r3, [r7, #12]
 800bd46:	4618      	mov	r0, r3
 800bd48:	3714      	adds	r7, #20
 800bd4a:	46bd      	mov	sp, r7
 800bd4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd50:	4770      	bx	lr

0800bd52 <st_word>:
 800bd52:	b480      	push	{r7}
 800bd54:	b083      	sub	sp, #12
 800bd56:	af00      	add	r7, sp, #0
 800bd58:	6078      	str	r0, [r7, #4]
 800bd5a:	460b      	mov	r3, r1
 800bd5c:	807b      	strh	r3, [r7, #2]
 800bd5e:	687b      	ldr	r3, [r7, #4]
 800bd60:	1c5a      	adds	r2, r3, #1
 800bd62:	607a      	str	r2, [r7, #4]
 800bd64:	887a      	ldrh	r2, [r7, #2]
 800bd66:	b2d2      	uxtb	r2, r2
 800bd68:	701a      	strb	r2, [r3, #0]
 800bd6a:	887b      	ldrh	r3, [r7, #2]
 800bd6c:	0a1b      	lsrs	r3, r3, #8
 800bd6e:	807b      	strh	r3, [r7, #2]
 800bd70:	687b      	ldr	r3, [r7, #4]
 800bd72:	1c5a      	adds	r2, r3, #1
 800bd74:	607a      	str	r2, [r7, #4]
 800bd76:	887a      	ldrh	r2, [r7, #2]
 800bd78:	b2d2      	uxtb	r2, r2
 800bd7a:	701a      	strb	r2, [r3, #0]
 800bd7c:	bf00      	nop
 800bd7e:	370c      	adds	r7, #12
 800bd80:	46bd      	mov	sp, r7
 800bd82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd86:	4770      	bx	lr

0800bd88 <st_dword>:
 800bd88:	b480      	push	{r7}
 800bd8a:	b083      	sub	sp, #12
 800bd8c:	af00      	add	r7, sp, #0
 800bd8e:	6078      	str	r0, [r7, #4]
 800bd90:	6039      	str	r1, [r7, #0]
 800bd92:	687b      	ldr	r3, [r7, #4]
 800bd94:	1c5a      	adds	r2, r3, #1
 800bd96:	607a      	str	r2, [r7, #4]
 800bd98:	683a      	ldr	r2, [r7, #0]
 800bd9a:	b2d2      	uxtb	r2, r2
 800bd9c:	701a      	strb	r2, [r3, #0]
 800bd9e:	683b      	ldr	r3, [r7, #0]
 800bda0:	0a1b      	lsrs	r3, r3, #8
 800bda2:	603b      	str	r3, [r7, #0]
 800bda4:	687b      	ldr	r3, [r7, #4]
 800bda6:	1c5a      	adds	r2, r3, #1
 800bda8:	607a      	str	r2, [r7, #4]
 800bdaa:	683a      	ldr	r2, [r7, #0]
 800bdac:	b2d2      	uxtb	r2, r2
 800bdae:	701a      	strb	r2, [r3, #0]
 800bdb0:	683b      	ldr	r3, [r7, #0]
 800bdb2:	0a1b      	lsrs	r3, r3, #8
 800bdb4:	603b      	str	r3, [r7, #0]
 800bdb6:	687b      	ldr	r3, [r7, #4]
 800bdb8:	1c5a      	adds	r2, r3, #1
 800bdba:	607a      	str	r2, [r7, #4]
 800bdbc:	683a      	ldr	r2, [r7, #0]
 800bdbe:	b2d2      	uxtb	r2, r2
 800bdc0:	701a      	strb	r2, [r3, #0]
 800bdc2:	683b      	ldr	r3, [r7, #0]
 800bdc4:	0a1b      	lsrs	r3, r3, #8
 800bdc6:	603b      	str	r3, [r7, #0]
 800bdc8:	687b      	ldr	r3, [r7, #4]
 800bdca:	1c5a      	adds	r2, r3, #1
 800bdcc:	607a      	str	r2, [r7, #4]
 800bdce:	683a      	ldr	r2, [r7, #0]
 800bdd0:	b2d2      	uxtb	r2, r2
 800bdd2:	701a      	strb	r2, [r3, #0]
 800bdd4:	bf00      	nop
 800bdd6:	370c      	adds	r7, #12
 800bdd8:	46bd      	mov	sp, r7
 800bdda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdde:	4770      	bx	lr

0800bde0 <mem_cpy>:
 800bde0:	b480      	push	{r7}
 800bde2:	b087      	sub	sp, #28
 800bde4:	af00      	add	r7, sp, #0
 800bde6:	60f8      	str	r0, [r7, #12]
 800bde8:	60b9      	str	r1, [r7, #8]
 800bdea:	607a      	str	r2, [r7, #4]
 800bdec:	68fb      	ldr	r3, [r7, #12]
 800bdee:	617b      	str	r3, [r7, #20]
 800bdf0:	68bb      	ldr	r3, [r7, #8]
 800bdf2:	613b      	str	r3, [r7, #16]
 800bdf4:	687b      	ldr	r3, [r7, #4]
 800bdf6:	2b00      	cmp	r3, #0
 800bdf8:	d00d      	beq.n	800be16 <mem_cpy+0x36>
 800bdfa:	693a      	ldr	r2, [r7, #16]
 800bdfc:	1c53      	adds	r3, r2, #1
 800bdfe:	613b      	str	r3, [r7, #16]
 800be00:	697b      	ldr	r3, [r7, #20]
 800be02:	1c59      	adds	r1, r3, #1
 800be04:	6179      	str	r1, [r7, #20]
 800be06:	7812      	ldrb	r2, [r2, #0]
 800be08:	701a      	strb	r2, [r3, #0]
 800be0a:	687b      	ldr	r3, [r7, #4]
 800be0c:	3b01      	subs	r3, #1
 800be0e:	607b      	str	r3, [r7, #4]
 800be10:	687b      	ldr	r3, [r7, #4]
 800be12:	2b00      	cmp	r3, #0
 800be14:	d1f1      	bne.n	800bdfa <mem_cpy+0x1a>
 800be16:	bf00      	nop
 800be18:	371c      	adds	r7, #28
 800be1a:	46bd      	mov	sp, r7
 800be1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be20:	4770      	bx	lr

0800be22 <mem_set>:
 800be22:	b480      	push	{r7}
 800be24:	b087      	sub	sp, #28
 800be26:	af00      	add	r7, sp, #0
 800be28:	60f8      	str	r0, [r7, #12]
 800be2a:	60b9      	str	r1, [r7, #8]
 800be2c:	607a      	str	r2, [r7, #4]
 800be2e:	68fb      	ldr	r3, [r7, #12]
 800be30:	617b      	str	r3, [r7, #20]
 800be32:	697b      	ldr	r3, [r7, #20]
 800be34:	1c5a      	adds	r2, r3, #1
 800be36:	617a      	str	r2, [r7, #20]
 800be38:	68ba      	ldr	r2, [r7, #8]
 800be3a:	b2d2      	uxtb	r2, r2
 800be3c:	701a      	strb	r2, [r3, #0]
 800be3e:	687b      	ldr	r3, [r7, #4]
 800be40:	3b01      	subs	r3, #1
 800be42:	607b      	str	r3, [r7, #4]
 800be44:	687b      	ldr	r3, [r7, #4]
 800be46:	2b00      	cmp	r3, #0
 800be48:	d1f3      	bne.n	800be32 <mem_set+0x10>
 800be4a:	bf00      	nop
 800be4c:	bf00      	nop
 800be4e:	371c      	adds	r7, #28
 800be50:	46bd      	mov	sp, r7
 800be52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be56:	4770      	bx	lr

0800be58 <mem_cmp>:
 800be58:	b480      	push	{r7}
 800be5a:	b089      	sub	sp, #36	@ 0x24
 800be5c:	af00      	add	r7, sp, #0
 800be5e:	60f8      	str	r0, [r7, #12]
 800be60:	60b9      	str	r1, [r7, #8]
 800be62:	607a      	str	r2, [r7, #4]
 800be64:	68fb      	ldr	r3, [r7, #12]
 800be66:	61fb      	str	r3, [r7, #28]
 800be68:	68bb      	ldr	r3, [r7, #8]
 800be6a:	61bb      	str	r3, [r7, #24]
 800be6c:	2300      	movs	r3, #0
 800be6e:	617b      	str	r3, [r7, #20]
 800be70:	69fb      	ldr	r3, [r7, #28]
 800be72:	1c5a      	adds	r2, r3, #1
 800be74:	61fa      	str	r2, [r7, #28]
 800be76:	781b      	ldrb	r3, [r3, #0]
 800be78:	4619      	mov	r1, r3
 800be7a:	69bb      	ldr	r3, [r7, #24]
 800be7c:	1c5a      	adds	r2, r3, #1
 800be7e:	61ba      	str	r2, [r7, #24]
 800be80:	781b      	ldrb	r3, [r3, #0]
 800be82:	1acb      	subs	r3, r1, r3
 800be84:	617b      	str	r3, [r7, #20]
 800be86:	687b      	ldr	r3, [r7, #4]
 800be88:	3b01      	subs	r3, #1
 800be8a:	607b      	str	r3, [r7, #4]
 800be8c:	687b      	ldr	r3, [r7, #4]
 800be8e:	2b00      	cmp	r3, #0
 800be90:	d002      	beq.n	800be98 <mem_cmp+0x40>
 800be92:	697b      	ldr	r3, [r7, #20]
 800be94:	2b00      	cmp	r3, #0
 800be96:	d0eb      	beq.n	800be70 <mem_cmp+0x18>
 800be98:	697b      	ldr	r3, [r7, #20]
 800be9a:	4618      	mov	r0, r3
 800be9c:	3724      	adds	r7, #36	@ 0x24
 800be9e:	46bd      	mov	sp, r7
 800bea0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bea4:	4770      	bx	lr

0800bea6 <chk_chr>:
 800bea6:	b480      	push	{r7}
 800bea8:	b083      	sub	sp, #12
 800beaa:	af00      	add	r7, sp, #0
 800beac:	6078      	str	r0, [r7, #4]
 800beae:	6039      	str	r1, [r7, #0]
 800beb0:	e002      	b.n	800beb8 <chk_chr+0x12>
 800beb2:	687b      	ldr	r3, [r7, #4]
 800beb4:	3301      	adds	r3, #1
 800beb6:	607b      	str	r3, [r7, #4]
 800beb8:	687b      	ldr	r3, [r7, #4]
 800beba:	781b      	ldrb	r3, [r3, #0]
 800bebc:	2b00      	cmp	r3, #0
 800bebe:	d005      	beq.n	800becc <chk_chr+0x26>
 800bec0:	687b      	ldr	r3, [r7, #4]
 800bec2:	781b      	ldrb	r3, [r3, #0]
 800bec4:	461a      	mov	r2, r3
 800bec6:	683b      	ldr	r3, [r7, #0]
 800bec8:	4293      	cmp	r3, r2
 800beca:	d1f2      	bne.n	800beb2 <chk_chr+0xc>
 800becc:	687b      	ldr	r3, [r7, #4]
 800bece:	781b      	ldrb	r3, [r3, #0]
 800bed0:	4618      	mov	r0, r3
 800bed2:	370c      	adds	r7, #12
 800bed4:	46bd      	mov	sp, r7
 800bed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800beda:	4770      	bx	lr

0800bedc <chk_lock>:
 800bedc:	b480      	push	{r7}
 800bede:	b085      	sub	sp, #20
 800bee0:	af00      	add	r7, sp, #0
 800bee2:	6078      	str	r0, [r7, #4]
 800bee4:	6039      	str	r1, [r7, #0]
 800bee6:	2300      	movs	r3, #0
 800bee8:	60bb      	str	r3, [r7, #8]
 800beea:	68bb      	ldr	r3, [r7, #8]
 800beec:	60fb      	str	r3, [r7, #12]
 800beee:	e029      	b.n	800bf44 <chk_lock+0x68>
 800bef0:	4a27      	ldr	r2, [pc, #156]	@ (800bf90 <chk_lock+0xb4>)
 800bef2:	68fb      	ldr	r3, [r7, #12]
 800bef4:	011b      	lsls	r3, r3, #4
 800bef6:	4413      	add	r3, r2
 800bef8:	681b      	ldr	r3, [r3, #0]
 800befa:	2b00      	cmp	r3, #0
 800befc:	d01d      	beq.n	800bf3a <chk_lock+0x5e>
 800befe:	4a24      	ldr	r2, [pc, #144]	@ (800bf90 <chk_lock+0xb4>)
 800bf00:	68fb      	ldr	r3, [r7, #12]
 800bf02:	011b      	lsls	r3, r3, #4
 800bf04:	4413      	add	r3, r2
 800bf06:	681a      	ldr	r2, [r3, #0]
 800bf08:	687b      	ldr	r3, [r7, #4]
 800bf0a:	681b      	ldr	r3, [r3, #0]
 800bf0c:	429a      	cmp	r2, r3
 800bf0e:	d116      	bne.n	800bf3e <chk_lock+0x62>
 800bf10:	4a1f      	ldr	r2, [pc, #124]	@ (800bf90 <chk_lock+0xb4>)
 800bf12:	68fb      	ldr	r3, [r7, #12]
 800bf14:	011b      	lsls	r3, r3, #4
 800bf16:	4413      	add	r3, r2
 800bf18:	3304      	adds	r3, #4
 800bf1a:	681a      	ldr	r2, [r3, #0]
 800bf1c:	687b      	ldr	r3, [r7, #4]
 800bf1e:	689b      	ldr	r3, [r3, #8]
 800bf20:	429a      	cmp	r2, r3
 800bf22:	d10c      	bne.n	800bf3e <chk_lock+0x62>
 800bf24:	4a1a      	ldr	r2, [pc, #104]	@ (800bf90 <chk_lock+0xb4>)
 800bf26:	68fb      	ldr	r3, [r7, #12]
 800bf28:	011b      	lsls	r3, r3, #4
 800bf2a:	4413      	add	r3, r2
 800bf2c:	3308      	adds	r3, #8
 800bf2e:	681a      	ldr	r2, [r3, #0]
 800bf30:	687b      	ldr	r3, [r7, #4]
 800bf32:	695b      	ldr	r3, [r3, #20]
 800bf34:	429a      	cmp	r2, r3
 800bf36:	d102      	bne.n	800bf3e <chk_lock+0x62>
 800bf38:	e007      	b.n	800bf4a <chk_lock+0x6e>
 800bf3a:	2301      	movs	r3, #1
 800bf3c:	60bb      	str	r3, [r7, #8]
 800bf3e:	68fb      	ldr	r3, [r7, #12]
 800bf40:	3301      	adds	r3, #1
 800bf42:	60fb      	str	r3, [r7, #12]
 800bf44:	68fb      	ldr	r3, [r7, #12]
 800bf46:	2b01      	cmp	r3, #1
 800bf48:	d9d2      	bls.n	800bef0 <chk_lock+0x14>
 800bf4a:	68fb      	ldr	r3, [r7, #12]
 800bf4c:	2b02      	cmp	r3, #2
 800bf4e:	d109      	bne.n	800bf64 <chk_lock+0x88>
 800bf50:	68bb      	ldr	r3, [r7, #8]
 800bf52:	2b00      	cmp	r3, #0
 800bf54:	d102      	bne.n	800bf5c <chk_lock+0x80>
 800bf56:	683b      	ldr	r3, [r7, #0]
 800bf58:	2b02      	cmp	r3, #2
 800bf5a:	d101      	bne.n	800bf60 <chk_lock+0x84>
 800bf5c:	2300      	movs	r3, #0
 800bf5e:	e010      	b.n	800bf82 <chk_lock+0xa6>
 800bf60:	2312      	movs	r3, #18
 800bf62:	e00e      	b.n	800bf82 <chk_lock+0xa6>
 800bf64:	683b      	ldr	r3, [r7, #0]
 800bf66:	2b00      	cmp	r3, #0
 800bf68:	d108      	bne.n	800bf7c <chk_lock+0xa0>
 800bf6a:	4a09      	ldr	r2, [pc, #36]	@ (800bf90 <chk_lock+0xb4>)
 800bf6c:	68fb      	ldr	r3, [r7, #12]
 800bf6e:	011b      	lsls	r3, r3, #4
 800bf70:	4413      	add	r3, r2
 800bf72:	330c      	adds	r3, #12
 800bf74:	881b      	ldrh	r3, [r3, #0]
 800bf76:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800bf7a:	d101      	bne.n	800bf80 <chk_lock+0xa4>
 800bf7c:	2310      	movs	r3, #16
 800bf7e:	e000      	b.n	800bf82 <chk_lock+0xa6>
 800bf80:	2300      	movs	r3, #0
 800bf82:	4618      	mov	r0, r3
 800bf84:	3714      	adds	r7, #20
 800bf86:	46bd      	mov	sp, r7
 800bf88:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf8c:	4770      	bx	lr
 800bf8e:	bf00      	nop
 800bf90:	200048b8 	.word	0x200048b8

0800bf94 <enq_lock>:
 800bf94:	b480      	push	{r7}
 800bf96:	b083      	sub	sp, #12
 800bf98:	af00      	add	r7, sp, #0
 800bf9a:	2300      	movs	r3, #0
 800bf9c:	607b      	str	r3, [r7, #4]
 800bf9e:	e002      	b.n	800bfa6 <enq_lock+0x12>
 800bfa0:	687b      	ldr	r3, [r7, #4]
 800bfa2:	3301      	adds	r3, #1
 800bfa4:	607b      	str	r3, [r7, #4]
 800bfa6:	687b      	ldr	r3, [r7, #4]
 800bfa8:	2b01      	cmp	r3, #1
 800bfaa:	d806      	bhi.n	800bfba <enq_lock+0x26>
 800bfac:	4a09      	ldr	r2, [pc, #36]	@ (800bfd4 <enq_lock+0x40>)
 800bfae:	687b      	ldr	r3, [r7, #4]
 800bfb0:	011b      	lsls	r3, r3, #4
 800bfb2:	4413      	add	r3, r2
 800bfb4:	681b      	ldr	r3, [r3, #0]
 800bfb6:	2b00      	cmp	r3, #0
 800bfb8:	d1f2      	bne.n	800bfa0 <enq_lock+0xc>
 800bfba:	687b      	ldr	r3, [r7, #4]
 800bfbc:	2b02      	cmp	r3, #2
 800bfbe:	bf14      	ite	ne
 800bfc0:	2301      	movne	r3, #1
 800bfc2:	2300      	moveq	r3, #0
 800bfc4:	b2db      	uxtb	r3, r3
 800bfc6:	4618      	mov	r0, r3
 800bfc8:	370c      	adds	r7, #12
 800bfca:	46bd      	mov	sp, r7
 800bfcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfd0:	4770      	bx	lr
 800bfd2:	bf00      	nop
 800bfd4:	200048b8 	.word	0x200048b8

0800bfd8 <inc_lock>:
 800bfd8:	b480      	push	{r7}
 800bfda:	b085      	sub	sp, #20
 800bfdc:	af00      	add	r7, sp, #0
 800bfde:	6078      	str	r0, [r7, #4]
 800bfe0:	6039      	str	r1, [r7, #0]
 800bfe2:	2300      	movs	r3, #0
 800bfe4:	60fb      	str	r3, [r7, #12]
 800bfe6:	e01f      	b.n	800c028 <inc_lock+0x50>
 800bfe8:	4a41      	ldr	r2, [pc, #260]	@ (800c0f0 <inc_lock+0x118>)
 800bfea:	68fb      	ldr	r3, [r7, #12]
 800bfec:	011b      	lsls	r3, r3, #4
 800bfee:	4413      	add	r3, r2
 800bff0:	681a      	ldr	r2, [r3, #0]
 800bff2:	687b      	ldr	r3, [r7, #4]
 800bff4:	681b      	ldr	r3, [r3, #0]
 800bff6:	429a      	cmp	r2, r3
 800bff8:	d113      	bne.n	800c022 <inc_lock+0x4a>
 800bffa:	4a3d      	ldr	r2, [pc, #244]	@ (800c0f0 <inc_lock+0x118>)
 800bffc:	68fb      	ldr	r3, [r7, #12]
 800bffe:	011b      	lsls	r3, r3, #4
 800c000:	4413      	add	r3, r2
 800c002:	3304      	adds	r3, #4
 800c004:	681a      	ldr	r2, [r3, #0]
 800c006:	687b      	ldr	r3, [r7, #4]
 800c008:	689b      	ldr	r3, [r3, #8]
 800c00a:	429a      	cmp	r2, r3
 800c00c:	d109      	bne.n	800c022 <inc_lock+0x4a>
 800c00e:	4a38      	ldr	r2, [pc, #224]	@ (800c0f0 <inc_lock+0x118>)
 800c010:	68fb      	ldr	r3, [r7, #12]
 800c012:	011b      	lsls	r3, r3, #4
 800c014:	4413      	add	r3, r2
 800c016:	3308      	adds	r3, #8
 800c018:	681a      	ldr	r2, [r3, #0]
 800c01a:	687b      	ldr	r3, [r7, #4]
 800c01c:	695b      	ldr	r3, [r3, #20]
 800c01e:	429a      	cmp	r2, r3
 800c020:	d006      	beq.n	800c030 <inc_lock+0x58>
 800c022:	68fb      	ldr	r3, [r7, #12]
 800c024:	3301      	adds	r3, #1
 800c026:	60fb      	str	r3, [r7, #12]
 800c028:	68fb      	ldr	r3, [r7, #12]
 800c02a:	2b01      	cmp	r3, #1
 800c02c:	d9dc      	bls.n	800bfe8 <inc_lock+0x10>
 800c02e:	e000      	b.n	800c032 <inc_lock+0x5a>
 800c030:	bf00      	nop
 800c032:	68fb      	ldr	r3, [r7, #12]
 800c034:	2b02      	cmp	r3, #2
 800c036:	d132      	bne.n	800c09e <inc_lock+0xc6>
 800c038:	2300      	movs	r3, #0
 800c03a:	60fb      	str	r3, [r7, #12]
 800c03c:	e002      	b.n	800c044 <inc_lock+0x6c>
 800c03e:	68fb      	ldr	r3, [r7, #12]
 800c040:	3301      	adds	r3, #1
 800c042:	60fb      	str	r3, [r7, #12]
 800c044:	68fb      	ldr	r3, [r7, #12]
 800c046:	2b01      	cmp	r3, #1
 800c048:	d806      	bhi.n	800c058 <inc_lock+0x80>
 800c04a:	4a29      	ldr	r2, [pc, #164]	@ (800c0f0 <inc_lock+0x118>)
 800c04c:	68fb      	ldr	r3, [r7, #12]
 800c04e:	011b      	lsls	r3, r3, #4
 800c050:	4413      	add	r3, r2
 800c052:	681b      	ldr	r3, [r3, #0]
 800c054:	2b00      	cmp	r3, #0
 800c056:	d1f2      	bne.n	800c03e <inc_lock+0x66>
 800c058:	68fb      	ldr	r3, [r7, #12]
 800c05a:	2b02      	cmp	r3, #2
 800c05c:	d101      	bne.n	800c062 <inc_lock+0x8a>
 800c05e:	2300      	movs	r3, #0
 800c060:	e040      	b.n	800c0e4 <inc_lock+0x10c>
 800c062:	687b      	ldr	r3, [r7, #4]
 800c064:	681a      	ldr	r2, [r3, #0]
 800c066:	4922      	ldr	r1, [pc, #136]	@ (800c0f0 <inc_lock+0x118>)
 800c068:	68fb      	ldr	r3, [r7, #12]
 800c06a:	011b      	lsls	r3, r3, #4
 800c06c:	440b      	add	r3, r1
 800c06e:	601a      	str	r2, [r3, #0]
 800c070:	687b      	ldr	r3, [r7, #4]
 800c072:	689a      	ldr	r2, [r3, #8]
 800c074:	491e      	ldr	r1, [pc, #120]	@ (800c0f0 <inc_lock+0x118>)
 800c076:	68fb      	ldr	r3, [r7, #12]
 800c078:	011b      	lsls	r3, r3, #4
 800c07a:	440b      	add	r3, r1
 800c07c:	3304      	adds	r3, #4
 800c07e:	601a      	str	r2, [r3, #0]
 800c080:	687b      	ldr	r3, [r7, #4]
 800c082:	695a      	ldr	r2, [r3, #20]
 800c084:	491a      	ldr	r1, [pc, #104]	@ (800c0f0 <inc_lock+0x118>)
 800c086:	68fb      	ldr	r3, [r7, #12]
 800c088:	011b      	lsls	r3, r3, #4
 800c08a:	440b      	add	r3, r1
 800c08c:	3308      	adds	r3, #8
 800c08e:	601a      	str	r2, [r3, #0]
 800c090:	4a17      	ldr	r2, [pc, #92]	@ (800c0f0 <inc_lock+0x118>)
 800c092:	68fb      	ldr	r3, [r7, #12]
 800c094:	011b      	lsls	r3, r3, #4
 800c096:	4413      	add	r3, r2
 800c098:	330c      	adds	r3, #12
 800c09a:	2200      	movs	r2, #0
 800c09c:	801a      	strh	r2, [r3, #0]
 800c09e:	683b      	ldr	r3, [r7, #0]
 800c0a0:	2b00      	cmp	r3, #0
 800c0a2:	d009      	beq.n	800c0b8 <inc_lock+0xe0>
 800c0a4:	4a12      	ldr	r2, [pc, #72]	@ (800c0f0 <inc_lock+0x118>)
 800c0a6:	68fb      	ldr	r3, [r7, #12]
 800c0a8:	011b      	lsls	r3, r3, #4
 800c0aa:	4413      	add	r3, r2
 800c0ac:	330c      	adds	r3, #12
 800c0ae:	881b      	ldrh	r3, [r3, #0]
 800c0b0:	2b00      	cmp	r3, #0
 800c0b2:	d001      	beq.n	800c0b8 <inc_lock+0xe0>
 800c0b4:	2300      	movs	r3, #0
 800c0b6:	e015      	b.n	800c0e4 <inc_lock+0x10c>
 800c0b8:	683b      	ldr	r3, [r7, #0]
 800c0ba:	2b00      	cmp	r3, #0
 800c0bc:	d108      	bne.n	800c0d0 <inc_lock+0xf8>
 800c0be:	4a0c      	ldr	r2, [pc, #48]	@ (800c0f0 <inc_lock+0x118>)
 800c0c0:	68fb      	ldr	r3, [r7, #12]
 800c0c2:	011b      	lsls	r3, r3, #4
 800c0c4:	4413      	add	r3, r2
 800c0c6:	330c      	adds	r3, #12
 800c0c8:	881b      	ldrh	r3, [r3, #0]
 800c0ca:	3301      	adds	r3, #1
 800c0cc:	b29a      	uxth	r2, r3
 800c0ce:	e001      	b.n	800c0d4 <inc_lock+0xfc>
 800c0d0:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800c0d4:	4906      	ldr	r1, [pc, #24]	@ (800c0f0 <inc_lock+0x118>)
 800c0d6:	68fb      	ldr	r3, [r7, #12]
 800c0d8:	011b      	lsls	r3, r3, #4
 800c0da:	440b      	add	r3, r1
 800c0dc:	330c      	adds	r3, #12
 800c0de:	801a      	strh	r2, [r3, #0]
 800c0e0:	68fb      	ldr	r3, [r7, #12]
 800c0e2:	3301      	adds	r3, #1
 800c0e4:	4618      	mov	r0, r3
 800c0e6:	3714      	adds	r7, #20
 800c0e8:	46bd      	mov	sp, r7
 800c0ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0ee:	4770      	bx	lr
 800c0f0:	200048b8 	.word	0x200048b8

0800c0f4 <dec_lock>:
 800c0f4:	b480      	push	{r7}
 800c0f6:	b085      	sub	sp, #20
 800c0f8:	af00      	add	r7, sp, #0
 800c0fa:	6078      	str	r0, [r7, #4]
 800c0fc:	687b      	ldr	r3, [r7, #4]
 800c0fe:	3b01      	subs	r3, #1
 800c100:	607b      	str	r3, [r7, #4]
 800c102:	687b      	ldr	r3, [r7, #4]
 800c104:	2b01      	cmp	r3, #1
 800c106:	d825      	bhi.n	800c154 <dec_lock+0x60>
 800c108:	4a17      	ldr	r2, [pc, #92]	@ (800c168 <dec_lock+0x74>)
 800c10a:	687b      	ldr	r3, [r7, #4]
 800c10c:	011b      	lsls	r3, r3, #4
 800c10e:	4413      	add	r3, r2
 800c110:	330c      	adds	r3, #12
 800c112:	881b      	ldrh	r3, [r3, #0]
 800c114:	81fb      	strh	r3, [r7, #14]
 800c116:	89fb      	ldrh	r3, [r7, #14]
 800c118:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800c11c:	d101      	bne.n	800c122 <dec_lock+0x2e>
 800c11e:	2300      	movs	r3, #0
 800c120:	81fb      	strh	r3, [r7, #14]
 800c122:	89fb      	ldrh	r3, [r7, #14]
 800c124:	2b00      	cmp	r3, #0
 800c126:	d002      	beq.n	800c12e <dec_lock+0x3a>
 800c128:	89fb      	ldrh	r3, [r7, #14]
 800c12a:	3b01      	subs	r3, #1
 800c12c:	81fb      	strh	r3, [r7, #14]
 800c12e:	4a0e      	ldr	r2, [pc, #56]	@ (800c168 <dec_lock+0x74>)
 800c130:	687b      	ldr	r3, [r7, #4]
 800c132:	011b      	lsls	r3, r3, #4
 800c134:	4413      	add	r3, r2
 800c136:	330c      	adds	r3, #12
 800c138:	89fa      	ldrh	r2, [r7, #14]
 800c13a:	801a      	strh	r2, [r3, #0]
 800c13c:	89fb      	ldrh	r3, [r7, #14]
 800c13e:	2b00      	cmp	r3, #0
 800c140:	d105      	bne.n	800c14e <dec_lock+0x5a>
 800c142:	4a09      	ldr	r2, [pc, #36]	@ (800c168 <dec_lock+0x74>)
 800c144:	687b      	ldr	r3, [r7, #4]
 800c146:	011b      	lsls	r3, r3, #4
 800c148:	4413      	add	r3, r2
 800c14a:	2200      	movs	r2, #0
 800c14c:	601a      	str	r2, [r3, #0]
 800c14e:	2300      	movs	r3, #0
 800c150:	737b      	strb	r3, [r7, #13]
 800c152:	e001      	b.n	800c158 <dec_lock+0x64>
 800c154:	2302      	movs	r3, #2
 800c156:	737b      	strb	r3, [r7, #13]
 800c158:	7b7b      	ldrb	r3, [r7, #13]
 800c15a:	4618      	mov	r0, r3
 800c15c:	3714      	adds	r7, #20
 800c15e:	46bd      	mov	sp, r7
 800c160:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c164:	4770      	bx	lr
 800c166:	bf00      	nop
 800c168:	200048b8 	.word	0x200048b8

0800c16c <clear_lock>:
 800c16c:	b480      	push	{r7}
 800c16e:	b085      	sub	sp, #20
 800c170:	af00      	add	r7, sp, #0
 800c172:	6078      	str	r0, [r7, #4]
 800c174:	2300      	movs	r3, #0
 800c176:	60fb      	str	r3, [r7, #12]
 800c178:	e010      	b.n	800c19c <clear_lock+0x30>
 800c17a:	4a0d      	ldr	r2, [pc, #52]	@ (800c1b0 <clear_lock+0x44>)
 800c17c:	68fb      	ldr	r3, [r7, #12]
 800c17e:	011b      	lsls	r3, r3, #4
 800c180:	4413      	add	r3, r2
 800c182:	681b      	ldr	r3, [r3, #0]
 800c184:	687a      	ldr	r2, [r7, #4]
 800c186:	429a      	cmp	r2, r3
 800c188:	d105      	bne.n	800c196 <clear_lock+0x2a>
 800c18a:	4a09      	ldr	r2, [pc, #36]	@ (800c1b0 <clear_lock+0x44>)
 800c18c:	68fb      	ldr	r3, [r7, #12]
 800c18e:	011b      	lsls	r3, r3, #4
 800c190:	4413      	add	r3, r2
 800c192:	2200      	movs	r2, #0
 800c194:	601a      	str	r2, [r3, #0]
 800c196:	68fb      	ldr	r3, [r7, #12]
 800c198:	3301      	adds	r3, #1
 800c19a:	60fb      	str	r3, [r7, #12]
 800c19c:	68fb      	ldr	r3, [r7, #12]
 800c19e:	2b01      	cmp	r3, #1
 800c1a0:	d9eb      	bls.n	800c17a <clear_lock+0xe>
 800c1a2:	bf00      	nop
 800c1a4:	bf00      	nop
 800c1a6:	3714      	adds	r7, #20
 800c1a8:	46bd      	mov	sp, r7
 800c1aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1ae:	4770      	bx	lr
 800c1b0:	200048b8 	.word	0x200048b8

0800c1b4 <sync_window>:
 800c1b4:	b580      	push	{r7, lr}
 800c1b6:	b086      	sub	sp, #24
 800c1b8:	af00      	add	r7, sp, #0
 800c1ba:	6078      	str	r0, [r7, #4]
 800c1bc:	2300      	movs	r3, #0
 800c1be:	73fb      	strb	r3, [r7, #15]
 800c1c0:	687b      	ldr	r3, [r7, #4]
 800c1c2:	78db      	ldrb	r3, [r3, #3]
 800c1c4:	2b00      	cmp	r3, #0
 800c1c6:	d034      	beq.n	800c232 <sync_window+0x7e>
 800c1c8:	687b      	ldr	r3, [r7, #4]
 800c1ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c1cc:	617b      	str	r3, [r7, #20]
 800c1ce:	687b      	ldr	r3, [r7, #4]
 800c1d0:	7858      	ldrb	r0, [r3, #1]
 800c1d2:	687b      	ldr	r3, [r7, #4]
 800c1d4:	f103 0134 	add.w	r1, r3, #52	@ 0x34
 800c1d8:	2301      	movs	r3, #1
 800c1da:	697a      	ldr	r2, [r7, #20]
 800c1dc:	f7ff fd40 	bl	800bc60 <disk_write>
 800c1e0:	4603      	mov	r3, r0
 800c1e2:	2b00      	cmp	r3, #0
 800c1e4:	d002      	beq.n	800c1ec <sync_window+0x38>
 800c1e6:	2301      	movs	r3, #1
 800c1e8:	73fb      	strb	r3, [r7, #15]
 800c1ea:	e022      	b.n	800c232 <sync_window+0x7e>
 800c1ec:	687b      	ldr	r3, [r7, #4]
 800c1ee:	2200      	movs	r2, #0
 800c1f0:	70da      	strb	r2, [r3, #3]
 800c1f2:	687b      	ldr	r3, [r7, #4]
 800c1f4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c1f6:	697a      	ldr	r2, [r7, #20]
 800c1f8:	1ad2      	subs	r2, r2, r3
 800c1fa:	687b      	ldr	r3, [r7, #4]
 800c1fc:	69db      	ldr	r3, [r3, #28]
 800c1fe:	429a      	cmp	r2, r3
 800c200:	d217      	bcs.n	800c232 <sync_window+0x7e>
 800c202:	687b      	ldr	r3, [r7, #4]
 800c204:	789b      	ldrb	r3, [r3, #2]
 800c206:	613b      	str	r3, [r7, #16]
 800c208:	e010      	b.n	800c22c <sync_window+0x78>
 800c20a:	687b      	ldr	r3, [r7, #4]
 800c20c:	69db      	ldr	r3, [r3, #28]
 800c20e:	697a      	ldr	r2, [r7, #20]
 800c210:	4413      	add	r3, r2
 800c212:	617b      	str	r3, [r7, #20]
 800c214:	687b      	ldr	r3, [r7, #4]
 800c216:	7858      	ldrb	r0, [r3, #1]
 800c218:	687b      	ldr	r3, [r7, #4]
 800c21a:	f103 0134 	add.w	r1, r3, #52	@ 0x34
 800c21e:	2301      	movs	r3, #1
 800c220:	697a      	ldr	r2, [r7, #20]
 800c222:	f7ff fd1d 	bl	800bc60 <disk_write>
 800c226:	693b      	ldr	r3, [r7, #16]
 800c228:	3b01      	subs	r3, #1
 800c22a:	613b      	str	r3, [r7, #16]
 800c22c:	693b      	ldr	r3, [r7, #16]
 800c22e:	2b01      	cmp	r3, #1
 800c230:	d8eb      	bhi.n	800c20a <sync_window+0x56>
 800c232:	7bfb      	ldrb	r3, [r7, #15]
 800c234:	4618      	mov	r0, r3
 800c236:	3718      	adds	r7, #24
 800c238:	46bd      	mov	sp, r7
 800c23a:	bd80      	pop	{r7, pc}

0800c23c <move_window>:
 800c23c:	b580      	push	{r7, lr}
 800c23e:	b084      	sub	sp, #16
 800c240:	af00      	add	r7, sp, #0
 800c242:	6078      	str	r0, [r7, #4]
 800c244:	6039      	str	r1, [r7, #0]
 800c246:	2300      	movs	r3, #0
 800c248:	73fb      	strb	r3, [r7, #15]
 800c24a:	687b      	ldr	r3, [r7, #4]
 800c24c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c24e:	683a      	ldr	r2, [r7, #0]
 800c250:	429a      	cmp	r2, r3
 800c252:	d01b      	beq.n	800c28c <move_window+0x50>
 800c254:	6878      	ldr	r0, [r7, #4]
 800c256:	f7ff ffad 	bl	800c1b4 <sync_window>
 800c25a:	4603      	mov	r3, r0
 800c25c:	73fb      	strb	r3, [r7, #15]
 800c25e:	7bfb      	ldrb	r3, [r7, #15]
 800c260:	2b00      	cmp	r3, #0
 800c262:	d113      	bne.n	800c28c <move_window+0x50>
 800c264:	687b      	ldr	r3, [r7, #4]
 800c266:	7858      	ldrb	r0, [r3, #1]
 800c268:	687b      	ldr	r3, [r7, #4]
 800c26a:	f103 0134 	add.w	r1, r3, #52	@ 0x34
 800c26e:	2301      	movs	r3, #1
 800c270:	683a      	ldr	r2, [r7, #0]
 800c272:	f7ff fcd5 	bl	800bc20 <disk_read>
 800c276:	4603      	mov	r3, r0
 800c278:	2b00      	cmp	r3, #0
 800c27a:	d004      	beq.n	800c286 <move_window+0x4a>
 800c27c:	f04f 33ff 	mov.w	r3, #4294967295
 800c280:	603b      	str	r3, [r7, #0]
 800c282:	2301      	movs	r3, #1
 800c284:	73fb      	strb	r3, [r7, #15]
 800c286:	687b      	ldr	r3, [r7, #4]
 800c288:	683a      	ldr	r2, [r7, #0]
 800c28a:	631a      	str	r2, [r3, #48]	@ 0x30
 800c28c:	7bfb      	ldrb	r3, [r7, #15]
 800c28e:	4618      	mov	r0, r3
 800c290:	3710      	adds	r7, #16
 800c292:	46bd      	mov	sp, r7
 800c294:	bd80      	pop	{r7, pc}
	...

0800c298 <sync_fs>:
 800c298:	b580      	push	{r7, lr}
 800c29a:	b084      	sub	sp, #16
 800c29c:	af00      	add	r7, sp, #0
 800c29e:	6078      	str	r0, [r7, #4]
 800c2a0:	6878      	ldr	r0, [r7, #4]
 800c2a2:	f7ff ff87 	bl	800c1b4 <sync_window>
 800c2a6:	4603      	mov	r3, r0
 800c2a8:	73fb      	strb	r3, [r7, #15]
 800c2aa:	7bfb      	ldrb	r3, [r7, #15]
 800c2ac:	2b00      	cmp	r3, #0
 800c2ae:	d159      	bne.n	800c364 <sync_fs+0xcc>
 800c2b0:	687b      	ldr	r3, [r7, #4]
 800c2b2:	781b      	ldrb	r3, [r3, #0]
 800c2b4:	2b03      	cmp	r3, #3
 800c2b6:	d149      	bne.n	800c34c <sync_fs+0xb4>
 800c2b8:	687b      	ldr	r3, [r7, #4]
 800c2ba:	791b      	ldrb	r3, [r3, #4]
 800c2bc:	2b01      	cmp	r3, #1
 800c2be:	d145      	bne.n	800c34c <sync_fs+0xb4>
 800c2c0:	687b      	ldr	r3, [r7, #4]
 800c2c2:	f103 0034 	add.w	r0, r3, #52	@ 0x34
 800c2c6:	687b      	ldr	r3, [r7, #4]
 800c2c8:	899b      	ldrh	r3, [r3, #12]
 800c2ca:	461a      	mov	r2, r3
 800c2cc:	2100      	movs	r1, #0
 800c2ce:	f7ff fda8 	bl	800be22 <mem_set>
 800c2d2:	687b      	ldr	r3, [r7, #4]
 800c2d4:	3334      	adds	r3, #52	@ 0x34
 800c2d6:	f503 73ff 	add.w	r3, r3, #510	@ 0x1fe
 800c2da:	f64a 2155 	movw	r1, #43605	@ 0xaa55
 800c2de:	4618      	mov	r0, r3
 800c2e0:	f7ff fd37 	bl	800bd52 <st_word>
 800c2e4:	687b      	ldr	r3, [r7, #4]
 800c2e6:	3334      	adds	r3, #52	@ 0x34
 800c2e8:	4921      	ldr	r1, [pc, #132]	@ (800c370 <sync_fs+0xd8>)
 800c2ea:	4618      	mov	r0, r3
 800c2ec:	f7ff fd4c 	bl	800bd88 <st_dword>
 800c2f0:	687b      	ldr	r3, [r7, #4]
 800c2f2:	3334      	adds	r3, #52	@ 0x34
 800c2f4:	f503 73f2 	add.w	r3, r3, #484	@ 0x1e4
 800c2f8:	491e      	ldr	r1, [pc, #120]	@ (800c374 <sync_fs+0xdc>)
 800c2fa:	4618      	mov	r0, r3
 800c2fc:	f7ff fd44 	bl	800bd88 <st_dword>
 800c300:	687b      	ldr	r3, [r7, #4]
 800c302:	3334      	adds	r3, #52	@ 0x34
 800c304:	f503 72f4 	add.w	r2, r3, #488	@ 0x1e8
 800c308:	687b      	ldr	r3, [r7, #4]
 800c30a:	695b      	ldr	r3, [r3, #20]
 800c30c:	4619      	mov	r1, r3
 800c30e:	4610      	mov	r0, r2
 800c310:	f7ff fd3a 	bl	800bd88 <st_dword>
 800c314:	687b      	ldr	r3, [r7, #4]
 800c316:	3334      	adds	r3, #52	@ 0x34
 800c318:	f503 72f6 	add.w	r2, r3, #492	@ 0x1ec
 800c31c:	687b      	ldr	r3, [r7, #4]
 800c31e:	691b      	ldr	r3, [r3, #16]
 800c320:	4619      	mov	r1, r3
 800c322:	4610      	mov	r0, r2
 800c324:	f7ff fd30 	bl	800bd88 <st_dword>
 800c328:	687b      	ldr	r3, [r7, #4]
 800c32a:	6a1b      	ldr	r3, [r3, #32]
 800c32c:	1c5a      	adds	r2, r3, #1
 800c32e:	687b      	ldr	r3, [r7, #4]
 800c330:	631a      	str	r2, [r3, #48]	@ 0x30
 800c332:	687b      	ldr	r3, [r7, #4]
 800c334:	7858      	ldrb	r0, [r3, #1]
 800c336:	687b      	ldr	r3, [r7, #4]
 800c338:	f103 0134 	add.w	r1, r3, #52	@ 0x34
 800c33c:	687b      	ldr	r3, [r7, #4]
 800c33e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800c340:	2301      	movs	r3, #1
 800c342:	f7ff fc8d 	bl	800bc60 <disk_write>
 800c346:	687b      	ldr	r3, [r7, #4]
 800c348:	2200      	movs	r2, #0
 800c34a:	711a      	strb	r2, [r3, #4]
 800c34c:	687b      	ldr	r3, [r7, #4]
 800c34e:	785b      	ldrb	r3, [r3, #1]
 800c350:	2200      	movs	r2, #0
 800c352:	2100      	movs	r1, #0
 800c354:	4618      	mov	r0, r3
 800c356:	f7ff fca3 	bl	800bca0 <disk_ioctl>
 800c35a:	4603      	mov	r3, r0
 800c35c:	2b00      	cmp	r3, #0
 800c35e:	d001      	beq.n	800c364 <sync_fs+0xcc>
 800c360:	2301      	movs	r3, #1
 800c362:	73fb      	strb	r3, [r7, #15]
 800c364:	7bfb      	ldrb	r3, [r7, #15]
 800c366:	4618      	mov	r0, r3
 800c368:	3710      	adds	r7, #16
 800c36a:	46bd      	mov	sp, r7
 800c36c:	bd80      	pop	{r7, pc}
 800c36e:	bf00      	nop
 800c370:	41615252 	.word	0x41615252
 800c374:	61417272 	.word	0x61417272

0800c378 <clust2sect>:
 800c378:	b480      	push	{r7}
 800c37a:	b083      	sub	sp, #12
 800c37c:	af00      	add	r7, sp, #0
 800c37e:	6078      	str	r0, [r7, #4]
 800c380:	6039      	str	r1, [r7, #0]
 800c382:	683b      	ldr	r3, [r7, #0]
 800c384:	3b02      	subs	r3, #2
 800c386:	603b      	str	r3, [r7, #0]
 800c388:	687b      	ldr	r3, [r7, #4]
 800c38a:	699b      	ldr	r3, [r3, #24]
 800c38c:	3b02      	subs	r3, #2
 800c38e:	683a      	ldr	r2, [r7, #0]
 800c390:	429a      	cmp	r2, r3
 800c392:	d301      	bcc.n	800c398 <clust2sect+0x20>
 800c394:	2300      	movs	r3, #0
 800c396:	e008      	b.n	800c3aa <clust2sect+0x32>
 800c398:	687b      	ldr	r3, [r7, #4]
 800c39a:	895b      	ldrh	r3, [r3, #10]
 800c39c:	461a      	mov	r2, r3
 800c39e:	683b      	ldr	r3, [r7, #0]
 800c3a0:	fb03 f202 	mul.w	r2, r3, r2
 800c3a4:	687b      	ldr	r3, [r7, #4]
 800c3a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c3a8:	4413      	add	r3, r2
 800c3aa:	4618      	mov	r0, r3
 800c3ac:	370c      	adds	r7, #12
 800c3ae:	46bd      	mov	sp, r7
 800c3b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3b4:	4770      	bx	lr

0800c3b6 <get_fat>:
 800c3b6:	b580      	push	{r7, lr}
 800c3b8:	b086      	sub	sp, #24
 800c3ba:	af00      	add	r7, sp, #0
 800c3bc:	6078      	str	r0, [r7, #4]
 800c3be:	6039      	str	r1, [r7, #0]
 800c3c0:	687b      	ldr	r3, [r7, #4]
 800c3c2:	681b      	ldr	r3, [r3, #0]
 800c3c4:	613b      	str	r3, [r7, #16]
 800c3c6:	683b      	ldr	r3, [r7, #0]
 800c3c8:	2b01      	cmp	r3, #1
 800c3ca:	d904      	bls.n	800c3d6 <get_fat+0x20>
 800c3cc:	693b      	ldr	r3, [r7, #16]
 800c3ce:	699b      	ldr	r3, [r3, #24]
 800c3d0:	683a      	ldr	r2, [r7, #0]
 800c3d2:	429a      	cmp	r2, r3
 800c3d4:	d302      	bcc.n	800c3dc <get_fat+0x26>
 800c3d6:	2301      	movs	r3, #1
 800c3d8:	617b      	str	r3, [r7, #20]
 800c3da:	e0ba      	b.n	800c552 <get_fat+0x19c>
 800c3dc:	f04f 33ff 	mov.w	r3, #4294967295
 800c3e0:	617b      	str	r3, [r7, #20]
 800c3e2:	693b      	ldr	r3, [r7, #16]
 800c3e4:	781b      	ldrb	r3, [r3, #0]
 800c3e6:	2b03      	cmp	r3, #3
 800c3e8:	f000 8082 	beq.w	800c4f0 <get_fat+0x13a>
 800c3ec:	2b03      	cmp	r3, #3
 800c3ee:	f300 80a6 	bgt.w	800c53e <get_fat+0x188>
 800c3f2:	2b01      	cmp	r3, #1
 800c3f4:	d002      	beq.n	800c3fc <get_fat+0x46>
 800c3f6:	2b02      	cmp	r3, #2
 800c3f8:	d055      	beq.n	800c4a6 <get_fat+0xf0>
 800c3fa:	e0a0      	b.n	800c53e <get_fat+0x188>
 800c3fc:	683b      	ldr	r3, [r7, #0]
 800c3fe:	60fb      	str	r3, [r7, #12]
 800c400:	68fb      	ldr	r3, [r7, #12]
 800c402:	085b      	lsrs	r3, r3, #1
 800c404:	68fa      	ldr	r2, [r7, #12]
 800c406:	4413      	add	r3, r2
 800c408:	60fb      	str	r3, [r7, #12]
 800c40a:	693b      	ldr	r3, [r7, #16]
 800c40c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800c40e:	693b      	ldr	r3, [r7, #16]
 800c410:	899b      	ldrh	r3, [r3, #12]
 800c412:	4619      	mov	r1, r3
 800c414:	68fb      	ldr	r3, [r7, #12]
 800c416:	fbb3 f3f1 	udiv	r3, r3, r1
 800c41a:	4413      	add	r3, r2
 800c41c:	4619      	mov	r1, r3
 800c41e:	6938      	ldr	r0, [r7, #16]
 800c420:	f7ff ff0c 	bl	800c23c <move_window>
 800c424:	4603      	mov	r3, r0
 800c426:	2b00      	cmp	r3, #0
 800c428:	f040 808c 	bne.w	800c544 <get_fat+0x18e>
 800c42c:	68fb      	ldr	r3, [r7, #12]
 800c42e:	1c5a      	adds	r2, r3, #1
 800c430:	60fa      	str	r2, [r7, #12]
 800c432:	693a      	ldr	r2, [r7, #16]
 800c434:	8992      	ldrh	r2, [r2, #12]
 800c436:	fbb3 f1f2 	udiv	r1, r3, r2
 800c43a:	fb01 f202 	mul.w	r2, r1, r2
 800c43e:	1a9b      	subs	r3, r3, r2
 800c440:	693a      	ldr	r2, [r7, #16]
 800c442:	4413      	add	r3, r2
 800c444:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800c448:	60bb      	str	r3, [r7, #8]
 800c44a:	693b      	ldr	r3, [r7, #16]
 800c44c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800c44e:	693b      	ldr	r3, [r7, #16]
 800c450:	899b      	ldrh	r3, [r3, #12]
 800c452:	4619      	mov	r1, r3
 800c454:	68fb      	ldr	r3, [r7, #12]
 800c456:	fbb3 f3f1 	udiv	r3, r3, r1
 800c45a:	4413      	add	r3, r2
 800c45c:	4619      	mov	r1, r3
 800c45e:	6938      	ldr	r0, [r7, #16]
 800c460:	f7ff feec 	bl	800c23c <move_window>
 800c464:	4603      	mov	r3, r0
 800c466:	2b00      	cmp	r3, #0
 800c468:	d16e      	bne.n	800c548 <get_fat+0x192>
 800c46a:	693b      	ldr	r3, [r7, #16]
 800c46c:	899b      	ldrh	r3, [r3, #12]
 800c46e:	461a      	mov	r2, r3
 800c470:	68fb      	ldr	r3, [r7, #12]
 800c472:	fbb3 f1f2 	udiv	r1, r3, r2
 800c476:	fb01 f202 	mul.w	r2, r1, r2
 800c47a:	1a9b      	subs	r3, r3, r2
 800c47c:	693a      	ldr	r2, [r7, #16]
 800c47e:	4413      	add	r3, r2
 800c480:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800c484:	021b      	lsls	r3, r3, #8
 800c486:	68ba      	ldr	r2, [r7, #8]
 800c488:	4313      	orrs	r3, r2
 800c48a:	60bb      	str	r3, [r7, #8]
 800c48c:	683b      	ldr	r3, [r7, #0]
 800c48e:	f003 0301 	and.w	r3, r3, #1
 800c492:	2b00      	cmp	r3, #0
 800c494:	d002      	beq.n	800c49c <get_fat+0xe6>
 800c496:	68bb      	ldr	r3, [r7, #8]
 800c498:	091b      	lsrs	r3, r3, #4
 800c49a:	e002      	b.n	800c4a2 <get_fat+0xec>
 800c49c:	68bb      	ldr	r3, [r7, #8]
 800c49e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c4a2:	617b      	str	r3, [r7, #20]
 800c4a4:	e055      	b.n	800c552 <get_fat+0x19c>
 800c4a6:	693b      	ldr	r3, [r7, #16]
 800c4a8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800c4aa:	693b      	ldr	r3, [r7, #16]
 800c4ac:	899b      	ldrh	r3, [r3, #12]
 800c4ae:	085b      	lsrs	r3, r3, #1
 800c4b0:	b29b      	uxth	r3, r3
 800c4b2:	4619      	mov	r1, r3
 800c4b4:	683b      	ldr	r3, [r7, #0]
 800c4b6:	fbb3 f3f1 	udiv	r3, r3, r1
 800c4ba:	4413      	add	r3, r2
 800c4bc:	4619      	mov	r1, r3
 800c4be:	6938      	ldr	r0, [r7, #16]
 800c4c0:	f7ff febc 	bl	800c23c <move_window>
 800c4c4:	4603      	mov	r3, r0
 800c4c6:	2b00      	cmp	r3, #0
 800c4c8:	d140      	bne.n	800c54c <get_fat+0x196>
 800c4ca:	693b      	ldr	r3, [r7, #16]
 800c4cc:	f103 0134 	add.w	r1, r3, #52	@ 0x34
 800c4d0:	683b      	ldr	r3, [r7, #0]
 800c4d2:	005b      	lsls	r3, r3, #1
 800c4d4:	693a      	ldr	r2, [r7, #16]
 800c4d6:	8992      	ldrh	r2, [r2, #12]
 800c4d8:	fbb3 f0f2 	udiv	r0, r3, r2
 800c4dc:	fb00 f202 	mul.w	r2, r0, r2
 800c4e0:	1a9b      	subs	r3, r3, r2
 800c4e2:	440b      	add	r3, r1
 800c4e4:	4618      	mov	r0, r3
 800c4e6:	f7ff fbf9 	bl	800bcdc <ld_word>
 800c4ea:	4603      	mov	r3, r0
 800c4ec:	617b      	str	r3, [r7, #20]
 800c4ee:	e030      	b.n	800c552 <get_fat+0x19c>
 800c4f0:	693b      	ldr	r3, [r7, #16]
 800c4f2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800c4f4:	693b      	ldr	r3, [r7, #16]
 800c4f6:	899b      	ldrh	r3, [r3, #12]
 800c4f8:	089b      	lsrs	r3, r3, #2
 800c4fa:	b29b      	uxth	r3, r3
 800c4fc:	4619      	mov	r1, r3
 800c4fe:	683b      	ldr	r3, [r7, #0]
 800c500:	fbb3 f3f1 	udiv	r3, r3, r1
 800c504:	4413      	add	r3, r2
 800c506:	4619      	mov	r1, r3
 800c508:	6938      	ldr	r0, [r7, #16]
 800c50a:	f7ff fe97 	bl	800c23c <move_window>
 800c50e:	4603      	mov	r3, r0
 800c510:	2b00      	cmp	r3, #0
 800c512:	d11d      	bne.n	800c550 <get_fat+0x19a>
 800c514:	693b      	ldr	r3, [r7, #16]
 800c516:	f103 0134 	add.w	r1, r3, #52	@ 0x34
 800c51a:	683b      	ldr	r3, [r7, #0]
 800c51c:	009b      	lsls	r3, r3, #2
 800c51e:	693a      	ldr	r2, [r7, #16]
 800c520:	8992      	ldrh	r2, [r2, #12]
 800c522:	fbb3 f0f2 	udiv	r0, r3, r2
 800c526:	fb00 f202 	mul.w	r2, r0, r2
 800c52a:	1a9b      	subs	r3, r3, r2
 800c52c:	440b      	add	r3, r1
 800c52e:	4618      	mov	r0, r3
 800c530:	f7ff fbec 	bl	800bd0c <ld_dword>
 800c534:	4603      	mov	r3, r0
 800c536:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 800c53a:	617b      	str	r3, [r7, #20]
 800c53c:	e009      	b.n	800c552 <get_fat+0x19c>
 800c53e:	2301      	movs	r3, #1
 800c540:	617b      	str	r3, [r7, #20]
 800c542:	e006      	b.n	800c552 <get_fat+0x19c>
 800c544:	bf00      	nop
 800c546:	e004      	b.n	800c552 <get_fat+0x19c>
 800c548:	bf00      	nop
 800c54a:	e002      	b.n	800c552 <get_fat+0x19c>
 800c54c:	bf00      	nop
 800c54e:	e000      	b.n	800c552 <get_fat+0x19c>
 800c550:	bf00      	nop
 800c552:	697b      	ldr	r3, [r7, #20]
 800c554:	4618      	mov	r0, r3
 800c556:	3718      	adds	r7, #24
 800c558:	46bd      	mov	sp, r7
 800c55a:	bd80      	pop	{r7, pc}

0800c55c <put_fat>:
 800c55c:	b590      	push	{r4, r7, lr}
 800c55e:	b089      	sub	sp, #36	@ 0x24
 800c560:	af00      	add	r7, sp, #0
 800c562:	60f8      	str	r0, [r7, #12]
 800c564:	60b9      	str	r1, [r7, #8]
 800c566:	607a      	str	r2, [r7, #4]
 800c568:	2302      	movs	r3, #2
 800c56a:	77fb      	strb	r3, [r7, #31]
 800c56c:	68bb      	ldr	r3, [r7, #8]
 800c56e:	2b01      	cmp	r3, #1
 800c570:	f240 8109 	bls.w	800c786 <put_fat+0x22a>
 800c574:	68fb      	ldr	r3, [r7, #12]
 800c576:	699b      	ldr	r3, [r3, #24]
 800c578:	68ba      	ldr	r2, [r7, #8]
 800c57a:	429a      	cmp	r2, r3
 800c57c:	f080 8103 	bcs.w	800c786 <put_fat+0x22a>
 800c580:	68fb      	ldr	r3, [r7, #12]
 800c582:	781b      	ldrb	r3, [r3, #0]
 800c584:	2b03      	cmp	r3, #3
 800c586:	f000 80b6 	beq.w	800c6f6 <put_fat+0x19a>
 800c58a:	2b03      	cmp	r3, #3
 800c58c:	f300 80fb 	bgt.w	800c786 <put_fat+0x22a>
 800c590:	2b01      	cmp	r3, #1
 800c592:	d003      	beq.n	800c59c <put_fat+0x40>
 800c594:	2b02      	cmp	r3, #2
 800c596:	f000 8083 	beq.w	800c6a0 <put_fat+0x144>
 800c59a:	e0f4      	b.n	800c786 <put_fat+0x22a>
 800c59c:	68bb      	ldr	r3, [r7, #8]
 800c59e:	61bb      	str	r3, [r7, #24]
 800c5a0:	69bb      	ldr	r3, [r7, #24]
 800c5a2:	085b      	lsrs	r3, r3, #1
 800c5a4:	69ba      	ldr	r2, [r7, #24]
 800c5a6:	4413      	add	r3, r2
 800c5a8:	61bb      	str	r3, [r7, #24]
 800c5aa:	68fb      	ldr	r3, [r7, #12]
 800c5ac:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800c5ae:	68fb      	ldr	r3, [r7, #12]
 800c5b0:	899b      	ldrh	r3, [r3, #12]
 800c5b2:	4619      	mov	r1, r3
 800c5b4:	69bb      	ldr	r3, [r7, #24]
 800c5b6:	fbb3 f3f1 	udiv	r3, r3, r1
 800c5ba:	4413      	add	r3, r2
 800c5bc:	4619      	mov	r1, r3
 800c5be:	68f8      	ldr	r0, [r7, #12]
 800c5c0:	f7ff fe3c 	bl	800c23c <move_window>
 800c5c4:	4603      	mov	r3, r0
 800c5c6:	77fb      	strb	r3, [r7, #31]
 800c5c8:	7ffb      	ldrb	r3, [r7, #31]
 800c5ca:	2b00      	cmp	r3, #0
 800c5cc:	f040 80d4 	bne.w	800c778 <put_fat+0x21c>
 800c5d0:	68fb      	ldr	r3, [r7, #12]
 800c5d2:	f103 0134 	add.w	r1, r3, #52	@ 0x34
 800c5d6:	69bb      	ldr	r3, [r7, #24]
 800c5d8:	1c5a      	adds	r2, r3, #1
 800c5da:	61ba      	str	r2, [r7, #24]
 800c5dc:	68fa      	ldr	r2, [r7, #12]
 800c5de:	8992      	ldrh	r2, [r2, #12]
 800c5e0:	fbb3 f0f2 	udiv	r0, r3, r2
 800c5e4:	fb00 f202 	mul.w	r2, r0, r2
 800c5e8:	1a9b      	subs	r3, r3, r2
 800c5ea:	440b      	add	r3, r1
 800c5ec:	617b      	str	r3, [r7, #20]
 800c5ee:	68bb      	ldr	r3, [r7, #8]
 800c5f0:	f003 0301 	and.w	r3, r3, #1
 800c5f4:	2b00      	cmp	r3, #0
 800c5f6:	d00d      	beq.n	800c614 <put_fat+0xb8>
 800c5f8:	697b      	ldr	r3, [r7, #20]
 800c5fa:	781b      	ldrb	r3, [r3, #0]
 800c5fc:	b25b      	sxtb	r3, r3
 800c5fe:	f003 030f 	and.w	r3, r3, #15
 800c602:	b25a      	sxtb	r2, r3
 800c604:	687b      	ldr	r3, [r7, #4]
 800c606:	b2db      	uxtb	r3, r3
 800c608:	011b      	lsls	r3, r3, #4
 800c60a:	b25b      	sxtb	r3, r3
 800c60c:	4313      	orrs	r3, r2
 800c60e:	b25b      	sxtb	r3, r3
 800c610:	b2db      	uxtb	r3, r3
 800c612:	e001      	b.n	800c618 <put_fat+0xbc>
 800c614:	687b      	ldr	r3, [r7, #4]
 800c616:	b2db      	uxtb	r3, r3
 800c618:	697a      	ldr	r2, [r7, #20]
 800c61a:	7013      	strb	r3, [r2, #0]
 800c61c:	68fb      	ldr	r3, [r7, #12]
 800c61e:	2201      	movs	r2, #1
 800c620:	70da      	strb	r2, [r3, #3]
 800c622:	68fb      	ldr	r3, [r7, #12]
 800c624:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800c626:	68fb      	ldr	r3, [r7, #12]
 800c628:	899b      	ldrh	r3, [r3, #12]
 800c62a:	4619      	mov	r1, r3
 800c62c:	69bb      	ldr	r3, [r7, #24]
 800c62e:	fbb3 f3f1 	udiv	r3, r3, r1
 800c632:	4413      	add	r3, r2
 800c634:	4619      	mov	r1, r3
 800c636:	68f8      	ldr	r0, [r7, #12]
 800c638:	f7ff fe00 	bl	800c23c <move_window>
 800c63c:	4603      	mov	r3, r0
 800c63e:	77fb      	strb	r3, [r7, #31]
 800c640:	7ffb      	ldrb	r3, [r7, #31]
 800c642:	2b00      	cmp	r3, #0
 800c644:	f040 809a 	bne.w	800c77c <put_fat+0x220>
 800c648:	68fb      	ldr	r3, [r7, #12]
 800c64a:	f103 0134 	add.w	r1, r3, #52	@ 0x34
 800c64e:	68fb      	ldr	r3, [r7, #12]
 800c650:	899b      	ldrh	r3, [r3, #12]
 800c652:	461a      	mov	r2, r3
 800c654:	69bb      	ldr	r3, [r7, #24]
 800c656:	fbb3 f0f2 	udiv	r0, r3, r2
 800c65a:	fb00 f202 	mul.w	r2, r0, r2
 800c65e:	1a9b      	subs	r3, r3, r2
 800c660:	440b      	add	r3, r1
 800c662:	617b      	str	r3, [r7, #20]
 800c664:	68bb      	ldr	r3, [r7, #8]
 800c666:	f003 0301 	and.w	r3, r3, #1
 800c66a:	2b00      	cmp	r3, #0
 800c66c:	d003      	beq.n	800c676 <put_fat+0x11a>
 800c66e:	687b      	ldr	r3, [r7, #4]
 800c670:	091b      	lsrs	r3, r3, #4
 800c672:	b2db      	uxtb	r3, r3
 800c674:	e00e      	b.n	800c694 <put_fat+0x138>
 800c676:	697b      	ldr	r3, [r7, #20]
 800c678:	781b      	ldrb	r3, [r3, #0]
 800c67a:	b25b      	sxtb	r3, r3
 800c67c:	f023 030f 	bic.w	r3, r3, #15
 800c680:	b25a      	sxtb	r2, r3
 800c682:	687b      	ldr	r3, [r7, #4]
 800c684:	0a1b      	lsrs	r3, r3, #8
 800c686:	b25b      	sxtb	r3, r3
 800c688:	f003 030f 	and.w	r3, r3, #15
 800c68c:	b25b      	sxtb	r3, r3
 800c68e:	4313      	orrs	r3, r2
 800c690:	b25b      	sxtb	r3, r3
 800c692:	b2db      	uxtb	r3, r3
 800c694:	697a      	ldr	r2, [r7, #20]
 800c696:	7013      	strb	r3, [r2, #0]
 800c698:	68fb      	ldr	r3, [r7, #12]
 800c69a:	2201      	movs	r2, #1
 800c69c:	70da      	strb	r2, [r3, #3]
 800c69e:	e072      	b.n	800c786 <put_fat+0x22a>
 800c6a0:	68fb      	ldr	r3, [r7, #12]
 800c6a2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800c6a4:	68fb      	ldr	r3, [r7, #12]
 800c6a6:	899b      	ldrh	r3, [r3, #12]
 800c6a8:	085b      	lsrs	r3, r3, #1
 800c6aa:	b29b      	uxth	r3, r3
 800c6ac:	4619      	mov	r1, r3
 800c6ae:	68bb      	ldr	r3, [r7, #8]
 800c6b0:	fbb3 f3f1 	udiv	r3, r3, r1
 800c6b4:	4413      	add	r3, r2
 800c6b6:	4619      	mov	r1, r3
 800c6b8:	68f8      	ldr	r0, [r7, #12]
 800c6ba:	f7ff fdbf 	bl	800c23c <move_window>
 800c6be:	4603      	mov	r3, r0
 800c6c0:	77fb      	strb	r3, [r7, #31]
 800c6c2:	7ffb      	ldrb	r3, [r7, #31]
 800c6c4:	2b00      	cmp	r3, #0
 800c6c6:	d15b      	bne.n	800c780 <put_fat+0x224>
 800c6c8:	68fb      	ldr	r3, [r7, #12]
 800c6ca:	f103 0134 	add.w	r1, r3, #52	@ 0x34
 800c6ce:	68bb      	ldr	r3, [r7, #8]
 800c6d0:	005b      	lsls	r3, r3, #1
 800c6d2:	68fa      	ldr	r2, [r7, #12]
 800c6d4:	8992      	ldrh	r2, [r2, #12]
 800c6d6:	fbb3 f0f2 	udiv	r0, r3, r2
 800c6da:	fb00 f202 	mul.w	r2, r0, r2
 800c6de:	1a9b      	subs	r3, r3, r2
 800c6e0:	440b      	add	r3, r1
 800c6e2:	687a      	ldr	r2, [r7, #4]
 800c6e4:	b292      	uxth	r2, r2
 800c6e6:	4611      	mov	r1, r2
 800c6e8:	4618      	mov	r0, r3
 800c6ea:	f7ff fb32 	bl	800bd52 <st_word>
 800c6ee:	68fb      	ldr	r3, [r7, #12]
 800c6f0:	2201      	movs	r2, #1
 800c6f2:	70da      	strb	r2, [r3, #3]
 800c6f4:	e047      	b.n	800c786 <put_fat+0x22a>
 800c6f6:	68fb      	ldr	r3, [r7, #12]
 800c6f8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800c6fa:	68fb      	ldr	r3, [r7, #12]
 800c6fc:	899b      	ldrh	r3, [r3, #12]
 800c6fe:	089b      	lsrs	r3, r3, #2
 800c700:	b29b      	uxth	r3, r3
 800c702:	4619      	mov	r1, r3
 800c704:	68bb      	ldr	r3, [r7, #8]
 800c706:	fbb3 f3f1 	udiv	r3, r3, r1
 800c70a:	4413      	add	r3, r2
 800c70c:	4619      	mov	r1, r3
 800c70e:	68f8      	ldr	r0, [r7, #12]
 800c710:	f7ff fd94 	bl	800c23c <move_window>
 800c714:	4603      	mov	r3, r0
 800c716:	77fb      	strb	r3, [r7, #31]
 800c718:	7ffb      	ldrb	r3, [r7, #31]
 800c71a:	2b00      	cmp	r3, #0
 800c71c:	d132      	bne.n	800c784 <put_fat+0x228>
 800c71e:	687b      	ldr	r3, [r7, #4]
 800c720:	f023 4470 	bic.w	r4, r3, #4026531840	@ 0xf0000000
 800c724:	68fb      	ldr	r3, [r7, #12]
 800c726:	f103 0134 	add.w	r1, r3, #52	@ 0x34
 800c72a:	68bb      	ldr	r3, [r7, #8]
 800c72c:	009b      	lsls	r3, r3, #2
 800c72e:	68fa      	ldr	r2, [r7, #12]
 800c730:	8992      	ldrh	r2, [r2, #12]
 800c732:	fbb3 f0f2 	udiv	r0, r3, r2
 800c736:	fb00 f202 	mul.w	r2, r0, r2
 800c73a:	1a9b      	subs	r3, r3, r2
 800c73c:	440b      	add	r3, r1
 800c73e:	4618      	mov	r0, r3
 800c740:	f7ff fae4 	bl	800bd0c <ld_dword>
 800c744:	4603      	mov	r3, r0
 800c746:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
 800c74a:	4323      	orrs	r3, r4
 800c74c:	607b      	str	r3, [r7, #4]
 800c74e:	68fb      	ldr	r3, [r7, #12]
 800c750:	f103 0134 	add.w	r1, r3, #52	@ 0x34
 800c754:	68bb      	ldr	r3, [r7, #8]
 800c756:	009b      	lsls	r3, r3, #2
 800c758:	68fa      	ldr	r2, [r7, #12]
 800c75a:	8992      	ldrh	r2, [r2, #12]
 800c75c:	fbb3 f0f2 	udiv	r0, r3, r2
 800c760:	fb00 f202 	mul.w	r2, r0, r2
 800c764:	1a9b      	subs	r3, r3, r2
 800c766:	440b      	add	r3, r1
 800c768:	6879      	ldr	r1, [r7, #4]
 800c76a:	4618      	mov	r0, r3
 800c76c:	f7ff fb0c 	bl	800bd88 <st_dword>
 800c770:	68fb      	ldr	r3, [r7, #12]
 800c772:	2201      	movs	r2, #1
 800c774:	70da      	strb	r2, [r3, #3]
 800c776:	e006      	b.n	800c786 <put_fat+0x22a>
 800c778:	bf00      	nop
 800c77a:	e004      	b.n	800c786 <put_fat+0x22a>
 800c77c:	bf00      	nop
 800c77e:	e002      	b.n	800c786 <put_fat+0x22a>
 800c780:	bf00      	nop
 800c782:	e000      	b.n	800c786 <put_fat+0x22a>
 800c784:	bf00      	nop
 800c786:	7ffb      	ldrb	r3, [r7, #31]
 800c788:	4618      	mov	r0, r3
 800c78a:	3724      	adds	r7, #36	@ 0x24
 800c78c:	46bd      	mov	sp, r7
 800c78e:	bd90      	pop	{r4, r7, pc}

0800c790 <remove_chain>:
 800c790:	b580      	push	{r7, lr}
 800c792:	b088      	sub	sp, #32
 800c794:	af00      	add	r7, sp, #0
 800c796:	60f8      	str	r0, [r7, #12]
 800c798:	60b9      	str	r1, [r7, #8]
 800c79a:	607a      	str	r2, [r7, #4]
 800c79c:	2300      	movs	r3, #0
 800c79e:	77fb      	strb	r3, [r7, #31]
 800c7a0:	68fb      	ldr	r3, [r7, #12]
 800c7a2:	681b      	ldr	r3, [r3, #0]
 800c7a4:	61bb      	str	r3, [r7, #24]
 800c7a6:	68bb      	ldr	r3, [r7, #8]
 800c7a8:	2b01      	cmp	r3, #1
 800c7aa:	d904      	bls.n	800c7b6 <remove_chain+0x26>
 800c7ac:	69bb      	ldr	r3, [r7, #24]
 800c7ae:	699b      	ldr	r3, [r3, #24]
 800c7b0:	68ba      	ldr	r2, [r7, #8]
 800c7b2:	429a      	cmp	r2, r3
 800c7b4:	d301      	bcc.n	800c7ba <remove_chain+0x2a>
 800c7b6:	2302      	movs	r3, #2
 800c7b8:	e04b      	b.n	800c852 <remove_chain+0xc2>
 800c7ba:	687b      	ldr	r3, [r7, #4]
 800c7bc:	2b00      	cmp	r3, #0
 800c7be:	d00c      	beq.n	800c7da <remove_chain+0x4a>
 800c7c0:	f04f 32ff 	mov.w	r2, #4294967295
 800c7c4:	6879      	ldr	r1, [r7, #4]
 800c7c6:	69b8      	ldr	r0, [r7, #24]
 800c7c8:	f7ff fec8 	bl	800c55c <put_fat>
 800c7cc:	4603      	mov	r3, r0
 800c7ce:	77fb      	strb	r3, [r7, #31]
 800c7d0:	7ffb      	ldrb	r3, [r7, #31]
 800c7d2:	2b00      	cmp	r3, #0
 800c7d4:	d001      	beq.n	800c7da <remove_chain+0x4a>
 800c7d6:	7ffb      	ldrb	r3, [r7, #31]
 800c7d8:	e03b      	b.n	800c852 <remove_chain+0xc2>
 800c7da:	68b9      	ldr	r1, [r7, #8]
 800c7dc:	68f8      	ldr	r0, [r7, #12]
 800c7de:	f7ff fdea 	bl	800c3b6 <get_fat>
 800c7e2:	6178      	str	r0, [r7, #20]
 800c7e4:	697b      	ldr	r3, [r7, #20]
 800c7e6:	2b00      	cmp	r3, #0
 800c7e8:	d031      	beq.n	800c84e <remove_chain+0xbe>
 800c7ea:	697b      	ldr	r3, [r7, #20]
 800c7ec:	2b01      	cmp	r3, #1
 800c7ee:	d101      	bne.n	800c7f4 <remove_chain+0x64>
 800c7f0:	2302      	movs	r3, #2
 800c7f2:	e02e      	b.n	800c852 <remove_chain+0xc2>
 800c7f4:	697b      	ldr	r3, [r7, #20]
 800c7f6:	f1b3 3fff 	cmp.w	r3, #4294967295
 800c7fa:	d101      	bne.n	800c800 <remove_chain+0x70>
 800c7fc:	2301      	movs	r3, #1
 800c7fe:	e028      	b.n	800c852 <remove_chain+0xc2>
 800c800:	2200      	movs	r2, #0
 800c802:	68b9      	ldr	r1, [r7, #8]
 800c804:	69b8      	ldr	r0, [r7, #24]
 800c806:	f7ff fea9 	bl	800c55c <put_fat>
 800c80a:	4603      	mov	r3, r0
 800c80c:	77fb      	strb	r3, [r7, #31]
 800c80e:	7ffb      	ldrb	r3, [r7, #31]
 800c810:	2b00      	cmp	r3, #0
 800c812:	d001      	beq.n	800c818 <remove_chain+0x88>
 800c814:	7ffb      	ldrb	r3, [r7, #31]
 800c816:	e01c      	b.n	800c852 <remove_chain+0xc2>
 800c818:	69bb      	ldr	r3, [r7, #24]
 800c81a:	695a      	ldr	r2, [r3, #20]
 800c81c:	69bb      	ldr	r3, [r7, #24]
 800c81e:	699b      	ldr	r3, [r3, #24]
 800c820:	3b02      	subs	r3, #2
 800c822:	429a      	cmp	r2, r3
 800c824:	d20b      	bcs.n	800c83e <remove_chain+0xae>
 800c826:	69bb      	ldr	r3, [r7, #24]
 800c828:	695b      	ldr	r3, [r3, #20]
 800c82a:	1c5a      	adds	r2, r3, #1
 800c82c:	69bb      	ldr	r3, [r7, #24]
 800c82e:	615a      	str	r2, [r3, #20]
 800c830:	69bb      	ldr	r3, [r7, #24]
 800c832:	791b      	ldrb	r3, [r3, #4]
 800c834:	f043 0301 	orr.w	r3, r3, #1
 800c838:	b2da      	uxtb	r2, r3
 800c83a:	69bb      	ldr	r3, [r7, #24]
 800c83c:	711a      	strb	r2, [r3, #4]
 800c83e:	697b      	ldr	r3, [r7, #20]
 800c840:	60bb      	str	r3, [r7, #8]
 800c842:	69bb      	ldr	r3, [r7, #24]
 800c844:	699b      	ldr	r3, [r3, #24]
 800c846:	68ba      	ldr	r2, [r7, #8]
 800c848:	429a      	cmp	r2, r3
 800c84a:	d3c6      	bcc.n	800c7da <remove_chain+0x4a>
 800c84c:	e000      	b.n	800c850 <remove_chain+0xc0>
 800c84e:	bf00      	nop
 800c850:	2300      	movs	r3, #0
 800c852:	4618      	mov	r0, r3
 800c854:	3720      	adds	r7, #32
 800c856:	46bd      	mov	sp, r7
 800c858:	bd80      	pop	{r7, pc}

0800c85a <create_chain>:
 800c85a:	b580      	push	{r7, lr}
 800c85c:	b088      	sub	sp, #32
 800c85e:	af00      	add	r7, sp, #0
 800c860:	6078      	str	r0, [r7, #4]
 800c862:	6039      	str	r1, [r7, #0]
 800c864:	687b      	ldr	r3, [r7, #4]
 800c866:	681b      	ldr	r3, [r3, #0]
 800c868:	613b      	str	r3, [r7, #16]
 800c86a:	683b      	ldr	r3, [r7, #0]
 800c86c:	2b00      	cmp	r3, #0
 800c86e:	d10d      	bne.n	800c88c <create_chain+0x32>
 800c870:	693b      	ldr	r3, [r7, #16]
 800c872:	691b      	ldr	r3, [r3, #16]
 800c874:	61bb      	str	r3, [r7, #24]
 800c876:	69bb      	ldr	r3, [r7, #24]
 800c878:	2b00      	cmp	r3, #0
 800c87a:	d004      	beq.n	800c886 <create_chain+0x2c>
 800c87c:	693b      	ldr	r3, [r7, #16]
 800c87e:	699b      	ldr	r3, [r3, #24]
 800c880:	69ba      	ldr	r2, [r7, #24]
 800c882:	429a      	cmp	r2, r3
 800c884:	d31b      	bcc.n	800c8be <create_chain+0x64>
 800c886:	2301      	movs	r3, #1
 800c888:	61bb      	str	r3, [r7, #24]
 800c88a:	e018      	b.n	800c8be <create_chain+0x64>
 800c88c:	6839      	ldr	r1, [r7, #0]
 800c88e:	6878      	ldr	r0, [r7, #4]
 800c890:	f7ff fd91 	bl	800c3b6 <get_fat>
 800c894:	60f8      	str	r0, [r7, #12]
 800c896:	68fb      	ldr	r3, [r7, #12]
 800c898:	2b01      	cmp	r3, #1
 800c89a:	d801      	bhi.n	800c8a0 <create_chain+0x46>
 800c89c:	2301      	movs	r3, #1
 800c89e:	e070      	b.n	800c982 <create_chain+0x128>
 800c8a0:	68fb      	ldr	r3, [r7, #12]
 800c8a2:	f1b3 3fff 	cmp.w	r3, #4294967295
 800c8a6:	d101      	bne.n	800c8ac <create_chain+0x52>
 800c8a8:	68fb      	ldr	r3, [r7, #12]
 800c8aa:	e06a      	b.n	800c982 <create_chain+0x128>
 800c8ac:	693b      	ldr	r3, [r7, #16]
 800c8ae:	699b      	ldr	r3, [r3, #24]
 800c8b0:	68fa      	ldr	r2, [r7, #12]
 800c8b2:	429a      	cmp	r2, r3
 800c8b4:	d201      	bcs.n	800c8ba <create_chain+0x60>
 800c8b6:	68fb      	ldr	r3, [r7, #12]
 800c8b8:	e063      	b.n	800c982 <create_chain+0x128>
 800c8ba:	683b      	ldr	r3, [r7, #0]
 800c8bc:	61bb      	str	r3, [r7, #24]
 800c8be:	69bb      	ldr	r3, [r7, #24]
 800c8c0:	61fb      	str	r3, [r7, #28]
 800c8c2:	69fb      	ldr	r3, [r7, #28]
 800c8c4:	3301      	adds	r3, #1
 800c8c6:	61fb      	str	r3, [r7, #28]
 800c8c8:	693b      	ldr	r3, [r7, #16]
 800c8ca:	699b      	ldr	r3, [r3, #24]
 800c8cc:	69fa      	ldr	r2, [r7, #28]
 800c8ce:	429a      	cmp	r2, r3
 800c8d0:	d307      	bcc.n	800c8e2 <create_chain+0x88>
 800c8d2:	2302      	movs	r3, #2
 800c8d4:	61fb      	str	r3, [r7, #28]
 800c8d6:	69fa      	ldr	r2, [r7, #28]
 800c8d8:	69bb      	ldr	r3, [r7, #24]
 800c8da:	429a      	cmp	r2, r3
 800c8dc:	d901      	bls.n	800c8e2 <create_chain+0x88>
 800c8de:	2300      	movs	r3, #0
 800c8e0:	e04f      	b.n	800c982 <create_chain+0x128>
 800c8e2:	69f9      	ldr	r1, [r7, #28]
 800c8e4:	6878      	ldr	r0, [r7, #4]
 800c8e6:	f7ff fd66 	bl	800c3b6 <get_fat>
 800c8ea:	60f8      	str	r0, [r7, #12]
 800c8ec:	68fb      	ldr	r3, [r7, #12]
 800c8ee:	2b00      	cmp	r3, #0
 800c8f0:	d00e      	beq.n	800c910 <create_chain+0xb6>
 800c8f2:	68fb      	ldr	r3, [r7, #12]
 800c8f4:	2b01      	cmp	r3, #1
 800c8f6:	d003      	beq.n	800c900 <create_chain+0xa6>
 800c8f8:	68fb      	ldr	r3, [r7, #12]
 800c8fa:	f1b3 3fff 	cmp.w	r3, #4294967295
 800c8fe:	d101      	bne.n	800c904 <create_chain+0xaa>
 800c900:	68fb      	ldr	r3, [r7, #12]
 800c902:	e03e      	b.n	800c982 <create_chain+0x128>
 800c904:	69fa      	ldr	r2, [r7, #28]
 800c906:	69bb      	ldr	r3, [r7, #24]
 800c908:	429a      	cmp	r2, r3
 800c90a:	d1da      	bne.n	800c8c2 <create_chain+0x68>
 800c90c:	2300      	movs	r3, #0
 800c90e:	e038      	b.n	800c982 <create_chain+0x128>
 800c910:	bf00      	nop
 800c912:	f04f 32ff 	mov.w	r2, #4294967295
 800c916:	69f9      	ldr	r1, [r7, #28]
 800c918:	6938      	ldr	r0, [r7, #16]
 800c91a:	f7ff fe1f 	bl	800c55c <put_fat>
 800c91e:	4603      	mov	r3, r0
 800c920:	75fb      	strb	r3, [r7, #23]
 800c922:	7dfb      	ldrb	r3, [r7, #23]
 800c924:	2b00      	cmp	r3, #0
 800c926:	d109      	bne.n	800c93c <create_chain+0xe2>
 800c928:	683b      	ldr	r3, [r7, #0]
 800c92a:	2b00      	cmp	r3, #0
 800c92c:	d006      	beq.n	800c93c <create_chain+0xe2>
 800c92e:	69fa      	ldr	r2, [r7, #28]
 800c930:	6839      	ldr	r1, [r7, #0]
 800c932:	6938      	ldr	r0, [r7, #16]
 800c934:	f7ff fe12 	bl	800c55c <put_fat>
 800c938:	4603      	mov	r3, r0
 800c93a:	75fb      	strb	r3, [r7, #23]
 800c93c:	7dfb      	ldrb	r3, [r7, #23]
 800c93e:	2b00      	cmp	r3, #0
 800c940:	d116      	bne.n	800c970 <create_chain+0x116>
 800c942:	693b      	ldr	r3, [r7, #16]
 800c944:	69fa      	ldr	r2, [r7, #28]
 800c946:	611a      	str	r2, [r3, #16]
 800c948:	693b      	ldr	r3, [r7, #16]
 800c94a:	695a      	ldr	r2, [r3, #20]
 800c94c:	693b      	ldr	r3, [r7, #16]
 800c94e:	699b      	ldr	r3, [r3, #24]
 800c950:	3b02      	subs	r3, #2
 800c952:	429a      	cmp	r2, r3
 800c954:	d804      	bhi.n	800c960 <create_chain+0x106>
 800c956:	693b      	ldr	r3, [r7, #16]
 800c958:	695b      	ldr	r3, [r3, #20]
 800c95a:	1e5a      	subs	r2, r3, #1
 800c95c:	693b      	ldr	r3, [r7, #16]
 800c95e:	615a      	str	r2, [r3, #20]
 800c960:	693b      	ldr	r3, [r7, #16]
 800c962:	791b      	ldrb	r3, [r3, #4]
 800c964:	f043 0301 	orr.w	r3, r3, #1
 800c968:	b2da      	uxtb	r2, r3
 800c96a:	693b      	ldr	r3, [r7, #16]
 800c96c:	711a      	strb	r2, [r3, #4]
 800c96e:	e007      	b.n	800c980 <create_chain+0x126>
 800c970:	7dfb      	ldrb	r3, [r7, #23]
 800c972:	2b01      	cmp	r3, #1
 800c974:	d102      	bne.n	800c97c <create_chain+0x122>
 800c976:	f04f 33ff 	mov.w	r3, #4294967295
 800c97a:	e000      	b.n	800c97e <create_chain+0x124>
 800c97c:	2301      	movs	r3, #1
 800c97e:	61fb      	str	r3, [r7, #28]
 800c980:	69fb      	ldr	r3, [r7, #28]
 800c982:	4618      	mov	r0, r3
 800c984:	3720      	adds	r7, #32
 800c986:	46bd      	mov	sp, r7
 800c988:	bd80      	pop	{r7, pc}

0800c98a <clmt_clust>:
 800c98a:	b480      	push	{r7}
 800c98c:	b087      	sub	sp, #28
 800c98e:	af00      	add	r7, sp, #0
 800c990:	6078      	str	r0, [r7, #4]
 800c992:	6039      	str	r1, [r7, #0]
 800c994:	687b      	ldr	r3, [r7, #4]
 800c996:	681b      	ldr	r3, [r3, #0]
 800c998:	60fb      	str	r3, [r7, #12]
 800c99a:	687b      	ldr	r3, [r7, #4]
 800c99c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c99e:	3304      	adds	r3, #4
 800c9a0:	613b      	str	r3, [r7, #16]
 800c9a2:	68fb      	ldr	r3, [r7, #12]
 800c9a4:	899b      	ldrh	r3, [r3, #12]
 800c9a6:	461a      	mov	r2, r3
 800c9a8:	683b      	ldr	r3, [r7, #0]
 800c9aa:	fbb3 f3f2 	udiv	r3, r3, r2
 800c9ae:	68fa      	ldr	r2, [r7, #12]
 800c9b0:	8952      	ldrh	r2, [r2, #10]
 800c9b2:	fbb3 f3f2 	udiv	r3, r3, r2
 800c9b6:	617b      	str	r3, [r7, #20]
 800c9b8:	693b      	ldr	r3, [r7, #16]
 800c9ba:	1d1a      	adds	r2, r3, #4
 800c9bc:	613a      	str	r2, [r7, #16]
 800c9be:	681b      	ldr	r3, [r3, #0]
 800c9c0:	60bb      	str	r3, [r7, #8]
 800c9c2:	68bb      	ldr	r3, [r7, #8]
 800c9c4:	2b00      	cmp	r3, #0
 800c9c6:	d101      	bne.n	800c9cc <clmt_clust+0x42>
 800c9c8:	2300      	movs	r3, #0
 800c9ca:	e010      	b.n	800c9ee <clmt_clust+0x64>
 800c9cc:	697a      	ldr	r2, [r7, #20]
 800c9ce:	68bb      	ldr	r3, [r7, #8]
 800c9d0:	429a      	cmp	r2, r3
 800c9d2:	d307      	bcc.n	800c9e4 <clmt_clust+0x5a>
 800c9d4:	697a      	ldr	r2, [r7, #20]
 800c9d6:	68bb      	ldr	r3, [r7, #8]
 800c9d8:	1ad3      	subs	r3, r2, r3
 800c9da:	617b      	str	r3, [r7, #20]
 800c9dc:	693b      	ldr	r3, [r7, #16]
 800c9de:	3304      	adds	r3, #4
 800c9e0:	613b      	str	r3, [r7, #16]
 800c9e2:	e7e9      	b.n	800c9b8 <clmt_clust+0x2e>
 800c9e4:	bf00      	nop
 800c9e6:	693b      	ldr	r3, [r7, #16]
 800c9e8:	681a      	ldr	r2, [r3, #0]
 800c9ea:	697b      	ldr	r3, [r7, #20]
 800c9ec:	4413      	add	r3, r2
 800c9ee:	4618      	mov	r0, r3
 800c9f0:	371c      	adds	r7, #28
 800c9f2:	46bd      	mov	sp, r7
 800c9f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9f8:	4770      	bx	lr

0800c9fa <dir_sdi>:
 800c9fa:	b580      	push	{r7, lr}
 800c9fc:	b086      	sub	sp, #24
 800c9fe:	af00      	add	r7, sp, #0
 800ca00:	6078      	str	r0, [r7, #4]
 800ca02:	6039      	str	r1, [r7, #0]
 800ca04:	687b      	ldr	r3, [r7, #4]
 800ca06:	681b      	ldr	r3, [r3, #0]
 800ca08:	613b      	str	r3, [r7, #16]
 800ca0a:	683b      	ldr	r3, [r7, #0]
 800ca0c:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800ca10:	d204      	bcs.n	800ca1c <dir_sdi+0x22>
 800ca12:	683b      	ldr	r3, [r7, #0]
 800ca14:	f003 031f 	and.w	r3, r3, #31
 800ca18:	2b00      	cmp	r3, #0
 800ca1a:	d001      	beq.n	800ca20 <dir_sdi+0x26>
 800ca1c:	2302      	movs	r3, #2
 800ca1e:	e071      	b.n	800cb04 <dir_sdi+0x10a>
 800ca20:	687b      	ldr	r3, [r7, #4]
 800ca22:	683a      	ldr	r2, [r7, #0]
 800ca24:	615a      	str	r2, [r3, #20]
 800ca26:	687b      	ldr	r3, [r7, #4]
 800ca28:	689b      	ldr	r3, [r3, #8]
 800ca2a:	617b      	str	r3, [r7, #20]
 800ca2c:	697b      	ldr	r3, [r7, #20]
 800ca2e:	2b00      	cmp	r3, #0
 800ca30:	d106      	bne.n	800ca40 <dir_sdi+0x46>
 800ca32:	693b      	ldr	r3, [r7, #16]
 800ca34:	781b      	ldrb	r3, [r3, #0]
 800ca36:	2b02      	cmp	r3, #2
 800ca38:	d902      	bls.n	800ca40 <dir_sdi+0x46>
 800ca3a:	693b      	ldr	r3, [r7, #16]
 800ca3c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ca3e:	617b      	str	r3, [r7, #20]
 800ca40:	697b      	ldr	r3, [r7, #20]
 800ca42:	2b00      	cmp	r3, #0
 800ca44:	d10c      	bne.n	800ca60 <dir_sdi+0x66>
 800ca46:	683b      	ldr	r3, [r7, #0]
 800ca48:	095b      	lsrs	r3, r3, #5
 800ca4a:	693a      	ldr	r2, [r7, #16]
 800ca4c:	8912      	ldrh	r2, [r2, #8]
 800ca4e:	4293      	cmp	r3, r2
 800ca50:	d301      	bcc.n	800ca56 <dir_sdi+0x5c>
 800ca52:	2302      	movs	r3, #2
 800ca54:	e056      	b.n	800cb04 <dir_sdi+0x10a>
 800ca56:	693b      	ldr	r3, [r7, #16]
 800ca58:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800ca5a:	687b      	ldr	r3, [r7, #4]
 800ca5c:	61da      	str	r2, [r3, #28]
 800ca5e:	e02d      	b.n	800cabc <dir_sdi+0xc2>
 800ca60:	693b      	ldr	r3, [r7, #16]
 800ca62:	895b      	ldrh	r3, [r3, #10]
 800ca64:	461a      	mov	r2, r3
 800ca66:	693b      	ldr	r3, [r7, #16]
 800ca68:	899b      	ldrh	r3, [r3, #12]
 800ca6a:	fb02 f303 	mul.w	r3, r2, r3
 800ca6e:	60fb      	str	r3, [r7, #12]
 800ca70:	e019      	b.n	800caa6 <dir_sdi+0xac>
 800ca72:	687b      	ldr	r3, [r7, #4]
 800ca74:	6979      	ldr	r1, [r7, #20]
 800ca76:	4618      	mov	r0, r3
 800ca78:	f7ff fc9d 	bl	800c3b6 <get_fat>
 800ca7c:	6178      	str	r0, [r7, #20]
 800ca7e:	697b      	ldr	r3, [r7, #20]
 800ca80:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ca84:	d101      	bne.n	800ca8a <dir_sdi+0x90>
 800ca86:	2301      	movs	r3, #1
 800ca88:	e03c      	b.n	800cb04 <dir_sdi+0x10a>
 800ca8a:	697b      	ldr	r3, [r7, #20]
 800ca8c:	2b01      	cmp	r3, #1
 800ca8e:	d904      	bls.n	800ca9a <dir_sdi+0xa0>
 800ca90:	693b      	ldr	r3, [r7, #16]
 800ca92:	699b      	ldr	r3, [r3, #24]
 800ca94:	697a      	ldr	r2, [r7, #20]
 800ca96:	429a      	cmp	r2, r3
 800ca98:	d301      	bcc.n	800ca9e <dir_sdi+0xa4>
 800ca9a:	2302      	movs	r3, #2
 800ca9c:	e032      	b.n	800cb04 <dir_sdi+0x10a>
 800ca9e:	683a      	ldr	r2, [r7, #0]
 800caa0:	68fb      	ldr	r3, [r7, #12]
 800caa2:	1ad3      	subs	r3, r2, r3
 800caa4:	603b      	str	r3, [r7, #0]
 800caa6:	683a      	ldr	r2, [r7, #0]
 800caa8:	68fb      	ldr	r3, [r7, #12]
 800caaa:	429a      	cmp	r2, r3
 800caac:	d2e1      	bcs.n	800ca72 <dir_sdi+0x78>
 800caae:	6979      	ldr	r1, [r7, #20]
 800cab0:	6938      	ldr	r0, [r7, #16]
 800cab2:	f7ff fc61 	bl	800c378 <clust2sect>
 800cab6:	4602      	mov	r2, r0
 800cab8:	687b      	ldr	r3, [r7, #4]
 800caba:	61da      	str	r2, [r3, #28]
 800cabc:	687b      	ldr	r3, [r7, #4]
 800cabe:	697a      	ldr	r2, [r7, #20]
 800cac0:	619a      	str	r2, [r3, #24]
 800cac2:	687b      	ldr	r3, [r7, #4]
 800cac4:	69db      	ldr	r3, [r3, #28]
 800cac6:	2b00      	cmp	r3, #0
 800cac8:	d101      	bne.n	800cace <dir_sdi+0xd4>
 800caca:	2302      	movs	r3, #2
 800cacc:	e01a      	b.n	800cb04 <dir_sdi+0x10a>
 800cace:	687b      	ldr	r3, [r7, #4]
 800cad0:	69da      	ldr	r2, [r3, #28]
 800cad2:	693b      	ldr	r3, [r7, #16]
 800cad4:	899b      	ldrh	r3, [r3, #12]
 800cad6:	4619      	mov	r1, r3
 800cad8:	683b      	ldr	r3, [r7, #0]
 800cada:	fbb3 f3f1 	udiv	r3, r3, r1
 800cade:	441a      	add	r2, r3
 800cae0:	687b      	ldr	r3, [r7, #4]
 800cae2:	61da      	str	r2, [r3, #28]
 800cae4:	693b      	ldr	r3, [r7, #16]
 800cae6:	f103 0134 	add.w	r1, r3, #52	@ 0x34
 800caea:	693b      	ldr	r3, [r7, #16]
 800caec:	899b      	ldrh	r3, [r3, #12]
 800caee:	461a      	mov	r2, r3
 800caf0:	683b      	ldr	r3, [r7, #0]
 800caf2:	fbb3 f0f2 	udiv	r0, r3, r2
 800caf6:	fb00 f202 	mul.w	r2, r0, r2
 800cafa:	1a9b      	subs	r3, r3, r2
 800cafc:	18ca      	adds	r2, r1, r3
 800cafe:	687b      	ldr	r3, [r7, #4]
 800cb00:	621a      	str	r2, [r3, #32]
 800cb02:	2300      	movs	r3, #0
 800cb04:	4618      	mov	r0, r3
 800cb06:	3718      	adds	r7, #24
 800cb08:	46bd      	mov	sp, r7
 800cb0a:	bd80      	pop	{r7, pc}

0800cb0c <dir_next>:
 800cb0c:	b580      	push	{r7, lr}
 800cb0e:	b086      	sub	sp, #24
 800cb10:	af00      	add	r7, sp, #0
 800cb12:	6078      	str	r0, [r7, #4]
 800cb14:	6039      	str	r1, [r7, #0]
 800cb16:	687b      	ldr	r3, [r7, #4]
 800cb18:	681b      	ldr	r3, [r3, #0]
 800cb1a:	60fb      	str	r3, [r7, #12]
 800cb1c:	687b      	ldr	r3, [r7, #4]
 800cb1e:	695b      	ldr	r3, [r3, #20]
 800cb20:	3320      	adds	r3, #32
 800cb22:	60bb      	str	r3, [r7, #8]
 800cb24:	687b      	ldr	r3, [r7, #4]
 800cb26:	69db      	ldr	r3, [r3, #28]
 800cb28:	2b00      	cmp	r3, #0
 800cb2a:	d003      	beq.n	800cb34 <dir_next+0x28>
 800cb2c:	68bb      	ldr	r3, [r7, #8]
 800cb2e:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800cb32:	d301      	bcc.n	800cb38 <dir_next+0x2c>
 800cb34:	2304      	movs	r3, #4
 800cb36:	e0bb      	b.n	800ccb0 <dir_next+0x1a4>
 800cb38:	68fb      	ldr	r3, [r7, #12]
 800cb3a:	899b      	ldrh	r3, [r3, #12]
 800cb3c:	461a      	mov	r2, r3
 800cb3e:	68bb      	ldr	r3, [r7, #8]
 800cb40:	fbb3 f1f2 	udiv	r1, r3, r2
 800cb44:	fb01 f202 	mul.w	r2, r1, r2
 800cb48:	1a9b      	subs	r3, r3, r2
 800cb4a:	2b00      	cmp	r3, #0
 800cb4c:	f040 809d 	bne.w	800cc8a <dir_next+0x17e>
 800cb50:	687b      	ldr	r3, [r7, #4]
 800cb52:	69db      	ldr	r3, [r3, #28]
 800cb54:	1c5a      	adds	r2, r3, #1
 800cb56:	687b      	ldr	r3, [r7, #4]
 800cb58:	61da      	str	r2, [r3, #28]
 800cb5a:	687b      	ldr	r3, [r7, #4]
 800cb5c:	699b      	ldr	r3, [r3, #24]
 800cb5e:	2b00      	cmp	r3, #0
 800cb60:	d10b      	bne.n	800cb7a <dir_next+0x6e>
 800cb62:	68bb      	ldr	r3, [r7, #8]
 800cb64:	095b      	lsrs	r3, r3, #5
 800cb66:	68fa      	ldr	r2, [r7, #12]
 800cb68:	8912      	ldrh	r2, [r2, #8]
 800cb6a:	4293      	cmp	r3, r2
 800cb6c:	f0c0 808d 	bcc.w	800cc8a <dir_next+0x17e>
 800cb70:	687b      	ldr	r3, [r7, #4]
 800cb72:	2200      	movs	r2, #0
 800cb74:	61da      	str	r2, [r3, #28]
 800cb76:	2304      	movs	r3, #4
 800cb78:	e09a      	b.n	800ccb0 <dir_next+0x1a4>
 800cb7a:	68fb      	ldr	r3, [r7, #12]
 800cb7c:	899b      	ldrh	r3, [r3, #12]
 800cb7e:	461a      	mov	r2, r3
 800cb80:	68bb      	ldr	r3, [r7, #8]
 800cb82:	fbb3 f3f2 	udiv	r3, r3, r2
 800cb86:	68fa      	ldr	r2, [r7, #12]
 800cb88:	8952      	ldrh	r2, [r2, #10]
 800cb8a:	3a01      	subs	r2, #1
 800cb8c:	4013      	ands	r3, r2
 800cb8e:	2b00      	cmp	r3, #0
 800cb90:	d17b      	bne.n	800cc8a <dir_next+0x17e>
 800cb92:	687a      	ldr	r2, [r7, #4]
 800cb94:	687b      	ldr	r3, [r7, #4]
 800cb96:	699b      	ldr	r3, [r3, #24]
 800cb98:	4619      	mov	r1, r3
 800cb9a:	4610      	mov	r0, r2
 800cb9c:	f7ff fc0b 	bl	800c3b6 <get_fat>
 800cba0:	6178      	str	r0, [r7, #20]
 800cba2:	697b      	ldr	r3, [r7, #20]
 800cba4:	2b01      	cmp	r3, #1
 800cba6:	d801      	bhi.n	800cbac <dir_next+0xa0>
 800cba8:	2302      	movs	r3, #2
 800cbaa:	e081      	b.n	800ccb0 <dir_next+0x1a4>
 800cbac:	697b      	ldr	r3, [r7, #20]
 800cbae:	f1b3 3fff 	cmp.w	r3, #4294967295
 800cbb2:	d101      	bne.n	800cbb8 <dir_next+0xac>
 800cbb4:	2301      	movs	r3, #1
 800cbb6:	e07b      	b.n	800ccb0 <dir_next+0x1a4>
 800cbb8:	68fb      	ldr	r3, [r7, #12]
 800cbba:	699b      	ldr	r3, [r3, #24]
 800cbbc:	697a      	ldr	r2, [r7, #20]
 800cbbe:	429a      	cmp	r2, r3
 800cbc0:	d359      	bcc.n	800cc76 <dir_next+0x16a>
 800cbc2:	683b      	ldr	r3, [r7, #0]
 800cbc4:	2b00      	cmp	r3, #0
 800cbc6:	d104      	bne.n	800cbd2 <dir_next+0xc6>
 800cbc8:	687b      	ldr	r3, [r7, #4]
 800cbca:	2200      	movs	r2, #0
 800cbcc:	61da      	str	r2, [r3, #28]
 800cbce:	2304      	movs	r3, #4
 800cbd0:	e06e      	b.n	800ccb0 <dir_next+0x1a4>
 800cbd2:	687a      	ldr	r2, [r7, #4]
 800cbd4:	687b      	ldr	r3, [r7, #4]
 800cbd6:	699b      	ldr	r3, [r3, #24]
 800cbd8:	4619      	mov	r1, r3
 800cbda:	4610      	mov	r0, r2
 800cbdc:	f7ff fe3d 	bl	800c85a <create_chain>
 800cbe0:	6178      	str	r0, [r7, #20]
 800cbe2:	697b      	ldr	r3, [r7, #20]
 800cbe4:	2b00      	cmp	r3, #0
 800cbe6:	d101      	bne.n	800cbec <dir_next+0xe0>
 800cbe8:	2307      	movs	r3, #7
 800cbea:	e061      	b.n	800ccb0 <dir_next+0x1a4>
 800cbec:	697b      	ldr	r3, [r7, #20]
 800cbee:	2b01      	cmp	r3, #1
 800cbf0:	d101      	bne.n	800cbf6 <dir_next+0xea>
 800cbf2:	2302      	movs	r3, #2
 800cbf4:	e05c      	b.n	800ccb0 <dir_next+0x1a4>
 800cbf6:	697b      	ldr	r3, [r7, #20]
 800cbf8:	f1b3 3fff 	cmp.w	r3, #4294967295
 800cbfc:	d101      	bne.n	800cc02 <dir_next+0xf6>
 800cbfe:	2301      	movs	r3, #1
 800cc00:	e056      	b.n	800ccb0 <dir_next+0x1a4>
 800cc02:	68f8      	ldr	r0, [r7, #12]
 800cc04:	f7ff fad6 	bl	800c1b4 <sync_window>
 800cc08:	4603      	mov	r3, r0
 800cc0a:	2b00      	cmp	r3, #0
 800cc0c:	d001      	beq.n	800cc12 <dir_next+0x106>
 800cc0e:	2301      	movs	r3, #1
 800cc10:	e04e      	b.n	800ccb0 <dir_next+0x1a4>
 800cc12:	68fb      	ldr	r3, [r7, #12]
 800cc14:	f103 0034 	add.w	r0, r3, #52	@ 0x34
 800cc18:	68fb      	ldr	r3, [r7, #12]
 800cc1a:	899b      	ldrh	r3, [r3, #12]
 800cc1c:	461a      	mov	r2, r3
 800cc1e:	2100      	movs	r1, #0
 800cc20:	f7ff f8ff 	bl	800be22 <mem_set>
 800cc24:	2300      	movs	r3, #0
 800cc26:	613b      	str	r3, [r7, #16]
 800cc28:	6979      	ldr	r1, [r7, #20]
 800cc2a:	68f8      	ldr	r0, [r7, #12]
 800cc2c:	f7ff fba4 	bl	800c378 <clust2sect>
 800cc30:	4602      	mov	r2, r0
 800cc32:	68fb      	ldr	r3, [r7, #12]
 800cc34:	631a      	str	r2, [r3, #48]	@ 0x30
 800cc36:	e012      	b.n	800cc5e <dir_next+0x152>
 800cc38:	68fb      	ldr	r3, [r7, #12]
 800cc3a:	2201      	movs	r2, #1
 800cc3c:	70da      	strb	r2, [r3, #3]
 800cc3e:	68f8      	ldr	r0, [r7, #12]
 800cc40:	f7ff fab8 	bl	800c1b4 <sync_window>
 800cc44:	4603      	mov	r3, r0
 800cc46:	2b00      	cmp	r3, #0
 800cc48:	d001      	beq.n	800cc4e <dir_next+0x142>
 800cc4a:	2301      	movs	r3, #1
 800cc4c:	e030      	b.n	800ccb0 <dir_next+0x1a4>
 800cc4e:	693b      	ldr	r3, [r7, #16]
 800cc50:	3301      	adds	r3, #1
 800cc52:	613b      	str	r3, [r7, #16]
 800cc54:	68fb      	ldr	r3, [r7, #12]
 800cc56:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800cc58:	1c5a      	adds	r2, r3, #1
 800cc5a:	68fb      	ldr	r3, [r7, #12]
 800cc5c:	631a      	str	r2, [r3, #48]	@ 0x30
 800cc5e:	68fb      	ldr	r3, [r7, #12]
 800cc60:	895b      	ldrh	r3, [r3, #10]
 800cc62:	461a      	mov	r2, r3
 800cc64:	693b      	ldr	r3, [r7, #16]
 800cc66:	4293      	cmp	r3, r2
 800cc68:	d3e6      	bcc.n	800cc38 <dir_next+0x12c>
 800cc6a:	68fb      	ldr	r3, [r7, #12]
 800cc6c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800cc6e:	693b      	ldr	r3, [r7, #16]
 800cc70:	1ad2      	subs	r2, r2, r3
 800cc72:	68fb      	ldr	r3, [r7, #12]
 800cc74:	631a      	str	r2, [r3, #48]	@ 0x30
 800cc76:	687b      	ldr	r3, [r7, #4]
 800cc78:	697a      	ldr	r2, [r7, #20]
 800cc7a:	619a      	str	r2, [r3, #24]
 800cc7c:	6979      	ldr	r1, [r7, #20]
 800cc7e:	68f8      	ldr	r0, [r7, #12]
 800cc80:	f7ff fb7a 	bl	800c378 <clust2sect>
 800cc84:	4602      	mov	r2, r0
 800cc86:	687b      	ldr	r3, [r7, #4]
 800cc88:	61da      	str	r2, [r3, #28]
 800cc8a:	687b      	ldr	r3, [r7, #4]
 800cc8c:	68ba      	ldr	r2, [r7, #8]
 800cc8e:	615a      	str	r2, [r3, #20]
 800cc90:	68fb      	ldr	r3, [r7, #12]
 800cc92:	f103 0134 	add.w	r1, r3, #52	@ 0x34
 800cc96:	68fb      	ldr	r3, [r7, #12]
 800cc98:	899b      	ldrh	r3, [r3, #12]
 800cc9a:	461a      	mov	r2, r3
 800cc9c:	68bb      	ldr	r3, [r7, #8]
 800cc9e:	fbb3 f0f2 	udiv	r0, r3, r2
 800cca2:	fb00 f202 	mul.w	r2, r0, r2
 800cca6:	1a9b      	subs	r3, r3, r2
 800cca8:	18ca      	adds	r2, r1, r3
 800ccaa:	687b      	ldr	r3, [r7, #4]
 800ccac:	621a      	str	r2, [r3, #32]
 800ccae:	2300      	movs	r3, #0
 800ccb0:	4618      	mov	r0, r3
 800ccb2:	3718      	adds	r7, #24
 800ccb4:	46bd      	mov	sp, r7
 800ccb6:	bd80      	pop	{r7, pc}

0800ccb8 <dir_alloc>:
 800ccb8:	b580      	push	{r7, lr}
 800ccba:	b086      	sub	sp, #24
 800ccbc:	af00      	add	r7, sp, #0
 800ccbe:	6078      	str	r0, [r7, #4]
 800ccc0:	6039      	str	r1, [r7, #0]
 800ccc2:	687b      	ldr	r3, [r7, #4]
 800ccc4:	681b      	ldr	r3, [r3, #0]
 800ccc6:	60fb      	str	r3, [r7, #12]
 800ccc8:	2100      	movs	r1, #0
 800ccca:	6878      	ldr	r0, [r7, #4]
 800cccc:	f7ff fe95 	bl	800c9fa <dir_sdi>
 800ccd0:	4603      	mov	r3, r0
 800ccd2:	75fb      	strb	r3, [r7, #23]
 800ccd4:	7dfb      	ldrb	r3, [r7, #23]
 800ccd6:	2b00      	cmp	r3, #0
 800ccd8:	d12b      	bne.n	800cd32 <dir_alloc+0x7a>
 800ccda:	2300      	movs	r3, #0
 800ccdc:	613b      	str	r3, [r7, #16]
 800ccde:	687b      	ldr	r3, [r7, #4]
 800cce0:	69db      	ldr	r3, [r3, #28]
 800cce2:	4619      	mov	r1, r3
 800cce4:	68f8      	ldr	r0, [r7, #12]
 800cce6:	f7ff faa9 	bl	800c23c <move_window>
 800ccea:	4603      	mov	r3, r0
 800ccec:	75fb      	strb	r3, [r7, #23]
 800ccee:	7dfb      	ldrb	r3, [r7, #23]
 800ccf0:	2b00      	cmp	r3, #0
 800ccf2:	d11d      	bne.n	800cd30 <dir_alloc+0x78>
 800ccf4:	687b      	ldr	r3, [r7, #4]
 800ccf6:	6a1b      	ldr	r3, [r3, #32]
 800ccf8:	781b      	ldrb	r3, [r3, #0]
 800ccfa:	2be5      	cmp	r3, #229	@ 0xe5
 800ccfc:	d004      	beq.n	800cd08 <dir_alloc+0x50>
 800ccfe:	687b      	ldr	r3, [r7, #4]
 800cd00:	6a1b      	ldr	r3, [r3, #32]
 800cd02:	781b      	ldrb	r3, [r3, #0]
 800cd04:	2b00      	cmp	r3, #0
 800cd06:	d107      	bne.n	800cd18 <dir_alloc+0x60>
 800cd08:	693b      	ldr	r3, [r7, #16]
 800cd0a:	3301      	adds	r3, #1
 800cd0c:	613b      	str	r3, [r7, #16]
 800cd0e:	693a      	ldr	r2, [r7, #16]
 800cd10:	683b      	ldr	r3, [r7, #0]
 800cd12:	429a      	cmp	r2, r3
 800cd14:	d102      	bne.n	800cd1c <dir_alloc+0x64>
 800cd16:	e00c      	b.n	800cd32 <dir_alloc+0x7a>
 800cd18:	2300      	movs	r3, #0
 800cd1a:	613b      	str	r3, [r7, #16]
 800cd1c:	2101      	movs	r1, #1
 800cd1e:	6878      	ldr	r0, [r7, #4]
 800cd20:	f7ff fef4 	bl	800cb0c <dir_next>
 800cd24:	4603      	mov	r3, r0
 800cd26:	75fb      	strb	r3, [r7, #23]
 800cd28:	7dfb      	ldrb	r3, [r7, #23]
 800cd2a:	2b00      	cmp	r3, #0
 800cd2c:	d0d7      	beq.n	800ccde <dir_alloc+0x26>
 800cd2e:	e000      	b.n	800cd32 <dir_alloc+0x7a>
 800cd30:	bf00      	nop
 800cd32:	7dfb      	ldrb	r3, [r7, #23]
 800cd34:	2b04      	cmp	r3, #4
 800cd36:	d101      	bne.n	800cd3c <dir_alloc+0x84>
 800cd38:	2307      	movs	r3, #7
 800cd3a:	75fb      	strb	r3, [r7, #23]
 800cd3c:	7dfb      	ldrb	r3, [r7, #23]
 800cd3e:	4618      	mov	r0, r3
 800cd40:	3718      	adds	r7, #24
 800cd42:	46bd      	mov	sp, r7
 800cd44:	bd80      	pop	{r7, pc}

0800cd46 <ld_clust>:
 800cd46:	b580      	push	{r7, lr}
 800cd48:	b084      	sub	sp, #16
 800cd4a:	af00      	add	r7, sp, #0
 800cd4c:	6078      	str	r0, [r7, #4]
 800cd4e:	6039      	str	r1, [r7, #0]
 800cd50:	683b      	ldr	r3, [r7, #0]
 800cd52:	331a      	adds	r3, #26
 800cd54:	4618      	mov	r0, r3
 800cd56:	f7fe ffc1 	bl	800bcdc <ld_word>
 800cd5a:	4603      	mov	r3, r0
 800cd5c:	60fb      	str	r3, [r7, #12]
 800cd5e:	687b      	ldr	r3, [r7, #4]
 800cd60:	781b      	ldrb	r3, [r3, #0]
 800cd62:	2b03      	cmp	r3, #3
 800cd64:	d109      	bne.n	800cd7a <ld_clust+0x34>
 800cd66:	683b      	ldr	r3, [r7, #0]
 800cd68:	3314      	adds	r3, #20
 800cd6a:	4618      	mov	r0, r3
 800cd6c:	f7fe ffb6 	bl	800bcdc <ld_word>
 800cd70:	4603      	mov	r3, r0
 800cd72:	041b      	lsls	r3, r3, #16
 800cd74:	68fa      	ldr	r2, [r7, #12]
 800cd76:	4313      	orrs	r3, r2
 800cd78:	60fb      	str	r3, [r7, #12]
 800cd7a:	68fb      	ldr	r3, [r7, #12]
 800cd7c:	4618      	mov	r0, r3
 800cd7e:	3710      	adds	r7, #16
 800cd80:	46bd      	mov	sp, r7
 800cd82:	bd80      	pop	{r7, pc}

0800cd84 <st_clust>:
 800cd84:	b580      	push	{r7, lr}
 800cd86:	b084      	sub	sp, #16
 800cd88:	af00      	add	r7, sp, #0
 800cd8a:	60f8      	str	r0, [r7, #12]
 800cd8c:	60b9      	str	r1, [r7, #8]
 800cd8e:	607a      	str	r2, [r7, #4]
 800cd90:	68bb      	ldr	r3, [r7, #8]
 800cd92:	331a      	adds	r3, #26
 800cd94:	687a      	ldr	r2, [r7, #4]
 800cd96:	b292      	uxth	r2, r2
 800cd98:	4611      	mov	r1, r2
 800cd9a:	4618      	mov	r0, r3
 800cd9c:	f7fe ffd9 	bl	800bd52 <st_word>
 800cda0:	68fb      	ldr	r3, [r7, #12]
 800cda2:	781b      	ldrb	r3, [r3, #0]
 800cda4:	2b03      	cmp	r3, #3
 800cda6:	d109      	bne.n	800cdbc <st_clust+0x38>
 800cda8:	68bb      	ldr	r3, [r7, #8]
 800cdaa:	f103 0214 	add.w	r2, r3, #20
 800cdae:	687b      	ldr	r3, [r7, #4]
 800cdb0:	0c1b      	lsrs	r3, r3, #16
 800cdb2:	b29b      	uxth	r3, r3
 800cdb4:	4619      	mov	r1, r3
 800cdb6:	4610      	mov	r0, r2
 800cdb8:	f7fe ffcb 	bl	800bd52 <st_word>
 800cdbc:	bf00      	nop
 800cdbe:	3710      	adds	r7, #16
 800cdc0:	46bd      	mov	sp, r7
 800cdc2:	bd80      	pop	{r7, pc}

0800cdc4 <dir_find>:
 800cdc4:	b580      	push	{r7, lr}
 800cdc6:	b086      	sub	sp, #24
 800cdc8:	af00      	add	r7, sp, #0
 800cdca:	6078      	str	r0, [r7, #4]
 800cdcc:	687b      	ldr	r3, [r7, #4]
 800cdce:	681b      	ldr	r3, [r3, #0]
 800cdd0:	613b      	str	r3, [r7, #16]
 800cdd2:	2100      	movs	r1, #0
 800cdd4:	6878      	ldr	r0, [r7, #4]
 800cdd6:	f7ff fe10 	bl	800c9fa <dir_sdi>
 800cdda:	4603      	mov	r3, r0
 800cddc:	75fb      	strb	r3, [r7, #23]
 800cdde:	7dfb      	ldrb	r3, [r7, #23]
 800cde0:	2b00      	cmp	r3, #0
 800cde2:	d001      	beq.n	800cde8 <dir_find+0x24>
 800cde4:	7dfb      	ldrb	r3, [r7, #23]
 800cde6:	e03e      	b.n	800ce66 <dir_find+0xa2>
 800cde8:	687b      	ldr	r3, [r7, #4]
 800cdea:	69db      	ldr	r3, [r3, #28]
 800cdec:	4619      	mov	r1, r3
 800cdee:	6938      	ldr	r0, [r7, #16]
 800cdf0:	f7ff fa24 	bl	800c23c <move_window>
 800cdf4:	4603      	mov	r3, r0
 800cdf6:	75fb      	strb	r3, [r7, #23]
 800cdf8:	7dfb      	ldrb	r3, [r7, #23]
 800cdfa:	2b00      	cmp	r3, #0
 800cdfc:	d12f      	bne.n	800ce5e <dir_find+0x9a>
 800cdfe:	687b      	ldr	r3, [r7, #4]
 800ce00:	6a1b      	ldr	r3, [r3, #32]
 800ce02:	781b      	ldrb	r3, [r3, #0]
 800ce04:	73fb      	strb	r3, [r7, #15]
 800ce06:	7bfb      	ldrb	r3, [r7, #15]
 800ce08:	2b00      	cmp	r3, #0
 800ce0a:	d102      	bne.n	800ce12 <dir_find+0x4e>
 800ce0c:	2304      	movs	r3, #4
 800ce0e:	75fb      	strb	r3, [r7, #23]
 800ce10:	e028      	b.n	800ce64 <dir_find+0xa0>
 800ce12:	687b      	ldr	r3, [r7, #4]
 800ce14:	6a1b      	ldr	r3, [r3, #32]
 800ce16:	330b      	adds	r3, #11
 800ce18:	781b      	ldrb	r3, [r3, #0]
 800ce1a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800ce1e:	b2da      	uxtb	r2, r3
 800ce20:	687b      	ldr	r3, [r7, #4]
 800ce22:	719a      	strb	r2, [r3, #6]
 800ce24:	687b      	ldr	r3, [r7, #4]
 800ce26:	6a1b      	ldr	r3, [r3, #32]
 800ce28:	330b      	adds	r3, #11
 800ce2a:	781b      	ldrb	r3, [r3, #0]
 800ce2c:	f003 0308 	and.w	r3, r3, #8
 800ce30:	2b00      	cmp	r3, #0
 800ce32:	d10a      	bne.n	800ce4a <dir_find+0x86>
 800ce34:	687b      	ldr	r3, [r7, #4]
 800ce36:	6a18      	ldr	r0, [r3, #32]
 800ce38:	687b      	ldr	r3, [r7, #4]
 800ce3a:	3324      	adds	r3, #36	@ 0x24
 800ce3c:	220b      	movs	r2, #11
 800ce3e:	4619      	mov	r1, r3
 800ce40:	f7ff f80a 	bl	800be58 <mem_cmp>
 800ce44:	4603      	mov	r3, r0
 800ce46:	2b00      	cmp	r3, #0
 800ce48:	d00b      	beq.n	800ce62 <dir_find+0x9e>
 800ce4a:	2100      	movs	r1, #0
 800ce4c:	6878      	ldr	r0, [r7, #4]
 800ce4e:	f7ff fe5d 	bl	800cb0c <dir_next>
 800ce52:	4603      	mov	r3, r0
 800ce54:	75fb      	strb	r3, [r7, #23]
 800ce56:	7dfb      	ldrb	r3, [r7, #23]
 800ce58:	2b00      	cmp	r3, #0
 800ce5a:	d0c5      	beq.n	800cde8 <dir_find+0x24>
 800ce5c:	e002      	b.n	800ce64 <dir_find+0xa0>
 800ce5e:	bf00      	nop
 800ce60:	e000      	b.n	800ce64 <dir_find+0xa0>
 800ce62:	bf00      	nop
 800ce64:	7dfb      	ldrb	r3, [r7, #23]
 800ce66:	4618      	mov	r0, r3
 800ce68:	3718      	adds	r7, #24
 800ce6a:	46bd      	mov	sp, r7
 800ce6c:	bd80      	pop	{r7, pc}

0800ce6e <dir_register>:
 800ce6e:	b580      	push	{r7, lr}
 800ce70:	b084      	sub	sp, #16
 800ce72:	af00      	add	r7, sp, #0
 800ce74:	6078      	str	r0, [r7, #4]
 800ce76:	687b      	ldr	r3, [r7, #4]
 800ce78:	681b      	ldr	r3, [r3, #0]
 800ce7a:	60bb      	str	r3, [r7, #8]
 800ce7c:	2101      	movs	r1, #1
 800ce7e:	6878      	ldr	r0, [r7, #4]
 800ce80:	f7ff ff1a 	bl	800ccb8 <dir_alloc>
 800ce84:	4603      	mov	r3, r0
 800ce86:	73fb      	strb	r3, [r7, #15]
 800ce88:	7bfb      	ldrb	r3, [r7, #15]
 800ce8a:	2b00      	cmp	r3, #0
 800ce8c:	d11c      	bne.n	800cec8 <dir_register+0x5a>
 800ce8e:	687b      	ldr	r3, [r7, #4]
 800ce90:	69db      	ldr	r3, [r3, #28]
 800ce92:	4619      	mov	r1, r3
 800ce94:	68b8      	ldr	r0, [r7, #8]
 800ce96:	f7ff f9d1 	bl	800c23c <move_window>
 800ce9a:	4603      	mov	r3, r0
 800ce9c:	73fb      	strb	r3, [r7, #15]
 800ce9e:	7bfb      	ldrb	r3, [r7, #15]
 800cea0:	2b00      	cmp	r3, #0
 800cea2:	d111      	bne.n	800cec8 <dir_register+0x5a>
 800cea4:	687b      	ldr	r3, [r7, #4]
 800cea6:	6a1b      	ldr	r3, [r3, #32]
 800cea8:	2220      	movs	r2, #32
 800ceaa:	2100      	movs	r1, #0
 800ceac:	4618      	mov	r0, r3
 800ceae:	f7fe ffb8 	bl	800be22 <mem_set>
 800ceb2:	687b      	ldr	r3, [r7, #4]
 800ceb4:	6a18      	ldr	r0, [r3, #32]
 800ceb6:	687b      	ldr	r3, [r7, #4]
 800ceb8:	3324      	adds	r3, #36	@ 0x24
 800ceba:	220b      	movs	r2, #11
 800cebc:	4619      	mov	r1, r3
 800cebe:	f7fe ff8f 	bl	800bde0 <mem_cpy>
 800cec2:	68bb      	ldr	r3, [r7, #8]
 800cec4:	2201      	movs	r2, #1
 800cec6:	70da      	strb	r2, [r3, #3]
 800cec8:	7bfb      	ldrb	r3, [r7, #15]
 800ceca:	4618      	mov	r0, r3
 800cecc:	3710      	adds	r7, #16
 800cece:	46bd      	mov	sp, r7
 800ced0:	bd80      	pop	{r7, pc}
	...

0800ced4 <create_name>:
 800ced4:	b580      	push	{r7, lr}
 800ced6:	b088      	sub	sp, #32
 800ced8:	af00      	add	r7, sp, #0
 800ceda:	6078      	str	r0, [r7, #4]
 800cedc:	6039      	str	r1, [r7, #0]
 800cede:	683b      	ldr	r3, [r7, #0]
 800cee0:	681b      	ldr	r3, [r3, #0]
 800cee2:	60fb      	str	r3, [r7, #12]
 800cee4:	687b      	ldr	r3, [r7, #4]
 800cee6:	3324      	adds	r3, #36	@ 0x24
 800cee8:	60bb      	str	r3, [r7, #8]
 800ceea:	220b      	movs	r2, #11
 800ceec:	2120      	movs	r1, #32
 800ceee:	68b8      	ldr	r0, [r7, #8]
 800cef0:	f7fe ff97 	bl	800be22 <mem_set>
 800cef4:	2300      	movs	r3, #0
 800cef6:	613b      	str	r3, [r7, #16]
 800cef8:	693b      	ldr	r3, [r7, #16]
 800cefa:	61fb      	str	r3, [r7, #28]
 800cefc:	2308      	movs	r3, #8
 800cefe:	617b      	str	r3, [r7, #20]
 800cf00:	69fb      	ldr	r3, [r7, #28]
 800cf02:	1c5a      	adds	r2, r3, #1
 800cf04:	61fa      	str	r2, [r7, #28]
 800cf06:	68fa      	ldr	r2, [r7, #12]
 800cf08:	4413      	add	r3, r2
 800cf0a:	781b      	ldrb	r3, [r3, #0]
 800cf0c:	76fb      	strb	r3, [r7, #27]
 800cf0e:	7efb      	ldrb	r3, [r7, #27]
 800cf10:	2b20      	cmp	r3, #32
 800cf12:	d94e      	bls.n	800cfb2 <create_name+0xde>
 800cf14:	7efb      	ldrb	r3, [r7, #27]
 800cf16:	2b2f      	cmp	r3, #47	@ 0x2f
 800cf18:	d006      	beq.n	800cf28 <create_name+0x54>
 800cf1a:	7efb      	ldrb	r3, [r7, #27]
 800cf1c:	2b5c      	cmp	r3, #92	@ 0x5c
 800cf1e:	d110      	bne.n	800cf42 <create_name+0x6e>
 800cf20:	e002      	b.n	800cf28 <create_name+0x54>
 800cf22:	69fb      	ldr	r3, [r7, #28]
 800cf24:	3301      	adds	r3, #1
 800cf26:	61fb      	str	r3, [r7, #28]
 800cf28:	68fa      	ldr	r2, [r7, #12]
 800cf2a:	69fb      	ldr	r3, [r7, #28]
 800cf2c:	4413      	add	r3, r2
 800cf2e:	781b      	ldrb	r3, [r3, #0]
 800cf30:	2b2f      	cmp	r3, #47	@ 0x2f
 800cf32:	d0f6      	beq.n	800cf22 <create_name+0x4e>
 800cf34:	68fa      	ldr	r2, [r7, #12]
 800cf36:	69fb      	ldr	r3, [r7, #28]
 800cf38:	4413      	add	r3, r2
 800cf3a:	781b      	ldrb	r3, [r3, #0]
 800cf3c:	2b5c      	cmp	r3, #92	@ 0x5c
 800cf3e:	d0f0      	beq.n	800cf22 <create_name+0x4e>
 800cf40:	e038      	b.n	800cfb4 <create_name+0xe0>
 800cf42:	7efb      	ldrb	r3, [r7, #27]
 800cf44:	2b2e      	cmp	r3, #46	@ 0x2e
 800cf46:	d003      	beq.n	800cf50 <create_name+0x7c>
 800cf48:	693a      	ldr	r2, [r7, #16]
 800cf4a:	697b      	ldr	r3, [r7, #20]
 800cf4c:	429a      	cmp	r2, r3
 800cf4e:	d30c      	bcc.n	800cf6a <create_name+0x96>
 800cf50:	697b      	ldr	r3, [r7, #20]
 800cf52:	2b0b      	cmp	r3, #11
 800cf54:	d002      	beq.n	800cf5c <create_name+0x88>
 800cf56:	7efb      	ldrb	r3, [r7, #27]
 800cf58:	2b2e      	cmp	r3, #46	@ 0x2e
 800cf5a:	d001      	beq.n	800cf60 <create_name+0x8c>
 800cf5c:	2306      	movs	r3, #6
 800cf5e:	e044      	b.n	800cfea <create_name+0x116>
 800cf60:	2308      	movs	r3, #8
 800cf62:	613b      	str	r3, [r7, #16]
 800cf64:	230b      	movs	r3, #11
 800cf66:	617b      	str	r3, [r7, #20]
 800cf68:	e022      	b.n	800cfb0 <create_name+0xdc>
 800cf6a:	f997 301b 	ldrsb.w	r3, [r7, #27]
 800cf6e:	2b00      	cmp	r3, #0
 800cf70:	da04      	bge.n	800cf7c <create_name+0xa8>
 800cf72:	7efb      	ldrb	r3, [r7, #27]
 800cf74:	3b80      	subs	r3, #128	@ 0x80
 800cf76:	4a1f      	ldr	r2, [pc, #124]	@ (800cff4 <create_name+0x120>)
 800cf78:	5cd3      	ldrb	r3, [r2, r3]
 800cf7a:	76fb      	strb	r3, [r7, #27]
 800cf7c:	7efb      	ldrb	r3, [r7, #27]
 800cf7e:	4619      	mov	r1, r3
 800cf80:	481d      	ldr	r0, [pc, #116]	@ (800cff8 <create_name+0x124>)
 800cf82:	f7fe ff90 	bl	800bea6 <chk_chr>
 800cf86:	4603      	mov	r3, r0
 800cf88:	2b00      	cmp	r3, #0
 800cf8a:	d001      	beq.n	800cf90 <create_name+0xbc>
 800cf8c:	2306      	movs	r3, #6
 800cf8e:	e02c      	b.n	800cfea <create_name+0x116>
 800cf90:	7efb      	ldrb	r3, [r7, #27]
 800cf92:	2b60      	cmp	r3, #96	@ 0x60
 800cf94:	d905      	bls.n	800cfa2 <create_name+0xce>
 800cf96:	7efb      	ldrb	r3, [r7, #27]
 800cf98:	2b7a      	cmp	r3, #122	@ 0x7a
 800cf9a:	d802      	bhi.n	800cfa2 <create_name+0xce>
 800cf9c:	7efb      	ldrb	r3, [r7, #27]
 800cf9e:	3b20      	subs	r3, #32
 800cfa0:	76fb      	strb	r3, [r7, #27]
 800cfa2:	693b      	ldr	r3, [r7, #16]
 800cfa4:	1c5a      	adds	r2, r3, #1
 800cfa6:	613a      	str	r2, [r7, #16]
 800cfa8:	68ba      	ldr	r2, [r7, #8]
 800cfaa:	4413      	add	r3, r2
 800cfac:	7efa      	ldrb	r2, [r7, #27]
 800cfae:	701a      	strb	r2, [r3, #0]
 800cfb0:	e7a6      	b.n	800cf00 <create_name+0x2c>
 800cfb2:	bf00      	nop
 800cfb4:	68fa      	ldr	r2, [r7, #12]
 800cfb6:	69fb      	ldr	r3, [r7, #28]
 800cfb8:	441a      	add	r2, r3
 800cfba:	683b      	ldr	r3, [r7, #0]
 800cfbc:	601a      	str	r2, [r3, #0]
 800cfbe:	693b      	ldr	r3, [r7, #16]
 800cfc0:	2b00      	cmp	r3, #0
 800cfc2:	d101      	bne.n	800cfc8 <create_name+0xf4>
 800cfc4:	2306      	movs	r3, #6
 800cfc6:	e010      	b.n	800cfea <create_name+0x116>
 800cfc8:	68bb      	ldr	r3, [r7, #8]
 800cfca:	781b      	ldrb	r3, [r3, #0]
 800cfcc:	2be5      	cmp	r3, #229	@ 0xe5
 800cfce:	d102      	bne.n	800cfd6 <create_name+0x102>
 800cfd0:	68bb      	ldr	r3, [r7, #8]
 800cfd2:	2205      	movs	r2, #5
 800cfd4:	701a      	strb	r2, [r3, #0]
 800cfd6:	7efb      	ldrb	r3, [r7, #27]
 800cfd8:	2b20      	cmp	r3, #32
 800cfda:	d801      	bhi.n	800cfe0 <create_name+0x10c>
 800cfdc:	2204      	movs	r2, #4
 800cfde:	e000      	b.n	800cfe2 <create_name+0x10e>
 800cfe0:	2200      	movs	r2, #0
 800cfe2:	68bb      	ldr	r3, [r7, #8]
 800cfe4:	330b      	adds	r3, #11
 800cfe6:	701a      	strb	r2, [r3, #0]
 800cfe8:	2300      	movs	r3, #0
 800cfea:	4618      	mov	r0, r3
 800cfec:	3720      	adds	r7, #32
 800cfee:	46bd      	mov	sp, r7
 800cff0:	bd80      	pop	{r7, pc}
 800cff2:	bf00      	nop
 800cff4:	0801e0f8 	.word	0x0801e0f8
 800cff8:	0800ec50 	.word	0x0800ec50

0800cffc <follow_path>:
 800cffc:	b580      	push	{r7, lr}
 800cffe:	b086      	sub	sp, #24
 800d000:	af00      	add	r7, sp, #0
 800d002:	6078      	str	r0, [r7, #4]
 800d004:	6039      	str	r1, [r7, #0]
 800d006:	687b      	ldr	r3, [r7, #4]
 800d008:	613b      	str	r3, [r7, #16]
 800d00a:	693b      	ldr	r3, [r7, #16]
 800d00c:	681b      	ldr	r3, [r3, #0]
 800d00e:	60fb      	str	r3, [r7, #12]
 800d010:	e002      	b.n	800d018 <follow_path+0x1c>
 800d012:	683b      	ldr	r3, [r7, #0]
 800d014:	3301      	adds	r3, #1
 800d016:	603b      	str	r3, [r7, #0]
 800d018:	683b      	ldr	r3, [r7, #0]
 800d01a:	781b      	ldrb	r3, [r3, #0]
 800d01c:	2b2f      	cmp	r3, #47	@ 0x2f
 800d01e:	d0f8      	beq.n	800d012 <follow_path+0x16>
 800d020:	683b      	ldr	r3, [r7, #0]
 800d022:	781b      	ldrb	r3, [r3, #0]
 800d024:	2b5c      	cmp	r3, #92	@ 0x5c
 800d026:	d0f4      	beq.n	800d012 <follow_path+0x16>
 800d028:	693b      	ldr	r3, [r7, #16]
 800d02a:	2200      	movs	r2, #0
 800d02c:	609a      	str	r2, [r3, #8]
 800d02e:	683b      	ldr	r3, [r7, #0]
 800d030:	781b      	ldrb	r3, [r3, #0]
 800d032:	2b1f      	cmp	r3, #31
 800d034:	d80a      	bhi.n	800d04c <follow_path+0x50>
 800d036:	687b      	ldr	r3, [r7, #4]
 800d038:	2280      	movs	r2, #128	@ 0x80
 800d03a:	f883 202f 	strb.w	r2, [r3, #47]	@ 0x2f
 800d03e:	2100      	movs	r1, #0
 800d040:	6878      	ldr	r0, [r7, #4]
 800d042:	f7ff fcda 	bl	800c9fa <dir_sdi>
 800d046:	4603      	mov	r3, r0
 800d048:	75fb      	strb	r3, [r7, #23]
 800d04a:	e048      	b.n	800d0de <follow_path+0xe2>
 800d04c:	463b      	mov	r3, r7
 800d04e:	4619      	mov	r1, r3
 800d050:	6878      	ldr	r0, [r7, #4]
 800d052:	f7ff ff3f 	bl	800ced4 <create_name>
 800d056:	4603      	mov	r3, r0
 800d058:	75fb      	strb	r3, [r7, #23]
 800d05a:	7dfb      	ldrb	r3, [r7, #23]
 800d05c:	2b00      	cmp	r3, #0
 800d05e:	d139      	bne.n	800d0d4 <follow_path+0xd8>
 800d060:	6878      	ldr	r0, [r7, #4]
 800d062:	f7ff feaf 	bl	800cdc4 <dir_find>
 800d066:	4603      	mov	r3, r0
 800d068:	75fb      	strb	r3, [r7, #23]
 800d06a:	687b      	ldr	r3, [r7, #4]
 800d06c:	f893 302f 	ldrb.w	r3, [r3, #47]	@ 0x2f
 800d070:	72fb      	strb	r3, [r7, #11]
 800d072:	7dfb      	ldrb	r3, [r7, #23]
 800d074:	2b00      	cmp	r3, #0
 800d076:	d00a      	beq.n	800d08e <follow_path+0x92>
 800d078:	7dfb      	ldrb	r3, [r7, #23]
 800d07a:	2b04      	cmp	r3, #4
 800d07c:	d12c      	bne.n	800d0d8 <follow_path+0xdc>
 800d07e:	7afb      	ldrb	r3, [r7, #11]
 800d080:	f003 0304 	and.w	r3, r3, #4
 800d084:	2b00      	cmp	r3, #0
 800d086:	d127      	bne.n	800d0d8 <follow_path+0xdc>
 800d088:	2305      	movs	r3, #5
 800d08a:	75fb      	strb	r3, [r7, #23]
 800d08c:	e024      	b.n	800d0d8 <follow_path+0xdc>
 800d08e:	7afb      	ldrb	r3, [r7, #11]
 800d090:	f003 0304 	and.w	r3, r3, #4
 800d094:	2b00      	cmp	r3, #0
 800d096:	d121      	bne.n	800d0dc <follow_path+0xe0>
 800d098:	693b      	ldr	r3, [r7, #16]
 800d09a:	799b      	ldrb	r3, [r3, #6]
 800d09c:	f003 0310 	and.w	r3, r3, #16
 800d0a0:	2b00      	cmp	r3, #0
 800d0a2:	d102      	bne.n	800d0aa <follow_path+0xae>
 800d0a4:	2305      	movs	r3, #5
 800d0a6:	75fb      	strb	r3, [r7, #23]
 800d0a8:	e019      	b.n	800d0de <follow_path+0xe2>
 800d0aa:	68fb      	ldr	r3, [r7, #12]
 800d0ac:	f103 0134 	add.w	r1, r3, #52	@ 0x34
 800d0b0:	687b      	ldr	r3, [r7, #4]
 800d0b2:	695b      	ldr	r3, [r3, #20]
 800d0b4:	68fa      	ldr	r2, [r7, #12]
 800d0b6:	8992      	ldrh	r2, [r2, #12]
 800d0b8:	fbb3 f0f2 	udiv	r0, r3, r2
 800d0bc:	fb00 f202 	mul.w	r2, r0, r2
 800d0c0:	1a9b      	subs	r3, r3, r2
 800d0c2:	440b      	add	r3, r1
 800d0c4:	4619      	mov	r1, r3
 800d0c6:	68f8      	ldr	r0, [r7, #12]
 800d0c8:	f7ff fe3d 	bl	800cd46 <ld_clust>
 800d0cc:	4602      	mov	r2, r0
 800d0ce:	693b      	ldr	r3, [r7, #16]
 800d0d0:	609a      	str	r2, [r3, #8]
 800d0d2:	e7bb      	b.n	800d04c <follow_path+0x50>
 800d0d4:	bf00      	nop
 800d0d6:	e002      	b.n	800d0de <follow_path+0xe2>
 800d0d8:	bf00      	nop
 800d0da:	e000      	b.n	800d0de <follow_path+0xe2>
 800d0dc:	bf00      	nop
 800d0de:	7dfb      	ldrb	r3, [r7, #23]
 800d0e0:	4618      	mov	r0, r3
 800d0e2:	3718      	adds	r7, #24
 800d0e4:	46bd      	mov	sp, r7
 800d0e6:	bd80      	pop	{r7, pc}

0800d0e8 <get_ldnumber>:
 800d0e8:	b480      	push	{r7}
 800d0ea:	b087      	sub	sp, #28
 800d0ec:	af00      	add	r7, sp, #0
 800d0ee:	6078      	str	r0, [r7, #4]
 800d0f0:	f04f 33ff 	mov.w	r3, #4294967295
 800d0f4:	613b      	str	r3, [r7, #16]
 800d0f6:	687b      	ldr	r3, [r7, #4]
 800d0f8:	681b      	ldr	r3, [r3, #0]
 800d0fa:	2b00      	cmp	r3, #0
 800d0fc:	d031      	beq.n	800d162 <get_ldnumber+0x7a>
 800d0fe:	687b      	ldr	r3, [r7, #4]
 800d100:	681b      	ldr	r3, [r3, #0]
 800d102:	617b      	str	r3, [r7, #20]
 800d104:	e002      	b.n	800d10c <get_ldnumber+0x24>
 800d106:	697b      	ldr	r3, [r7, #20]
 800d108:	3301      	adds	r3, #1
 800d10a:	617b      	str	r3, [r7, #20]
 800d10c:	697b      	ldr	r3, [r7, #20]
 800d10e:	781b      	ldrb	r3, [r3, #0]
 800d110:	2b20      	cmp	r3, #32
 800d112:	d903      	bls.n	800d11c <get_ldnumber+0x34>
 800d114:	697b      	ldr	r3, [r7, #20]
 800d116:	781b      	ldrb	r3, [r3, #0]
 800d118:	2b3a      	cmp	r3, #58	@ 0x3a
 800d11a:	d1f4      	bne.n	800d106 <get_ldnumber+0x1e>
 800d11c:	697b      	ldr	r3, [r7, #20]
 800d11e:	781b      	ldrb	r3, [r3, #0]
 800d120:	2b3a      	cmp	r3, #58	@ 0x3a
 800d122:	d11c      	bne.n	800d15e <get_ldnumber+0x76>
 800d124:	687b      	ldr	r3, [r7, #4]
 800d126:	681b      	ldr	r3, [r3, #0]
 800d128:	60fb      	str	r3, [r7, #12]
 800d12a:	68fb      	ldr	r3, [r7, #12]
 800d12c:	1c5a      	adds	r2, r3, #1
 800d12e:	60fa      	str	r2, [r7, #12]
 800d130:	781b      	ldrb	r3, [r3, #0]
 800d132:	3b30      	subs	r3, #48	@ 0x30
 800d134:	60bb      	str	r3, [r7, #8]
 800d136:	68bb      	ldr	r3, [r7, #8]
 800d138:	2b09      	cmp	r3, #9
 800d13a:	d80e      	bhi.n	800d15a <get_ldnumber+0x72>
 800d13c:	68fa      	ldr	r2, [r7, #12]
 800d13e:	697b      	ldr	r3, [r7, #20]
 800d140:	429a      	cmp	r2, r3
 800d142:	d10a      	bne.n	800d15a <get_ldnumber+0x72>
 800d144:	68bb      	ldr	r3, [r7, #8]
 800d146:	2b00      	cmp	r3, #0
 800d148:	d107      	bne.n	800d15a <get_ldnumber+0x72>
 800d14a:	68bb      	ldr	r3, [r7, #8]
 800d14c:	613b      	str	r3, [r7, #16]
 800d14e:	697b      	ldr	r3, [r7, #20]
 800d150:	3301      	adds	r3, #1
 800d152:	617b      	str	r3, [r7, #20]
 800d154:	687b      	ldr	r3, [r7, #4]
 800d156:	697a      	ldr	r2, [r7, #20]
 800d158:	601a      	str	r2, [r3, #0]
 800d15a:	693b      	ldr	r3, [r7, #16]
 800d15c:	e002      	b.n	800d164 <get_ldnumber+0x7c>
 800d15e:	2300      	movs	r3, #0
 800d160:	613b      	str	r3, [r7, #16]
 800d162:	693b      	ldr	r3, [r7, #16]
 800d164:	4618      	mov	r0, r3
 800d166:	371c      	adds	r7, #28
 800d168:	46bd      	mov	sp, r7
 800d16a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d16e:	4770      	bx	lr

0800d170 <check_fs>:
 800d170:	b580      	push	{r7, lr}
 800d172:	b082      	sub	sp, #8
 800d174:	af00      	add	r7, sp, #0
 800d176:	6078      	str	r0, [r7, #4]
 800d178:	6039      	str	r1, [r7, #0]
 800d17a:	687b      	ldr	r3, [r7, #4]
 800d17c:	2200      	movs	r2, #0
 800d17e:	70da      	strb	r2, [r3, #3]
 800d180:	687b      	ldr	r3, [r7, #4]
 800d182:	f04f 32ff 	mov.w	r2, #4294967295
 800d186:	631a      	str	r2, [r3, #48]	@ 0x30
 800d188:	6839      	ldr	r1, [r7, #0]
 800d18a:	6878      	ldr	r0, [r7, #4]
 800d18c:	f7ff f856 	bl	800c23c <move_window>
 800d190:	4603      	mov	r3, r0
 800d192:	2b00      	cmp	r3, #0
 800d194:	d001      	beq.n	800d19a <check_fs+0x2a>
 800d196:	2304      	movs	r3, #4
 800d198:	e038      	b.n	800d20c <check_fs+0x9c>
 800d19a:	687b      	ldr	r3, [r7, #4]
 800d19c:	3334      	adds	r3, #52	@ 0x34
 800d19e:	f503 73ff 	add.w	r3, r3, #510	@ 0x1fe
 800d1a2:	4618      	mov	r0, r3
 800d1a4:	f7fe fd9a 	bl	800bcdc <ld_word>
 800d1a8:	4603      	mov	r3, r0
 800d1aa:	461a      	mov	r2, r3
 800d1ac:	f64a 2355 	movw	r3, #43605	@ 0xaa55
 800d1b0:	429a      	cmp	r2, r3
 800d1b2:	d001      	beq.n	800d1b8 <check_fs+0x48>
 800d1b4:	2303      	movs	r3, #3
 800d1b6:	e029      	b.n	800d20c <check_fs+0x9c>
 800d1b8:	687b      	ldr	r3, [r7, #4]
 800d1ba:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800d1be:	2be9      	cmp	r3, #233	@ 0xe9
 800d1c0:	d009      	beq.n	800d1d6 <check_fs+0x66>
 800d1c2:	687b      	ldr	r3, [r7, #4]
 800d1c4:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800d1c8:	2beb      	cmp	r3, #235	@ 0xeb
 800d1ca:	d11e      	bne.n	800d20a <check_fs+0x9a>
 800d1cc:	687b      	ldr	r3, [r7, #4]
 800d1ce:	f893 3036 	ldrb.w	r3, [r3, #54]	@ 0x36
 800d1d2:	2b90      	cmp	r3, #144	@ 0x90
 800d1d4:	d119      	bne.n	800d20a <check_fs+0x9a>
 800d1d6:	687b      	ldr	r3, [r7, #4]
 800d1d8:	3334      	adds	r3, #52	@ 0x34
 800d1da:	3336      	adds	r3, #54	@ 0x36
 800d1dc:	4618      	mov	r0, r3
 800d1de:	f7fe fd95 	bl	800bd0c <ld_dword>
 800d1e2:	4603      	mov	r3, r0
 800d1e4:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 800d1e8:	4a0a      	ldr	r2, [pc, #40]	@ (800d214 <check_fs+0xa4>)
 800d1ea:	4293      	cmp	r3, r2
 800d1ec:	d101      	bne.n	800d1f2 <check_fs+0x82>
 800d1ee:	2300      	movs	r3, #0
 800d1f0:	e00c      	b.n	800d20c <check_fs+0x9c>
 800d1f2:	687b      	ldr	r3, [r7, #4]
 800d1f4:	3334      	adds	r3, #52	@ 0x34
 800d1f6:	3352      	adds	r3, #82	@ 0x52
 800d1f8:	4618      	mov	r0, r3
 800d1fa:	f7fe fd87 	bl	800bd0c <ld_dword>
 800d1fe:	4603      	mov	r3, r0
 800d200:	4a05      	ldr	r2, [pc, #20]	@ (800d218 <check_fs+0xa8>)
 800d202:	4293      	cmp	r3, r2
 800d204:	d101      	bne.n	800d20a <check_fs+0x9a>
 800d206:	2300      	movs	r3, #0
 800d208:	e000      	b.n	800d20c <check_fs+0x9c>
 800d20a:	2302      	movs	r3, #2
 800d20c:	4618      	mov	r0, r3
 800d20e:	3708      	adds	r7, #8
 800d210:	46bd      	mov	sp, r7
 800d212:	bd80      	pop	{r7, pc}
 800d214:	00544146 	.word	0x00544146
 800d218:	33544146 	.word	0x33544146

0800d21c <find_volume>:
 800d21c:	b580      	push	{r7, lr}
 800d21e:	b096      	sub	sp, #88	@ 0x58
 800d220:	af00      	add	r7, sp, #0
 800d222:	60f8      	str	r0, [r7, #12]
 800d224:	60b9      	str	r1, [r7, #8]
 800d226:	4613      	mov	r3, r2
 800d228:	71fb      	strb	r3, [r7, #7]
 800d22a:	68bb      	ldr	r3, [r7, #8]
 800d22c:	2200      	movs	r2, #0
 800d22e:	601a      	str	r2, [r3, #0]
 800d230:	68f8      	ldr	r0, [r7, #12]
 800d232:	f7ff ff59 	bl	800d0e8 <get_ldnumber>
 800d236:	63f8      	str	r0, [r7, #60]	@ 0x3c
 800d238:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800d23a:	2b00      	cmp	r3, #0
 800d23c:	da01      	bge.n	800d242 <find_volume+0x26>
 800d23e:	230b      	movs	r3, #11
 800d240:	e262      	b.n	800d708 <find_volume+0x4ec>
 800d242:	4a9f      	ldr	r2, [pc, #636]	@ (800d4c0 <find_volume+0x2a4>)
 800d244:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800d246:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d24a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800d24c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d24e:	2b00      	cmp	r3, #0
 800d250:	d101      	bne.n	800d256 <find_volume+0x3a>
 800d252:	230c      	movs	r3, #12
 800d254:	e258      	b.n	800d708 <find_volume+0x4ec>
 800d256:	68bb      	ldr	r3, [r7, #8]
 800d258:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800d25a:	601a      	str	r2, [r3, #0]
 800d25c:	79fb      	ldrb	r3, [r7, #7]
 800d25e:	f023 0301 	bic.w	r3, r3, #1
 800d262:	71fb      	strb	r3, [r7, #7]
 800d264:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d266:	781b      	ldrb	r3, [r3, #0]
 800d268:	2b00      	cmp	r3, #0
 800d26a:	d01a      	beq.n	800d2a2 <find_volume+0x86>
 800d26c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d26e:	785b      	ldrb	r3, [r3, #1]
 800d270:	4618      	mov	r0, r3
 800d272:	f7fe fc95 	bl	800bba0 <disk_status>
 800d276:	4603      	mov	r3, r0
 800d278:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 800d27c:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 800d280:	f003 0301 	and.w	r3, r3, #1
 800d284:	2b00      	cmp	r3, #0
 800d286:	d10c      	bne.n	800d2a2 <find_volume+0x86>
 800d288:	79fb      	ldrb	r3, [r7, #7]
 800d28a:	2b00      	cmp	r3, #0
 800d28c:	d007      	beq.n	800d29e <find_volume+0x82>
 800d28e:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 800d292:	f003 0304 	and.w	r3, r3, #4
 800d296:	2b00      	cmp	r3, #0
 800d298:	d001      	beq.n	800d29e <find_volume+0x82>
 800d29a:	230a      	movs	r3, #10
 800d29c:	e234      	b.n	800d708 <find_volume+0x4ec>
 800d29e:	2300      	movs	r3, #0
 800d2a0:	e232      	b.n	800d708 <find_volume+0x4ec>
 800d2a2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d2a4:	2200      	movs	r2, #0
 800d2a6:	701a      	strb	r2, [r3, #0]
 800d2a8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800d2aa:	b2da      	uxtb	r2, r3
 800d2ac:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d2ae:	705a      	strb	r2, [r3, #1]
 800d2b0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d2b2:	785b      	ldrb	r3, [r3, #1]
 800d2b4:	4618      	mov	r0, r3
 800d2b6:	f7fe fc8d 	bl	800bbd4 <disk_initialize>
 800d2ba:	4603      	mov	r3, r0
 800d2bc:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 800d2c0:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 800d2c4:	f003 0301 	and.w	r3, r3, #1
 800d2c8:	2b00      	cmp	r3, #0
 800d2ca:	d001      	beq.n	800d2d0 <find_volume+0xb4>
 800d2cc:	2303      	movs	r3, #3
 800d2ce:	e21b      	b.n	800d708 <find_volume+0x4ec>
 800d2d0:	79fb      	ldrb	r3, [r7, #7]
 800d2d2:	2b00      	cmp	r3, #0
 800d2d4:	d007      	beq.n	800d2e6 <find_volume+0xca>
 800d2d6:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 800d2da:	f003 0304 	and.w	r3, r3, #4
 800d2de:	2b00      	cmp	r3, #0
 800d2e0:	d001      	beq.n	800d2e6 <find_volume+0xca>
 800d2e2:	230a      	movs	r3, #10
 800d2e4:	e210      	b.n	800d708 <find_volume+0x4ec>
 800d2e6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d2e8:	7858      	ldrb	r0, [r3, #1]
 800d2ea:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d2ec:	330c      	adds	r3, #12
 800d2ee:	461a      	mov	r2, r3
 800d2f0:	2102      	movs	r1, #2
 800d2f2:	f7fe fcd5 	bl	800bca0 <disk_ioctl>
 800d2f6:	4603      	mov	r3, r0
 800d2f8:	2b00      	cmp	r3, #0
 800d2fa:	d001      	beq.n	800d300 <find_volume+0xe4>
 800d2fc:	2301      	movs	r3, #1
 800d2fe:	e203      	b.n	800d708 <find_volume+0x4ec>
 800d300:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d302:	899b      	ldrh	r3, [r3, #12]
 800d304:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800d308:	d80d      	bhi.n	800d326 <find_volume+0x10a>
 800d30a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d30c:	899b      	ldrh	r3, [r3, #12]
 800d30e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800d312:	d308      	bcc.n	800d326 <find_volume+0x10a>
 800d314:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d316:	899b      	ldrh	r3, [r3, #12]
 800d318:	461a      	mov	r2, r3
 800d31a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d31c:	899b      	ldrh	r3, [r3, #12]
 800d31e:	3b01      	subs	r3, #1
 800d320:	4013      	ands	r3, r2
 800d322:	2b00      	cmp	r3, #0
 800d324:	d001      	beq.n	800d32a <find_volume+0x10e>
 800d326:	2301      	movs	r3, #1
 800d328:	e1ee      	b.n	800d708 <find_volume+0x4ec>
 800d32a:	2300      	movs	r3, #0
 800d32c:	653b      	str	r3, [r7, #80]	@ 0x50
 800d32e:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 800d330:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 800d332:	f7ff ff1d 	bl	800d170 <check_fs>
 800d336:	4603      	mov	r3, r0
 800d338:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
 800d33c:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800d340:	2b02      	cmp	r3, #2
 800d342:	d149      	bne.n	800d3d8 <find_volume+0x1bc>
 800d344:	2300      	movs	r3, #0
 800d346:	643b      	str	r3, [r7, #64]	@ 0x40
 800d348:	e01e      	b.n	800d388 <find_volume+0x16c>
 800d34a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d34c:	f103 0234 	add.w	r2, r3, #52	@ 0x34
 800d350:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800d352:	011b      	lsls	r3, r3, #4
 800d354:	f503 73df 	add.w	r3, r3, #446	@ 0x1be
 800d358:	4413      	add	r3, r2
 800d35a:	633b      	str	r3, [r7, #48]	@ 0x30
 800d35c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d35e:	3304      	adds	r3, #4
 800d360:	781b      	ldrb	r3, [r3, #0]
 800d362:	2b00      	cmp	r3, #0
 800d364:	d006      	beq.n	800d374 <find_volume+0x158>
 800d366:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d368:	3308      	adds	r3, #8
 800d36a:	4618      	mov	r0, r3
 800d36c:	f7fe fcce 	bl	800bd0c <ld_dword>
 800d370:	4602      	mov	r2, r0
 800d372:	e000      	b.n	800d376 <find_volume+0x15a>
 800d374:	2200      	movs	r2, #0
 800d376:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800d378:	009b      	lsls	r3, r3, #2
 800d37a:	3358      	adds	r3, #88	@ 0x58
 800d37c:	443b      	add	r3, r7
 800d37e:	f843 2c44 	str.w	r2, [r3, #-68]
 800d382:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800d384:	3301      	adds	r3, #1
 800d386:	643b      	str	r3, [r7, #64]	@ 0x40
 800d388:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800d38a:	2b03      	cmp	r3, #3
 800d38c:	d9dd      	bls.n	800d34a <find_volume+0x12e>
 800d38e:	2300      	movs	r3, #0
 800d390:	643b      	str	r3, [r7, #64]	@ 0x40
 800d392:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800d394:	2b00      	cmp	r3, #0
 800d396:	d002      	beq.n	800d39e <find_volume+0x182>
 800d398:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800d39a:	3b01      	subs	r3, #1
 800d39c:	643b      	str	r3, [r7, #64]	@ 0x40
 800d39e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800d3a0:	009b      	lsls	r3, r3, #2
 800d3a2:	3358      	adds	r3, #88	@ 0x58
 800d3a4:	443b      	add	r3, r7
 800d3a6:	f853 3c44 	ldr.w	r3, [r3, #-68]
 800d3aa:	653b      	str	r3, [r7, #80]	@ 0x50
 800d3ac:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800d3ae:	2b00      	cmp	r3, #0
 800d3b0:	d005      	beq.n	800d3be <find_volume+0x1a2>
 800d3b2:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 800d3b4:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 800d3b6:	f7ff fedb 	bl	800d170 <check_fs>
 800d3ba:	4603      	mov	r3, r0
 800d3bc:	e000      	b.n	800d3c0 <find_volume+0x1a4>
 800d3be:	2303      	movs	r3, #3
 800d3c0:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
 800d3c4:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800d3c8:	2b01      	cmp	r3, #1
 800d3ca:	d905      	bls.n	800d3d8 <find_volume+0x1bc>
 800d3cc:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800d3ce:	3301      	adds	r3, #1
 800d3d0:	643b      	str	r3, [r7, #64]	@ 0x40
 800d3d2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800d3d4:	2b03      	cmp	r3, #3
 800d3d6:	d9e2      	bls.n	800d39e <find_volume+0x182>
 800d3d8:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800d3dc:	2b04      	cmp	r3, #4
 800d3de:	d101      	bne.n	800d3e4 <find_volume+0x1c8>
 800d3e0:	2301      	movs	r3, #1
 800d3e2:	e191      	b.n	800d708 <find_volume+0x4ec>
 800d3e4:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800d3e8:	2b01      	cmp	r3, #1
 800d3ea:	d901      	bls.n	800d3f0 <find_volume+0x1d4>
 800d3ec:	230d      	movs	r3, #13
 800d3ee:	e18b      	b.n	800d708 <find_volume+0x4ec>
 800d3f0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d3f2:	3334      	adds	r3, #52	@ 0x34
 800d3f4:	330b      	adds	r3, #11
 800d3f6:	4618      	mov	r0, r3
 800d3f8:	f7fe fc70 	bl	800bcdc <ld_word>
 800d3fc:	4603      	mov	r3, r0
 800d3fe:	461a      	mov	r2, r3
 800d400:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d402:	899b      	ldrh	r3, [r3, #12]
 800d404:	429a      	cmp	r2, r3
 800d406:	d001      	beq.n	800d40c <find_volume+0x1f0>
 800d408:	230d      	movs	r3, #13
 800d40a:	e17d      	b.n	800d708 <find_volume+0x4ec>
 800d40c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d40e:	3334      	adds	r3, #52	@ 0x34
 800d410:	3316      	adds	r3, #22
 800d412:	4618      	mov	r0, r3
 800d414:	f7fe fc62 	bl	800bcdc <ld_word>
 800d418:	4603      	mov	r3, r0
 800d41a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800d41c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800d41e:	2b00      	cmp	r3, #0
 800d420:	d106      	bne.n	800d430 <find_volume+0x214>
 800d422:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d424:	3334      	adds	r3, #52	@ 0x34
 800d426:	3324      	adds	r3, #36	@ 0x24
 800d428:	4618      	mov	r0, r3
 800d42a:	f7fe fc6f 	bl	800bd0c <ld_dword>
 800d42e:	64f8      	str	r0, [r7, #76]	@ 0x4c
 800d430:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d432:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800d434:	61da      	str	r2, [r3, #28]
 800d436:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d438:	f893 2044 	ldrb.w	r2, [r3, #68]	@ 0x44
 800d43c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d43e:	709a      	strb	r2, [r3, #2]
 800d440:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d442:	789b      	ldrb	r3, [r3, #2]
 800d444:	2b01      	cmp	r3, #1
 800d446:	d005      	beq.n	800d454 <find_volume+0x238>
 800d448:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d44a:	789b      	ldrb	r3, [r3, #2]
 800d44c:	2b02      	cmp	r3, #2
 800d44e:	d001      	beq.n	800d454 <find_volume+0x238>
 800d450:	230d      	movs	r3, #13
 800d452:	e159      	b.n	800d708 <find_volume+0x4ec>
 800d454:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d456:	789b      	ldrb	r3, [r3, #2]
 800d458:	461a      	mov	r2, r3
 800d45a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800d45c:	fb02 f303 	mul.w	r3, r2, r3
 800d460:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800d462:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d464:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800d468:	461a      	mov	r2, r3
 800d46a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d46c:	815a      	strh	r2, [r3, #10]
 800d46e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d470:	895b      	ldrh	r3, [r3, #10]
 800d472:	2b00      	cmp	r3, #0
 800d474:	d008      	beq.n	800d488 <find_volume+0x26c>
 800d476:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d478:	895b      	ldrh	r3, [r3, #10]
 800d47a:	461a      	mov	r2, r3
 800d47c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d47e:	895b      	ldrh	r3, [r3, #10]
 800d480:	3b01      	subs	r3, #1
 800d482:	4013      	ands	r3, r2
 800d484:	2b00      	cmp	r3, #0
 800d486:	d001      	beq.n	800d48c <find_volume+0x270>
 800d488:	230d      	movs	r3, #13
 800d48a:	e13d      	b.n	800d708 <find_volume+0x4ec>
 800d48c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d48e:	3334      	adds	r3, #52	@ 0x34
 800d490:	3311      	adds	r3, #17
 800d492:	4618      	mov	r0, r3
 800d494:	f7fe fc22 	bl	800bcdc <ld_word>
 800d498:	4603      	mov	r3, r0
 800d49a:	461a      	mov	r2, r3
 800d49c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d49e:	811a      	strh	r2, [r3, #8]
 800d4a0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d4a2:	891b      	ldrh	r3, [r3, #8]
 800d4a4:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800d4a6:	8992      	ldrh	r2, [r2, #12]
 800d4a8:	0952      	lsrs	r2, r2, #5
 800d4aa:	b292      	uxth	r2, r2
 800d4ac:	fbb3 f1f2 	udiv	r1, r3, r2
 800d4b0:	fb01 f202 	mul.w	r2, r1, r2
 800d4b4:	1a9b      	subs	r3, r3, r2
 800d4b6:	b29b      	uxth	r3, r3
 800d4b8:	2b00      	cmp	r3, #0
 800d4ba:	d003      	beq.n	800d4c4 <find_volume+0x2a8>
 800d4bc:	230d      	movs	r3, #13
 800d4be:	e123      	b.n	800d708 <find_volume+0x4ec>
 800d4c0:	200048b0 	.word	0x200048b0
 800d4c4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d4c6:	3334      	adds	r3, #52	@ 0x34
 800d4c8:	3313      	adds	r3, #19
 800d4ca:	4618      	mov	r0, r3
 800d4cc:	f7fe fc06 	bl	800bcdc <ld_word>
 800d4d0:	4603      	mov	r3, r0
 800d4d2:	64bb      	str	r3, [r7, #72]	@ 0x48
 800d4d4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800d4d6:	2b00      	cmp	r3, #0
 800d4d8:	d106      	bne.n	800d4e8 <find_volume+0x2cc>
 800d4da:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d4dc:	3334      	adds	r3, #52	@ 0x34
 800d4de:	3320      	adds	r3, #32
 800d4e0:	4618      	mov	r0, r3
 800d4e2:	f7fe fc13 	bl	800bd0c <ld_dword>
 800d4e6:	64b8      	str	r0, [r7, #72]	@ 0x48
 800d4e8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d4ea:	3334      	adds	r3, #52	@ 0x34
 800d4ec:	330e      	adds	r3, #14
 800d4ee:	4618      	mov	r0, r3
 800d4f0:	f7fe fbf4 	bl	800bcdc <ld_word>
 800d4f4:	4603      	mov	r3, r0
 800d4f6:	85fb      	strh	r3, [r7, #46]	@ 0x2e
 800d4f8:	8dfb      	ldrh	r3, [r7, #46]	@ 0x2e
 800d4fa:	2b00      	cmp	r3, #0
 800d4fc:	d101      	bne.n	800d502 <find_volume+0x2e6>
 800d4fe:	230d      	movs	r3, #13
 800d500:	e102      	b.n	800d708 <find_volume+0x4ec>
 800d502:	8dfa      	ldrh	r2, [r7, #46]	@ 0x2e
 800d504:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800d506:	4413      	add	r3, r2
 800d508:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800d50a:	8911      	ldrh	r1, [r2, #8]
 800d50c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800d50e:	8992      	ldrh	r2, [r2, #12]
 800d510:	0952      	lsrs	r2, r2, #5
 800d512:	b292      	uxth	r2, r2
 800d514:	fbb1 f2f2 	udiv	r2, r1, r2
 800d518:	b292      	uxth	r2, r2
 800d51a:	4413      	add	r3, r2
 800d51c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800d51e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800d520:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d522:	429a      	cmp	r2, r3
 800d524:	d201      	bcs.n	800d52a <find_volume+0x30e>
 800d526:	230d      	movs	r3, #13
 800d528:	e0ee      	b.n	800d708 <find_volume+0x4ec>
 800d52a:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800d52c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d52e:	1ad3      	subs	r3, r2, r3
 800d530:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800d532:	8952      	ldrh	r2, [r2, #10]
 800d534:	fbb3 f3f2 	udiv	r3, r3, r2
 800d538:	627b      	str	r3, [r7, #36]	@ 0x24
 800d53a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d53c:	2b00      	cmp	r3, #0
 800d53e:	d101      	bne.n	800d544 <find_volume+0x328>
 800d540:	230d      	movs	r3, #13
 800d542:	e0e1      	b.n	800d708 <find_volume+0x4ec>
 800d544:	2303      	movs	r3, #3
 800d546:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
 800d54a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d54c:	f64f 72f5 	movw	r2, #65525	@ 0xfff5
 800d550:	4293      	cmp	r3, r2
 800d552:	d802      	bhi.n	800d55a <find_volume+0x33e>
 800d554:	2302      	movs	r3, #2
 800d556:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
 800d55a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d55c:	f640 72f5 	movw	r2, #4085	@ 0xff5
 800d560:	4293      	cmp	r3, r2
 800d562:	d802      	bhi.n	800d56a <find_volume+0x34e>
 800d564:	2301      	movs	r3, #1
 800d566:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
 800d56a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d56c:	1c9a      	adds	r2, r3, #2
 800d56e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d570:	619a      	str	r2, [r3, #24]
 800d572:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d574:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 800d576:	621a      	str	r2, [r3, #32]
 800d578:	8dfa      	ldrh	r2, [r7, #46]	@ 0x2e
 800d57a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800d57c:	441a      	add	r2, r3
 800d57e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d580:	625a      	str	r2, [r3, #36]	@ 0x24
 800d582:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 800d584:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d586:	441a      	add	r2, r3
 800d588:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d58a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800d58c:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800d590:	2b03      	cmp	r3, #3
 800d592:	d11e      	bne.n	800d5d2 <find_volume+0x3b6>
 800d594:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d596:	3334      	adds	r3, #52	@ 0x34
 800d598:	332a      	adds	r3, #42	@ 0x2a
 800d59a:	4618      	mov	r0, r3
 800d59c:	f7fe fb9e 	bl	800bcdc <ld_word>
 800d5a0:	4603      	mov	r3, r0
 800d5a2:	2b00      	cmp	r3, #0
 800d5a4:	d001      	beq.n	800d5aa <find_volume+0x38e>
 800d5a6:	230d      	movs	r3, #13
 800d5a8:	e0ae      	b.n	800d708 <find_volume+0x4ec>
 800d5aa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d5ac:	891b      	ldrh	r3, [r3, #8]
 800d5ae:	2b00      	cmp	r3, #0
 800d5b0:	d001      	beq.n	800d5b6 <find_volume+0x39a>
 800d5b2:	230d      	movs	r3, #13
 800d5b4:	e0a8      	b.n	800d708 <find_volume+0x4ec>
 800d5b6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d5b8:	3334      	adds	r3, #52	@ 0x34
 800d5ba:	332c      	adds	r3, #44	@ 0x2c
 800d5bc:	4618      	mov	r0, r3
 800d5be:	f7fe fba5 	bl	800bd0c <ld_dword>
 800d5c2:	4602      	mov	r2, r0
 800d5c4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d5c6:	629a      	str	r2, [r3, #40]	@ 0x28
 800d5c8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d5ca:	699b      	ldr	r3, [r3, #24]
 800d5cc:	009b      	lsls	r3, r3, #2
 800d5ce:	647b      	str	r3, [r7, #68]	@ 0x44
 800d5d0:	e01f      	b.n	800d612 <find_volume+0x3f6>
 800d5d2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d5d4:	891b      	ldrh	r3, [r3, #8]
 800d5d6:	2b00      	cmp	r3, #0
 800d5d8:	d101      	bne.n	800d5de <find_volume+0x3c2>
 800d5da:	230d      	movs	r3, #13
 800d5dc:	e094      	b.n	800d708 <find_volume+0x4ec>
 800d5de:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d5e0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800d5e2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800d5e4:	441a      	add	r2, r3
 800d5e6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d5e8:	629a      	str	r2, [r3, #40]	@ 0x28
 800d5ea:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800d5ee:	2b02      	cmp	r3, #2
 800d5f0:	d103      	bne.n	800d5fa <find_volume+0x3de>
 800d5f2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d5f4:	699b      	ldr	r3, [r3, #24]
 800d5f6:	005b      	lsls	r3, r3, #1
 800d5f8:	e00a      	b.n	800d610 <find_volume+0x3f4>
 800d5fa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d5fc:	699a      	ldr	r2, [r3, #24]
 800d5fe:	4613      	mov	r3, r2
 800d600:	005b      	lsls	r3, r3, #1
 800d602:	4413      	add	r3, r2
 800d604:	085a      	lsrs	r2, r3, #1
 800d606:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d608:	699b      	ldr	r3, [r3, #24]
 800d60a:	f003 0301 	and.w	r3, r3, #1
 800d60e:	4413      	add	r3, r2
 800d610:	647b      	str	r3, [r7, #68]	@ 0x44
 800d612:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d614:	69da      	ldr	r2, [r3, #28]
 800d616:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d618:	899b      	ldrh	r3, [r3, #12]
 800d61a:	4619      	mov	r1, r3
 800d61c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800d61e:	440b      	add	r3, r1
 800d620:	3b01      	subs	r3, #1
 800d622:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800d624:	8989      	ldrh	r1, [r1, #12]
 800d626:	fbb3 f3f1 	udiv	r3, r3, r1
 800d62a:	429a      	cmp	r2, r3
 800d62c:	d201      	bcs.n	800d632 <find_volume+0x416>
 800d62e:	230d      	movs	r3, #13
 800d630:	e06a      	b.n	800d708 <find_volume+0x4ec>
 800d632:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d634:	f04f 32ff 	mov.w	r2, #4294967295
 800d638:	615a      	str	r2, [r3, #20]
 800d63a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d63c:	695a      	ldr	r2, [r3, #20]
 800d63e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d640:	611a      	str	r2, [r3, #16]
 800d642:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d644:	2280      	movs	r2, #128	@ 0x80
 800d646:	711a      	strb	r2, [r3, #4]
 800d648:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800d64c:	2b03      	cmp	r3, #3
 800d64e:	d149      	bne.n	800d6e4 <find_volume+0x4c8>
 800d650:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d652:	3334      	adds	r3, #52	@ 0x34
 800d654:	3330      	adds	r3, #48	@ 0x30
 800d656:	4618      	mov	r0, r3
 800d658:	f7fe fb40 	bl	800bcdc <ld_word>
 800d65c:	4603      	mov	r3, r0
 800d65e:	2b01      	cmp	r3, #1
 800d660:	d140      	bne.n	800d6e4 <find_volume+0x4c8>
 800d662:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800d664:	3301      	adds	r3, #1
 800d666:	4619      	mov	r1, r3
 800d668:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 800d66a:	f7fe fde7 	bl	800c23c <move_window>
 800d66e:	4603      	mov	r3, r0
 800d670:	2b00      	cmp	r3, #0
 800d672:	d137      	bne.n	800d6e4 <find_volume+0x4c8>
 800d674:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d676:	2200      	movs	r2, #0
 800d678:	711a      	strb	r2, [r3, #4]
 800d67a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d67c:	3334      	adds	r3, #52	@ 0x34
 800d67e:	f503 73ff 	add.w	r3, r3, #510	@ 0x1fe
 800d682:	4618      	mov	r0, r3
 800d684:	f7fe fb2a 	bl	800bcdc <ld_word>
 800d688:	4603      	mov	r3, r0
 800d68a:	461a      	mov	r2, r3
 800d68c:	f64a 2355 	movw	r3, #43605	@ 0xaa55
 800d690:	429a      	cmp	r2, r3
 800d692:	d127      	bne.n	800d6e4 <find_volume+0x4c8>
 800d694:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d696:	3334      	adds	r3, #52	@ 0x34
 800d698:	4618      	mov	r0, r3
 800d69a:	f7fe fb37 	bl	800bd0c <ld_dword>
 800d69e:	4603      	mov	r3, r0
 800d6a0:	4a1b      	ldr	r2, [pc, #108]	@ (800d710 <find_volume+0x4f4>)
 800d6a2:	4293      	cmp	r3, r2
 800d6a4:	d11e      	bne.n	800d6e4 <find_volume+0x4c8>
 800d6a6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d6a8:	3334      	adds	r3, #52	@ 0x34
 800d6aa:	f503 73f2 	add.w	r3, r3, #484	@ 0x1e4
 800d6ae:	4618      	mov	r0, r3
 800d6b0:	f7fe fb2c 	bl	800bd0c <ld_dword>
 800d6b4:	4603      	mov	r3, r0
 800d6b6:	4a17      	ldr	r2, [pc, #92]	@ (800d714 <find_volume+0x4f8>)
 800d6b8:	4293      	cmp	r3, r2
 800d6ba:	d113      	bne.n	800d6e4 <find_volume+0x4c8>
 800d6bc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d6be:	3334      	adds	r3, #52	@ 0x34
 800d6c0:	f503 73f4 	add.w	r3, r3, #488	@ 0x1e8
 800d6c4:	4618      	mov	r0, r3
 800d6c6:	f7fe fb21 	bl	800bd0c <ld_dword>
 800d6ca:	4602      	mov	r2, r0
 800d6cc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d6ce:	615a      	str	r2, [r3, #20]
 800d6d0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d6d2:	3334      	adds	r3, #52	@ 0x34
 800d6d4:	f503 73f6 	add.w	r3, r3, #492	@ 0x1ec
 800d6d8:	4618      	mov	r0, r3
 800d6da:	f7fe fb17 	bl	800bd0c <ld_dword>
 800d6de:	4602      	mov	r2, r0
 800d6e0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d6e2:	611a      	str	r2, [r3, #16]
 800d6e4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d6e6:	f897 2057 	ldrb.w	r2, [r7, #87]	@ 0x57
 800d6ea:	701a      	strb	r2, [r3, #0]
 800d6ec:	4b0a      	ldr	r3, [pc, #40]	@ (800d718 <find_volume+0x4fc>)
 800d6ee:	881b      	ldrh	r3, [r3, #0]
 800d6f0:	3301      	adds	r3, #1
 800d6f2:	b29a      	uxth	r2, r3
 800d6f4:	4b08      	ldr	r3, [pc, #32]	@ (800d718 <find_volume+0x4fc>)
 800d6f6:	801a      	strh	r2, [r3, #0]
 800d6f8:	4b07      	ldr	r3, [pc, #28]	@ (800d718 <find_volume+0x4fc>)
 800d6fa:	881a      	ldrh	r2, [r3, #0]
 800d6fc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d6fe:	80da      	strh	r2, [r3, #6]
 800d700:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 800d702:	f7fe fd33 	bl	800c16c <clear_lock>
 800d706:	2300      	movs	r3, #0
 800d708:	4618      	mov	r0, r3
 800d70a:	3758      	adds	r7, #88	@ 0x58
 800d70c:	46bd      	mov	sp, r7
 800d70e:	bd80      	pop	{r7, pc}
 800d710:	41615252 	.word	0x41615252
 800d714:	61417272 	.word	0x61417272
 800d718:	200048b4 	.word	0x200048b4

0800d71c <validate>:
 800d71c:	b580      	push	{r7, lr}
 800d71e:	b084      	sub	sp, #16
 800d720:	af00      	add	r7, sp, #0
 800d722:	6078      	str	r0, [r7, #4]
 800d724:	6039      	str	r1, [r7, #0]
 800d726:	2309      	movs	r3, #9
 800d728:	73fb      	strb	r3, [r7, #15]
 800d72a:	687b      	ldr	r3, [r7, #4]
 800d72c:	2b00      	cmp	r3, #0
 800d72e:	d01c      	beq.n	800d76a <validate+0x4e>
 800d730:	687b      	ldr	r3, [r7, #4]
 800d732:	681b      	ldr	r3, [r3, #0]
 800d734:	2b00      	cmp	r3, #0
 800d736:	d018      	beq.n	800d76a <validate+0x4e>
 800d738:	687b      	ldr	r3, [r7, #4]
 800d73a:	681b      	ldr	r3, [r3, #0]
 800d73c:	781b      	ldrb	r3, [r3, #0]
 800d73e:	2b00      	cmp	r3, #0
 800d740:	d013      	beq.n	800d76a <validate+0x4e>
 800d742:	687b      	ldr	r3, [r7, #4]
 800d744:	889a      	ldrh	r2, [r3, #4]
 800d746:	687b      	ldr	r3, [r7, #4]
 800d748:	681b      	ldr	r3, [r3, #0]
 800d74a:	88db      	ldrh	r3, [r3, #6]
 800d74c:	429a      	cmp	r2, r3
 800d74e:	d10c      	bne.n	800d76a <validate+0x4e>
 800d750:	687b      	ldr	r3, [r7, #4]
 800d752:	681b      	ldr	r3, [r3, #0]
 800d754:	785b      	ldrb	r3, [r3, #1]
 800d756:	4618      	mov	r0, r3
 800d758:	f7fe fa22 	bl	800bba0 <disk_status>
 800d75c:	4603      	mov	r3, r0
 800d75e:	f003 0301 	and.w	r3, r3, #1
 800d762:	2b00      	cmp	r3, #0
 800d764:	d101      	bne.n	800d76a <validate+0x4e>
 800d766:	2300      	movs	r3, #0
 800d768:	73fb      	strb	r3, [r7, #15]
 800d76a:	7bfb      	ldrb	r3, [r7, #15]
 800d76c:	2b00      	cmp	r3, #0
 800d76e:	d102      	bne.n	800d776 <validate+0x5a>
 800d770:	687b      	ldr	r3, [r7, #4]
 800d772:	681b      	ldr	r3, [r3, #0]
 800d774:	e000      	b.n	800d778 <validate+0x5c>
 800d776:	2300      	movs	r3, #0
 800d778:	683a      	ldr	r2, [r7, #0]
 800d77a:	6013      	str	r3, [r2, #0]
 800d77c:	7bfb      	ldrb	r3, [r7, #15]
 800d77e:	4618      	mov	r0, r3
 800d780:	3710      	adds	r7, #16
 800d782:	46bd      	mov	sp, r7
 800d784:	bd80      	pop	{r7, pc}
	...

0800d788 <f_mount>:
 800d788:	b580      	push	{r7, lr}
 800d78a:	b088      	sub	sp, #32
 800d78c:	af00      	add	r7, sp, #0
 800d78e:	60f8      	str	r0, [r7, #12]
 800d790:	60b9      	str	r1, [r7, #8]
 800d792:	4613      	mov	r3, r2
 800d794:	71fb      	strb	r3, [r7, #7]
 800d796:	68bb      	ldr	r3, [r7, #8]
 800d798:	613b      	str	r3, [r7, #16]
 800d79a:	f107 0310 	add.w	r3, r7, #16
 800d79e:	4618      	mov	r0, r3
 800d7a0:	f7ff fca2 	bl	800d0e8 <get_ldnumber>
 800d7a4:	61f8      	str	r0, [r7, #28]
 800d7a6:	69fb      	ldr	r3, [r7, #28]
 800d7a8:	2b00      	cmp	r3, #0
 800d7aa:	da01      	bge.n	800d7b0 <f_mount+0x28>
 800d7ac:	230b      	movs	r3, #11
 800d7ae:	e02b      	b.n	800d808 <f_mount+0x80>
 800d7b0:	4a17      	ldr	r2, [pc, #92]	@ (800d810 <f_mount+0x88>)
 800d7b2:	69fb      	ldr	r3, [r7, #28]
 800d7b4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d7b8:	61bb      	str	r3, [r7, #24]
 800d7ba:	69bb      	ldr	r3, [r7, #24]
 800d7bc:	2b00      	cmp	r3, #0
 800d7be:	d005      	beq.n	800d7cc <f_mount+0x44>
 800d7c0:	69b8      	ldr	r0, [r7, #24]
 800d7c2:	f7fe fcd3 	bl	800c16c <clear_lock>
 800d7c6:	69bb      	ldr	r3, [r7, #24]
 800d7c8:	2200      	movs	r2, #0
 800d7ca:	701a      	strb	r2, [r3, #0]
 800d7cc:	68fb      	ldr	r3, [r7, #12]
 800d7ce:	2b00      	cmp	r3, #0
 800d7d0:	d002      	beq.n	800d7d8 <f_mount+0x50>
 800d7d2:	68fb      	ldr	r3, [r7, #12]
 800d7d4:	2200      	movs	r2, #0
 800d7d6:	701a      	strb	r2, [r3, #0]
 800d7d8:	68fa      	ldr	r2, [r7, #12]
 800d7da:	490d      	ldr	r1, [pc, #52]	@ (800d810 <f_mount+0x88>)
 800d7dc:	69fb      	ldr	r3, [r7, #28]
 800d7de:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800d7e2:	68fb      	ldr	r3, [r7, #12]
 800d7e4:	2b00      	cmp	r3, #0
 800d7e6:	d002      	beq.n	800d7ee <f_mount+0x66>
 800d7e8:	79fb      	ldrb	r3, [r7, #7]
 800d7ea:	2b01      	cmp	r3, #1
 800d7ec:	d001      	beq.n	800d7f2 <f_mount+0x6a>
 800d7ee:	2300      	movs	r3, #0
 800d7f0:	e00a      	b.n	800d808 <f_mount+0x80>
 800d7f2:	f107 010c 	add.w	r1, r7, #12
 800d7f6:	f107 0308 	add.w	r3, r7, #8
 800d7fa:	2200      	movs	r2, #0
 800d7fc:	4618      	mov	r0, r3
 800d7fe:	f7ff fd0d 	bl	800d21c <find_volume>
 800d802:	4603      	mov	r3, r0
 800d804:	75fb      	strb	r3, [r7, #23]
 800d806:	7dfb      	ldrb	r3, [r7, #23]
 800d808:	4618      	mov	r0, r3
 800d80a:	3720      	adds	r7, #32
 800d80c:	46bd      	mov	sp, r7
 800d80e:	bd80      	pop	{r7, pc}
 800d810:	200048b0 	.word	0x200048b0

0800d814 <f_open>:
 800d814:	b580      	push	{r7, lr}
 800d816:	b098      	sub	sp, #96	@ 0x60
 800d818:	af00      	add	r7, sp, #0
 800d81a:	60f8      	str	r0, [r7, #12]
 800d81c:	60b9      	str	r1, [r7, #8]
 800d81e:	4613      	mov	r3, r2
 800d820:	71fb      	strb	r3, [r7, #7]
 800d822:	68fb      	ldr	r3, [r7, #12]
 800d824:	2b00      	cmp	r3, #0
 800d826:	d101      	bne.n	800d82c <f_open+0x18>
 800d828:	2309      	movs	r3, #9
 800d82a:	e1b7      	b.n	800db9c <f_open+0x388>
 800d82c:	79fb      	ldrb	r3, [r7, #7]
 800d82e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800d832:	71fb      	strb	r3, [r7, #7]
 800d834:	79fa      	ldrb	r2, [r7, #7]
 800d836:	f107 0110 	add.w	r1, r7, #16
 800d83a:	f107 0308 	add.w	r3, r7, #8
 800d83e:	4618      	mov	r0, r3
 800d840:	f7ff fcec 	bl	800d21c <find_volume>
 800d844:	4603      	mov	r3, r0
 800d846:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800d84a:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800d84e:	2b00      	cmp	r3, #0
 800d850:	f040 819b 	bne.w	800db8a <f_open+0x376>
 800d854:	693b      	ldr	r3, [r7, #16]
 800d856:	617b      	str	r3, [r7, #20]
 800d858:	68ba      	ldr	r2, [r7, #8]
 800d85a:	f107 0314 	add.w	r3, r7, #20
 800d85e:	4611      	mov	r1, r2
 800d860:	4618      	mov	r0, r3
 800d862:	f7ff fbcb 	bl	800cffc <follow_path>
 800d866:	4603      	mov	r3, r0
 800d868:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800d86c:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800d870:	2b00      	cmp	r3, #0
 800d872:	d118      	bne.n	800d8a6 <f_open+0x92>
 800d874:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 800d878:	b25b      	sxtb	r3, r3
 800d87a:	2b00      	cmp	r3, #0
 800d87c:	da03      	bge.n	800d886 <f_open+0x72>
 800d87e:	2306      	movs	r3, #6
 800d880:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800d884:	e00f      	b.n	800d8a6 <f_open+0x92>
 800d886:	79fb      	ldrb	r3, [r7, #7]
 800d888:	2b01      	cmp	r3, #1
 800d88a:	bf8c      	ite	hi
 800d88c:	2301      	movhi	r3, #1
 800d88e:	2300      	movls	r3, #0
 800d890:	b2db      	uxtb	r3, r3
 800d892:	461a      	mov	r2, r3
 800d894:	f107 0314 	add.w	r3, r7, #20
 800d898:	4611      	mov	r1, r2
 800d89a:	4618      	mov	r0, r3
 800d89c:	f7fe fb1e 	bl	800bedc <chk_lock>
 800d8a0:	4603      	mov	r3, r0
 800d8a2:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800d8a6:	79fb      	ldrb	r3, [r7, #7]
 800d8a8:	f003 031c 	and.w	r3, r3, #28
 800d8ac:	2b00      	cmp	r3, #0
 800d8ae:	d07f      	beq.n	800d9b0 <f_open+0x19c>
 800d8b0:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800d8b4:	2b00      	cmp	r3, #0
 800d8b6:	d017      	beq.n	800d8e8 <f_open+0xd4>
 800d8b8:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800d8bc:	2b04      	cmp	r3, #4
 800d8be:	d10e      	bne.n	800d8de <f_open+0xca>
 800d8c0:	f7fe fb68 	bl	800bf94 <enq_lock>
 800d8c4:	4603      	mov	r3, r0
 800d8c6:	2b00      	cmp	r3, #0
 800d8c8:	d006      	beq.n	800d8d8 <f_open+0xc4>
 800d8ca:	f107 0314 	add.w	r3, r7, #20
 800d8ce:	4618      	mov	r0, r3
 800d8d0:	f7ff facd 	bl	800ce6e <dir_register>
 800d8d4:	4603      	mov	r3, r0
 800d8d6:	e000      	b.n	800d8da <f_open+0xc6>
 800d8d8:	2312      	movs	r3, #18
 800d8da:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800d8de:	79fb      	ldrb	r3, [r7, #7]
 800d8e0:	f043 0308 	orr.w	r3, r3, #8
 800d8e4:	71fb      	strb	r3, [r7, #7]
 800d8e6:	e010      	b.n	800d90a <f_open+0xf6>
 800d8e8:	7ebb      	ldrb	r3, [r7, #26]
 800d8ea:	f003 0311 	and.w	r3, r3, #17
 800d8ee:	2b00      	cmp	r3, #0
 800d8f0:	d003      	beq.n	800d8fa <f_open+0xe6>
 800d8f2:	2307      	movs	r3, #7
 800d8f4:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800d8f8:	e007      	b.n	800d90a <f_open+0xf6>
 800d8fa:	79fb      	ldrb	r3, [r7, #7]
 800d8fc:	f003 0304 	and.w	r3, r3, #4
 800d900:	2b00      	cmp	r3, #0
 800d902:	d002      	beq.n	800d90a <f_open+0xf6>
 800d904:	2308      	movs	r3, #8
 800d906:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800d90a:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800d90e:	2b00      	cmp	r3, #0
 800d910:	d168      	bne.n	800d9e4 <f_open+0x1d0>
 800d912:	79fb      	ldrb	r3, [r7, #7]
 800d914:	f003 0308 	and.w	r3, r3, #8
 800d918:	2b00      	cmp	r3, #0
 800d91a:	d063      	beq.n	800d9e4 <f_open+0x1d0>
 800d91c:	f7fd ff1a 	bl	800b754 <get_fattime>
 800d920:	6538      	str	r0, [r7, #80]	@ 0x50
 800d922:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d924:	330e      	adds	r3, #14
 800d926:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 800d928:	4618      	mov	r0, r3
 800d92a:	f7fe fa2d 	bl	800bd88 <st_dword>
 800d92e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d930:	3316      	adds	r3, #22
 800d932:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 800d934:	4618      	mov	r0, r3
 800d936:	f7fe fa27 	bl	800bd88 <st_dword>
 800d93a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d93c:	330b      	adds	r3, #11
 800d93e:	2220      	movs	r2, #32
 800d940:	701a      	strb	r2, [r3, #0]
 800d942:	693b      	ldr	r3, [r7, #16]
 800d944:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800d946:	4611      	mov	r1, r2
 800d948:	4618      	mov	r0, r3
 800d94a:	f7ff f9fc 	bl	800cd46 <ld_clust>
 800d94e:	64f8      	str	r0, [r7, #76]	@ 0x4c
 800d950:	693b      	ldr	r3, [r7, #16]
 800d952:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 800d954:	2200      	movs	r2, #0
 800d956:	4618      	mov	r0, r3
 800d958:	f7ff fa14 	bl	800cd84 <st_clust>
 800d95c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d95e:	331c      	adds	r3, #28
 800d960:	2100      	movs	r1, #0
 800d962:	4618      	mov	r0, r3
 800d964:	f7fe fa10 	bl	800bd88 <st_dword>
 800d968:	693b      	ldr	r3, [r7, #16]
 800d96a:	2201      	movs	r2, #1
 800d96c:	70da      	strb	r2, [r3, #3]
 800d96e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800d970:	2b00      	cmp	r3, #0
 800d972:	d037      	beq.n	800d9e4 <f_open+0x1d0>
 800d974:	693b      	ldr	r3, [r7, #16]
 800d976:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d978:	653b      	str	r3, [r7, #80]	@ 0x50
 800d97a:	f107 0314 	add.w	r3, r7, #20
 800d97e:	2200      	movs	r2, #0
 800d980:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
 800d982:	4618      	mov	r0, r3
 800d984:	f7fe ff04 	bl	800c790 <remove_chain>
 800d988:	4603      	mov	r3, r0
 800d98a:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800d98e:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800d992:	2b00      	cmp	r3, #0
 800d994:	d126      	bne.n	800d9e4 <f_open+0x1d0>
 800d996:	693b      	ldr	r3, [r7, #16]
 800d998:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 800d99a:	4618      	mov	r0, r3
 800d99c:	f7fe fc4e 	bl	800c23c <move_window>
 800d9a0:	4603      	mov	r3, r0
 800d9a2:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800d9a6:	693b      	ldr	r3, [r7, #16]
 800d9a8:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800d9aa:	3a01      	subs	r2, #1
 800d9ac:	611a      	str	r2, [r3, #16]
 800d9ae:	e019      	b.n	800d9e4 <f_open+0x1d0>
 800d9b0:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800d9b4:	2b00      	cmp	r3, #0
 800d9b6:	d115      	bne.n	800d9e4 <f_open+0x1d0>
 800d9b8:	7ebb      	ldrb	r3, [r7, #26]
 800d9ba:	f003 0310 	and.w	r3, r3, #16
 800d9be:	2b00      	cmp	r3, #0
 800d9c0:	d003      	beq.n	800d9ca <f_open+0x1b6>
 800d9c2:	2304      	movs	r3, #4
 800d9c4:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800d9c8:	e00c      	b.n	800d9e4 <f_open+0x1d0>
 800d9ca:	79fb      	ldrb	r3, [r7, #7]
 800d9cc:	f003 0302 	and.w	r3, r3, #2
 800d9d0:	2b00      	cmp	r3, #0
 800d9d2:	d007      	beq.n	800d9e4 <f_open+0x1d0>
 800d9d4:	7ebb      	ldrb	r3, [r7, #26]
 800d9d6:	f003 0301 	and.w	r3, r3, #1
 800d9da:	2b00      	cmp	r3, #0
 800d9dc:	d002      	beq.n	800d9e4 <f_open+0x1d0>
 800d9de:	2307      	movs	r3, #7
 800d9e0:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800d9e4:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800d9e8:	2b00      	cmp	r3, #0
 800d9ea:	d126      	bne.n	800da3a <f_open+0x226>
 800d9ec:	79fb      	ldrb	r3, [r7, #7]
 800d9ee:	f003 0308 	and.w	r3, r3, #8
 800d9f2:	2b00      	cmp	r3, #0
 800d9f4:	d003      	beq.n	800d9fe <f_open+0x1ea>
 800d9f6:	79fb      	ldrb	r3, [r7, #7]
 800d9f8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800d9fc:	71fb      	strb	r3, [r7, #7]
 800d9fe:	693b      	ldr	r3, [r7, #16]
 800da00:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800da02:	68fb      	ldr	r3, [r7, #12]
 800da04:	625a      	str	r2, [r3, #36]	@ 0x24
 800da06:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800da08:	68fb      	ldr	r3, [r7, #12]
 800da0a:	629a      	str	r2, [r3, #40]	@ 0x28
 800da0c:	79fb      	ldrb	r3, [r7, #7]
 800da0e:	2b01      	cmp	r3, #1
 800da10:	bf8c      	ite	hi
 800da12:	2301      	movhi	r3, #1
 800da14:	2300      	movls	r3, #0
 800da16:	b2db      	uxtb	r3, r3
 800da18:	461a      	mov	r2, r3
 800da1a:	f107 0314 	add.w	r3, r7, #20
 800da1e:	4611      	mov	r1, r2
 800da20:	4618      	mov	r0, r3
 800da22:	f7fe fad9 	bl	800bfd8 <inc_lock>
 800da26:	4602      	mov	r2, r0
 800da28:	68fb      	ldr	r3, [r7, #12]
 800da2a:	611a      	str	r2, [r3, #16]
 800da2c:	68fb      	ldr	r3, [r7, #12]
 800da2e:	691b      	ldr	r3, [r3, #16]
 800da30:	2b00      	cmp	r3, #0
 800da32:	d102      	bne.n	800da3a <f_open+0x226>
 800da34:	2302      	movs	r3, #2
 800da36:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800da3a:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800da3e:	2b00      	cmp	r3, #0
 800da40:	f040 80a3 	bne.w	800db8a <f_open+0x376>
 800da44:	693b      	ldr	r3, [r7, #16]
 800da46:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800da48:	4611      	mov	r1, r2
 800da4a:	4618      	mov	r0, r3
 800da4c:	f7ff f97b 	bl	800cd46 <ld_clust>
 800da50:	4602      	mov	r2, r0
 800da52:	68fb      	ldr	r3, [r7, #12]
 800da54:	609a      	str	r2, [r3, #8]
 800da56:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800da58:	331c      	adds	r3, #28
 800da5a:	4618      	mov	r0, r3
 800da5c:	f7fe f956 	bl	800bd0c <ld_dword>
 800da60:	4602      	mov	r2, r0
 800da62:	68fb      	ldr	r3, [r7, #12]
 800da64:	60da      	str	r2, [r3, #12]
 800da66:	68fb      	ldr	r3, [r7, #12]
 800da68:	2200      	movs	r2, #0
 800da6a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800da6c:	693a      	ldr	r2, [r7, #16]
 800da6e:	68fb      	ldr	r3, [r7, #12]
 800da70:	601a      	str	r2, [r3, #0]
 800da72:	693b      	ldr	r3, [r7, #16]
 800da74:	88da      	ldrh	r2, [r3, #6]
 800da76:	68fb      	ldr	r3, [r7, #12]
 800da78:	809a      	strh	r2, [r3, #4]
 800da7a:	68fb      	ldr	r3, [r7, #12]
 800da7c:	79fa      	ldrb	r2, [r7, #7]
 800da7e:	751a      	strb	r2, [r3, #20]
 800da80:	68fb      	ldr	r3, [r7, #12]
 800da82:	2200      	movs	r2, #0
 800da84:	755a      	strb	r2, [r3, #21]
 800da86:	68fb      	ldr	r3, [r7, #12]
 800da88:	2200      	movs	r2, #0
 800da8a:	621a      	str	r2, [r3, #32]
 800da8c:	68fb      	ldr	r3, [r7, #12]
 800da8e:	2200      	movs	r2, #0
 800da90:	619a      	str	r2, [r3, #24]
 800da92:	68fb      	ldr	r3, [r7, #12]
 800da94:	3330      	adds	r3, #48	@ 0x30
 800da96:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800da9a:	2100      	movs	r1, #0
 800da9c:	4618      	mov	r0, r3
 800da9e:	f7fe f9c0 	bl	800be22 <mem_set>
 800daa2:	79fb      	ldrb	r3, [r7, #7]
 800daa4:	f003 0320 	and.w	r3, r3, #32
 800daa8:	2b00      	cmp	r3, #0
 800daaa:	d06e      	beq.n	800db8a <f_open+0x376>
 800daac:	68fb      	ldr	r3, [r7, #12]
 800daae:	68db      	ldr	r3, [r3, #12]
 800dab0:	2b00      	cmp	r3, #0
 800dab2:	d06a      	beq.n	800db8a <f_open+0x376>
 800dab4:	68fb      	ldr	r3, [r7, #12]
 800dab6:	68da      	ldr	r2, [r3, #12]
 800dab8:	68fb      	ldr	r3, [r7, #12]
 800daba:	619a      	str	r2, [r3, #24]
 800dabc:	693b      	ldr	r3, [r7, #16]
 800dabe:	895b      	ldrh	r3, [r3, #10]
 800dac0:	461a      	mov	r2, r3
 800dac2:	693b      	ldr	r3, [r7, #16]
 800dac4:	899b      	ldrh	r3, [r3, #12]
 800dac6:	fb02 f303 	mul.w	r3, r2, r3
 800daca:	64bb      	str	r3, [r7, #72]	@ 0x48
 800dacc:	68fb      	ldr	r3, [r7, #12]
 800dace:	689b      	ldr	r3, [r3, #8]
 800dad0:	65bb      	str	r3, [r7, #88]	@ 0x58
 800dad2:	68fb      	ldr	r3, [r7, #12]
 800dad4:	68db      	ldr	r3, [r3, #12]
 800dad6:	657b      	str	r3, [r7, #84]	@ 0x54
 800dad8:	e016      	b.n	800db08 <f_open+0x2f4>
 800dada:	68fb      	ldr	r3, [r7, #12]
 800dadc:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 800dade:	4618      	mov	r0, r3
 800dae0:	f7fe fc69 	bl	800c3b6 <get_fat>
 800dae4:	65b8      	str	r0, [r7, #88]	@ 0x58
 800dae6:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800dae8:	2b01      	cmp	r3, #1
 800daea:	d802      	bhi.n	800daf2 <f_open+0x2de>
 800daec:	2302      	movs	r3, #2
 800daee:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800daf2:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800daf4:	f1b3 3fff 	cmp.w	r3, #4294967295
 800daf8:	d102      	bne.n	800db00 <f_open+0x2ec>
 800dafa:	2301      	movs	r3, #1
 800dafc:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800db00:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 800db02:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800db04:	1ad3      	subs	r3, r2, r3
 800db06:	657b      	str	r3, [r7, #84]	@ 0x54
 800db08:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800db0c:	2b00      	cmp	r3, #0
 800db0e:	d103      	bne.n	800db18 <f_open+0x304>
 800db10:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 800db12:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800db14:	429a      	cmp	r2, r3
 800db16:	d8e0      	bhi.n	800dada <f_open+0x2c6>
 800db18:	68fb      	ldr	r3, [r7, #12]
 800db1a:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800db1c:	61da      	str	r2, [r3, #28]
 800db1e:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800db22:	2b00      	cmp	r3, #0
 800db24:	d131      	bne.n	800db8a <f_open+0x376>
 800db26:	693b      	ldr	r3, [r7, #16]
 800db28:	899b      	ldrh	r3, [r3, #12]
 800db2a:	461a      	mov	r2, r3
 800db2c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800db2e:	fbb3 f1f2 	udiv	r1, r3, r2
 800db32:	fb01 f202 	mul.w	r2, r1, r2
 800db36:	1a9b      	subs	r3, r3, r2
 800db38:	2b00      	cmp	r3, #0
 800db3a:	d026      	beq.n	800db8a <f_open+0x376>
 800db3c:	693b      	ldr	r3, [r7, #16]
 800db3e:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 800db40:	4618      	mov	r0, r3
 800db42:	f7fe fc19 	bl	800c378 <clust2sect>
 800db46:	6478      	str	r0, [r7, #68]	@ 0x44
 800db48:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800db4a:	2b00      	cmp	r3, #0
 800db4c:	d103      	bne.n	800db56 <f_open+0x342>
 800db4e:	2302      	movs	r3, #2
 800db50:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800db54:	e019      	b.n	800db8a <f_open+0x376>
 800db56:	693b      	ldr	r3, [r7, #16]
 800db58:	899b      	ldrh	r3, [r3, #12]
 800db5a:	461a      	mov	r2, r3
 800db5c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800db5e:	fbb3 f2f2 	udiv	r2, r3, r2
 800db62:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800db64:	441a      	add	r2, r3
 800db66:	68fb      	ldr	r3, [r7, #12]
 800db68:	621a      	str	r2, [r3, #32]
 800db6a:	693b      	ldr	r3, [r7, #16]
 800db6c:	7858      	ldrb	r0, [r3, #1]
 800db6e:	68fb      	ldr	r3, [r7, #12]
 800db70:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 800db74:	68fb      	ldr	r3, [r7, #12]
 800db76:	6a1a      	ldr	r2, [r3, #32]
 800db78:	2301      	movs	r3, #1
 800db7a:	f7fe f851 	bl	800bc20 <disk_read>
 800db7e:	4603      	mov	r3, r0
 800db80:	2b00      	cmp	r3, #0
 800db82:	d002      	beq.n	800db8a <f_open+0x376>
 800db84:	2301      	movs	r3, #1
 800db86:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800db8a:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800db8e:	2b00      	cmp	r3, #0
 800db90:	d002      	beq.n	800db98 <f_open+0x384>
 800db92:	68fb      	ldr	r3, [r7, #12]
 800db94:	2200      	movs	r2, #0
 800db96:	601a      	str	r2, [r3, #0]
 800db98:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800db9c:	4618      	mov	r0, r3
 800db9e:	3760      	adds	r7, #96	@ 0x60
 800dba0:	46bd      	mov	sp, r7
 800dba2:	bd80      	pop	{r7, pc}

0800dba4 <f_write>:
 800dba4:	b580      	push	{r7, lr}
 800dba6:	b08c      	sub	sp, #48	@ 0x30
 800dba8:	af00      	add	r7, sp, #0
 800dbaa:	60f8      	str	r0, [r7, #12]
 800dbac:	60b9      	str	r1, [r7, #8]
 800dbae:	607a      	str	r2, [r7, #4]
 800dbb0:	603b      	str	r3, [r7, #0]
 800dbb2:	68bb      	ldr	r3, [r7, #8]
 800dbb4:	61fb      	str	r3, [r7, #28]
 800dbb6:	683b      	ldr	r3, [r7, #0]
 800dbb8:	2200      	movs	r2, #0
 800dbba:	601a      	str	r2, [r3, #0]
 800dbbc:	68fb      	ldr	r3, [r7, #12]
 800dbbe:	f107 0210 	add.w	r2, r7, #16
 800dbc2:	4611      	mov	r1, r2
 800dbc4:	4618      	mov	r0, r3
 800dbc6:	f7ff fda9 	bl	800d71c <validate>
 800dbca:	4603      	mov	r3, r0
 800dbcc:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800dbd0:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800dbd4:	2b00      	cmp	r3, #0
 800dbd6:	d107      	bne.n	800dbe8 <f_write+0x44>
 800dbd8:	68fb      	ldr	r3, [r7, #12]
 800dbda:	7d5b      	ldrb	r3, [r3, #21]
 800dbdc:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800dbe0:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800dbe4:	2b00      	cmp	r3, #0
 800dbe6:	d002      	beq.n	800dbee <f_write+0x4a>
 800dbe8:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800dbec:	e16a      	b.n	800dec4 <f_write+0x320>
 800dbee:	68fb      	ldr	r3, [r7, #12]
 800dbf0:	7d1b      	ldrb	r3, [r3, #20]
 800dbf2:	f003 0302 	and.w	r3, r3, #2
 800dbf6:	2b00      	cmp	r3, #0
 800dbf8:	d101      	bne.n	800dbfe <f_write+0x5a>
 800dbfa:	2307      	movs	r3, #7
 800dbfc:	e162      	b.n	800dec4 <f_write+0x320>
 800dbfe:	68fb      	ldr	r3, [r7, #12]
 800dc00:	699a      	ldr	r2, [r3, #24]
 800dc02:	687b      	ldr	r3, [r7, #4]
 800dc04:	441a      	add	r2, r3
 800dc06:	68fb      	ldr	r3, [r7, #12]
 800dc08:	699b      	ldr	r3, [r3, #24]
 800dc0a:	429a      	cmp	r2, r3
 800dc0c:	f080 814c 	bcs.w	800dea8 <f_write+0x304>
 800dc10:	68fb      	ldr	r3, [r7, #12]
 800dc12:	699b      	ldr	r3, [r3, #24]
 800dc14:	43db      	mvns	r3, r3
 800dc16:	607b      	str	r3, [r7, #4]
 800dc18:	e146      	b.n	800dea8 <f_write+0x304>
 800dc1a:	68fb      	ldr	r3, [r7, #12]
 800dc1c:	699b      	ldr	r3, [r3, #24]
 800dc1e:	693a      	ldr	r2, [r7, #16]
 800dc20:	8992      	ldrh	r2, [r2, #12]
 800dc22:	fbb3 f1f2 	udiv	r1, r3, r2
 800dc26:	fb01 f202 	mul.w	r2, r1, r2
 800dc2a:	1a9b      	subs	r3, r3, r2
 800dc2c:	2b00      	cmp	r3, #0
 800dc2e:	f040 80f1 	bne.w	800de14 <f_write+0x270>
 800dc32:	68fb      	ldr	r3, [r7, #12]
 800dc34:	699b      	ldr	r3, [r3, #24]
 800dc36:	693a      	ldr	r2, [r7, #16]
 800dc38:	8992      	ldrh	r2, [r2, #12]
 800dc3a:	fbb3 f3f2 	udiv	r3, r3, r2
 800dc3e:	693a      	ldr	r2, [r7, #16]
 800dc40:	8952      	ldrh	r2, [r2, #10]
 800dc42:	3a01      	subs	r2, #1
 800dc44:	4013      	ands	r3, r2
 800dc46:	61bb      	str	r3, [r7, #24]
 800dc48:	69bb      	ldr	r3, [r7, #24]
 800dc4a:	2b00      	cmp	r3, #0
 800dc4c:	d143      	bne.n	800dcd6 <f_write+0x132>
 800dc4e:	68fb      	ldr	r3, [r7, #12]
 800dc50:	699b      	ldr	r3, [r3, #24]
 800dc52:	2b00      	cmp	r3, #0
 800dc54:	d10c      	bne.n	800dc70 <f_write+0xcc>
 800dc56:	68fb      	ldr	r3, [r7, #12]
 800dc58:	689b      	ldr	r3, [r3, #8]
 800dc5a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800dc5c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800dc5e:	2b00      	cmp	r3, #0
 800dc60:	d11a      	bne.n	800dc98 <f_write+0xf4>
 800dc62:	68fb      	ldr	r3, [r7, #12]
 800dc64:	2100      	movs	r1, #0
 800dc66:	4618      	mov	r0, r3
 800dc68:	f7fe fdf7 	bl	800c85a <create_chain>
 800dc6c:	62b8      	str	r0, [r7, #40]	@ 0x28
 800dc6e:	e013      	b.n	800dc98 <f_write+0xf4>
 800dc70:	68fb      	ldr	r3, [r7, #12]
 800dc72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dc74:	2b00      	cmp	r3, #0
 800dc76:	d007      	beq.n	800dc88 <f_write+0xe4>
 800dc78:	68fb      	ldr	r3, [r7, #12]
 800dc7a:	699b      	ldr	r3, [r3, #24]
 800dc7c:	4619      	mov	r1, r3
 800dc7e:	68f8      	ldr	r0, [r7, #12]
 800dc80:	f7fe fe83 	bl	800c98a <clmt_clust>
 800dc84:	62b8      	str	r0, [r7, #40]	@ 0x28
 800dc86:	e007      	b.n	800dc98 <f_write+0xf4>
 800dc88:	68fa      	ldr	r2, [r7, #12]
 800dc8a:	68fb      	ldr	r3, [r7, #12]
 800dc8c:	69db      	ldr	r3, [r3, #28]
 800dc8e:	4619      	mov	r1, r3
 800dc90:	4610      	mov	r0, r2
 800dc92:	f7fe fde2 	bl	800c85a <create_chain>
 800dc96:	62b8      	str	r0, [r7, #40]	@ 0x28
 800dc98:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800dc9a:	2b00      	cmp	r3, #0
 800dc9c:	f000 8109 	beq.w	800deb2 <f_write+0x30e>
 800dca0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800dca2:	2b01      	cmp	r3, #1
 800dca4:	d104      	bne.n	800dcb0 <f_write+0x10c>
 800dca6:	68fb      	ldr	r3, [r7, #12]
 800dca8:	2202      	movs	r2, #2
 800dcaa:	755a      	strb	r2, [r3, #21]
 800dcac:	2302      	movs	r3, #2
 800dcae:	e109      	b.n	800dec4 <f_write+0x320>
 800dcb0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800dcb2:	f1b3 3fff 	cmp.w	r3, #4294967295
 800dcb6:	d104      	bne.n	800dcc2 <f_write+0x11e>
 800dcb8:	68fb      	ldr	r3, [r7, #12]
 800dcba:	2201      	movs	r2, #1
 800dcbc:	755a      	strb	r2, [r3, #21]
 800dcbe:	2301      	movs	r3, #1
 800dcc0:	e100      	b.n	800dec4 <f_write+0x320>
 800dcc2:	68fb      	ldr	r3, [r7, #12]
 800dcc4:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800dcc6:	61da      	str	r2, [r3, #28]
 800dcc8:	68fb      	ldr	r3, [r7, #12]
 800dcca:	689b      	ldr	r3, [r3, #8]
 800dccc:	2b00      	cmp	r3, #0
 800dcce:	d102      	bne.n	800dcd6 <f_write+0x132>
 800dcd0:	68fb      	ldr	r3, [r7, #12]
 800dcd2:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800dcd4:	609a      	str	r2, [r3, #8]
 800dcd6:	68fb      	ldr	r3, [r7, #12]
 800dcd8:	7d1b      	ldrb	r3, [r3, #20]
 800dcda:	b25b      	sxtb	r3, r3
 800dcdc:	2b00      	cmp	r3, #0
 800dcde:	da18      	bge.n	800dd12 <f_write+0x16e>
 800dce0:	693b      	ldr	r3, [r7, #16]
 800dce2:	7858      	ldrb	r0, [r3, #1]
 800dce4:	68fb      	ldr	r3, [r7, #12]
 800dce6:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 800dcea:	68fb      	ldr	r3, [r7, #12]
 800dcec:	6a1a      	ldr	r2, [r3, #32]
 800dcee:	2301      	movs	r3, #1
 800dcf0:	f7fd ffb6 	bl	800bc60 <disk_write>
 800dcf4:	4603      	mov	r3, r0
 800dcf6:	2b00      	cmp	r3, #0
 800dcf8:	d004      	beq.n	800dd04 <f_write+0x160>
 800dcfa:	68fb      	ldr	r3, [r7, #12]
 800dcfc:	2201      	movs	r2, #1
 800dcfe:	755a      	strb	r2, [r3, #21]
 800dd00:	2301      	movs	r3, #1
 800dd02:	e0df      	b.n	800dec4 <f_write+0x320>
 800dd04:	68fb      	ldr	r3, [r7, #12]
 800dd06:	7d1b      	ldrb	r3, [r3, #20]
 800dd08:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800dd0c:	b2da      	uxtb	r2, r3
 800dd0e:	68fb      	ldr	r3, [r7, #12]
 800dd10:	751a      	strb	r2, [r3, #20]
 800dd12:	693a      	ldr	r2, [r7, #16]
 800dd14:	68fb      	ldr	r3, [r7, #12]
 800dd16:	69db      	ldr	r3, [r3, #28]
 800dd18:	4619      	mov	r1, r3
 800dd1a:	4610      	mov	r0, r2
 800dd1c:	f7fe fb2c 	bl	800c378 <clust2sect>
 800dd20:	6178      	str	r0, [r7, #20]
 800dd22:	697b      	ldr	r3, [r7, #20]
 800dd24:	2b00      	cmp	r3, #0
 800dd26:	d104      	bne.n	800dd32 <f_write+0x18e>
 800dd28:	68fb      	ldr	r3, [r7, #12]
 800dd2a:	2202      	movs	r2, #2
 800dd2c:	755a      	strb	r2, [r3, #21]
 800dd2e:	2302      	movs	r3, #2
 800dd30:	e0c8      	b.n	800dec4 <f_write+0x320>
 800dd32:	697a      	ldr	r2, [r7, #20]
 800dd34:	69bb      	ldr	r3, [r7, #24]
 800dd36:	4413      	add	r3, r2
 800dd38:	617b      	str	r3, [r7, #20]
 800dd3a:	693b      	ldr	r3, [r7, #16]
 800dd3c:	899b      	ldrh	r3, [r3, #12]
 800dd3e:	461a      	mov	r2, r3
 800dd40:	687b      	ldr	r3, [r7, #4]
 800dd42:	fbb3 f3f2 	udiv	r3, r3, r2
 800dd46:	623b      	str	r3, [r7, #32]
 800dd48:	6a3b      	ldr	r3, [r7, #32]
 800dd4a:	2b00      	cmp	r3, #0
 800dd4c:	d043      	beq.n	800ddd6 <f_write+0x232>
 800dd4e:	69ba      	ldr	r2, [r7, #24]
 800dd50:	6a3b      	ldr	r3, [r7, #32]
 800dd52:	4413      	add	r3, r2
 800dd54:	693a      	ldr	r2, [r7, #16]
 800dd56:	8952      	ldrh	r2, [r2, #10]
 800dd58:	4293      	cmp	r3, r2
 800dd5a:	d905      	bls.n	800dd68 <f_write+0x1c4>
 800dd5c:	693b      	ldr	r3, [r7, #16]
 800dd5e:	895b      	ldrh	r3, [r3, #10]
 800dd60:	461a      	mov	r2, r3
 800dd62:	69bb      	ldr	r3, [r7, #24]
 800dd64:	1ad3      	subs	r3, r2, r3
 800dd66:	623b      	str	r3, [r7, #32]
 800dd68:	693b      	ldr	r3, [r7, #16]
 800dd6a:	7858      	ldrb	r0, [r3, #1]
 800dd6c:	6a3b      	ldr	r3, [r7, #32]
 800dd6e:	697a      	ldr	r2, [r7, #20]
 800dd70:	69f9      	ldr	r1, [r7, #28]
 800dd72:	f7fd ff75 	bl	800bc60 <disk_write>
 800dd76:	4603      	mov	r3, r0
 800dd78:	2b00      	cmp	r3, #0
 800dd7a:	d004      	beq.n	800dd86 <f_write+0x1e2>
 800dd7c:	68fb      	ldr	r3, [r7, #12]
 800dd7e:	2201      	movs	r2, #1
 800dd80:	755a      	strb	r2, [r3, #21]
 800dd82:	2301      	movs	r3, #1
 800dd84:	e09e      	b.n	800dec4 <f_write+0x320>
 800dd86:	68fb      	ldr	r3, [r7, #12]
 800dd88:	6a1a      	ldr	r2, [r3, #32]
 800dd8a:	697b      	ldr	r3, [r7, #20]
 800dd8c:	1ad3      	subs	r3, r2, r3
 800dd8e:	6a3a      	ldr	r2, [r7, #32]
 800dd90:	429a      	cmp	r2, r3
 800dd92:	d918      	bls.n	800ddc6 <f_write+0x222>
 800dd94:	68fb      	ldr	r3, [r7, #12]
 800dd96:	f103 0030 	add.w	r0, r3, #48	@ 0x30
 800dd9a:	68fb      	ldr	r3, [r7, #12]
 800dd9c:	6a1a      	ldr	r2, [r3, #32]
 800dd9e:	697b      	ldr	r3, [r7, #20]
 800dda0:	1ad3      	subs	r3, r2, r3
 800dda2:	693a      	ldr	r2, [r7, #16]
 800dda4:	8992      	ldrh	r2, [r2, #12]
 800dda6:	fb02 f303 	mul.w	r3, r2, r3
 800ddaa:	69fa      	ldr	r2, [r7, #28]
 800ddac:	18d1      	adds	r1, r2, r3
 800ddae:	693b      	ldr	r3, [r7, #16]
 800ddb0:	899b      	ldrh	r3, [r3, #12]
 800ddb2:	461a      	mov	r2, r3
 800ddb4:	f7fe f814 	bl	800bde0 <mem_cpy>
 800ddb8:	68fb      	ldr	r3, [r7, #12]
 800ddba:	7d1b      	ldrb	r3, [r3, #20]
 800ddbc:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800ddc0:	b2da      	uxtb	r2, r3
 800ddc2:	68fb      	ldr	r3, [r7, #12]
 800ddc4:	751a      	strb	r2, [r3, #20]
 800ddc6:	693b      	ldr	r3, [r7, #16]
 800ddc8:	899b      	ldrh	r3, [r3, #12]
 800ddca:	461a      	mov	r2, r3
 800ddcc:	6a3b      	ldr	r3, [r7, #32]
 800ddce:	fb02 f303 	mul.w	r3, r2, r3
 800ddd2:	627b      	str	r3, [r7, #36]	@ 0x24
 800ddd4:	e04b      	b.n	800de6e <f_write+0x2ca>
 800ddd6:	68fb      	ldr	r3, [r7, #12]
 800ddd8:	6a1b      	ldr	r3, [r3, #32]
 800ddda:	697a      	ldr	r2, [r7, #20]
 800dddc:	429a      	cmp	r2, r3
 800ddde:	d016      	beq.n	800de0e <f_write+0x26a>
 800dde0:	68fb      	ldr	r3, [r7, #12]
 800dde2:	699a      	ldr	r2, [r3, #24]
 800dde4:	68fb      	ldr	r3, [r7, #12]
 800dde6:	68db      	ldr	r3, [r3, #12]
 800dde8:	429a      	cmp	r2, r3
 800ddea:	d210      	bcs.n	800de0e <f_write+0x26a>
 800ddec:	693b      	ldr	r3, [r7, #16]
 800ddee:	7858      	ldrb	r0, [r3, #1]
 800ddf0:	68fb      	ldr	r3, [r7, #12]
 800ddf2:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 800ddf6:	2301      	movs	r3, #1
 800ddf8:	697a      	ldr	r2, [r7, #20]
 800ddfa:	f7fd ff11 	bl	800bc20 <disk_read>
 800ddfe:	4603      	mov	r3, r0
 800de00:	2b00      	cmp	r3, #0
 800de02:	d004      	beq.n	800de0e <f_write+0x26a>
 800de04:	68fb      	ldr	r3, [r7, #12]
 800de06:	2201      	movs	r2, #1
 800de08:	755a      	strb	r2, [r3, #21]
 800de0a:	2301      	movs	r3, #1
 800de0c:	e05a      	b.n	800dec4 <f_write+0x320>
 800de0e:	68fb      	ldr	r3, [r7, #12]
 800de10:	697a      	ldr	r2, [r7, #20]
 800de12:	621a      	str	r2, [r3, #32]
 800de14:	693b      	ldr	r3, [r7, #16]
 800de16:	899b      	ldrh	r3, [r3, #12]
 800de18:	4618      	mov	r0, r3
 800de1a:	68fb      	ldr	r3, [r7, #12]
 800de1c:	699b      	ldr	r3, [r3, #24]
 800de1e:	693a      	ldr	r2, [r7, #16]
 800de20:	8992      	ldrh	r2, [r2, #12]
 800de22:	fbb3 f1f2 	udiv	r1, r3, r2
 800de26:	fb01 f202 	mul.w	r2, r1, r2
 800de2a:	1a9b      	subs	r3, r3, r2
 800de2c:	1ac3      	subs	r3, r0, r3
 800de2e:	627b      	str	r3, [r7, #36]	@ 0x24
 800de30:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800de32:	687b      	ldr	r3, [r7, #4]
 800de34:	429a      	cmp	r2, r3
 800de36:	d901      	bls.n	800de3c <f_write+0x298>
 800de38:	687b      	ldr	r3, [r7, #4]
 800de3a:	627b      	str	r3, [r7, #36]	@ 0x24
 800de3c:	68fb      	ldr	r3, [r7, #12]
 800de3e:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 800de42:	68fb      	ldr	r3, [r7, #12]
 800de44:	699b      	ldr	r3, [r3, #24]
 800de46:	693a      	ldr	r2, [r7, #16]
 800de48:	8992      	ldrh	r2, [r2, #12]
 800de4a:	fbb3 f0f2 	udiv	r0, r3, r2
 800de4e:	fb00 f202 	mul.w	r2, r0, r2
 800de52:	1a9b      	subs	r3, r3, r2
 800de54:	440b      	add	r3, r1
 800de56:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800de58:	69f9      	ldr	r1, [r7, #28]
 800de5a:	4618      	mov	r0, r3
 800de5c:	f7fd ffc0 	bl	800bde0 <mem_cpy>
 800de60:	68fb      	ldr	r3, [r7, #12]
 800de62:	7d1b      	ldrb	r3, [r3, #20]
 800de64:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800de68:	b2da      	uxtb	r2, r3
 800de6a:	68fb      	ldr	r3, [r7, #12]
 800de6c:	751a      	strb	r2, [r3, #20]
 800de6e:	69fa      	ldr	r2, [r7, #28]
 800de70:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800de72:	4413      	add	r3, r2
 800de74:	61fb      	str	r3, [r7, #28]
 800de76:	68fb      	ldr	r3, [r7, #12]
 800de78:	699a      	ldr	r2, [r3, #24]
 800de7a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800de7c:	441a      	add	r2, r3
 800de7e:	68fb      	ldr	r3, [r7, #12]
 800de80:	619a      	str	r2, [r3, #24]
 800de82:	68fb      	ldr	r3, [r7, #12]
 800de84:	68da      	ldr	r2, [r3, #12]
 800de86:	68fb      	ldr	r3, [r7, #12]
 800de88:	699b      	ldr	r3, [r3, #24]
 800de8a:	429a      	cmp	r2, r3
 800de8c:	bf38      	it	cc
 800de8e:	461a      	movcc	r2, r3
 800de90:	68fb      	ldr	r3, [r7, #12]
 800de92:	60da      	str	r2, [r3, #12]
 800de94:	683b      	ldr	r3, [r7, #0]
 800de96:	681a      	ldr	r2, [r3, #0]
 800de98:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800de9a:	441a      	add	r2, r3
 800de9c:	683b      	ldr	r3, [r7, #0]
 800de9e:	601a      	str	r2, [r3, #0]
 800dea0:	687a      	ldr	r2, [r7, #4]
 800dea2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dea4:	1ad3      	subs	r3, r2, r3
 800dea6:	607b      	str	r3, [r7, #4]
 800dea8:	687b      	ldr	r3, [r7, #4]
 800deaa:	2b00      	cmp	r3, #0
 800deac:	f47f aeb5 	bne.w	800dc1a <f_write+0x76>
 800deb0:	e000      	b.n	800deb4 <f_write+0x310>
 800deb2:	bf00      	nop
 800deb4:	68fb      	ldr	r3, [r7, #12]
 800deb6:	7d1b      	ldrb	r3, [r3, #20]
 800deb8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800debc:	b2da      	uxtb	r2, r3
 800debe:	68fb      	ldr	r3, [r7, #12]
 800dec0:	751a      	strb	r2, [r3, #20]
 800dec2:	2300      	movs	r3, #0
 800dec4:	4618      	mov	r0, r3
 800dec6:	3730      	adds	r7, #48	@ 0x30
 800dec8:	46bd      	mov	sp, r7
 800deca:	bd80      	pop	{r7, pc}

0800decc <f_sync>:
 800decc:	b580      	push	{r7, lr}
 800dece:	b086      	sub	sp, #24
 800ded0:	af00      	add	r7, sp, #0
 800ded2:	6078      	str	r0, [r7, #4]
 800ded4:	687b      	ldr	r3, [r7, #4]
 800ded6:	f107 0208 	add.w	r2, r7, #8
 800deda:	4611      	mov	r1, r2
 800dedc:	4618      	mov	r0, r3
 800dede:	f7ff fc1d 	bl	800d71c <validate>
 800dee2:	4603      	mov	r3, r0
 800dee4:	75fb      	strb	r3, [r7, #23]
 800dee6:	7dfb      	ldrb	r3, [r7, #23]
 800dee8:	2b00      	cmp	r3, #0
 800deea:	d168      	bne.n	800dfbe <f_sync+0xf2>
 800deec:	687b      	ldr	r3, [r7, #4]
 800deee:	7d1b      	ldrb	r3, [r3, #20]
 800def0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800def4:	2b00      	cmp	r3, #0
 800def6:	d062      	beq.n	800dfbe <f_sync+0xf2>
 800def8:	687b      	ldr	r3, [r7, #4]
 800defa:	7d1b      	ldrb	r3, [r3, #20]
 800defc:	b25b      	sxtb	r3, r3
 800defe:	2b00      	cmp	r3, #0
 800df00:	da15      	bge.n	800df2e <f_sync+0x62>
 800df02:	68bb      	ldr	r3, [r7, #8]
 800df04:	7858      	ldrb	r0, [r3, #1]
 800df06:	687b      	ldr	r3, [r7, #4]
 800df08:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 800df0c:	687b      	ldr	r3, [r7, #4]
 800df0e:	6a1a      	ldr	r2, [r3, #32]
 800df10:	2301      	movs	r3, #1
 800df12:	f7fd fea5 	bl	800bc60 <disk_write>
 800df16:	4603      	mov	r3, r0
 800df18:	2b00      	cmp	r3, #0
 800df1a:	d001      	beq.n	800df20 <f_sync+0x54>
 800df1c:	2301      	movs	r3, #1
 800df1e:	e04f      	b.n	800dfc0 <f_sync+0xf4>
 800df20:	687b      	ldr	r3, [r7, #4]
 800df22:	7d1b      	ldrb	r3, [r3, #20]
 800df24:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800df28:	b2da      	uxtb	r2, r3
 800df2a:	687b      	ldr	r3, [r7, #4]
 800df2c:	751a      	strb	r2, [r3, #20]
 800df2e:	f7fd fc11 	bl	800b754 <get_fattime>
 800df32:	6138      	str	r0, [r7, #16]
 800df34:	68ba      	ldr	r2, [r7, #8]
 800df36:	687b      	ldr	r3, [r7, #4]
 800df38:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800df3a:	4619      	mov	r1, r3
 800df3c:	4610      	mov	r0, r2
 800df3e:	f7fe f97d 	bl	800c23c <move_window>
 800df42:	4603      	mov	r3, r0
 800df44:	75fb      	strb	r3, [r7, #23]
 800df46:	7dfb      	ldrb	r3, [r7, #23]
 800df48:	2b00      	cmp	r3, #0
 800df4a:	d138      	bne.n	800dfbe <f_sync+0xf2>
 800df4c:	687b      	ldr	r3, [r7, #4]
 800df4e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800df50:	60fb      	str	r3, [r7, #12]
 800df52:	68fb      	ldr	r3, [r7, #12]
 800df54:	330b      	adds	r3, #11
 800df56:	781a      	ldrb	r2, [r3, #0]
 800df58:	68fb      	ldr	r3, [r7, #12]
 800df5a:	330b      	adds	r3, #11
 800df5c:	f042 0220 	orr.w	r2, r2, #32
 800df60:	b2d2      	uxtb	r2, r2
 800df62:	701a      	strb	r2, [r3, #0]
 800df64:	687b      	ldr	r3, [r7, #4]
 800df66:	6818      	ldr	r0, [r3, #0]
 800df68:	687b      	ldr	r3, [r7, #4]
 800df6a:	689b      	ldr	r3, [r3, #8]
 800df6c:	461a      	mov	r2, r3
 800df6e:	68f9      	ldr	r1, [r7, #12]
 800df70:	f7fe ff08 	bl	800cd84 <st_clust>
 800df74:	68fb      	ldr	r3, [r7, #12]
 800df76:	f103 021c 	add.w	r2, r3, #28
 800df7a:	687b      	ldr	r3, [r7, #4]
 800df7c:	68db      	ldr	r3, [r3, #12]
 800df7e:	4619      	mov	r1, r3
 800df80:	4610      	mov	r0, r2
 800df82:	f7fd ff01 	bl	800bd88 <st_dword>
 800df86:	68fb      	ldr	r3, [r7, #12]
 800df88:	3316      	adds	r3, #22
 800df8a:	6939      	ldr	r1, [r7, #16]
 800df8c:	4618      	mov	r0, r3
 800df8e:	f7fd fefb 	bl	800bd88 <st_dword>
 800df92:	68fb      	ldr	r3, [r7, #12]
 800df94:	3312      	adds	r3, #18
 800df96:	2100      	movs	r1, #0
 800df98:	4618      	mov	r0, r3
 800df9a:	f7fd feda 	bl	800bd52 <st_word>
 800df9e:	68bb      	ldr	r3, [r7, #8]
 800dfa0:	2201      	movs	r2, #1
 800dfa2:	70da      	strb	r2, [r3, #3]
 800dfa4:	68bb      	ldr	r3, [r7, #8]
 800dfa6:	4618      	mov	r0, r3
 800dfa8:	f7fe f976 	bl	800c298 <sync_fs>
 800dfac:	4603      	mov	r3, r0
 800dfae:	75fb      	strb	r3, [r7, #23]
 800dfb0:	687b      	ldr	r3, [r7, #4]
 800dfb2:	7d1b      	ldrb	r3, [r3, #20]
 800dfb4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800dfb8:	b2da      	uxtb	r2, r3
 800dfba:	687b      	ldr	r3, [r7, #4]
 800dfbc:	751a      	strb	r2, [r3, #20]
 800dfbe:	7dfb      	ldrb	r3, [r7, #23]
 800dfc0:	4618      	mov	r0, r3
 800dfc2:	3718      	adds	r7, #24
 800dfc4:	46bd      	mov	sp, r7
 800dfc6:	bd80      	pop	{r7, pc}

0800dfc8 <f_close>:
 800dfc8:	b580      	push	{r7, lr}
 800dfca:	b084      	sub	sp, #16
 800dfcc:	af00      	add	r7, sp, #0
 800dfce:	6078      	str	r0, [r7, #4]
 800dfd0:	6878      	ldr	r0, [r7, #4]
 800dfd2:	f7ff ff7b 	bl	800decc <f_sync>
 800dfd6:	4603      	mov	r3, r0
 800dfd8:	73fb      	strb	r3, [r7, #15]
 800dfda:	7bfb      	ldrb	r3, [r7, #15]
 800dfdc:	2b00      	cmp	r3, #0
 800dfde:	d118      	bne.n	800e012 <f_close+0x4a>
 800dfe0:	687b      	ldr	r3, [r7, #4]
 800dfe2:	f107 0208 	add.w	r2, r7, #8
 800dfe6:	4611      	mov	r1, r2
 800dfe8:	4618      	mov	r0, r3
 800dfea:	f7ff fb97 	bl	800d71c <validate>
 800dfee:	4603      	mov	r3, r0
 800dff0:	73fb      	strb	r3, [r7, #15]
 800dff2:	7bfb      	ldrb	r3, [r7, #15]
 800dff4:	2b00      	cmp	r3, #0
 800dff6:	d10c      	bne.n	800e012 <f_close+0x4a>
 800dff8:	687b      	ldr	r3, [r7, #4]
 800dffa:	691b      	ldr	r3, [r3, #16]
 800dffc:	4618      	mov	r0, r3
 800dffe:	f7fe f879 	bl	800c0f4 <dec_lock>
 800e002:	4603      	mov	r3, r0
 800e004:	73fb      	strb	r3, [r7, #15]
 800e006:	7bfb      	ldrb	r3, [r7, #15]
 800e008:	2b00      	cmp	r3, #0
 800e00a:	d102      	bne.n	800e012 <f_close+0x4a>
 800e00c:	687b      	ldr	r3, [r7, #4]
 800e00e:	2200      	movs	r2, #0
 800e010:	601a      	str	r2, [r3, #0]
 800e012:	7bfb      	ldrb	r3, [r7, #15]
 800e014:	4618      	mov	r0, r3
 800e016:	3710      	adds	r7, #16
 800e018:	46bd      	mov	sp, r7
 800e01a:	bd80      	pop	{r7, pc}

0800e01c <FATFS_LinkDriverEx>:
 800e01c:	b480      	push	{r7}
 800e01e:	b087      	sub	sp, #28
 800e020:	af00      	add	r7, sp, #0
 800e022:	60f8      	str	r0, [r7, #12]
 800e024:	60b9      	str	r1, [r7, #8]
 800e026:	4613      	mov	r3, r2
 800e028:	71fb      	strb	r3, [r7, #7]
 800e02a:	2301      	movs	r3, #1
 800e02c:	75fb      	strb	r3, [r7, #23]
 800e02e:	2300      	movs	r3, #0
 800e030:	75bb      	strb	r3, [r7, #22]
 800e032:	4b1f      	ldr	r3, [pc, #124]	@ (800e0b0 <FATFS_LinkDriverEx+0x94>)
 800e034:	7a5b      	ldrb	r3, [r3, #9]
 800e036:	b2db      	uxtb	r3, r3
 800e038:	2b00      	cmp	r3, #0
 800e03a:	d131      	bne.n	800e0a0 <FATFS_LinkDriverEx+0x84>
 800e03c:	4b1c      	ldr	r3, [pc, #112]	@ (800e0b0 <FATFS_LinkDriverEx+0x94>)
 800e03e:	7a5b      	ldrb	r3, [r3, #9]
 800e040:	b2db      	uxtb	r3, r3
 800e042:	461a      	mov	r2, r3
 800e044:	4b1a      	ldr	r3, [pc, #104]	@ (800e0b0 <FATFS_LinkDriverEx+0x94>)
 800e046:	2100      	movs	r1, #0
 800e048:	5499      	strb	r1, [r3, r2]
 800e04a:	4b19      	ldr	r3, [pc, #100]	@ (800e0b0 <FATFS_LinkDriverEx+0x94>)
 800e04c:	7a5b      	ldrb	r3, [r3, #9]
 800e04e:	b2db      	uxtb	r3, r3
 800e050:	4a17      	ldr	r2, [pc, #92]	@ (800e0b0 <FATFS_LinkDriverEx+0x94>)
 800e052:	009b      	lsls	r3, r3, #2
 800e054:	4413      	add	r3, r2
 800e056:	68fa      	ldr	r2, [r7, #12]
 800e058:	605a      	str	r2, [r3, #4]
 800e05a:	4b15      	ldr	r3, [pc, #84]	@ (800e0b0 <FATFS_LinkDriverEx+0x94>)
 800e05c:	7a5b      	ldrb	r3, [r3, #9]
 800e05e:	b2db      	uxtb	r3, r3
 800e060:	461a      	mov	r2, r3
 800e062:	4b13      	ldr	r3, [pc, #76]	@ (800e0b0 <FATFS_LinkDriverEx+0x94>)
 800e064:	4413      	add	r3, r2
 800e066:	79fa      	ldrb	r2, [r7, #7]
 800e068:	721a      	strb	r2, [r3, #8]
 800e06a:	4b11      	ldr	r3, [pc, #68]	@ (800e0b0 <FATFS_LinkDriverEx+0x94>)
 800e06c:	7a5b      	ldrb	r3, [r3, #9]
 800e06e:	b2db      	uxtb	r3, r3
 800e070:	1c5a      	adds	r2, r3, #1
 800e072:	b2d1      	uxtb	r1, r2
 800e074:	4a0e      	ldr	r2, [pc, #56]	@ (800e0b0 <FATFS_LinkDriverEx+0x94>)
 800e076:	7251      	strb	r1, [r2, #9]
 800e078:	75bb      	strb	r3, [r7, #22]
 800e07a:	7dbb      	ldrb	r3, [r7, #22]
 800e07c:	3330      	adds	r3, #48	@ 0x30
 800e07e:	b2da      	uxtb	r2, r3
 800e080:	68bb      	ldr	r3, [r7, #8]
 800e082:	701a      	strb	r2, [r3, #0]
 800e084:	68bb      	ldr	r3, [r7, #8]
 800e086:	3301      	adds	r3, #1
 800e088:	223a      	movs	r2, #58	@ 0x3a
 800e08a:	701a      	strb	r2, [r3, #0]
 800e08c:	68bb      	ldr	r3, [r7, #8]
 800e08e:	3302      	adds	r3, #2
 800e090:	222f      	movs	r2, #47	@ 0x2f
 800e092:	701a      	strb	r2, [r3, #0]
 800e094:	68bb      	ldr	r3, [r7, #8]
 800e096:	3303      	adds	r3, #3
 800e098:	2200      	movs	r2, #0
 800e09a:	701a      	strb	r2, [r3, #0]
 800e09c:	2300      	movs	r3, #0
 800e09e:	75fb      	strb	r3, [r7, #23]
 800e0a0:	7dfb      	ldrb	r3, [r7, #23]
 800e0a2:	4618      	mov	r0, r3
 800e0a4:	371c      	adds	r7, #28
 800e0a6:	46bd      	mov	sp, r7
 800e0a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0ac:	4770      	bx	lr
 800e0ae:	bf00      	nop
 800e0b0:	200048d8 	.word	0x200048d8

0800e0b4 <FATFS_LinkDriver>:
 800e0b4:	b580      	push	{r7, lr}
 800e0b6:	b082      	sub	sp, #8
 800e0b8:	af00      	add	r7, sp, #0
 800e0ba:	6078      	str	r0, [r7, #4]
 800e0bc:	6039      	str	r1, [r7, #0]
 800e0be:	2200      	movs	r2, #0
 800e0c0:	6839      	ldr	r1, [r7, #0]
 800e0c2:	6878      	ldr	r0, [r7, #4]
 800e0c4:	f7ff ffaa 	bl	800e01c <FATFS_LinkDriverEx>
 800e0c8:	4603      	mov	r3, r0
 800e0ca:	4618      	mov	r0, r3
 800e0cc:	3708      	adds	r7, #8
 800e0ce:	46bd      	mov	sp, r7
 800e0d0:	bd80      	pop	{r7, pc}
	...

0800e0d4 <siprintf>:
 800e0d4:	b40e      	push	{r1, r2, r3}
 800e0d6:	b500      	push	{lr}
 800e0d8:	b09c      	sub	sp, #112	@ 0x70
 800e0da:	ab1d      	add	r3, sp, #116	@ 0x74
 800e0dc:	9002      	str	r0, [sp, #8]
 800e0de:	9006      	str	r0, [sp, #24]
 800e0e0:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800e0e4:	4809      	ldr	r0, [pc, #36]	@ (800e10c <siprintf+0x38>)
 800e0e6:	9107      	str	r1, [sp, #28]
 800e0e8:	9104      	str	r1, [sp, #16]
 800e0ea:	4909      	ldr	r1, [pc, #36]	@ (800e110 <siprintf+0x3c>)
 800e0ec:	f853 2b04 	ldr.w	r2, [r3], #4
 800e0f0:	9105      	str	r1, [sp, #20]
 800e0f2:	6800      	ldr	r0, [r0, #0]
 800e0f4:	9301      	str	r3, [sp, #4]
 800e0f6:	a902      	add	r1, sp, #8
 800e0f8:	f000 f994 	bl	800e424 <_svfiprintf_r>
 800e0fc:	9b02      	ldr	r3, [sp, #8]
 800e0fe:	2200      	movs	r2, #0
 800e100:	701a      	strb	r2, [r3, #0]
 800e102:	b01c      	add	sp, #112	@ 0x70
 800e104:	f85d eb04 	ldr.w	lr, [sp], #4
 800e108:	b003      	add	sp, #12
 800e10a:	4770      	bx	lr
 800e10c:	200000a8 	.word	0x200000a8
 800e110:	ffff0208 	.word	0xffff0208

0800e114 <memset>:
 800e114:	4402      	add	r2, r0
 800e116:	4603      	mov	r3, r0
 800e118:	4293      	cmp	r3, r2
 800e11a:	d100      	bne.n	800e11e <memset+0xa>
 800e11c:	4770      	bx	lr
 800e11e:	f803 1b01 	strb.w	r1, [r3], #1
 800e122:	e7f9      	b.n	800e118 <memset+0x4>

0800e124 <__errno>:
 800e124:	4b01      	ldr	r3, [pc, #4]	@ (800e12c <__errno+0x8>)
 800e126:	6818      	ldr	r0, [r3, #0]
 800e128:	4770      	bx	lr
 800e12a:	bf00      	nop
 800e12c:	200000a8 	.word	0x200000a8

0800e130 <__libc_init_array>:
 800e130:	b570      	push	{r4, r5, r6, lr}
 800e132:	4d0d      	ldr	r5, [pc, #52]	@ (800e168 <__libc_init_array+0x38>)
 800e134:	4c0d      	ldr	r4, [pc, #52]	@ (800e16c <__libc_init_array+0x3c>)
 800e136:	1b64      	subs	r4, r4, r5
 800e138:	10a4      	asrs	r4, r4, #2
 800e13a:	2600      	movs	r6, #0
 800e13c:	42a6      	cmp	r6, r4
 800e13e:	d109      	bne.n	800e154 <__libc_init_array+0x24>
 800e140:	4d0b      	ldr	r5, [pc, #44]	@ (800e170 <__libc_init_array+0x40>)
 800e142:	4c0c      	ldr	r4, [pc, #48]	@ (800e174 <__libc_init_array+0x44>)
 800e144:	f000 fc66 	bl	800ea14 <_init>
 800e148:	1b64      	subs	r4, r4, r5
 800e14a:	10a4      	asrs	r4, r4, #2
 800e14c:	2600      	movs	r6, #0
 800e14e:	42a6      	cmp	r6, r4
 800e150:	d105      	bne.n	800e15e <__libc_init_array+0x2e>
 800e152:	bd70      	pop	{r4, r5, r6, pc}
 800e154:	f855 3b04 	ldr.w	r3, [r5], #4
 800e158:	4798      	blx	r3
 800e15a:	3601      	adds	r6, #1
 800e15c:	e7ee      	b.n	800e13c <__libc_init_array+0xc>
 800e15e:	f855 3b04 	ldr.w	r3, [r5], #4
 800e162:	4798      	blx	r3
 800e164:	3601      	adds	r6, #1
 800e166:	e7f2      	b.n	800e14e <__libc_init_array+0x1e>
 800e168:	0801e1b4 	.word	0x0801e1b4
 800e16c:	0801e1b4 	.word	0x0801e1b4
 800e170:	0801e1b4 	.word	0x0801e1b4
 800e174:	0801e1b8 	.word	0x0801e1b8

0800e178 <__retarget_lock_acquire_recursive>:
 800e178:	4770      	bx	lr

0800e17a <__retarget_lock_release_recursive>:
 800e17a:	4770      	bx	lr

0800e17c <_free_r>:
 800e17c:	b538      	push	{r3, r4, r5, lr}
 800e17e:	4605      	mov	r5, r0
 800e180:	2900      	cmp	r1, #0
 800e182:	d041      	beq.n	800e208 <_free_r+0x8c>
 800e184:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800e188:	1f0c      	subs	r4, r1, #4
 800e18a:	2b00      	cmp	r3, #0
 800e18c:	bfb8      	it	lt
 800e18e:	18e4      	addlt	r4, r4, r3
 800e190:	f000 f8e0 	bl	800e354 <__malloc_lock>
 800e194:	4a1d      	ldr	r2, [pc, #116]	@ (800e20c <_free_r+0x90>)
 800e196:	6813      	ldr	r3, [r2, #0]
 800e198:	b933      	cbnz	r3, 800e1a8 <_free_r+0x2c>
 800e19a:	6063      	str	r3, [r4, #4]
 800e19c:	6014      	str	r4, [r2, #0]
 800e19e:	4628      	mov	r0, r5
 800e1a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e1a4:	f000 b8dc 	b.w	800e360 <__malloc_unlock>
 800e1a8:	42a3      	cmp	r3, r4
 800e1aa:	d908      	bls.n	800e1be <_free_r+0x42>
 800e1ac:	6820      	ldr	r0, [r4, #0]
 800e1ae:	1821      	adds	r1, r4, r0
 800e1b0:	428b      	cmp	r3, r1
 800e1b2:	bf01      	itttt	eq
 800e1b4:	6819      	ldreq	r1, [r3, #0]
 800e1b6:	685b      	ldreq	r3, [r3, #4]
 800e1b8:	1809      	addeq	r1, r1, r0
 800e1ba:	6021      	streq	r1, [r4, #0]
 800e1bc:	e7ed      	b.n	800e19a <_free_r+0x1e>
 800e1be:	461a      	mov	r2, r3
 800e1c0:	685b      	ldr	r3, [r3, #4]
 800e1c2:	b10b      	cbz	r3, 800e1c8 <_free_r+0x4c>
 800e1c4:	42a3      	cmp	r3, r4
 800e1c6:	d9fa      	bls.n	800e1be <_free_r+0x42>
 800e1c8:	6811      	ldr	r1, [r2, #0]
 800e1ca:	1850      	adds	r0, r2, r1
 800e1cc:	42a0      	cmp	r0, r4
 800e1ce:	d10b      	bne.n	800e1e8 <_free_r+0x6c>
 800e1d0:	6820      	ldr	r0, [r4, #0]
 800e1d2:	4401      	add	r1, r0
 800e1d4:	1850      	adds	r0, r2, r1
 800e1d6:	4283      	cmp	r3, r0
 800e1d8:	6011      	str	r1, [r2, #0]
 800e1da:	d1e0      	bne.n	800e19e <_free_r+0x22>
 800e1dc:	6818      	ldr	r0, [r3, #0]
 800e1de:	685b      	ldr	r3, [r3, #4]
 800e1e0:	6053      	str	r3, [r2, #4]
 800e1e2:	4408      	add	r0, r1
 800e1e4:	6010      	str	r0, [r2, #0]
 800e1e6:	e7da      	b.n	800e19e <_free_r+0x22>
 800e1e8:	d902      	bls.n	800e1f0 <_free_r+0x74>
 800e1ea:	230c      	movs	r3, #12
 800e1ec:	602b      	str	r3, [r5, #0]
 800e1ee:	e7d6      	b.n	800e19e <_free_r+0x22>
 800e1f0:	6820      	ldr	r0, [r4, #0]
 800e1f2:	1821      	adds	r1, r4, r0
 800e1f4:	428b      	cmp	r3, r1
 800e1f6:	bf04      	itt	eq
 800e1f8:	6819      	ldreq	r1, [r3, #0]
 800e1fa:	685b      	ldreq	r3, [r3, #4]
 800e1fc:	6063      	str	r3, [r4, #4]
 800e1fe:	bf04      	itt	eq
 800e200:	1809      	addeq	r1, r1, r0
 800e202:	6021      	streq	r1, [r4, #0]
 800e204:	6054      	str	r4, [r2, #4]
 800e206:	e7ca      	b.n	800e19e <_free_r+0x22>
 800e208:	bd38      	pop	{r3, r4, r5, pc}
 800e20a:	bf00      	nop
 800e20c:	20004a28 	.word	0x20004a28

0800e210 <sbrk_aligned>:
 800e210:	b570      	push	{r4, r5, r6, lr}
 800e212:	4e0f      	ldr	r6, [pc, #60]	@ (800e250 <sbrk_aligned+0x40>)
 800e214:	460c      	mov	r4, r1
 800e216:	6831      	ldr	r1, [r6, #0]
 800e218:	4605      	mov	r5, r0
 800e21a:	b911      	cbnz	r1, 800e222 <sbrk_aligned+0x12>
 800e21c:	f000 fba6 	bl	800e96c <_sbrk_r>
 800e220:	6030      	str	r0, [r6, #0]
 800e222:	4621      	mov	r1, r4
 800e224:	4628      	mov	r0, r5
 800e226:	f000 fba1 	bl	800e96c <_sbrk_r>
 800e22a:	1c43      	adds	r3, r0, #1
 800e22c:	d103      	bne.n	800e236 <sbrk_aligned+0x26>
 800e22e:	f04f 34ff 	mov.w	r4, #4294967295
 800e232:	4620      	mov	r0, r4
 800e234:	bd70      	pop	{r4, r5, r6, pc}
 800e236:	1cc4      	adds	r4, r0, #3
 800e238:	f024 0403 	bic.w	r4, r4, #3
 800e23c:	42a0      	cmp	r0, r4
 800e23e:	d0f8      	beq.n	800e232 <sbrk_aligned+0x22>
 800e240:	1a21      	subs	r1, r4, r0
 800e242:	4628      	mov	r0, r5
 800e244:	f000 fb92 	bl	800e96c <_sbrk_r>
 800e248:	3001      	adds	r0, #1
 800e24a:	d1f2      	bne.n	800e232 <sbrk_aligned+0x22>
 800e24c:	e7ef      	b.n	800e22e <sbrk_aligned+0x1e>
 800e24e:	bf00      	nop
 800e250:	20004a24 	.word	0x20004a24

0800e254 <_malloc_r>:
 800e254:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e258:	1ccd      	adds	r5, r1, #3
 800e25a:	f025 0503 	bic.w	r5, r5, #3
 800e25e:	3508      	adds	r5, #8
 800e260:	2d0c      	cmp	r5, #12
 800e262:	bf38      	it	cc
 800e264:	250c      	movcc	r5, #12
 800e266:	2d00      	cmp	r5, #0
 800e268:	4606      	mov	r6, r0
 800e26a:	db01      	blt.n	800e270 <_malloc_r+0x1c>
 800e26c:	42a9      	cmp	r1, r5
 800e26e:	d904      	bls.n	800e27a <_malloc_r+0x26>
 800e270:	230c      	movs	r3, #12
 800e272:	6033      	str	r3, [r6, #0]
 800e274:	2000      	movs	r0, #0
 800e276:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e27a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800e350 <_malloc_r+0xfc>
 800e27e:	f000 f869 	bl	800e354 <__malloc_lock>
 800e282:	f8d8 3000 	ldr.w	r3, [r8]
 800e286:	461c      	mov	r4, r3
 800e288:	bb44      	cbnz	r4, 800e2dc <_malloc_r+0x88>
 800e28a:	4629      	mov	r1, r5
 800e28c:	4630      	mov	r0, r6
 800e28e:	f7ff ffbf 	bl	800e210 <sbrk_aligned>
 800e292:	1c43      	adds	r3, r0, #1
 800e294:	4604      	mov	r4, r0
 800e296:	d158      	bne.n	800e34a <_malloc_r+0xf6>
 800e298:	f8d8 4000 	ldr.w	r4, [r8]
 800e29c:	4627      	mov	r7, r4
 800e29e:	2f00      	cmp	r7, #0
 800e2a0:	d143      	bne.n	800e32a <_malloc_r+0xd6>
 800e2a2:	2c00      	cmp	r4, #0
 800e2a4:	d04b      	beq.n	800e33e <_malloc_r+0xea>
 800e2a6:	6823      	ldr	r3, [r4, #0]
 800e2a8:	4639      	mov	r1, r7
 800e2aa:	4630      	mov	r0, r6
 800e2ac:	eb04 0903 	add.w	r9, r4, r3
 800e2b0:	f000 fb5c 	bl	800e96c <_sbrk_r>
 800e2b4:	4581      	cmp	r9, r0
 800e2b6:	d142      	bne.n	800e33e <_malloc_r+0xea>
 800e2b8:	6821      	ldr	r1, [r4, #0]
 800e2ba:	1a6d      	subs	r5, r5, r1
 800e2bc:	4629      	mov	r1, r5
 800e2be:	4630      	mov	r0, r6
 800e2c0:	f7ff ffa6 	bl	800e210 <sbrk_aligned>
 800e2c4:	3001      	adds	r0, #1
 800e2c6:	d03a      	beq.n	800e33e <_malloc_r+0xea>
 800e2c8:	6823      	ldr	r3, [r4, #0]
 800e2ca:	442b      	add	r3, r5
 800e2cc:	6023      	str	r3, [r4, #0]
 800e2ce:	f8d8 3000 	ldr.w	r3, [r8]
 800e2d2:	685a      	ldr	r2, [r3, #4]
 800e2d4:	bb62      	cbnz	r2, 800e330 <_malloc_r+0xdc>
 800e2d6:	f8c8 7000 	str.w	r7, [r8]
 800e2da:	e00f      	b.n	800e2fc <_malloc_r+0xa8>
 800e2dc:	6822      	ldr	r2, [r4, #0]
 800e2de:	1b52      	subs	r2, r2, r5
 800e2e0:	d420      	bmi.n	800e324 <_malloc_r+0xd0>
 800e2e2:	2a0b      	cmp	r2, #11
 800e2e4:	d917      	bls.n	800e316 <_malloc_r+0xc2>
 800e2e6:	1961      	adds	r1, r4, r5
 800e2e8:	42a3      	cmp	r3, r4
 800e2ea:	6025      	str	r5, [r4, #0]
 800e2ec:	bf18      	it	ne
 800e2ee:	6059      	strne	r1, [r3, #4]
 800e2f0:	6863      	ldr	r3, [r4, #4]
 800e2f2:	bf08      	it	eq
 800e2f4:	f8c8 1000 	streq.w	r1, [r8]
 800e2f8:	5162      	str	r2, [r4, r5]
 800e2fa:	604b      	str	r3, [r1, #4]
 800e2fc:	4630      	mov	r0, r6
 800e2fe:	f000 f82f 	bl	800e360 <__malloc_unlock>
 800e302:	f104 000b 	add.w	r0, r4, #11
 800e306:	1d23      	adds	r3, r4, #4
 800e308:	f020 0007 	bic.w	r0, r0, #7
 800e30c:	1ac2      	subs	r2, r0, r3
 800e30e:	bf1c      	itt	ne
 800e310:	1a1b      	subne	r3, r3, r0
 800e312:	50a3      	strne	r3, [r4, r2]
 800e314:	e7af      	b.n	800e276 <_malloc_r+0x22>
 800e316:	6862      	ldr	r2, [r4, #4]
 800e318:	42a3      	cmp	r3, r4
 800e31a:	bf0c      	ite	eq
 800e31c:	f8c8 2000 	streq.w	r2, [r8]
 800e320:	605a      	strne	r2, [r3, #4]
 800e322:	e7eb      	b.n	800e2fc <_malloc_r+0xa8>
 800e324:	4623      	mov	r3, r4
 800e326:	6864      	ldr	r4, [r4, #4]
 800e328:	e7ae      	b.n	800e288 <_malloc_r+0x34>
 800e32a:	463c      	mov	r4, r7
 800e32c:	687f      	ldr	r7, [r7, #4]
 800e32e:	e7b6      	b.n	800e29e <_malloc_r+0x4a>
 800e330:	461a      	mov	r2, r3
 800e332:	685b      	ldr	r3, [r3, #4]
 800e334:	42a3      	cmp	r3, r4
 800e336:	d1fb      	bne.n	800e330 <_malloc_r+0xdc>
 800e338:	2300      	movs	r3, #0
 800e33a:	6053      	str	r3, [r2, #4]
 800e33c:	e7de      	b.n	800e2fc <_malloc_r+0xa8>
 800e33e:	230c      	movs	r3, #12
 800e340:	6033      	str	r3, [r6, #0]
 800e342:	4630      	mov	r0, r6
 800e344:	f000 f80c 	bl	800e360 <__malloc_unlock>
 800e348:	e794      	b.n	800e274 <_malloc_r+0x20>
 800e34a:	6005      	str	r5, [r0, #0]
 800e34c:	e7d6      	b.n	800e2fc <_malloc_r+0xa8>
 800e34e:	bf00      	nop
 800e350:	20004a28 	.word	0x20004a28

0800e354 <__malloc_lock>:
 800e354:	4801      	ldr	r0, [pc, #4]	@ (800e35c <__malloc_lock+0x8>)
 800e356:	f7ff bf0f 	b.w	800e178 <__retarget_lock_acquire_recursive>
 800e35a:	bf00      	nop
 800e35c:	20004a20 	.word	0x20004a20

0800e360 <__malloc_unlock>:
 800e360:	4801      	ldr	r0, [pc, #4]	@ (800e368 <__malloc_unlock+0x8>)
 800e362:	f7ff bf0a 	b.w	800e17a <__retarget_lock_release_recursive>
 800e366:	bf00      	nop
 800e368:	20004a20 	.word	0x20004a20

0800e36c <__ssputs_r>:
 800e36c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e370:	688e      	ldr	r6, [r1, #8]
 800e372:	461f      	mov	r7, r3
 800e374:	42be      	cmp	r6, r7
 800e376:	680b      	ldr	r3, [r1, #0]
 800e378:	4682      	mov	sl, r0
 800e37a:	460c      	mov	r4, r1
 800e37c:	4690      	mov	r8, r2
 800e37e:	d82d      	bhi.n	800e3dc <__ssputs_r+0x70>
 800e380:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800e384:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800e388:	d026      	beq.n	800e3d8 <__ssputs_r+0x6c>
 800e38a:	6965      	ldr	r5, [r4, #20]
 800e38c:	6909      	ldr	r1, [r1, #16]
 800e38e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800e392:	eba3 0901 	sub.w	r9, r3, r1
 800e396:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800e39a:	1c7b      	adds	r3, r7, #1
 800e39c:	444b      	add	r3, r9
 800e39e:	106d      	asrs	r5, r5, #1
 800e3a0:	429d      	cmp	r5, r3
 800e3a2:	bf38      	it	cc
 800e3a4:	461d      	movcc	r5, r3
 800e3a6:	0553      	lsls	r3, r2, #21
 800e3a8:	d527      	bpl.n	800e3fa <__ssputs_r+0x8e>
 800e3aa:	4629      	mov	r1, r5
 800e3ac:	f7ff ff52 	bl	800e254 <_malloc_r>
 800e3b0:	4606      	mov	r6, r0
 800e3b2:	b360      	cbz	r0, 800e40e <__ssputs_r+0xa2>
 800e3b4:	6921      	ldr	r1, [r4, #16]
 800e3b6:	464a      	mov	r2, r9
 800e3b8:	f000 fae8 	bl	800e98c <memcpy>
 800e3bc:	89a3      	ldrh	r3, [r4, #12]
 800e3be:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800e3c2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800e3c6:	81a3      	strh	r3, [r4, #12]
 800e3c8:	6126      	str	r6, [r4, #16]
 800e3ca:	6165      	str	r5, [r4, #20]
 800e3cc:	444e      	add	r6, r9
 800e3ce:	eba5 0509 	sub.w	r5, r5, r9
 800e3d2:	6026      	str	r6, [r4, #0]
 800e3d4:	60a5      	str	r5, [r4, #8]
 800e3d6:	463e      	mov	r6, r7
 800e3d8:	42be      	cmp	r6, r7
 800e3da:	d900      	bls.n	800e3de <__ssputs_r+0x72>
 800e3dc:	463e      	mov	r6, r7
 800e3de:	6820      	ldr	r0, [r4, #0]
 800e3e0:	4632      	mov	r2, r6
 800e3e2:	4641      	mov	r1, r8
 800e3e4:	f000 faa8 	bl	800e938 <memmove>
 800e3e8:	68a3      	ldr	r3, [r4, #8]
 800e3ea:	1b9b      	subs	r3, r3, r6
 800e3ec:	60a3      	str	r3, [r4, #8]
 800e3ee:	6823      	ldr	r3, [r4, #0]
 800e3f0:	4433      	add	r3, r6
 800e3f2:	6023      	str	r3, [r4, #0]
 800e3f4:	2000      	movs	r0, #0
 800e3f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e3fa:	462a      	mov	r2, r5
 800e3fc:	f000 fad4 	bl	800e9a8 <_realloc_r>
 800e400:	4606      	mov	r6, r0
 800e402:	2800      	cmp	r0, #0
 800e404:	d1e0      	bne.n	800e3c8 <__ssputs_r+0x5c>
 800e406:	6921      	ldr	r1, [r4, #16]
 800e408:	4650      	mov	r0, sl
 800e40a:	f7ff feb7 	bl	800e17c <_free_r>
 800e40e:	230c      	movs	r3, #12
 800e410:	f8ca 3000 	str.w	r3, [sl]
 800e414:	89a3      	ldrh	r3, [r4, #12]
 800e416:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800e41a:	81a3      	strh	r3, [r4, #12]
 800e41c:	f04f 30ff 	mov.w	r0, #4294967295
 800e420:	e7e9      	b.n	800e3f6 <__ssputs_r+0x8a>
	...

0800e424 <_svfiprintf_r>:
 800e424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e428:	4698      	mov	r8, r3
 800e42a:	898b      	ldrh	r3, [r1, #12]
 800e42c:	061b      	lsls	r3, r3, #24
 800e42e:	b09d      	sub	sp, #116	@ 0x74
 800e430:	4607      	mov	r7, r0
 800e432:	460d      	mov	r5, r1
 800e434:	4614      	mov	r4, r2
 800e436:	d510      	bpl.n	800e45a <_svfiprintf_r+0x36>
 800e438:	690b      	ldr	r3, [r1, #16]
 800e43a:	b973      	cbnz	r3, 800e45a <_svfiprintf_r+0x36>
 800e43c:	2140      	movs	r1, #64	@ 0x40
 800e43e:	f7ff ff09 	bl	800e254 <_malloc_r>
 800e442:	6028      	str	r0, [r5, #0]
 800e444:	6128      	str	r0, [r5, #16]
 800e446:	b930      	cbnz	r0, 800e456 <_svfiprintf_r+0x32>
 800e448:	230c      	movs	r3, #12
 800e44a:	603b      	str	r3, [r7, #0]
 800e44c:	f04f 30ff 	mov.w	r0, #4294967295
 800e450:	b01d      	add	sp, #116	@ 0x74
 800e452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e456:	2340      	movs	r3, #64	@ 0x40
 800e458:	616b      	str	r3, [r5, #20]
 800e45a:	2300      	movs	r3, #0
 800e45c:	9309      	str	r3, [sp, #36]	@ 0x24
 800e45e:	2320      	movs	r3, #32
 800e460:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800e464:	f8cd 800c 	str.w	r8, [sp, #12]
 800e468:	2330      	movs	r3, #48	@ 0x30
 800e46a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 800e608 <_svfiprintf_r+0x1e4>
 800e46e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800e472:	f04f 0901 	mov.w	r9, #1
 800e476:	4623      	mov	r3, r4
 800e478:	469a      	mov	sl, r3
 800e47a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e47e:	b10a      	cbz	r2, 800e484 <_svfiprintf_r+0x60>
 800e480:	2a25      	cmp	r2, #37	@ 0x25
 800e482:	d1f9      	bne.n	800e478 <_svfiprintf_r+0x54>
 800e484:	ebba 0b04 	subs.w	fp, sl, r4
 800e488:	d00b      	beq.n	800e4a2 <_svfiprintf_r+0x7e>
 800e48a:	465b      	mov	r3, fp
 800e48c:	4622      	mov	r2, r4
 800e48e:	4629      	mov	r1, r5
 800e490:	4638      	mov	r0, r7
 800e492:	f7ff ff6b 	bl	800e36c <__ssputs_r>
 800e496:	3001      	adds	r0, #1
 800e498:	f000 80a7 	beq.w	800e5ea <_svfiprintf_r+0x1c6>
 800e49c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e49e:	445a      	add	r2, fp
 800e4a0:	9209      	str	r2, [sp, #36]	@ 0x24
 800e4a2:	f89a 3000 	ldrb.w	r3, [sl]
 800e4a6:	2b00      	cmp	r3, #0
 800e4a8:	f000 809f 	beq.w	800e5ea <_svfiprintf_r+0x1c6>
 800e4ac:	2300      	movs	r3, #0
 800e4ae:	f04f 32ff 	mov.w	r2, #4294967295
 800e4b2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e4b6:	f10a 0a01 	add.w	sl, sl, #1
 800e4ba:	9304      	str	r3, [sp, #16]
 800e4bc:	9307      	str	r3, [sp, #28]
 800e4be:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800e4c2:	931a      	str	r3, [sp, #104]	@ 0x68
 800e4c4:	4654      	mov	r4, sl
 800e4c6:	2205      	movs	r2, #5
 800e4c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e4cc:	484e      	ldr	r0, [pc, #312]	@ (800e608 <_svfiprintf_r+0x1e4>)
 800e4ce:	f7f1 fea7 	bl	8000220 <memchr>
 800e4d2:	9a04      	ldr	r2, [sp, #16]
 800e4d4:	b9d8      	cbnz	r0, 800e50e <_svfiprintf_r+0xea>
 800e4d6:	06d0      	lsls	r0, r2, #27
 800e4d8:	bf44      	itt	mi
 800e4da:	2320      	movmi	r3, #32
 800e4dc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800e4e0:	0711      	lsls	r1, r2, #28
 800e4e2:	bf44      	itt	mi
 800e4e4:	232b      	movmi	r3, #43	@ 0x2b
 800e4e6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800e4ea:	f89a 3000 	ldrb.w	r3, [sl]
 800e4ee:	2b2a      	cmp	r3, #42	@ 0x2a
 800e4f0:	d015      	beq.n	800e51e <_svfiprintf_r+0xfa>
 800e4f2:	9a07      	ldr	r2, [sp, #28]
 800e4f4:	4654      	mov	r4, sl
 800e4f6:	2000      	movs	r0, #0
 800e4f8:	f04f 0c0a 	mov.w	ip, #10
 800e4fc:	4621      	mov	r1, r4
 800e4fe:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e502:	3b30      	subs	r3, #48	@ 0x30
 800e504:	2b09      	cmp	r3, #9
 800e506:	d94b      	bls.n	800e5a0 <_svfiprintf_r+0x17c>
 800e508:	b1b0      	cbz	r0, 800e538 <_svfiprintf_r+0x114>
 800e50a:	9207      	str	r2, [sp, #28]
 800e50c:	e014      	b.n	800e538 <_svfiprintf_r+0x114>
 800e50e:	eba0 0308 	sub.w	r3, r0, r8
 800e512:	fa09 f303 	lsl.w	r3, r9, r3
 800e516:	4313      	orrs	r3, r2
 800e518:	9304      	str	r3, [sp, #16]
 800e51a:	46a2      	mov	sl, r4
 800e51c:	e7d2      	b.n	800e4c4 <_svfiprintf_r+0xa0>
 800e51e:	9b03      	ldr	r3, [sp, #12]
 800e520:	1d19      	adds	r1, r3, #4
 800e522:	681b      	ldr	r3, [r3, #0]
 800e524:	9103      	str	r1, [sp, #12]
 800e526:	2b00      	cmp	r3, #0
 800e528:	bfbb      	ittet	lt
 800e52a:	425b      	neglt	r3, r3
 800e52c:	f042 0202 	orrlt.w	r2, r2, #2
 800e530:	9307      	strge	r3, [sp, #28]
 800e532:	9307      	strlt	r3, [sp, #28]
 800e534:	bfb8      	it	lt
 800e536:	9204      	strlt	r2, [sp, #16]
 800e538:	7823      	ldrb	r3, [r4, #0]
 800e53a:	2b2e      	cmp	r3, #46	@ 0x2e
 800e53c:	d10a      	bne.n	800e554 <_svfiprintf_r+0x130>
 800e53e:	7863      	ldrb	r3, [r4, #1]
 800e540:	2b2a      	cmp	r3, #42	@ 0x2a
 800e542:	d132      	bne.n	800e5aa <_svfiprintf_r+0x186>
 800e544:	9b03      	ldr	r3, [sp, #12]
 800e546:	1d1a      	adds	r2, r3, #4
 800e548:	681b      	ldr	r3, [r3, #0]
 800e54a:	9203      	str	r2, [sp, #12]
 800e54c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800e550:	3402      	adds	r4, #2
 800e552:	9305      	str	r3, [sp, #20]
 800e554:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 800e618 <_svfiprintf_r+0x1f4>
 800e558:	7821      	ldrb	r1, [r4, #0]
 800e55a:	2203      	movs	r2, #3
 800e55c:	4650      	mov	r0, sl
 800e55e:	f7f1 fe5f 	bl	8000220 <memchr>
 800e562:	b138      	cbz	r0, 800e574 <_svfiprintf_r+0x150>
 800e564:	9b04      	ldr	r3, [sp, #16]
 800e566:	eba0 000a 	sub.w	r0, r0, sl
 800e56a:	2240      	movs	r2, #64	@ 0x40
 800e56c:	4082      	lsls	r2, r0
 800e56e:	4313      	orrs	r3, r2
 800e570:	3401      	adds	r4, #1
 800e572:	9304      	str	r3, [sp, #16]
 800e574:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e578:	4824      	ldr	r0, [pc, #144]	@ (800e60c <_svfiprintf_r+0x1e8>)
 800e57a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800e57e:	2206      	movs	r2, #6
 800e580:	f7f1 fe4e 	bl	8000220 <memchr>
 800e584:	2800      	cmp	r0, #0
 800e586:	d036      	beq.n	800e5f6 <_svfiprintf_r+0x1d2>
 800e588:	4b21      	ldr	r3, [pc, #132]	@ (800e610 <_svfiprintf_r+0x1ec>)
 800e58a:	bb1b      	cbnz	r3, 800e5d4 <_svfiprintf_r+0x1b0>
 800e58c:	9b03      	ldr	r3, [sp, #12]
 800e58e:	3307      	adds	r3, #7
 800e590:	f023 0307 	bic.w	r3, r3, #7
 800e594:	3308      	adds	r3, #8
 800e596:	9303      	str	r3, [sp, #12]
 800e598:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e59a:	4433      	add	r3, r6
 800e59c:	9309      	str	r3, [sp, #36]	@ 0x24
 800e59e:	e76a      	b.n	800e476 <_svfiprintf_r+0x52>
 800e5a0:	fb0c 3202 	mla	r2, ip, r2, r3
 800e5a4:	460c      	mov	r4, r1
 800e5a6:	2001      	movs	r0, #1
 800e5a8:	e7a8      	b.n	800e4fc <_svfiprintf_r+0xd8>
 800e5aa:	2300      	movs	r3, #0
 800e5ac:	3401      	adds	r4, #1
 800e5ae:	9305      	str	r3, [sp, #20]
 800e5b0:	4619      	mov	r1, r3
 800e5b2:	f04f 0c0a 	mov.w	ip, #10
 800e5b6:	4620      	mov	r0, r4
 800e5b8:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e5bc:	3a30      	subs	r2, #48	@ 0x30
 800e5be:	2a09      	cmp	r2, #9
 800e5c0:	d903      	bls.n	800e5ca <_svfiprintf_r+0x1a6>
 800e5c2:	2b00      	cmp	r3, #0
 800e5c4:	d0c6      	beq.n	800e554 <_svfiprintf_r+0x130>
 800e5c6:	9105      	str	r1, [sp, #20]
 800e5c8:	e7c4      	b.n	800e554 <_svfiprintf_r+0x130>
 800e5ca:	fb0c 2101 	mla	r1, ip, r1, r2
 800e5ce:	4604      	mov	r4, r0
 800e5d0:	2301      	movs	r3, #1
 800e5d2:	e7f0      	b.n	800e5b6 <_svfiprintf_r+0x192>
 800e5d4:	ab03      	add	r3, sp, #12
 800e5d6:	9300      	str	r3, [sp, #0]
 800e5d8:	462a      	mov	r2, r5
 800e5da:	4b0e      	ldr	r3, [pc, #56]	@ (800e614 <_svfiprintf_r+0x1f0>)
 800e5dc:	a904      	add	r1, sp, #16
 800e5de:	4638      	mov	r0, r7
 800e5e0:	f3af 8000 	nop.w
 800e5e4:	1c42      	adds	r2, r0, #1
 800e5e6:	4606      	mov	r6, r0
 800e5e8:	d1d6      	bne.n	800e598 <_svfiprintf_r+0x174>
 800e5ea:	89ab      	ldrh	r3, [r5, #12]
 800e5ec:	065b      	lsls	r3, r3, #25
 800e5ee:	f53f af2d 	bmi.w	800e44c <_svfiprintf_r+0x28>
 800e5f2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e5f4:	e72c      	b.n	800e450 <_svfiprintf_r+0x2c>
 800e5f6:	ab03      	add	r3, sp, #12
 800e5f8:	9300      	str	r3, [sp, #0]
 800e5fa:	462a      	mov	r2, r5
 800e5fc:	4b05      	ldr	r3, [pc, #20]	@ (800e614 <_svfiprintf_r+0x1f0>)
 800e5fe:	a904      	add	r1, sp, #16
 800e600:	4638      	mov	r0, r7
 800e602:	f000 f879 	bl	800e6f8 <_printf_i>
 800e606:	e7ed      	b.n	800e5e4 <_svfiprintf_r+0x1c0>
 800e608:	0801e178 	.word	0x0801e178
 800e60c:	0801e182 	.word	0x0801e182
 800e610:	00000000 	.word	0x00000000
 800e614:	0800e36d 	.word	0x0800e36d
 800e618:	0801e17e 	.word	0x0801e17e

0800e61c <_printf_common>:
 800e61c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e620:	4616      	mov	r6, r2
 800e622:	4698      	mov	r8, r3
 800e624:	688a      	ldr	r2, [r1, #8]
 800e626:	690b      	ldr	r3, [r1, #16]
 800e628:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800e62c:	4293      	cmp	r3, r2
 800e62e:	bfb8      	it	lt
 800e630:	4613      	movlt	r3, r2
 800e632:	6033      	str	r3, [r6, #0]
 800e634:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800e638:	4607      	mov	r7, r0
 800e63a:	460c      	mov	r4, r1
 800e63c:	b10a      	cbz	r2, 800e642 <_printf_common+0x26>
 800e63e:	3301      	adds	r3, #1
 800e640:	6033      	str	r3, [r6, #0]
 800e642:	6823      	ldr	r3, [r4, #0]
 800e644:	0699      	lsls	r1, r3, #26
 800e646:	bf42      	ittt	mi
 800e648:	6833      	ldrmi	r3, [r6, #0]
 800e64a:	3302      	addmi	r3, #2
 800e64c:	6033      	strmi	r3, [r6, #0]
 800e64e:	6825      	ldr	r5, [r4, #0]
 800e650:	f015 0506 	ands.w	r5, r5, #6
 800e654:	d106      	bne.n	800e664 <_printf_common+0x48>
 800e656:	f104 0a19 	add.w	sl, r4, #25
 800e65a:	68e3      	ldr	r3, [r4, #12]
 800e65c:	6832      	ldr	r2, [r6, #0]
 800e65e:	1a9b      	subs	r3, r3, r2
 800e660:	42ab      	cmp	r3, r5
 800e662:	dc26      	bgt.n	800e6b2 <_printf_common+0x96>
 800e664:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800e668:	6822      	ldr	r2, [r4, #0]
 800e66a:	3b00      	subs	r3, #0
 800e66c:	bf18      	it	ne
 800e66e:	2301      	movne	r3, #1
 800e670:	0692      	lsls	r2, r2, #26
 800e672:	d42b      	bmi.n	800e6cc <_printf_common+0xb0>
 800e674:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800e678:	4641      	mov	r1, r8
 800e67a:	4638      	mov	r0, r7
 800e67c:	47c8      	blx	r9
 800e67e:	3001      	adds	r0, #1
 800e680:	d01e      	beq.n	800e6c0 <_printf_common+0xa4>
 800e682:	6823      	ldr	r3, [r4, #0]
 800e684:	6922      	ldr	r2, [r4, #16]
 800e686:	f003 0306 	and.w	r3, r3, #6
 800e68a:	2b04      	cmp	r3, #4
 800e68c:	bf02      	ittt	eq
 800e68e:	68e5      	ldreq	r5, [r4, #12]
 800e690:	6833      	ldreq	r3, [r6, #0]
 800e692:	1aed      	subeq	r5, r5, r3
 800e694:	68a3      	ldr	r3, [r4, #8]
 800e696:	bf0c      	ite	eq
 800e698:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800e69c:	2500      	movne	r5, #0
 800e69e:	4293      	cmp	r3, r2
 800e6a0:	bfc4      	itt	gt
 800e6a2:	1a9b      	subgt	r3, r3, r2
 800e6a4:	18ed      	addgt	r5, r5, r3
 800e6a6:	2600      	movs	r6, #0
 800e6a8:	341a      	adds	r4, #26
 800e6aa:	42b5      	cmp	r5, r6
 800e6ac:	d11a      	bne.n	800e6e4 <_printf_common+0xc8>
 800e6ae:	2000      	movs	r0, #0
 800e6b0:	e008      	b.n	800e6c4 <_printf_common+0xa8>
 800e6b2:	2301      	movs	r3, #1
 800e6b4:	4652      	mov	r2, sl
 800e6b6:	4641      	mov	r1, r8
 800e6b8:	4638      	mov	r0, r7
 800e6ba:	47c8      	blx	r9
 800e6bc:	3001      	adds	r0, #1
 800e6be:	d103      	bne.n	800e6c8 <_printf_common+0xac>
 800e6c0:	f04f 30ff 	mov.w	r0, #4294967295
 800e6c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e6c8:	3501      	adds	r5, #1
 800e6ca:	e7c6      	b.n	800e65a <_printf_common+0x3e>
 800e6cc:	18e1      	adds	r1, r4, r3
 800e6ce:	1c5a      	adds	r2, r3, #1
 800e6d0:	2030      	movs	r0, #48	@ 0x30
 800e6d2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800e6d6:	4422      	add	r2, r4
 800e6d8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800e6dc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800e6e0:	3302      	adds	r3, #2
 800e6e2:	e7c7      	b.n	800e674 <_printf_common+0x58>
 800e6e4:	2301      	movs	r3, #1
 800e6e6:	4622      	mov	r2, r4
 800e6e8:	4641      	mov	r1, r8
 800e6ea:	4638      	mov	r0, r7
 800e6ec:	47c8      	blx	r9
 800e6ee:	3001      	adds	r0, #1
 800e6f0:	d0e6      	beq.n	800e6c0 <_printf_common+0xa4>
 800e6f2:	3601      	adds	r6, #1
 800e6f4:	e7d9      	b.n	800e6aa <_printf_common+0x8e>
	...

0800e6f8 <_printf_i>:
 800e6f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800e6fc:	7e0f      	ldrb	r7, [r1, #24]
 800e6fe:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800e700:	2f78      	cmp	r7, #120	@ 0x78
 800e702:	4691      	mov	r9, r2
 800e704:	4680      	mov	r8, r0
 800e706:	460c      	mov	r4, r1
 800e708:	469a      	mov	sl, r3
 800e70a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800e70e:	d807      	bhi.n	800e720 <_printf_i+0x28>
 800e710:	2f62      	cmp	r7, #98	@ 0x62
 800e712:	d80a      	bhi.n	800e72a <_printf_i+0x32>
 800e714:	2f00      	cmp	r7, #0
 800e716:	f000 80d2 	beq.w	800e8be <_printf_i+0x1c6>
 800e71a:	2f58      	cmp	r7, #88	@ 0x58
 800e71c:	f000 80b9 	beq.w	800e892 <_printf_i+0x19a>
 800e720:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800e724:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800e728:	e03a      	b.n	800e7a0 <_printf_i+0xa8>
 800e72a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800e72e:	2b15      	cmp	r3, #21
 800e730:	d8f6      	bhi.n	800e720 <_printf_i+0x28>
 800e732:	a101      	add	r1, pc, #4	@ (adr r1, 800e738 <_printf_i+0x40>)
 800e734:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800e738:	0800e791 	.word	0x0800e791
 800e73c:	0800e7a5 	.word	0x0800e7a5
 800e740:	0800e721 	.word	0x0800e721
 800e744:	0800e721 	.word	0x0800e721
 800e748:	0800e721 	.word	0x0800e721
 800e74c:	0800e721 	.word	0x0800e721
 800e750:	0800e7a5 	.word	0x0800e7a5
 800e754:	0800e721 	.word	0x0800e721
 800e758:	0800e721 	.word	0x0800e721
 800e75c:	0800e721 	.word	0x0800e721
 800e760:	0800e721 	.word	0x0800e721
 800e764:	0800e8a5 	.word	0x0800e8a5
 800e768:	0800e7cf 	.word	0x0800e7cf
 800e76c:	0800e85f 	.word	0x0800e85f
 800e770:	0800e721 	.word	0x0800e721
 800e774:	0800e721 	.word	0x0800e721
 800e778:	0800e8c7 	.word	0x0800e8c7
 800e77c:	0800e721 	.word	0x0800e721
 800e780:	0800e7cf 	.word	0x0800e7cf
 800e784:	0800e721 	.word	0x0800e721
 800e788:	0800e721 	.word	0x0800e721
 800e78c:	0800e867 	.word	0x0800e867
 800e790:	6833      	ldr	r3, [r6, #0]
 800e792:	1d1a      	adds	r2, r3, #4
 800e794:	681b      	ldr	r3, [r3, #0]
 800e796:	6032      	str	r2, [r6, #0]
 800e798:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800e79c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800e7a0:	2301      	movs	r3, #1
 800e7a2:	e09d      	b.n	800e8e0 <_printf_i+0x1e8>
 800e7a4:	6833      	ldr	r3, [r6, #0]
 800e7a6:	6820      	ldr	r0, [r4, #0]
 800e7a8:	1d19      	adds	r1, r3, #4
 800e7aa:	6031      	str	r1, [r6, #0]
 800e7ac:	0606      	lsls	r6, r0, #24
 800e7ae:	d501      	bpl.n	800e7b4 <_printf_i+0xbc>
 800e7b0:	681d      	ldr	r5, [r3, #0]
 800e7b2:	e003      	b.n	800e7bc <_printf_i+0xc4>
 800e7b4:	0645      	lsls	r5, r0, #25
 800e7b6:	d5fb      	bpl.n	800e7b0 <_printf_i+0xb8>
 800e7b8:	f9b3 5000 	ldrsh.w	r5, [r3]
 800e7bc:	2d00      	cmp	r5, #0
 800e7be:	da03      	bge.n	800e7c8 <_printf_i+0xd0>
 800e7c0:	232d      	movs	r3, #45	@ 0x2d
 800e7c2:	426d      	negs	r5, r5
 800e7c4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800e7c8:	4859      	ldr	r0, [pc, #356]	@ (800e930 <_printf_i+0x238>)
 800e7ca:	230a      	movs	r3, #10
 800e7cc:	e011      	b.n	800e7f2 <_printf_i+0xfa>
 800e7ce:	6821      	ldr	r1, [r4, #0]
 800e7d0:	6833      	ldr	r3, [r6, #0]
 800e7d2:	0608      	lsls	r0, r1, #24
 800e7d4:	f853 5b04 	ldr.w	r5, [r3], #4
 800e7d8:	d402      	bmi.n	800e7e0 <_printf_i+0xe8>
 800e7da:	0649      	lsls	r1, r1, #25
 800e7dc:	bf48      	it	mi
 800e7de:	b2ad      	uxthmi	r5, r5
 800e7e0:	2f6f      	cmp	r7, #111	@ 0x6f
 800e7e2:	4853      	ldr	r0, [pc, #332]	@ (800e930 <_printf_i+0x238>)
 800e7e4:	6033      	str	r3, [r6, #0]
 800e7e6:	bf14      	ite	ne
 800e7e8:	230a      	movne	r3, #10
 800e7ea:	2308      	moveq	r3, #8
 800e7ec:	2100      	movs	r1, #0
 800e7ee:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800e7f2:	6866      	ldr	r6, [r4, #4]
 800e7f4:	60a6      	str	r6, [r4, #8]
 800e7f6:	2e00      	cmp	r6, #0
 800e7f8:	bfa2      	ittt	ge
 800e7fa:	6821      	ldrge	r1, [r4, #0]
 800e7fc:	f021 0104 	bicge.w	r1, r1, #4
 800e800:	6021      	strge	r1, [r4, #0]
 800e802:	b90d      	cbnz	r5, 800e808 <_printf_i+0x110>
 800e804:	2e00      	cmp	r6, #0
 800e806:	d04b      	beq.n	800e8a0 <_printf_i+0x1a8>
 800e808:	4616      	mov	r6, r2
 800e80a:	fbb5 f1f3 	udiv	r1, r5, r3
 800e80e:	fb03 5711 	mls	r7, r3, r1, r5
 800e812:	5dc7      	ldrb	r7, [r0, r7]
 800e814:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800e818:	462f      	mov	r7, r5
 800e81a:	42bb      	cmp	r3, r7
 800e81c:	460d      	mov	r5, r1
 800e81e:	d9f4      	bls.n	800e80a <_printf_i+0x112>
 800e820:	2b08      	cmp	r3, #8
 800e822:	d10b      	bne.n	800e83c <_printf_i+0x144>
 800e824:	6823      	ldr	r3, [r4, #0]
 800e826:	07df      	lsls	r7, r3, #31
 800e828:	d508      	bpl.n	800e83c <_printf_i+0x144>
 800e82a:	6923      	ldr	r3, [r4, #16]
 800e82c:	6861      	ldr	r1, [r4, #4]
 800e82e:	4299      	cmp	r1, r3
 800e830:	bfde      	ittt	le
 800e832:	2330      	movle	r3, #48	@ 0x30
 800e834:	f806 3c01 	strble.w	r3, [r6, #-1]
 800e838:	f106 36ff 	addle.w	r6, r6, #4294967295
 800e83c:	1b92      	subs	r2, r2, r6
 800e83e:	6122      	str	r2, [r4, #16]
 800e840:	f8cd a000 	str.w	sl, [sp]
 800e844:	464b      	mov	r3, r9
 800e846:	aa03      	add	r2, sp, #12
 800e848:	4621      	mov	r1, r4
 800e84a:	4640      	mov	r0, r8
 800e84c:	f7ff fee6 	bl	800e61c <_printf_common>
 800e850:	3001      	adds	r0, #1
 800e852:	d14a      	bne.n	800e8ea <_printf_i+0x1f2>
 800e854:	f04f 30ff 	mov.w	r0, #4294967295
 800e858:	b004      	add	sp, #16
 800e85a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e85e:	6823      	ldr	r3, [r4, #0]
 800e860:	f043 0320 	orr.w	r3, r3, #32
 800e864:	6023      	str	r3, [r4, #0]
 800e866:	4833      	ldr	r0, [pc, #204]	@ (800e934 <_printf_i+0x23c>)
 800e868:	2778      	movs	r7, #120	@ 0x78
 800e86a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800e86e:	6823      	ldr	r3, [r4, #0]
 800e870:	6831      	ldr	r1, [r6, #0]
 800e872:	061f      	lsls	r7, r3, #24
 800e874:	f851 5b04 	ldr.w	r5, [r1], #4
 800e878:	d402      	bmi.n	800e880 <_printf_i+0x188>
 800e87a:	065f      	lsls	r7, r3, #25
 800e87c:	bf48      	it	mi
 800e87e:	b2ad      	uxthmi	r5, r5
 800e880:	6031      	str	r1, [r6, #0]
 800e882:	07d9      	lsls	r1, r3, #31
 800e884:	bf44      	itt	mi
 800e886:	f043 0320 	orrmi.w	r3, r3, #32
 800e88a:	6023      	strmi	r3, [r4, #0]
 800e88c:	b11d      	cbz	r5, 800e896 <_printf_i+0x19e>
 800e88e:	2310      	movs	r3, #16
 800e890:	e7ac      	b.n	800e7ec <_printf_i+0xf4>
 800e892:	4827      	ldr	r0, [pc, #156]	@ (800e930 <_printf_i+0x238>)
 800e894:	e7e9      	b.n	800e86a <_printf_i+0x172>
 800e896:	6823      	ldr	r3, [r4, #0]
 800e898:	f023 0320 	bic.w	r3, r3, #32
 800e89c:	6023      	str	r3, [r4, #0]
 800e89e:	e7f6      	b.n	800e88e <_printf_i+0x196>
 800e8a0:	4616      	mov	r6, r2
 800e8a2:	e7bd      	b.n	800e820 <_printf_i+0x128>
 800e8a4:	6833      	ldr	r3, [r6, #0]
 800e8a6:	6825      	ldr	r5, [r4, #0]
 800e8a8:	6961      	ldr	r1, [r4, #20]
 800e8aa:	1d18      	adds	r0, r3, #4
 800e8ac:	6030      	str	r0, [r6, #0]
 800e8ae:	062e      	lsls	r6, r5, #24
 800e8b0:	681b      	ldr	r3, [r3, #0]
 800e8b2:	d501      	bpl.n	800e8b8 <_printf_i+0x1c0>
 800e8b4:	6019      	str	r1, [r3, #0]
 800e8b6:	e002      	b.n	800e8be <_printf_i+0x1c6>
 800e8b8:	0668      	lsls	r0, r5, #25
 800e8ba:	d5fb      	bpl.n	800e8b4 <_printf_i+0x1bc>
 800e8bc:	8019      	strh	r1, [r3, #0]
 800e8be:	2300      	movs	r3, #0
 800e8c0:	6123      	str	r3, [r4, #16]
 800e8c2:	4616      	mov	r6, r2
 800e8c4:	e7bc      	b.n	800e840 <_printf_i+0x148>
 800e8c6:	6833      	ldr	r3, [r6, #0]
 800e8c8:	1d1a      	adds	r2, r3, #4
 800e8ca:	6032      	str	r2, [r6, #0]
 800e8cc:	681e      	ldr	r6, [r3, #0]
 800e8ce:	6862      	ldr	r2, [r4, #4]
 800e8d0:	2100      	movs	r1, #0
 800e8d2:	4630      	mov	r0, r6
 800e8d4:	f7f1 fca4 	bl	8000220 <memchr>
 800e8d8:	b108      	cbz	r0, 800e8de <_printf_i+0x1e6>
 800e8da:	1b80      	subs	r0, r0, r6
 800e8dc:	6060      	str	r0, [r4, #4]
 800e8de:	6863      	ldr	r3, [r4, #4]
 800e8e0:	6123      	str	r3, [r4, #16]
 800e8e2:	2300      	movs	r3, #0
 800e8e4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800e8e8:	e7aa      	b.n	800e840 <_printf_i+0x148>
 800e8ea:	6923      	ldr	r3, [r4, #16]
 800e8ec:	4632      	mov	r2, r6
 800e8ee:	4649      	mov	r1, r9
 800e8f0:	4640      	mov	r0, r8
 800e8f2:	47d0      	blx	sl
 800e8f4:	3001      	adds	r0, #1
 800e8f6:	d0ad      	beq.n	800e854 <_printf_i+0x15c>
 800e8f8:	6823      	ldr	r3, [r4, #0]
 800e8fa:	079b      	lsls	r3, r3, #30
 800e8fc:	d413      	bmi.n	800e926 <_printf_i+0x22e>
 800e8fe:	68e0      	ldr	r0, [r4, #12]
 800e900:	9b03      	ldr	r3, [sp, #12]
 800e902:	4298      	cmp	r0, r3
 800e904:	bfb8      	it	lt
 800e906:	4618      	movlt	r0, r3
 800e908:	e7a6      	b.n	800e858 <_printf_i+0x160>
 800e90a:	2301      	movs	r3, #1
 800e90c:	4632      	mov	r2, r6
 800e90e:	4649      	mov	r1, r9
 800e910:	4640      	mov	r0, r8
 800e912:	47d0      	blx	sl
 800e914:	3001      	adds	r0, #1
 800e916:	d09d      	beq.n	800e854 <_printf_i+0x15c>
 800e918:	3501      	adds	r5, #1
 800e91a:	68e3      	ldr	r3, [r4, #12]
 800e91c:	9903      	ldr	r1, [sp, #12]
 800e91e:	1a5b      	subs	r3, r3, r1
 800e920:	42ab      	cmp	r3, r5
 800e922:	dcf2      	bgt.n	800e90a <_printf_i+0x212>
 800e924:	e7eb      	b.n	800e8fe <_printf_i+0x206>
 800e926:	2500      	movs	r5, #0
 800e928:	f104 0619 	add.w	r6, r4, #25
 800e92c:	e7f5      	b.n	800e91a <_printf_i+0x222>
 800e92e:	bf00      	nop
 800e930:	0801e189 	.word	0x0801e189
 800e934:	0801e19a 	.word	0x0801e19a

0800e938 <memmove>:
 800e938:	4288      	cmp	r0, r1
 800e93a:	b510      	push	{r4, lr}
 800e93c:	eb01 0402 	add.w	r4, r1, r2
 800e940:	d902      	bls.n	800e948 <memmove+0x10>
 800e942:	4284      	cmp	r4, r0
 800e944:	4623      	mov	r3, r4
 800e946:	d807      	bhi.n	800e958 <memmove+0x20>
 800e948:	1e43      	subs	r3, r0, #1
 800e94a:	42a1      	cmp	r1, r4
 800e94c:	d008      	beq.n	800e960 <memmove+0x28>
 800e94e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800e952:	f803 2f01 	strb.w	r2, [r3, #1]!
 800e956:	e7f8      	b.n	800e94a <memmove+0x12>
 800e958:	4402      	add	r2, r0
 800e95a:	4601      	mov	r1, r0
 800e95c:	428a      	cmp	r2, r1
 800e95e:	d100      	bne.n	800e962 <memmove+0x2a>
 800e960:	bd10      	pop	{r4, pc}
 800e962:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800e966:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800e96a:	e7f7      	b.n	800e95c <memmove+0x24>

0800e96c <_sbrk_r>:
 800e96c:	b538      	push	{r3, r4, r5, lr}
 800e96e:	4d06      	ldr	r5, [pc, #24]	@ (800e988 <_sbrk_r+0x1c>)
 800e970:	2300      	movs	r3, #0
 800e972:	4604      	mov	r4, r0
 800e974:	4608      	mov	r0, r1
 800e976:	602b      	str	r3, [r5, #0]
 800e978:	f7f5 f944 	bl	8003c04 <_sbrk>
 800e97c:	1c43      	adds	r3, r0, #1
 800e97e:	d102      	bne.n	800e986 <_sbrk_r+0x1a>
 800e980:	682b      	ldr	r3, [r5, #0]
 800e982:	b103      	cbz	r3, 800e986 <_sbrk_r+0x1a>
 800e984:	6023      	str	r3, [r4, #0]
 800e986:	bd38      	pop	{r3, r4, r5, pc}
 800e988:	20004a1c 	.word	0x20004a1c

0800e98c <memcpy>:
 800e98c:	440a      	add	r2, r1
 800e98e:	4291      	cmp	r1, r2
 800e990:	f100 33ff 	add.w	r3, r0, #4294967295
 800e994:	d100      	bne.n	800e998 <memcpy+0xc>
 800e996:	4770      	bx	lr
 800e998:	b510      	push	{r4, lr}
 800e99a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800e99e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800e9a2:	4291      	cmp	r1, r2
 800e9a4:	d1f9      	bne.n	800e99a <memcpy+0xe>
 800e9a6:	bd10      	pop	{r4, pc}

0800e9a8 <_realloc_r>:
 800e9a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e9ac:	4680      	mov	r8, r0
 800e9ae:	4615      	mov	r5, r2
 800e9b0:	460c      	mov	r4, r1
 800e9b2:	b921      	cbnz	r1, 800e9be <_realloc_r+0x16>
 800e9b4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e9b8:	4611      	mov	r1, r2
 800e9ba:	f7ff bc4b 	b.w	800e254 <_malloc_r>
 800e9be:	b92a      	cbnz	r2, 800e9cc <_realloc_r+0x24>
 800e9c0:	f7ff fbdc 	bl	800e17c <_free_r>
 800e9c4:	2400      	movs	r4, #0
 800e9c6:	4620      	mov	r0, r4
 800e9c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e9cc:	f000 f81a 	bl	800ea04 <_malloc_usable_size_r>
 800e9d0:	4285      	cmp	r5, r0
 800e9d2:	4606      	mov	r6, r0
 800e9d4:	d802      	bhi.n	800e9dc <_realloc_r+0x34>
 800e9d6:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800e9da:	d8f4      	bhi.n	800e9c6 <_realloc_r+0x1e>
 800e9dc:	4629      	mov	r1, r5
 800e9de:	4640      	mov	r0, r8
 800e9e0:	f7ff fc38 	bl	800e254 <_malloc_r>
 800e9e4:	4607      	mov	r7, r0
 800e9e6:	2800      	cmp	r0, #0
 800e9e8:	d0ec      	beq.n	800e9c4 <_realloc_r+0x1c>
 800e9ea:	42b5      	cmp	r5, r6
 800e9ec:	462a      	mov	r2, r5
 800e9ee:	4621      	mov	r1, r4
 800e9f0:	bf28      	it	cs
 800e9f2:	4632      	movcs	r2, r6
 800e9f4:	f7ff ffca 	bl	800e98c <memcpy>
 800e9f8:	4621      	mov	r1, r4
 800e9fa:	4640      	mov	r0, r8
 800e9fc:	f7ff fbbe 	bl	800e17c <_free_r>
 800ea00:	463c      	mov	r4, r7
 800ea02:	e7e0      	b.n	800e9c6 <_realloc_r+0x1e>

0800ea04 <_malloc_usable_size_r>:
 800ea04:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800ea08:	1f18      	subs	r0, r3, #4
 800ea0a:	2b00      	cmp	r3, #0
 800ea0c:	bfbc      	itt	lt
 800ea0e:	580b      	ldrlt	r3, [r1, r0]
 800ea10:	18c0      	addlt	r0, r0, r3
 800ea12:	4770      	bx	lr

0800ea14 <_init>:
 800ea14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ea16:	bf00      	nop
 800ea18:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800ea1a:	bc08      	pop	{r3}
 800ea1c:	469e      	mov	lr, r3
 800ea1e:	4770      	bx	lr

0800ea20 <_fini>:
 800ea20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ea22:	bf00      	nop
 800ea24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800ea26:	bc08      	pop	{r3}
 800ea28:	469e      	mov	lr, r3
 800ea2a:	4770      	bx	lr
